{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/media/illia/Новый том/Mark-up/test3D/src/index.js\",\"/media/illia/Новый том/Mark-up/test3D/src/three.js\",\"/media/illia/Новый том/Mark-up/test3D/src/OrbitControls.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"camera\",\"controls\",\"scene\",\"renderer\",\"onWindowResize\",\"aspect\",\"window\",\"innerWidth\",\"innerHeight\",\"updateProjectionMatrix\",\"setSize\",\"WEBGL\",\"isWebGLAvailable\",\"document\",\"body\",\"appendChild\",\"getWebGLErrorMessage\",\"THREE\",\"Scene\",\"background\",\"Color\",\"fog\",\"FogExp2\",\"WebGLRenderer\",\"antialias\",\"setPixelRatio\",\"devicePixelRatio\",\"domElement\",\"PerspectiveCamera\",\"position\",\"set\",\"OrbitControls\",\"enableDamping\",\"dampingFactor\",\"screenSpacePanning\",\"minDistance\",\"maxDistance\",\"maxPolarAngle\",\"Math\",\"PI\",\"geometryCylinder\",\"CylinderBufferGeometry\",\"geometrySphere\",\"SphereGeometry\",\"random\",\"geometryCube\",\"CubeGeometry\",\"material\",\"MeshPhongMaterial\",\"color\",\"flatShading\",\"createBtn\",\"querySelector\",\"selectInput\",\"selectOptions\",\"cube\",\"sphere\",\"pyramid\",\"scaleInput\",\"idList\",\"listItems\",\"querySelectorAll\",\"addEventListener\",\"e\",\"mesh\",\"preventDefault\",\"scale\",\"Mesh\",\"x\",\"y\",\"z\",\"updateMatrix\",\"matrixAutoUpdate\",\"add\",\"listItem\",\"createElement\",\"setAttribute\",\"uuid\",\"innerHTML\",\"length\",\"this\",\"parentElement\",\"remove\",\"light\",\"DirectionalLight\",\"AmbientLight\",\"init\",\"animate\",\"requestAnimationFrame\",\"update\",\"render\",\"global\",\"factory\",\"_typeof\",\"define\",\"undefined\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"apply\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"EventDispatcher\",\"Number\",\"EPSILON\",\"pow\",\"isInteger\",\"isFinite\",\"floor\",\"sign\",\"Function\",\"toString\",\"match\",\"assign\",\"target\",\"TypeError\",\"output\",\"index\",\"arguments\",\"source\",\"nextKey\",\"type\",\"listener\",\"_listeners\",\"listeners\",\"indexOf\",\"push\",\"hasEventListener\",\"removeEventListener\",\"listenerArray\",\"splice\",\"dispatchEvent\",\"event\",\"array\",\"slice\",\"REVISION\",\"CullFaceNone\",\"CullFaceBack\",\"CullFaceFront\",\"PCFShadowMap\",\"PCFSoftShadowMap\",\"FrontSide\",\"BackSide\",\"DoubleSide\",\"NoColors\",\"FaceColors\",\"VertexColors\",\"NoBlending\",\"NormalBlending\",\"AdditiveBlending\",\"SubtractiveBlending\",\"MultiplyBlending\",\"CustomBlending\",\"AddEquation\",\"SubtractEquation\",\"ReverseSubtractEquation\",\"MinEquation\",\"MaxEquation\",\"ZeroFactor\",\"OneFactor\",\"SrcColorFactor\",\"OneMinusSrcColorFactor\",\"SrcAlphaFactor\",\"OneMinusSrcAlphaFactor\",\"DstAlphaFactor\",\"OneMinusDstAlphaFactor\",\"DstColorFactor\",\"OneMinusDstColorFactor\",\"SrcAlphaSaturateFactor\",\"NeverDepth\",\"AlwaysDepth\",\"LessDepth\",\"LessEqualDepth\",\"EqualDepth\",\"GreaterEqualDepth\",\"GreaterDepth\",\"NotEqualDepth\",\"MultiplyOperation\",\"MixOperation\",\"AddOperation\",\"NoToneMapping\",\"LinearToneMapping\",\"ReinhardToneMapping\",\"Uncharted2ToneMapping\",\"CineonToneMapping\",\"CubeReflectionMapping\",\"CubeRefractionMapping\",\"EquirectangularReflectionMapping\",\"EquirectangularRefractionMapping\",\"SphericalReflectionMapping\",\"CubeUVReflectionMapping\",\"CubeUVRefractionMapping\",\"RepeatWrapping\",\"ClampToEdgeWrapping\",\"MirroredRepeatWrapping\",\"NearestFilter\",\"NearestMipMapNearestFilter\",\"NearestMipMapLinearFilter\",\"LinearFilter\",\"LinearMipMapNearestFilter\",\"LinearMipMapLinearFilter\",\"UnsignedByteType\",\"ByteType\",\"ShortType\",\"UnsignedShortType\",\"IntType\",\"UnsignedIntType\",\"FloatType\",\"HalfFloatType\",\"UnsignedShort4444Type\",\"UnsignedShort5551Type\",\"UnsignedShort565Type\",\"UnsignedInt248Type\",\"AlphaFormat\",\"RGBFormat\",\"RGBAFormat\",\"LuminanceFormat\",\"LuminanceAlphaFormat\",\"RGBEFormat\",\"DepthFormat\",\"DepthStencilFormat\",\"RedFormat\",\"RGB_S3TC_DXT1_Format\",\"RGBA_S3TC_DXT1_Format\",\"RGBA_S3TC_DXT3_Format\",\"RGBA_S3TC_DXT5_Format\",\"RGB_PVRTC_4BPPV1_Format\",\"RGB_PVRTC_2BPPV1_Format\",\"RGBA_PVRTC_4BPPV1_Format\",\"RGBA_PVRTC_2BPPV1_Format\",\"RGB_ETC1_Format\",\"RGBA_ASTC_4x4_Format\",\"RGBA_ASTC_5x4_Format\",\"RGBA_ASTC_5x5_Format\",\"RGBA_ASTC_6x5_Format\",\"RGBA_ASTC_6x6_Format\",\"RGBA_ASTC_8x5_Format\",\"RGBA_ASTC_8x6_Format\",\"RGBA_ASTC_8x8_Format\",\"RGBA_ASTC_10x5_Format\",\"RGBA_ASTC_10x6_Format\",\"RGBA_ASTC_10x8_Format\",\"RGBA_ASTC_10x10_Format\",\"RGBA_ASTC_12x10_Format\",\"RGBA_ASTC_12x12_Format\",\"LoopRepeat\",\"ZeroCurvatureEnding\",\"TrianglesDrawMode\",\"TriangleStripDrawMode\",\"TriangleFanDrawMode\",\"LinearEncoding\",\"sRGBEncoding\",\"GammaEncoding\",\"RGBEEncoding\",\"RGBM7Encoding\",\"RGBM16Encoding\",\"RGBDEncoding\",\"BasicDepthPacking\",\"RGBADepthPacking\",\"TangentSpaceNormalMap\",\"ObjectSpaceNormalMap\",\"_Math\",\"DEG2RAD\",\"RAD2DEG\",\"generateUUID\",\"lut\",\"d0\",\"d1\",\"d2\",\"d3\",\"toUpperCase\",\"clamp\",\"min\",\"max\",\"euclideanModulo\",\"mapLinear\",\"a1\",\"a2\",\"b1\",\"b2\",\"lerp\",\"smoothstep\",\"smootherstep\",\"randInt\",\"low\",\"high\",\"randFloat\",\"randFloatSpread\",\"range\",\"degToRad\",\"degrees\",\"radToDeg\",\"radians\",\"isPowerOfTwo\",\"ceilPowerOfTwo\",\"ceil\",\"log\",\"LN2\",\"floorPowerOfTwo\",\"Vector2\",\"Matrix4\",\"elements\",\"console\",\"error\",\"Quaternion\",\"w\",\"_x\",\"_y\",\"_z\",\"_w\",\"Vector3\",\"Matrix3\",\"defineProperties\",\"width\",\"height\",\"isVector2\",\"setScalar\",\"scalar\",\"setX\",\"setY\",\"setComponent\",\"Error\",\"getComponent\",\"clone\",\"constructor\",\"copy\",\"v\",\"warn\",\"addVectors\",\"addScalar\",\"a\",\"b\",\"addScaledVector\",\"sub\",\"subVectors\",\"subScalar\",\"multiply\",\"multiplyScalar\",\"divide\",\"divideScalar\",\"applyMatrix3\",\"clampScalar\",\"minVal\",\"maxVal\",\"clampLength\",\"round\",\"roundToZero\",\"negate\",\"dot\",\"cross\",\"lengthSq\",\"sqrt\",\"manhattanLength\",\"abs\",\"normalize\",\"angle\",\"atan2\",\"distanceTo\",\"distanceToSquared\",\"dx\",\"dy\",\"manhattanDistanceTo\",\"setLength\",\"alpha\",\"lerpVectors\",\"v1\",\"v2\",\"equals\",\"fromArray\",\"offset\",\"toArray\",\"fromBufferAttribute\",\"attribute\",\"getX\",\"getY\",\"rotateAround\",\"center\",\"cos\",\"sin\",\"isMatrix4\",\"n11\",\"n12\",\"n13\",\"n14\",\"n21\",\"n22\",\"n23\",\"n24\",\"n31\",\"n32\",\"n33\",\"n34\",\"n41\",\"n42\",\"n43\",\"n44\",\"te\",\"identity\",\"me\",\"copyPosition\",\"extractBasis\",\"xAxis\",\"yAxis\",\"zAxis\",\"setFromMatrixColumn\",\"makeBasis\",\"extractRotation\",\"scaleX\",\"scaleY\",\"scaleZ\",\"makeRotationFromEuler\",\"euler\",\"isEuler\",\"f\",\"order\",\"ae\",\"af\",\"be\",\"bf\",\"ce\",\"cf\",\"de\",\"df\",\"ac\",\"ad\",\"bc\",\"bd\",\"makeRotationFromQuaternion\",\"zero\",\"one\",\"q\",\"compose\",\"lookAt\",\"eye\",\"up\",\"crossVectors\",\"multiplyMatrices\",\"premultiply\",\"a11\",\"a12\",\"a13\",\"a14\",\"a21\",\"a22\",\"a23\",\"a24\",\"a31\",\"a32\",\"a33\",\"a34\",\"a41\",\"a42\",\"a43\",\"a44\",\"b11\",\"b12\",\"b13\",\"b14\",\"b21\",\"b22\",\"b23\",\"b24\",\"b31\",\"b32\",\"b33\",\"b34\",\"b41\",\"b42\",\"b43\",\"b44\",\"applyToBufferAttribute\",\"count\",\"getZ\",\"applyMatrix4\",\"setXYZ\",\"determinant\",\"transpose\",\"tmp\",\"setPosition\",\"getInverse\",\"throwOnDegenerate\",\"t11\",\"t12\",\"t13\",\"t14\",\"det\",\"msg\",\"detInv\",\"getMaxScaleOnAxis\",\"scaleXSq\",\"scaleYSq\",\"scaleZSq\",\"makeTranslation\",\"makeRotationX\",\"theta\",\"makeRotationY\",\"makeRotationZ\",\"makeRotationAxis\",\"axis\",\"tx\",\"ty\",\"makeScale\",\"makeShear\",\"quaternion\",\"x2\",\"y2\",\"z2\",\"xx\",\"xy\",\"xz\",\"yy\",\"yz\",\"zz\",\"wx\",\"wy\",\"wz\",\"sx\",\"sy\",\"sz\",\"decompose\",\"vector\",\"matrix\",\"invSX\",\"invSY\",\"invSZ\",\"setFromRotationMatrix\",\"makePerspective\",\"left\",\"right\",\"top\",\"bottom\",\"near\",\"far\",\"makeOrthographic\",\"h\",\"slerp\",\"qa\",\"qb\",\"qm\",\"slerpFlat\",\"dst\",\"dstOffset\",\"src0\",\"srcOffset0\",\"src1\",\"srcOffset1\",\"x0\",\"y0\",\"z0\",\"w0\",\"x1\",\"y1\",\"z1\",\"w1\",\"dir\",\"sqrSin\",\"len\",\"tDir\",\"onChangeCallback\",\"isQuaternion\",\"setFromEuler\",\"c1\",\"c2\",\"c3\",\"s1\",\"s2\",\"s3\",\"setFromAxisAngle\",\"halfAngle\",\"m11\",\"m12\",\"m13\",\"m21\",\"m22\",\"m23\",\"m31\",\"m32\",\"m33\",\"trace\",\"setFromUnitVectors\",\"vFrom\",\"vTo\",\"angleTo\",\"acos\",\"rotateTowards\",\"step\",\"inverse\",\"conjugate\",\"multiplyQuaternions\",\"qax\",\"qay\",\"qaz\",\"qaw\",\"qbx\",\"qby\",\"qbz\",\"qbw\",\"cosHalfTheta\",\"sqrSinHalfTheta\",\"sinHalfTheta\",\"halfTheta\",\"ratioA\",\"ratioB\",\"onChange\",\"callback\",\"isVector3\",\"setZ\",\"multiplyVectors\",\"applyEuler\",\"applyQuaternion\",\"applyAxisAngle\",\"qx\",\"qy\",\"qz\",\"qw\",\"ix\",\"iy\",\"iz\",\"iw\",\"project\",\"matrixWorldInverse\",\"projectionMatrix\",\"unproject\",\"matrixWorld\",\"transformDirection\",\"ax\",\"ay\",\"az\",\"bx\",\"by\",\"bz\",\"projectOnVector\",\"projectOnPlane\",\"planeNormal\",\"reflect\",\"normal\",\"dz\",\"setFromSpherical\",\"setFromSphericalCoords\",\"radius\",\"phi\",\"sinPhiRadius\",\"setFromCylindrical\",\"setFromCylindricalCoords\",\"setFromMatrixPosition\",\"setFromMatrixScale\",\"isMatrix3\",\"setFromMatrix4\",\"g\",\"getNormalMatrix\",\"matrix4\",\"transposeIntoArray\",\"setUvTransform\",\"rotation\",\"cx\",\"cy\",\"rotate\",\"translate\",\"ImageUtils\",\"getDataURL\",\"image\",\"canvas\",\"HTMLCanvasElement\",\"createElementNS\",\"context\",\"getContext\",\"ImageData\",\"putImageData\",\"drawImage\",\"toDataURL\",\"textureId\",\"Texture\",\"mapping\",\"wrapS\",\"wrapT\",\"magFilter\",\"minFilter\",\"format\",\"anisotropy\",\"encoding\",\"DEFAULT_IMAGE\",\"mipmaps\",\"DEFAULT_MAPPING\",\"repeat\",\"generateMipmaps\",\"premultiplyAlpha\",\"flipY\",\"unpackAlignment\",\"version\",\"onUpdate\",\"Vector4\",\"WebGLRenderTarget\",\"options\",\"scissor\",\"scissorTest\",\"viewport\",\"texture\",\"depthBuffer\",\"stencilBuffer\",\"depthTexture\",\"WebGLRenderTargetCube\",\"activeCubeFace\",\"activeMipMapLevel\",\"DataTexture\",\"data\",\"Box3\",\"Infinity\",\"Sphere\",\"Plane\",\"constant\",\"Frustum\",\"p0\",\"p1\",\"p2\",\"p3\",\"p4\",\"p5\",\"planes\",\"isTexture\",\"toJSON\",\"meta\",\"isRootObject\",\"textures\",\"metadata\",\"generator\",\"wrap\",\"images\",\"url\",\"Array\",\"isArray\",\"dispose\",\"transformUv\",\"uv\",\"isVector4\",\"setW\",\"setAxisAngleFromQuaternion\",\"setAxisAngleFromRotationMatrix\",\"getW\",\"isWebGLRenderTarget\",\"isWebGLRenderTargetCube\",\"isDataTexture\",\"isBox3\",\"setFromArray\",\"minX\",\"minY\",\"minZ\",\"maxX\",\"maxY\",\"maxZ\",\"setFromBufferAttribute\",\"setFromPoints\",\"points\",\"makeEmpty\",\"il\",\"expandByPoint\",\"setFromCenterAndSize\",\"size\",\"halfSize\",\"setFromObject\",\"expandByObject\",\"box\",\"isEmpty\",\"getCenter\",\"getSize\",\"point\",\"expandByVector\",\"expandByScalar\",\"scope\",\"traverse\",\"node\",\"geometry\",\"isGeometry\",\"vertices\",\"isBufferGeometry\",\"attributes\",\"updateMatrixWorld\",\"containsPoint\",\"containsBox\",\"getParameter\",\"intersectsBox\",\"intersectsSphere\",\"closestPoint\",\"clampPoint\",\"intersectsPlane\",\"plane\",\"intersectsTriangle\",\"v0\",\"f0\",\"f1\",\"f2\",\"testAxis\",\"extents\",\"triangleNormal\",\"satForAxes\",\"axes\",\"j\",\"triangle\",\"distanceToPoint\",\"getBoundingSphere\",\"intersect\",\"union\",\"optionalCenter\",\"maxRadiusSq\",\"empty\",\"radiusSum\",\"deltaLengthSq\",\"getBoundingBox\",\"setComponents\",\"setFromNormalAndCoplanarPoint\",\"setFromCoplanarPoints\",\"inverseNormalLength\",\"distanceToSphere\",\"projectPoint\",\"intersectLine\",\"line\",\"direction\",\"delta\",\"denominator\",\"start\",\"intersectsLine\",\"startSign\",\"endSign\",\"end\",\"coplanarPoint\",\"m1\",\"optionalNormalMatrix\",\"normalMatrix\",\"referencePoint\",\"frustum\",\"setFromMatrix\",\"me0\",\"me1\",\"me2\",\"me3\",\"me4\",\"me5\",\"me6\",\"me7\",\"me8\",\"me9\",\"me10\",\"me11\",\"me12\",\"me13\",\"me14\",\"me15\",\"intersectsObject\",\"boundingSphere\",\"computeBoundingSphere\",\"intersectsSprite\",\"sprite\",\"negRadius\",\"ShaderChunk\",\"alphamap_fragment\",\"alphamap_pars_fragment\",\"alphatest_fragment\",\"aomap_fragment\",\"aomap_pars_fragment\",\"begin_vertex\",\"beginnormal_vertex\",\"bsdfs\",\"bumpmap_pars_fragment\",\"clipping_planes_fragment\",\"clipping_planes_pars_fragment\",\"clipping_planes_pars_vertex\",\"clipping_planes_vertex\",\"color_fragment\",\"color_pars_fragment\",\"color_pars_vertex\",\"color_vertex\",\"common\",\"cube_uv_reflection_fragment\",\"defaultnormal_vertex\",\"displacementmap_pars_vertex\",\"displacementmap_vertex\",\"emissivemap_fragment\",\"emissivemap_pars_fragment\",\"encodings_fragment\",\"encodings_pars_fragment\",\"envmap_fragment\",\"envmap_pars_fragment\",\"envmap_pars_vertex\",\"envmap_physical_pars_fragment\",\"envmap_vertex\",\"fog_vertex\",\"fog_pars_vertex\",\"fog_fragment\",\"fog_pars_fragment\",\"gradientmap_pars_fragment\",\"lightmap_fragment\",\"lightmap_pars_fragment\",\"lights_lambert_vertex\",\"lights_pars_begin\",\"lights_phong_fragment\",\"lights_phong_pars_fragment\",\"lights_physical_fragment\",\"lights_physical_pars_fragment\",\"lights_fragment_begin\",\"lights_fragment_maps\",\"lights_fragment_end\",\"logdepthbuf_fragment\",\"logdepthbuf_pars_fragment\",\"logdepthbuf_pars_vertex\",\"logdepthbuf_vertex\",\"map_fragment\",\"map_pars_fragment\",\"map_particle_fragment\",\"map_particle_pars_fragment\",\"metalnessmap_fragment\",\"metalnessmap_pars_fragment\",\"morphnormal_vertex\",\"morphtarget_pars_vertex\",\"morphtarget_vertex\",\"normal_fragment_begin\",\"normal_fragment_maps\",\"normalmap_pars_fragment\",\"packing\",\"premultiplied_alpha_fragment\",\"project_vertex\",\"dithering_fragment\",\"dithering_pars_fragment\",\"roughnessmap_fragment\",\"roughnessmap_pars_fragment\",\"shadowmap_pars_fragment\",\"shadowmap_pars_vertex\",\"shadowmap_vertex\",\"shadowmask_pars_fragment\",\"skinbase_vertex\",\"skinning_pars_vertex\",\"skinning_vertex\",\"skinnormal_vertex\",\"specularmap_fragment\",\"specularmap_pars_fragment\",\"tonemapping_fragment\",\"tonemapping_pars_fragment\",\"uv_pars_fragment\",\"uv_pars_vertex\",\"uv_vertex\",\"uv2_pars_fragment\",\"uv2_pars_vertex\",\"uv2_vertex\",\"worldpos_vertex\",\"background_frag\",\"background_vert\",\"cube_frag\",\"cube_vert\",\"depth_frag\",\"depth_vert\",\"distanceRGBA_frag\",\"distanceRGBA_vert\",\"equirect_frag\",\"equirect_vert\",\"linedashed_frag\",\"linedashed_vert\",\"meshbasic_frag\",\"meshbasic_vert\",\"meshlambert_frag\",\"meshlambert_vert\",\"meshmatcap_frag\",\"meshmatcap_vert\",\"meshphong_frag\",\"meshphong_vert\",\"meshphysical_frag\",\"meshphysical_vert\",\"normal_frag\",\"normal_vert\",\"points_frag\",\"points_vert\",\"shadow_frag\",\"shadow_vert\",\"sprite_frag\",\"sprite_vert\",\"UniformsUtils\",\"merge\",\"uniforms\",\"merged\",\"u\",\"uniforms_src\",\"uniforms_dst\",\"parameter_src\",\"isColor\",\"ColorKeywords\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"setRGB\",\"setHex\",\"setStyle\",\"hex\",\"setHSL\",\"hue2rgb\",\"style\",\"handleAlpha\",\"string\",\"parseFloat\",\"exec\",\"components\",\"parseInt\",\"charAt\",\"copyGammaToLinear\",\"gammaFactor\",\"copyLinearToGamma\",\"safeInverse\",\"convertGammaToLinear\",\"convertLinearToGamma\",\"copySRGBToLinear\",\"SRGBToLinear\",\"copyLinearToSRGB\",\"LinearToSRGB\",\"convertSRGBToLinear\",\"convertLinearToSRGB\",\"getHex\",\"getHexString\",\"getHSL\",\"hue\",\"saturation\",\"lightness\",\"getStyle\",\"offsetHSL\",\"hsl\",\"addColors\",\"color1\",\"color2\",\"lerpHSL\",\"hslA\",\"hslB\",\"UniformsLib\",\"diffuse\",\"opacity\",\"map\",\"uvTransform\",\"alphaMap\",\"specularmap\",\"specularMap\",\"envmap\",\"envMap\",\"flipEnvMap\",\"reflectivity\",\"refractionRatio\",\"maxMipLevel\",\"aomap\",\"aoMap\",\"aoMapIntensity\",\"lightmap\",\"lightMap\",\"lightMapIntensity\",\"emissivemap\",\"emissiveMap\",\"bumpmap\",\"bumpMap\",\"bumpScale\",\"normalmap\",\"normalMap\",\"normalScale\",\"displacementmap\",\"displacementMap\",\"displacementScale\",\"displacementBias\",\"roughnessmap\",\"roughnessMap\",\"metalnessmap\",\"metalnessMap\",\"gradientmap\",\"gradientMap\",\"fogDensity\",\"fogNear\",\"fogFar\",\"fogColor\",\"lights\",\"ambientLightColor\",\"directionalLights\",\"properties\",\"shadow\",\"shadowBias\",\"shadowRadius\",\"shadowMapSize\",\"directionalShadowMap\",\"directionalShadowMatrix\",\"spotLights\",\"distance\",\"coneCos\",\"penumbraCos\",\"decay\",\"spotShadowMap\",\"spotShadowMatrix\",\"pointLights\",\"shadowCameraNear\",\"shadowCameraFar\",\"pointShadowMap\",\"pointShadowMatrix\",\"hemisphereLights\",\"skyColor\",\"groundColor\",\"rectAreaLights\",\"ShaderLib\",\"basic\",\"vertexShader\",\"fragmentShader\",\"lambert\",\"emissive\",\"phong\",\"specular\",\"shininess\",\"standard\",\"roughness\",\"metalness\",\"envMapIntensity\",\"matcap\",\"dashed\",\"dashSize\",\"totalSize\",\"depth\",\"t2D\",\"tCube\",\"tFlip\",\"equirect\",\"tEquirect\",\"distanceRGBA\",\"referencePosition\",\"nearDistance\",\"farDistance\",\"WebGLAnimation\",\"isAnimating\",\"animationLoop\",\"onAnimationFrame\",\"time\",\"frame\",\"stop\",\"setAnimationLoop\",\"setContext\",\"WebGLAttributes\",\"gl\",\"buffers\",\"WeakMap\",\"isInterleavedBufferAttribute\",\"deleteBuffer\",\"buffer\",\"delete\",\"bufferType\",\"usage\",\"dynamic\",\"DYNAMIC_DRAW\",\"STATIC_DRAW\",\"createBuffer\",\"bindBuffer\",\"bufferData\",\"onUploadCallback\",\"FLOAT\",\"Float32Array\",\"Float64Array\",\"Uint16Array\",\"UNSIGNED_SHORT\",\"Int16Array\",\"SHORT\",\"Uint32Array\",\"UNSIGNED_INT\",\"Int32Array\",\"INT\",\"Int8Array\",\"BYTE\",\"Uint8Array\",\"UNSIGNED_BYTE\",\"bytesPerElement\",\"BYTES_PER_ELEMENT\",\"updateRange\",\"bufferSubData\",\"subarray\",\"updateBuffer\",\"Face3\",\"materialIndex\",\"vertexNormals\",\"vertexColors\",\"Euler\",\"_order\",\"DefaultOrder\",\"Layers\",\"mask\",\"physical\",\"clearCoat\",\"clearCoatRoughness\",\"RotationOrders\",\"asin\",\"setFromQuaternion\",\"setFromVector3\",\"reorder\",\"newOrder\",\"toVector3\",\"optionalResult\",\"channel\",\"enable\",\"toggle\",\"disable\",\"test\",\"layers\",\"object3DId\",\"Object3D\",\"parent\",\"children\",\"DefaultUp\",\"modelViewMatrix\",\"DefaultMatrixAutoUpdate\",\"matrixWorldNeedsUpdate\",\"visible\",\"castShadow\",\"receiveShadow\",\"frustumCulled\",\"renderOrder\",\"userData\",\"isObject3D\",\"onBeforeRender\",\"onAfterRender\",\"applyMatrix\",\"setRotationFromAxisAngle\",\"setRotationFromEuler\",\"setRotationFromMatrix\",\"setRotationFromQuaternion\",\"rotateOnAxis\",\"q1\",\"rotateOnWorldAxis\",\"rotateX\",\"rotateY\",\"rotateZ\",\"translateOnAxis\",\"translateX\",\"translateY\",\"translateZ\",\"localToWorld\",\"worldToLocal\",\"updateWorldMatrix\",\"isCamera\",\"getObjectById\",\"id\",\"getObjectByProperty\",\"getObjectByName\",\"getWorldPosition\",\"getWorldQuaternion\",\"getWorldScale\",\"getWorldDirection\",\"raycast\",\"traverseVisible\",\"traverseAncestors\",\"force\",\"updateParents\",\"updateChildren\",\"geometries\",\"materials\",\"shapes\",\"serialize\",\"library\",\"element\",\"JSON\",\"stringify\",\"isMesh\",\"isLine\",\"isPoints\",\"parameters\",\"shape\",\"uuids\",\"extractFromCache\",\"cache\",\"values\",\"recursive\",\"parse\",\"child\",\"geometryId\",\"Geometry\",\"colors\",\"faces\",\"faceVertexUvs\",\"morphTargets\",\"morphNormals\",\"skinWeights\",\"skinIndices\",\"lineDistances\",\"boundingBox\",\"elementsNeedUpdate\",\"verticesNeedUpdate\",\"uvsNeedUpdate\",\"normalsNeedUpdate\",\"colorsNeedUpdate\",\"lineDistancesNeedUpdate\",\"groupsNeedUpdate\",\"BufferAttribute\",\"itemSize\",\"normalized\",\"Int8BufferAttribute\",\"Uint8BufferAttribute\",\"Uint8ClampedBufferAttribute\",\"Uint8ClampedArray\",\"Int16BufferAttribute\",\"Uint16BufferAttribute\",\"Int32BufferAttribute\",\"Uint32BufferAttribute\",\"Float32BufferAttribute\",\"Float64BufferAttribute\",\"DirectGeometry\",\"normals\",\"uvs\",\"uvs2\",\"groups\",\"arrayMax\",\"face\",\"jl\",\"computeBoundingBox\",\"obj\",\"fromBufferGeometry\",\"indices\",\"positions\",\"uv2\",\"tempNormals\",\"tempUVs\",\"tempUVs2\",\"addFace\",\"group\",\"computeFaceNormals\",\"cb\",\"ab\",\"fl\",\"vA\",\"vB\",\"vC\",\"computeVertexNormals\",\"areaWeighted\",\"vl\",\"computeFlatVertexNormals\",\"computeMorphNormals\",\"__originalFaceNormal\",\"__originalVertexNormals\",\"tmpGeo\",\"faceNormals\",\"dstNormalsFace\",\"dstNormalsVertex\",\"faceNormal\",\"materialIndexOffset\",\"vertexOffset\",\"vertices1\",\"vertices2\",\"faces1\",\"faces2\",\"uvs1\",\"colors1\",\"colors2\",\"vertexCopy\",\"faceCopy\",\"faceVertexNormals\",\"faceVertexColors\",\"uvCopy\",\"mergeMesh\",\"mergeVertices\",\"verticesMap\",\"unique\",\"changes\",\"precision\",\"faceIndicesToRemove\",\"idx\",\"diff\",\"sortFacesByMaterialIndex\",\"_id\",\"sort\",\"newUvs1\",\"newUvs2\",\"vertex\",\"normalsHash\",\"colorsHash\",\"uvsHash\",\"hasFaceVertexUv\",\"hasFaceNormal\",\"hasFaceVertexNormal\",\"hasFaceColor\",\"hasFaceVertexColor\",\"faceType\",\"setBit\",\"getUvIndex\",\"getNormalIndex\",\"getColorIndex\",\"enabled\",\"hash\",\"k\",\"kl\",\"uvsCopy\",\"morphTarget\",\"morphNormal\",\"srcVertexNormal\",\"destVertexNormal\",\"isBufferAttribute\",\"setArray\",\"setDynamic\",\"copyAt\",\"index1\",\"index2\",\"copyArray\",\"copyColorsArray\",\"copyVector2sArray\",\"vectors\",\"copyVector3sArray\",\"copyVector4sArray\",\"setXY\",\"setXYZW\",\"onUpload\",\"computeGroups\",\"fromGeometry\",\"morphTargetsPosition\",\"hasFaceVertexUv2\",\"morphTargetsLength\",\"morphTargetsNormal\",\"morphNormalsLength\",\"hasSkinIndices\",\"hasSkinWeights\",\"vertexUvs\",\"bufferGeometryId\",\"BufferGeometry\",\"morphAttributes\",\"drawRange\",\"BoxGeometry\",\"widthSegments\",\"heightSegments\",\"depthSegments\",\"BoxBufferGeometry\",\"numberOfVertices\",\"groupStart\",\"buildPlane\",\"udir\",\"vdir\",\"gridX\",\"gridY\",\"segmentWidth\",\"segmentHeight\",\"widthHalf\",\"heightHalf\",\"depthHalf\",\"gridX1\",\"gridY1\",\"vertexCounter\",\"groupCount\",\"addGroup\",\"setIndex\",\"addAttribute\",\"PlaneGeometry\",\"PlaneBufferGeometry\",\"width_half\",\"height_half\",\"segment_width\",\"segment_height\",\"getIndex\",\"getAttribute\",\"removeAttribute\",\"clearGroups\",\"setDrawRange\",\"needsUpdate\",\"updateFromObject\",\"direct\",\"__directGeometry\",\"lineDistance\",\"fromDirectGeometry\",\"isNaN\",\"pA\",\"pB\",\"pC\",\"normalizeNormals\",\"attributeArray1\",\"attribute2\",\"attributeArray2\",\"toNonIndexed\",\"geometry2\",\"array2\",\"keys\",\"morphAttribute\",\"materialId\",\"Material\",\"blending\",\"side\",\"transparent\",\"blendSrc\",\"blendDst\",\"blendEquation\",\"blendSrcAlpha\",\"blendDstAlpha\",\"blendEquationAlpha\",\"depthFunc\",\"depthTest\",\"depthWrite\",\"clippingPlanes\",\"clipIntersection\",\"clipShadows\",\"shadowSide\",\"colorWrite\",\"polygonOffset\",\"polygonOffsetFactor\",\"polygonOffsetUnits\",\"dithering\",\"alphaTest\",\"premultipliedAlpha\",\"overdraw\",\"ShaderMaterial\",\"defines\",\"linewidth\",\"wireframe\",\"wireframeLinewidth\",\"clipping\",\"skinning\",\"extensions\",\"derivatives\",\"fragDepth\",\"drawBuffers\",\"shaderTextureLOD\",\"defaultAttributeValues\",\"index0AttributeName\",\"uniformsNeedUpdate\",\"setValues\",\"Ray\",\"origin\",\"Triangle\",\"MeshBasicMaterial\",\"combine\",\"wireframeLinecap\",\"wireframeLinejoin\",\"drawMode\",\"updateMorphTargets\",\"absNumericalSort\",\"CubeTexture\",\"DataTexture3D\",\"isMaterial\",\"onBeforeCompile\",\"newValue\",\"currentValue\",\"isRoot\",\"emissiveIntensity\",\"normalMapType\",\"sizeAttenuation\",\"gapSize\",\"srcPlanes\",\"dstPlanes\",\"isShaderMaterial\",\"ray\",\"at\",\"recast\",\"closestPointToPoint\",\"directionDistance\",\"distanceSqToPoint\",\"distanceSqToSegment\",\"segCenter\",\"segDir\",\"optionalPointOnRay\",\"optionalPointOnSegment\",\"s0\",\"sqrDist\",\"extDet\",\"segExtent\",\"a01\",\"b0\",\"invDet\",\"intersectSphere\",\"tca\",\"radius2\",\"thc\",\"t0\",\"t1\",\"distanceToPlane\",\"intersectPlane\",\"distToPoint\",\"intersectBox\",\"tmin\",\"tmax\",\"tymin\",\"tymax\",\"tzmin\",\"tzmax\",\"invdirx\",\"invdiry\",\"invdirz\",\"intersectTriangle\",\"edge1\",\"edge2\",\"backfaceCulling\",\"DdN\",\"DdQxE2\",\"DdE1xQ\",\"QdN\",\"getNormal\",\"targetLengthSq\",\"getBarycoord\",\"dot00\",\"dot01\",\"dot02\",\"dot11\",\"dot12\",\"denom\",\"invDenom\",\"getUV\",\"barycoord\",\"uv1\",\"uv3\",\"setFromPointsAndIndices\",\"i0\",\"i1\",\"i2\",\"getArea\",\"getMidpoint\",\"getPlane\",\"result\",\"vab\",\"vac\",\"vbc\",\"vap\",\"vbp\",\"vcp\",\"d4\",\"vc\",\"d5\",\"d6\",\"vb\",\"va\",\"isMeshBasicMaterial\",\"setDrawMode\",\"morphTargetInfluences\",\"morphTargetDictionary\",\"ml\",\"String\",\"inverseMatrix\",\"tempA\",\"tempB\",\"tempC\",\"uvA\",\"uvB\",\"uvC\",\"intersectionPoint\",\"intersectionPointWorld\",\"checkIntersection\",\"raycaster\",\"checkBufferGeometryIntersection\",\"intersection\",\"intersects\",\"groupMaterial\",\"faceIndex\",\"fvA\",\"fvB\",\"fvC\",\"isMultiMaterial\",\"faceMaterial\",\"morphInfluences\",\"tl\",\"influence\",\"targets\",\"uvs_f\",\"isCubeTexture\",\"isDataTexture3D\",\"emptyTexture\",\"emptyTexture3d\",\"emptyCubeTexture\",\"UniformContainer\",\"seq\",\"arrayCacheF32\",\"arrayCacheI32\",\"mat4array\",\"mat3array\",\"mat2array\",\"flatten\",\"nBlocks\",\"blockSize\",\"firstElem\",\"arraysEqual\",\"allocTexUnits\",\"allocTextureUnit\",\"setValue1f\",\"uniform1f\",\"addr\",\"setValue1i\",\"uniform1i\",\"setValue2fv\",\"uniform2f\",\"uniform2fv\",\"setValue3fv\",\"uniform3f\",\"uniform3fv\",\"setValue4fv\",\"uniform4f\",\"uniform4fv\",\"setValue2fm\",\"uniformMatrix2fv\",\"setValue3fm\",\"uniformMatrix3fv\",\"setValue4fm\",\"uniformMatrix4fv\",\"setValueT1\",\"unit\",\"setTexture2D\",\"setValueT3D1\",\"setTexture3D\",\"setValueT6\",\"setTextureCube\",\"setValue2iv\",\"uniform2iv\",\"setValue3iv\",\"uniform3iv\",\"setValue4iv\",\"uniform4iv\",\"setValue1fv\",\"uniform1fv\",\"setValue1iv\",\"uniform1iv\",\"setValueV2a\",\"updateCache\",\"setValueV3a\",\"setValueV4a\",\"setValueM2a\",\"setValueM3a\",\"setValueM4a\",\"setValueT1a\",\"units\",\"setValueT6a\",\"SingleUniform\",\"activeInfo\",\"setValue\",\"getSingularSetter\",\"PureArrayUniform\",\"getPureArraySetter\",\"StructuredUniform\",\"RePathPart\",\"addUniform\",\"container\",\"uniformObject\",\"parseUniform\",\"path\",\"pathLength\",\"lastIndex\",\"matchEnd\",\"idIsIndex\",\"subscript\",\"next\",\"WebGLUniforms\",\"program\",\"getProgramParameter\",\"ACTIVE_UNIFORMS\",\"info\",\"getActiveUniform\",\"getUniformLocation\",\"WebGLShader\",\"shader\",\"createShader\",\"shaderSource\",\"compileShader\",\"getShaderParameter\",\"COMPILE_STATUS\",\"getShaderInfoLog\",\"VERTEX_SHADER\",\"lines\",\"split\",\"join\",\"addLineNumbers\",\"setOptional\",\"upload\",\"seqWithValue\",\"programIdCount\",\"getEncodingComponents\",\"getTexelDecodingFunction\",\"functionName\",\"filterEmptyLine\",\"replaceLightNums\",\"replace\",\"numDirLights\",\"numSpotLights\",\"numRectAreaLights\",\"numPointLights\",\"numHemiLights\",\"replaceClippingPlaneNums\",\"numClippingPlanes\",\"numClipIntersection\",\"parseIncludes\",\"include\",\"unrollLoops\",\"snippet\",\"unroll\",\"WebGLProgram\",\"code\",\"capabilities\",\"shadowMapTypeDefine\",\"shadowMapType\",\"envMapTypeDefine\",\"envMapModeDefine\",\"envMapBlendingDefine\",\"prefixVertex\",\"prefixFragment\",\"gammaFactorDefine\",\"customExtensions\",\"isWebGL2\",\"rendererExtensions\",\"envMapCubeUV\",\"objectSpaceNormalMap\",\"logarithmicDepthBuffer\",\"filter\",\"generateExtensions\",\"customDefines\",\"chunks\",\"generateDefines\",\"createProgram\",\"isRawShaderMaterial\",\"supportsVertexTextures\",\"maxBones\",\"useFog\",\"fogExp\",\"useVertexTexture\",\"doubleSided\",\"flipSided\",\"shadowMapEnabled\",\"physicallyCorrectLights\",\"toneMapping\",\"toneMappingName\",\"getToneMappingFunction\",\"outputEncoding\",\"mapEncoding\",\"matcapEncoding\",\"envMapEncoding\",\"emissiveMapEncoding\",\"getTexelEncodingFunction\",\"depthPacking\",\"isGLSL3ShaderMaterial\",\"versionRegex\",\"vertexGlsl\",\"fragmentGlsl\",\"glVertexShader\",\"glFragmentShader\",\"FRAGMENT_SHADER\",\"attachShader\",\"bindAttribLocation\",\"linkProgram\",\"cachedUniforms\",\"cachedAttributes\",\"programLog\",\"getProgramInfoLog\",\"trim\",\"vertexLog\",\"fragmentLog\",\"runnable\",\"haveDiagnostics\",\"LINK_STATUS\",\"getError\",\"VALIDATE_STATUS\",\"diagnostics\",\"prefix\",\"deleteShader\",\"getUniforms\",\"getAttributes\",\"ACTIVE_ATTRIBUTES\",\"getActiveAttrib\",\"getAttribLocation\",\"fetchAttributeLocations\",\"destroy\",\"deleteProgram\",\"usedTimes\",\"WebGLPrograms\",\"programs\",\"shaderIDs\",\"MeshDepthMaterial\",\"MeshDistanceMaterial\",\"MeshNormalMaterial\",\"MeshLambertMaterial\",\"MeshToonMaterial\",\"MeshStandardMaterial\",\"MeshPhysicalMaterial\",\"MeshMatcapMaterial\",\"LineBasicMaterial\",\"LineDashedMaterial\",\"PointsMaterial\",\"ShadowMaterial\",\"SpriteMaterial\",\"parameterNames\",\"getTextureEncodingFromMap\",\"gammaOverrideLinear\",\"getParameters\",\"shadows\",\"nClipPlanes\",\"nClipIntersection\",\"shaderID\",\"isSkinnedMesh\",\"bones\",\"skeleton\",\"floatVertexTextures\",\"nVertexUniforms\",\"maxVertexUniforms\",\"nVertexMatrices\",\"allocateBones\",\"getMaxPrecision\",\"currentRenderTarget\",\"getRenderTarget\",\"vertexTextures\",\"gammaOutput\",\"gammaInput\",\"envMapMode\",\"isFogExp2\",\"maxMorphTargets\",\"maxMorphNormals\",\"directional\",\"spot\",\"rectArea\",\"hemi\",\"shadowMap\",\"getProgramCode\",\"acquireProgram\",\"pl\",\"programInfo\",\"releaseProgram\",\"pop\",\"painterSortStable\",\"reversePainterSortStable\",\"WebGLRenderLists\",\"lists\",\"list\",\"renderItems\",\"renderItemsIndex\",\"opaque\",\"renderItem\",\"WebGLLights\",\"halfWidth\",\"halfHeight\",\"state\",\"stateID\",\"directionalLength\",\"pointLength\",\"spotLength\",\"rectAreaLength\",\"hemiLength\",\"shadowsLength\",\"ambient\",\"vector3\",\"matrix42\",\"setup\",\"viewMatrix\",\"intensity\",\"isAmbientLight\",\"isDirectionalLight\",\"bias\",\"mapSize\",\"isSpotLight\",\"penumbra\",\"isRectAreaLight\",\"isPointLight\",\"isHemisphereLight\",\"WebGLRenderState\",\"lightsArray\",\"shadowsArray\",\"setupLights\",\"pushLight\",\"pushShadow\",\"shadowLight\",\"WebGLShadowMap\",\"_renderer\",\"_objects\",\"maxTextureSize\",\"_frustum\",\"_projScreenMatrix\",\"_shadowMapSize\",\"_maxShadowMapSize\",\"_lookTarget\",\"_lightPositionWorld\",\"_MorphingFlag\",\"_SkinningFlag\",\"_NumberOfMaterialVariants\",\"_depthMaterials\",\"_distanceMaterials\",\"_materialCache\",\"0\",\"1\",\"2\",\"cubeDirections\",\"cubeUps\",\"cube2DViewPorts\",\"useMorphing\",\"useSkinning\",\"depthMaterial\",\"distanceMaterial\",\"getDepthMaterial\",\"lightPositionWorld\",\"materialVariants\",\"customMaterial\",\"customDepthMaterial\",\"customDistanceMaterial\",\"variantIndex\",\"localClippingEnabled\",\"keyA\",\"keyB\",\"materialsForVariant\",\"cachedMaterial\",\"isMeshDistanceMaterial\",\"renderObject\",\"shadowCamera\",\"renderBufferDirect\",\"autoUpdate\",\"faceCount\",\"_gl\",\"_state\",\"BLEND\",\"setClear\",\"setTest\",\"setScissorTest\",\"vpWidth\",\"vpHeight\",\"pars\",\"isSpotLightShadow\",\"shadowMatrix\",\"setRenderTarget\",\"clear\",\"vpDimensions\",\"WebGLTextures\",\"utils\",\"_canvas\",\"_videoTextures\",\"clampToMaxSize\",\"maxSize\",\"textureNeedsGenerateMipmaps\",\"generateMipmap\",\"__maxMipLevel\",\"LOG2E\",\"getInternalFormat\",\"glFormat\",\"glType\",\"RED\",\"R32F\",\"HALF_FLOAT\",\"R16F\",\"R8\",\"RGB\",\"RGB32F\",\"RGB16F\",\"RGB8\",\"RGBA\",\"RGBA32F\",\"RGBA16F\",\"RGBA8\",\"filterFallback\",\"NEAREST\",\"LINEAR\",\"onTextureDispose\",\"textureProperties\",\"__image__webglTextureCube\",\"deleteTexture\",\"__webglInit\",\"__webglTexture\",\"deallocateTexture\",\"isVideoTexture\",\"memory\",\"onRenderTargetDispose\",\"renderTarget\",\"renderTargetProperties\",\"deleteFramebuffer\",\"__webglFramebuffer\",\"__webglDepthbuffer\",\"deleteRenderbuffer\",\"deallocateRenderTarget\",\"slot\",\"updateVideoTexture\",\"__version\",\"complete\",\"uploadTexture\",\"activeTexture\",\"TEXTURE0\",\"bindTexture\",\"TEXTURE_2D\",\"setTextureParameters\",\"textureType\",\"isPowerOfTwoImage\",\"extension\",\"texParameteri\",\"TEXTURE_WRAP_S\",\"convert\",\"TEXTURE_WRAP_T\",\"TEXTURE_MAG_FILTER\",\"TEXTURE_MIN_FILTER\",\"CLAMP_TO_EDGE\",\"__currentAnisotropy\",\"texParameterf\",\"TEXTURE_MAX_ANISOTROPY_EXT\",\"getMaxAnisotropy\",\"TEXTURE_3D\",\"createTexture\",\"pixelStorei\",\"UNPACK_FLIP_Y_WEBGL\",\"UNPACK_PREMULTIPLY_ALPHA_WEBGL\",\"UNPACK_ALIGNMENT\",\"textureNeedsPowerOfTwo\",\"HTMLImageElement\",\"ImageBitmap\",\"makePowerOfTwo\",\"glInternalFormat\",\"mipmap\",\"isDepthTexture\",\"DEPTH_COMPONENT\",\"DEPTH_COMPONENT32F\",\"DEPTH_COMPONENT16\",\"DEPTH_STENCIL\",\"texImage2D\",\"isCompressedTexture\",\"getCompressedTextureFormats\",\"compressedTexImage2D\",\"texImage3D\",\"setupFrameBufferTexture\",\"framebuffer\",\"attachment\",\"textureTarget\",\"bindFramebuffer\",\"FRAMEBUFFER\",\"framebufferTexture2D\",\"setupRenderBufferStorage\",\"renderbuffer\",\"bindRenderbuffer\",\"RENDERBUFFER\",\"renderbufferStorage\",\"framebufferRenderbuffer\",\"DEPTH_ATTACHMENT\",\"DEPTH_STENCIL_ATTACHMENT\",\"RGBA4\",\"setupDepthRenderbuffer\",\"isCube\",\"webglDepthTexture\",\"setupDepthTexture\",\"createRenderbuffer\",\"TEXTURE_CUBE_MAP\",\"isCompressed\",\"cubeImage\",\"maxCubemapSize\",\"TEXTURE_CUBE_MAP_POSITIVE_X\",\"setTextureCubeDynamic\",\"setupRenderTarget\",\"isTargetPowerOfTwo\",\"createFramebuffer\",\"COLOR_ATTACHMENT0\",\"updateRenderTargetMipmap\",\"webglTexture\",\"WebGLUtils\",\"REPEAT\",\"MIRRORED_REPEAT\",\"NEAREST_MIPMAP_NEAREST\",\"NEAREST_MIPMAP_LINEAR\",\"LINEAR_MIPMAP_NEAREST\",\"LINEAR_MIPMAP_LINEAR\",\"UNSIGNED_SHORT_4_4_4_4\",\"UNSIGNED_SHORT_5_5_5_1\",\"UNSIGNED_SHORT_5_6_5\",\"HALF_FLOAT_OES\",\"ALPHA\",\"LUMINANCE\",\"LUMINANCE_ALPHA\",\"FUNC_ADD\",\"FUNC_SUBTRACT\",\"FUNC_REVERSE_SUBTRACT\",\"ZERO\",\"ONE\",\"SRC_COLOR\",\"ONE_MINUS_SRC_COLOR\",\"SRC_ALPHA\",\"ONE_MINUS_SRC_ALPHA\",\"DST_ALPHA\",\"ONE_MINUS_DST_ALPHA\",\"DST_COLOR\",\"ONE_MINUS_DST_COLOR\",\"SRC_ALPHA_SATURATE\",\"COMPRESSED_RGB_S3TC_DXT1_EXT\",\"COMPRESSED_RGBA_S3TC_DXT1_EXT\",\"COMPRESSED_RGBA_S3TC_DXT3_EXT\",\"COMPRESSED_RGBA_S3TC_DXT5_EXT\",\"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\",\"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\",\"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\",\"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\",\"COMPRESSED_RGB_ETC1_WEBGL\",\"MIN\",\"MAX\",\"MIN_EXT\",\"MAX_EXT\",\"UNSIGNED_INT_24_8\",\"UNSIGNED_INT_24_8_WEBGL\",\"Group\",\"Camera\",\"projectionMatrixInverse\",\"fov\",\"zoom\",\"focus\",\"view\",\"filmGauge\",\"filmOffset\",\"ArrayCamera\",\"cameras\",\"WebVRManager\",\"device\",\"frameData\",\"poseTarget\",\"controllers\",\"standingMatrix\",\"standingMatrixInverse\",\"frameOfReferenceType\",\"VRFrameData\",\"onVRDisplayPresentChange\",\"tempQuaternion\",\"tempPosition\",\"cameraL\",\"bounds\",\"cameraR\",\"currentSize\",\"currentPixelRatio\",\"cameraVR\",\"isPresenting\",\"eyeParameters\",\"getEyeParameters\",\"renderWidth\",\"renderHeight\",\"getPixelRatio\",\"setDrawingBufferSize\",\"animation\",\"triggers\",\"findGamepad\",\"gamepads\",\"navigator\",\"getGamepads\",\"gamepad\",\"startsWith\",\"getController\",\"controller\",\"getDevice\",\"setDevice\",\"setFrameOfReferenceType\",\"setPoseTarget\",\"getCamera\",\"userHeight\",\"depthNear\",\"depthFar\",\"getFrameData\",\"stageParameters\",\"sittingToStandingTransform\",\"pose\",\"poseObject\",\"orientation\",\"leftViewMatrix\",\"rightViewMatrix\",\"leftProjectionMatrix\",\"rightProjectionMatrix\",\"getLayers\",\"layer\",\"leftBounds\",\"rightBounds\",\"hasPosition\",\"buttonId\",\"buttons\",\"pressed\",\"updateControllers\",\"getStandingMatrix\",\"submitFrame\",\"_context\",\"_alpha\",\"_depth\",\"_stencil\",\"stencil\",\"_antialias\",\"_premultipliedAlpha\",\"_preserveDrawingBuffer\",\"preserveDrawingBuffer\",\"_powerPreference\",\"powerPreference\",\"currentRenderList\",\"currentRenderState\",\"autoClear\",\"autoClearColor\",\"autoClearDepth\",\"autoClearStencil\",\"sortObjects\",\"toneMappingExposure\",\"toneMappingWhitePoint\",\"objects\",\"programCache\",\"renderLists\",\"renderStates\",\"morphtargets\",\"bufferRenderer\",\"indexedBufferRenderer\",\"_this\",\"_isContextLost\",\"_framebuffer\",\"_currentRenderTarget\",\"_currentFramebuffer\",\"_currentMaterialId\",\"_currentGeometryProgram\",\"_currentCamera\",\"_currentArrayCamera\",\"_currentViewport\",\"_currentScissor\",\"_currentScissorTest\",\"_usedTextureUnits\",\"_width\",\"_height\",\"_pixelRatio\",\"_viewport\",\"_scissor\",\"_scissorTest\",\"_clipping\",\"globalState\",\"numGlobalPlanes\",\"renderingShadows\",\"viewNormalMatrix\",\"uniform\",\"resetGlobalState\",\"numPlanes\",\"numIntersection\",\"projectPlanes\",\"skipTransform\",\"nPlanes\",\"dstArray\",\"flatSize\",\"i4\",\"enableLocalClipping\",\"beginShadows\",\"endShadows\",\"setState\",\"fromCache\",\"nGlobal\",\"lGlobal\",\"clippingState\",\"_clippingEnabled\",\"_localClippingEnabled\",\"_vector3\",\"getTargetPixelRatio\",\"contextAttributes\",\"onContextLost\",\"onContextRestore\",\"getShaderPrecisionFormat\",\"rangeMin\",\"rangeMax\",\"message\",\"initGLContext\",\"getExtension\",\"maxAnisotropy\",\"HIGH_FLOAT\",\"MEDIUM_FLOAT\",\"WebGL2RenderingContext\",\"maxPrecision\",\"maxTextures\",\"MAX_TEXTURE_IMAGE_UNITS\",\"maxVertexTextures\",\"MAX_VERTEX_TEXTURE_IMAGE_UNITS\",\"MAX_TEXTURE_SIZE\",\"MAX_CUBE_MAP_TEXTURE_SIZE\",\"maxAttributes\",\"MAX_VERTEX_ATTRIBS\",\"MAX_VERTEX_UNIFORM_VECTORS\",\"maxVaryings\",\"MAX_VARYING_VECTORS\",\"maxFragmentUniforms\",\"MAX_FRAGMENT_UNIFORM_VECTORS\",\"floatFragmentTextures\",\"MAX_TEXTURE_MAX_ANISOTROPY_EXT\",\"colorBuffer\",\"locked\",\"currentColorMask\",\"currentColorClear\",\"setMask\",\"colorMask\",\"setLocked\",\"lock\",\"clearColor\",\"reset\",\"currentDepthMask\",\"currentDepthFunc\",\"currentDepthClear\",\"DEPTH_TEST\",\"depthMask\",\"setFunc\",\"NEVER\",\"ALWAYS\",\"LESS\",\"LEQUAL\",\"EQUAL\",\"GEQUAL\",\"GREATER\",\"NOTEQUAL\",\"clearDepth\",\"currentStencilMask\",\"currentStencilFunc\",\"currentStencilRef\",\"currentStencilFuncMask\",\"currentStencilFail\",\"currentStencilZFail\",\"currentStencilZPass\",\"currentStencilClear\",\"stencilTest\",\"STENCIL_TEST\",\"stencilMask\",\"stencilFunc\",\"stencilRef\",\"setOp\",\"stencilFail\",\"stencilZFail\",\"stencilZPass\",\"stencilOp\",\"clearStencil\",\"maxVertexAttributes\",\"newAttributes\",\"enabledAttributes\",\"attributeDivisors\",\"enabledCapabilities\",\"compressedTextureFormats\",\"currentProgram\",\"currentBlendingEnabled\",\"currentBlending\",\"currentBlendEquation\",\"currentBlendSrc\",\"currentBlendDst\",\"currentBlendEquationAlpha\",\"currentBlendSrcAlpha\",\"currentBlendDstAlpha\",\"currentPremultipledAlpha\",\"currentFlipSided\",\"currentCullFace\",\"currentLineWidth\",\"currentPolygonOffsetFactor\",\"currentPolygonOffsetUnits\",\"MAX_COMBINED_TEXTURE_IMAGE_UNITS\",\"lineWidthAvailable\",\"glVersion\",\"VERSION\",\"currentTextureSlot\",\"currentBoundTextures\",\"currentScissor\",\"currentViewport\",\"emptyTextures\",\"enableAttributeAndDivisor\",\"meshPerAttribute\",\"enableVertexAttribArray\",\"setBlending\",\"blendEquationSeparate\",\"blendFuncSeparate\",\"blendFunc\",\"setFlipSided\",\"frontFace\",\"CW\",\"CCW\",\"setCullFace\",\"cullFace\",\"CULL_FACE\",\"BACK\",\"FRONT\",\"FRONT_AND_BACK\",\"setPolygonOffset\",\"factor\",\"POLYGON_OFFSET_FILL\",\"webglSlot\",\"initAttributes\",\"enableAttribute\",\"disableUnusedAttributes\",\"disableVertexAttribArray\",\"formats\",\"COMPRESSED_TEXTURE_FORMATS\",\"useProgram\",\"setMaterial\",\"frontFaceCW\",\"setLineWidth\",\"lineWidth\",\"SCISSOR_TEST\",\"webglType\",\"boundTexture\",\"calls\",\"triangles\",\"autoReset\",\"instanceCount\",\"TRIANGLES\",\"TRIANGLE_STRIP\",\"TRIANGLE_FAN\",\"LINES\",\"LINE_STRIP\",\"LINE_LOOP\",\"POINTS\",\"wireframeAttributes\",\"onGeometryDispose\",\"buffergeometry\",\"_bufferGeometry\",\"geometryAttributes\",\"ELEMENT_ARRAY_BUFFER\",\"ARRAY_BUFFER\",\"getWireframeAttribute\",\"geometryIndex\",\"updateList\",\"influencesList\",\"objectInfluences\",\"influences\",\"renderState\",\"planeMesh\",\"boxMesh\",\"clearAlpha\",\"getClearColor\",\"setClearColor\",\"getClearAlpha\",\"setClearAlpha\",\"renderList\",\"forceClear\",\"setMode\",\"drawArrays\",\"renderInstances\",\"maxInstancedCount\",\"drawElements\",\"vr\",\"session\",\"frameOfReference\",\"inputSources\",\"onSessionEvent\",\"inputSource\",\"onSessionEnd\",\"setFramebuffer\",\"updateCamera\",\"XRDevice\",\"setCompatibleXRDevice\",\"setSession\",\"baseLayer\",\"XRWebGLLayer\",\"requestFrameOfReference\",\"then\",\"getInputSources\",\"onAnimationFrameCallback\",\"getDevicePose\",\"views\",\"getViewport\",\"getViewMatrix\",\"inputPose\",\"getInputPose\",\"targetRay\",\"transformMatrix\",\"pointerMatrix\",\"onMaterialDispose\",\"releaseMaterialProgramReference\",\"deallocateMaterial\",\"getContextAttributes\",\"forceContextLoss\",\"loseContext\",\"forceContextRestore\",\"restoreContext\",\"updateStyle\",\"setViewport\",\"getDrawingBufferSize\",\"pixelRatio\",\"getCurrentViewport\",\"setScissor\",\"boolean\",\"bits\",\"COLOR_BUFFER_BIT\",\"DEPTH_BUFFER_BIT\",\"STENCIL_BUFFER_BIT\",\"renderBufferImmediate\",\"hasPositions\",\"hasNormals\",\"hasUvs\",\"hasColors\",\"programAttributes\",\"positionArray\",\"vertexAttribPointer\",\"normalArray\",\"uvArray\",\"colorArray\",\"setProgram\",\"updateBuffers\",\"rangeFactor\",\"isInstancedBufferGeometry\",\"materialDefaultAttributeValues\",\"programAttribute\",\"geometryAttribute\",\"stride\",\"isInstancedInterleavedBuffer\",\"isInstancedBufferAttribute\",\"vertexAttrib2fv\",\"vertexAttrib3fv\",\"vertexAttrib4fv\",\"vertexAttrib1fv\",\"setupVertexAttributes\",\"dataCount\",\"rangeStart\",\"rangeCount\",\"drawStart\",\"drawEnd\",\"drawCount\",\"isLineSegments\",\"isLineLoop\",\"isSprite\",\"compile\",\"isLight\",\"initMaterial\",\"renderObjects\",\"overrideMaterial\",\"isArrayCamera\",\"camera2\",\"isImmediateRenderObject\",\"renderObjectImmediate\",\"materialProperties\",\"lightsHash\",\"lightsStateHash\",\"programChange\",\"numSupportedMorphTargets\",\"numSupportedMorphNormals\",\"progUniforms\",\"uniformsList\",\"useCache\",\"refreshProgram\",\"refreshMaterial\",\"refreshLights\",\"p_uniforms\",\"m_uniforms\",\"isMeshPhongMaterial\",\"isMeshStandardMaterial\",\"uCamPos\",\"cameraPosition\",\"isMeshLambertMaterial\",\"boneTexture\",\"boneMatrices\",\"boneTextureSize\",\"markUniformsLightsNeedsUpdate\",\"isFog\",\"density\",\"refreshUniformsFog\",\"refreshUniformsCommon\",\"refreshUniformsLambert\",\"isMeshToonMaterial\",\"refreshUniformsPhong\",\"refreshUniformsToon\",\"isMeshPhysicalMaterial\",\"refreshUniformsStandard\",\"refreshUniformsPhysical\",\"isMeshMatcapMaterial\",\"refreshUniformsMatcap\",\"isMeshDepthMaterial\",\"refreshUniformsDepth\",\"refreshUniformsDistance\",\"isMeshNormalMaterial\",\"refreshUniformsNormal\",\"isLineBasicMaterial\",\"refreshUniformsLine\",\"isLineDashedMaterial\",\"refreshUniformsDash\",\"isPointsMaterial\",\"refreshUniformsPoints\",\"isSpriteMaterial\",\"refreshUniformsSprites\",\"isShadowMaterial\",\"ltc_1\",\"LTC_1\",\"ltc_2\",\"LTC_2\",\"uvScaleMap\",\"projectObject\",\"opaqueObjects\",\"transparentObjects\",\"textureUnit\",\"warned\",\"setTexture\",\"readRenderTargetPixels\",\"restore\",\"textureFormat\",\"IMPLEMENTATION_COLOR_READ_FORMAT\",\"IMPLEMENTATION_COLOR_READ_TYPE\",\"checkFramebufferStatus\",\"FRAMEBUFFER_COMPLETE\",\"readPixels\",\"copyFramebufferToTexture\",\"level\",\"copyTexImage2D\",\"copyTextureToTexture\",\"srcTexture\",\"dstTexture\",\"texSubImage2D\",\"Fog\",\"InterleavedBuffer\",\"InterleavedBufferAttribute\",\"interleavedBuffer\",\"Sprite\",\"LOD\",\"levels\",\"Skeleton\",\"boneInverses\",\"calculateInverses\",\"Bone\",\"SkinnedMesh\",\"bindMode\",\"bindMatrix\",\"bindMatrixInverse\",\"initBones\",\"normalizeSkinWeights\",\"linecap\",\"linejoin\",\"Line\",\"LineSegments\",\"LineLoop\",\"Points\",\"VideoTexture\",\"video\",\"CompressedTexture\",\"CanvasTexture\",\"DepthTexture\",\"WireframeGeometry\",\"ol\",\"edge\",\"edges\",\"ParametricGeometry\",\"func\",\"slices\",\"stacks\",\"ParametricBufferGeometry\",\"pu\",\"pv\",\"sliceCount\",\"PolyhedronGeometry\",\"detail\",\"PolyhedronBufferGeometry\",\"vertexBuffer\",\"uvBuffer\",\"subdivideFace\",\"cols\",\"aj\",\"bj\",\"rows\",\"pushVertex\",\"getVertexByIndex\",\"correctUV\",\"azimuth\",\"inclination\",\"subdivide\",\"appplyRadius\",\"centroid\",\"azi\",\"correctUVs\",\"correctSeam\",\"generateUVs\",\"TetrahedronGeometry\",\"TetrahedronBufferGeometry\",\"OctahedronGeometry\",\"OctahedronBufferGeometry\",\"IcosahedronGeometry\",\"IcosahedronBufferGeometry\",\"DodecahedronGeometry\",\"DodecahedronBufferGeometry\",\"TubeGeometry\",\"tubularSegments\",\"radialSegments\",\"closed\",\"taper\",\"bufferGeometry\",\"TubeBufferGeometry\",\"tangents\",\"binormals\",\"frames\",\"computeFrenetFrames\",\"P\",\"generateSegment\",\"getPointAt\",\"N\",\"B\",\"generateIndices\",\"generateBufferData\",\"TorusKnotGeometry\",\"tube\",\"heightScale\",\"TorusKnotBufferGeometry\",\"P1\",\"P2\",\"T\",\"calculatePositionOnCurve\",\"cu\",\"su\",\"quOverP\",\"cs\",\"TorusGeometry\",\"arc\",\"TorusBufferGeometry\",\"isGroup\",\"isPerspectiveCamera\",\"setFocalLength\",\"focalLength\",\"vExtentSlope\",\"getFilmHeight\",\"atan\",\"getFocalLength\",\"getEffectiveFOV\",\"getFilmWidth\",\"setViewOffset\",\"fullWidth\",\"fullHeight\",\"offsetX\",\"offsetY\",\"clearViewOffset\",\"skew\",\"isInterleavedBuffer\",\"intersectPoint\",\"worldScale\",\"mvPosition\",\"alignedPosition\",\"rotatedPosition\",\"viewWorldMatrix\",\"transformVertex\",\"vertexPosition\",\"addLevel\",\"getObjectForDistance\",\"matrixPosition\",\"bone\",\"isBone\",\"offsetMatrix\",\"identityMatrix\",\"getBoneByName\",\"gbone\",\"pos\",\"rotq\",\"scl\",\"sw\",\"vec\",\"skinWeight\",\"computeLineDistances\",\"positionAttribute\",\"linePrecision\",\"localPrecision\",\"localPrecisionSq\",\"vStart\",\"vEnd\",\"interSegment\",\"interRay\",\"nbVertices\",\"threshold\",\"params\",\"localThreshold\",\"localThresholdSq\",\"testPoint\",\"rayPointDistanceSq\",\"distanceToRay\",\"readyState\",\"HAVE_CURRENT_DATA\",\"isCanvasTexture\",\"Earcut\",\"holeIndices\",\"dim\",\"invSize\",\"hasHoles\",\"outerLen\",\"outerNode\",\"linkedList\",\"queue\",\"steiner\",\"getLeftmost\",\"compareX\",\"eliminateHole\",\"filterPoints\",\"eliminateHoles\",\"earcutLinked\",\"clockwise\",\"last\",\"sum\",\"signedArea\",\"insertNode\",\"removeNode\",\"again\",\"area\",\"prev\",\"ear\",\"pass\",\"zOrder\",\"prevZ\",\"nextZ\",\"tail\",\"numMerges\",\"pSize\",\"qSize\",\"inSize\",\"sortLinked\",\"indexCurve\",\"isEarHashed\",\"isEar\",\"cureLocalIntersections\",\"splitEarcut\",\"pointInTriangle\",\"minTX\",\"minTY\",\"maxTX\",\"maxTY\",\"locallyInside\",\"isValidDiagonal\",\"splitPolygon\",\"hole\",\"hx\",\"hy\",\"mx\",\"my\",\"tanMin\",\"findHoleBridge\",\"leftmost\",\"px\",\"py\",\"intersectsPolygon\",\"inside\",\"middleInside\",\"q2\",\"Node\",\"an\",\"bp\",\"ShapeUtils\",\"contour\",\"isClockWise\",\"pts\",\"triangulateShape\",\"holes\",\"removeDupEndPts\",\"addContour\",\"holeIndex\",\"forEach\",\"ExtrudeGeometry\",\"ExtrudeBufferGeometry\",\"verticesArray\",\"addShape\",\"placeholder\",\"curveSegments\",\"steps\",\"bevelEnabled\",\"bevelThickness\",\"bevelSize\",\"bevelSegments\",\"extrudePath\",\"uvgen\",\"UVGenerator\",\"WorldUVGenerator\",\"amount\",\"extrudePts\",\"splineTube\",\"binormal\",\"position2\",\"ahole\",\"hl\",\"extrudeByPath\",\"getSpacedPoints\",\"shapePoints\",\"extractPoints\",\"reverse\",\"concat\",\"scalePt2\",\"pt\",\"bs\",\"vert\",\"vlen\",\"flen\",\"getBevelVec\",\"inPt\",\"inPrev\",\"inNext\",\"v_trans_x\",\"v_trans_y\",\"shrink_by\",\"v_prev_x\",\"v_prev_y\",\"v_next_x\",\"v_next_y\",\"v_prev_lensq\",\"collinear0\",\"v_prev_len\",\"v_next_len\",\"ptPrevShift_x\",\"ptPrevShift_y\",\"sf\",\"v_trans_lensq\",\"direction_eq\",\"contourMovements\",\"oneHoleMovements\",\"holesMovements\",\"verticesMovements\",\"sidewalls\",\"layeroffset\",\"sl\",\"slen1\",\"slen2\",\"f4\",\"f3\",\"addVertex\",\"nextIndex\",\"generateTopUV\",\"addUV\",\"generateSideWallUV\",\"vector2\",\"buildLidFaces\",\"buildSideFaces\",\"indexA\",\"indexB\",\"indexC\",\"a_x\",\"a_y\",\"b_x\",\"b_y\",\"c_x\",\"c_y\",\"indexD\",\"a_z\",\"b_z\",\"c_z\",\"d_x\",\"d_y\",\"d_z\",\"TextGeometry\",\"text\",\"TextBufferGeometry\",\"font\",\"isFont\",\"generateShapes\",\"phiStart\",\"phiLength\",\"thetaStart\",\"thetaLength\",\"SphereBufferGeometry\",\"thetaEnd\",\"grid\",\"verticesRow\",\"RingGeometry\",\"innerRadius\",\"outerRadius\",\"thetaSegments\",\"phiSegments\",\"RingBufferGeometry\",\"segment\",\"radiusStep\",\"thetaSegmentLevel\",\"LatheGeometry\",\"segments\",\"LatheBufferGeometry\",\"base\",\"inverseSegments\",\"n1\",\"n2\",\"ShapeGeometry\",\"ShapeBufferGeometry\",\"shapeHole\",\"indexOffset\",\"shapeVertices\",\"shapeHoles\",\"toJSON$1\",\"EdgesGeometry\",\"thresholdAngle\",\"thresholdDot\",\"sourceVertices\",\"face1\",\"face2\",\"CylinderGeometry\",\"radiusTop\",\"radiusBottom\",\"openEnded\",\"indexArray\",\"generateCap\",\"centerIndexStart\",\"centerIndexEnd\",\"cosTheta\",\"sinTheta\",\"slope\",\"indexRow\",\"generateTorso\",\"ConeGeometry\",\"ConeBufferGeometry\",\"CircleGeometry\",\"CircleBufferGeometry\",\"Geometries\",\"freeze\",\"RawShaderMaterial\",\"STANDARD\",\"PHYSICAL\",\"TOON\",\"MATCAP\",\"fillStyle\",\"fillRect\",\"Materials\",\"Cache\",\"files\",\"file\",\"LoadingManager\",\"onLoad\",\"onProgress\",\"onError\",\"isLoading\",\"itemsLoaded\",\"itemsTotal\",\"urlModifier\",\"onStart\",\"itemStart\",\"itemEnd\",\"itemError\",\"resolveURL\",\"setURLModifier\",\"transform\",\"DefaultLoadingManager\",\"loading\",\"FileLoader\",\"manager\",\"CompressedTextureLoader\",\"_parser\",\"DataTextureLoader\",\"ImageLoader\",\"CubeTextureLoader\",\"TextureLoader\",\"Curve\",\"arcLengthDivisions\",\"EllipseCurve\",\"aX\",\"aY\",\"xRadius\",\"yRadius\",\"aStartAngle\",\"aEndAngle\",\"aClockwise\",\"aRotation\",\"ArcCurve\",\"aRadius\",\"CubicPoly\",\"c0\",\"initCatmullRom\",\"x3\",\"tension\",\"initNonuniformCatmullRom\",\"dt0\",\"dt1\",\"dt2\",\"t2\",\"calc\",\"load\",\"cached\",\"setTimeout\",\"dataUriRegexResult\",\"mimeType\",\"isBase64\",\"decodeURIComponent\",\"atob\",\"response\",\"responseType\",\"toLowerCase\",\"charCodeAt\",\"Blob\",\"parser\",\"DOMParser\",\"parseFromString\",\"request\",\"XMLHttpRequest\",\"header\",\"open\",\"callbacks\",\"status\",\"withCredentials\",\"overrideMimeType\",\"requestHeader\",\"setRequestHeader\",\"send\",\"setPath\",\"setResponseType\",\"setWithCredentials\",\"setMimeType\",\"loader\",\"loadTexture\",\"texDatas\",\"loaded\",\"mipmapCount\",\"isCubemap\",\"texData\",\"crossOrigin\",\"onImageLoad\",\"onImageError\",\"substr\",\"src\",\"setCrossOrigin\",\"urls\",\"isJPEG\",\"search\",\"getPoint\",\"optionalTarget\",\"getUtoTmapping\",\"getPoints\",\"divisions\",\"getLength\",\"lengths\",\"getLengths\",\"cacheArcLengths\",\"current\",\"updateArcLengths\",\"targetArcLength\",\"arcLengths\",\"comparison\",\"lengthBefore\",\"getTangent\",\"pt1\",\"getTangentAt\",\"mat\",\"MAX_VALUE\",\"tz\",\"fromJSON\",\"json\",\"isEllipseCurve\",\"twoPi\",\"deltaAngle\",\"samePoints\",\"isArcCurve\",\"pz\",\"CatmullRomCurve3\",\"curveType\",\"CatmullRom\",\"QuadraticBezier\",\"QuadraticBezierP0\",\"QuadraticBezierP1\",\"QuadraticBezierP2\",\"CubicBezier\",\"CubicBezierP0\",\"CubicBezierP1\",\"CubicBezierP2\",\"CubicBezierP3\",\"CubicBezierCurve\",\"v3\",\"CubicBezierCurve3\",\"LineCurve\",\"LineCurve3\",\"QuadraticBezierCurve\",\"QuadraticBezierCurve3\",\"SplineCurve\",\"isCatmullRomCurve3\",\"intPoint\",\"weight\",\"isCubicBezierCurve\",\"isCubicBezierCurve3\",\"isLineCurve\",\"isLineCurve3\",\"isQuadraticBezierCurve\",\"isQuadraticBezierCurve3\",\"isSplineCurve\",\"Curves\",\"CurvePath\",\"curves\",\"autoClose\",\"Path\",\"currentPoint\",\"Shape\",\"Light\",\"HemisphereLight\",\"LightShadow\",\"SpotLightShadow\",\"SpotLight\",\"power\",\"PointLight\",\"OrthographicCamera\",\"DirectionalLightShadow\",\"RectAreaLight\",\"curve\",\"closePath\",\"startPoint\",\"endPoint\",\"curveLengths\",\"getCurveLengths\",\"segmentLength\",\"lens\",\"cacheLengths\",\"sums\",\"resolution\",\"moveTo\",\"lineTo\",\"quadraticCurveTo\",\"aCPx\",\"aCPy\",\"bezierCurveTo\",\"aCP1x\",\"aCP1y\",\"aCP2x\",\"aCP2y\",\"splineThru\",\"absarc\",\"absellipse\",\"ellipse\",\"firstPoint\",\"lastPoint\",\"getPointsHoles\",\"holesPts\",\"isOrthographicCamera\",\"zoomW\",\"zoomH\",\"scaleW\",\"scaleH\",\"AnimationUtils\",\"arraySlice\",\"from\",\"to\",\"isTypedArray\",\"convertArray\",\"forceClone\",\"ArrayBuffer\",\"isView\",\"DataView\",\"getKeyframeOrder\",\"times\",\"sortedArray\",\"nValues\",\"srcOffset\",\"flattenJSON\",\"jsonKeys\",\"valuePropertyName\",\"Interpolant\",\"parameterPositions\",\"sampleValues\",\"sampleSize\",\"resultBuffer\",\"_cachedIndex\",\"valueSize\",\"CubicInterpolant\",\"_weightPrev\",\"_offsetPrev\",\"_weightNext\",\"_offsetNext\",\"LinearInterpolant\",\"DiscreteInterpolant\",\"KeyframeTrack\",\"interpolation\",\"TimeBufferType\",\"ValueBufferType\",\"setInterpolation\",\"DefaultInterpolation\",\"BooleanKeyframeTrack\",\"ColorKeyframeTrack\",\"NumberKeyframeTrack\",\"QuaternionLinearInterpolant\",\"QuaternionKeyframeTrack\",\"StringKeyframeTrack\",\"VectorKeyframeTrack\",\"AnimationClip\",\"duration\",\"tracks\",\"resetDuration\",\"parseKeyframeTrack\",\"trackType\",\"typeName\",\"getTrackTypeForValueTypeName\",\"MaterialLoader\",\"BufferGeometryLoader\",\"evaluate\",\"pp\",\"validate_interval\",\"seek\",\"linear_scan\",\"forward_scan\",\"giveUpAt\",\"afterEnd_\",\"t1global\",\"beforeStart_\",\"mid\",\"intervalChanged_\",\"interpolate_\",\"settings\",\"DefaultSettings_\",\"getSettings_\",\"copySampleValue_\",\"endingStart\",\"endingEnd\",\"iPrev\",\"iNext\",\"tPrev\",\"tNext\",\"halfDt\",\"o1\",\"o0\",\"oP\",\"oN\",\"wP\",\"wN\",\"ppp\",\"sP\",\"sN\",\"offset1\",\"offset0\",\"weight1\",\"weight0\",\"track\",\"getInterpolation\",\"ValueTypeName\",\"InterpolantFactoryMethodDiscrete\",\"getValueSize\",\"InterpolantFactoryMethodLinear\",\"InterpolantFactoryMethodSmooth\",\"factoryMethod\",\"createInterpolant\",\"shift\",\"timeOffset\",\"timeScale\",\"startTime\",\"endTime\",\"nKeys\",\"validate\",\"valid\",\"prevTime\",\"currTime\",\"optimize\",\"smoothInterpolation\",\"writeIndex\",\"keep\",\"offsetP\",\"offsetN\",\"readOffset\",\"writeOffset\",\"jsonTracks\",\"frameTime\",\"fps\",\"clip\",\"clipTracks\",\"CreateFromMorphTargetSequence\",\"morphTargetSequence\",\"noLoop\",\"numMorphTargets\",\"findByName\",\"objectOrClipArray\",\"clipArray\",\"animations\",\"CreateClipsFromMorphTargetSequences\",\"animationToMorphTargets\",\"pattern\",\"parts\",\"animationMorphTargets\",\"clips\",\"parseAnimation\",\"addNonemptyTrack\",\"trackName\",\"animationKeys\",\"propertyName\",\"destTracks\",\"clipName\",\"hierarchyTracks\",\"hierarchy\",\"morphTargetNames\",\"morphTargetName\",\"animationKey\",\"boneName\",\"setTextures\",\"getTexture\",\"shading\",\"typedArray\",\"TYPED_ARRAYS\",\"drawcalls\",\"offsets\",\"Loader\",\"Handlers\",\"handlers\",\"regex\",\"onLoadStart\",\"onLoadProgress\",\"onLoadComplete\",\"initMaterials\",\"texturePath\",\"createMaterial\",\"BlendingMode\",\"textureLoader\",\"materialLoader\",\"fullPath\",\"mapDiffuseRepeat\",\"mapDiffuseOffset\",\"mapDiffuseWrap\",\"mapDiffuseAnisotropy\",\"mapEmissiveRepeat\",\"mapEmissiveOffset\",\"mapEmissiveWrap\",\"mapEmissiveAnisotropy\",\"mapLightRepeat\",\"mapLightOffset\",\"mapLightWrap\",\"mapLightAnisotropy\",\"mapAORepeat\",\"mapAOOffset\",\"mapAOWrap\",\"mapAOAnisotropy\",\"mapBumpRepeat\",\"mapBumpOffset\",\"mapBumpWrap\",\"mapBumpAnisotropy\",\"mapNormalRepeat\",\"mapNormalOffset\",\"mapNormalWrap\",\"mapNormalAnisotropy\",\"mapSpecularRepeat\",\"mapSpecularOffset\",\"mapSpecularWrap\",\"mapSpecularAnisotropy\",\"mapMetalnessRepeat\",\"mapMetalnessOffset\",\"mapMetalnessWrap\",\"mapMetalnessAnisotropy\",\"mapRoughnessRepeat\",\"mapRoughnessOffset\",\"mapRoughnessWrap\",\"mapRoughnessAnisotropy\",\"mapAlphaRepeat\",\"mapAlphaOffset\",\"mapAlphaWrap\",\"mapAlphaAnisotropy\",\"LoaderUtils\",\"decodeText\",\"TextDecoder\",\"decode\",\"fromCharCode\",\"escape\",\"extractUrlBase\",\"lastIndexOf\",\"JSONLoader\",\"ObjectLoader\",\"setResourcePath\",\"resourcePath\",\"isBitSet\",\"fi\",\"zLength\",\"colorIndex\",\"normalIndex\",\"uvIndex\",\"isQuad\",\"hasMaterial\",\"faceA\",\"faceB\",\"uvLayer\",\"nUvLayers\",\"parseModel\",\"influencesPerVertex\",\"parseSkin\",\"dstVertices\",\"srcVertices\",\"morphColors\",\"parseMorphing\",\"outputAnimations\",\"morphAnimationClips\",\"parseAnimations\",\"substring\",\"setTexturePath\",\"parseShape\",\"parseGeometries\",\"parseImages\",\"parseTextures\",\"parseMaterials\",\"parseObject\",\"geometryLoader\",\"bufferGeometryLoader\",\"details\",\"geometryShapes\",\"loadImage\",\"currentUrl\",\"parseConstant\",\"TEXTURE_MAPPING\",\"TEXTURE_WRAPPING\",\"TEXTURE_FILTER\",\"getGeometry\",\"getMaterial\",\"UVMapping\",\"ImageBitmapLoader\",\"createImageBitmap\",\"fetch\",\"ShapePath\",\"subPaths\",\"currentPath\",\"Font\",\"createPath\",\"char\",\"glyph\",\"glyphs\",\"cpx\",\"cpy\",\"cpx1\",\"cpy1\",\"cpx2\",\"cpy2\",\"outline\",\"_cachedOutline\",\"ha\",\"FontLoader\",\"setOptions\",\"res\",\"blob\",\"imageBitmap\",\"catch\",\"toShapes\",\"isCCW\",\"noHoles\",\"toShapesNoHoles\",\"inSubpaths\",\"tmpPath\",\"tmpShape\",\"isPointInsidePolygon\",\"inPolygon\",\"polyLen\",\"edgeLowPt\",\"edgeHighPt\",\"edgeDx\",\"edgeDy\",\"perpEdge\",\"solid\",\"holesFirst\",\"tmpPoints\",\"tmpHoles\",\"betterShapeHoles\",\"newShapes\",\"newShapeHoles\",\"mainIdx\",\"ambiguous\",\"toChange\",\"sIdx\",\"sLen\",\"sho\",\"hIdx\",\"ho\",\"hole_unassigned\",\"s2Idx\",\"froms\",\"tos\",\"paths\",\"chars\",\"line_height\",\"yMax\",\"yMin\",\"underlineThickness\",\"ret\",\"createPaths\",\"AudioContext\",\"webkitAudioContext\",\"AudioLoader\",\"StereoCamera\",\"eyeSep\",\"CubeCamera\",\"cubeResolution\",\"cameraPX\",\"cameraNX\",\"cameraPY\",\"cameraNY\",\"cameraPZ\",\"cameraNZ\",\"AudioListener\",\"gain\",\"createGain\",\"connect\",\"destination\",\"Audio\",\"getInput\",\"autoplay\",\"loop\",\"playbackRate\",\"isPlaying\",\"hasPlaybackControl\",\"sourceType\",\"filters\",\"PositionalAudio\",\"panner\",\"createPanner\",\"AudioAnalyser\",\"audio\",\"fftSize\",\"analyser\",\"createAnalyser\",\"frequencyBinCount\",\"getOutput\",\"PropertyMixer\",\"binding\",\"mixFunction\",\"_slerp\",\"_select\",\"_lerp\",\"_mixBufferRegion\",\"cumulativeWeight\",\"useCount\",\"referenceCount\",\"bufferCopy\",\"decodeAudioData\",\"audioBuffer\",\"instance\",\"eyeRight\",\"eyeLeft\",\"xmin\",\"xmax\",\"eyeSepOnProjection\",\"ymax\",\"removeFilter\",\"disconnect\",\"getFilter\",\"setFilter\",\"getMasterVolume\",\"setMasterVolume\",\"setTargetAtTime\",\"currentTime\",\"positionX\",\"setValueAtTime\",\"positionY\",\"positionZ\",\"forwardX\",\"forwardY\",\"forwardZ\",\"upX\",\"upY\",\"upZ\",\"setOrientation\",\"setNodeSource\",\"audioNode\",\"setMediaElementSource\",\"mediaElement\",\"createMediaElementSource\",\"setBuffer\",\"play\",\"createBufferSource\",\"onended\",\"onEnded\",\"pause\",\"getFilters\",\"setFilters\",\"setPlaybackRate\",\"getPlaybackRate\",\"getLoop\",\"setLoop\",\"getVolume\",\"setVolume\",\"getRefDistance\",\"refDistance\",\"setRefDistance\",\"getRolloffFactor\",\"rolloffFactor\",\"setRolloffFactor\",\"getDistanceModel\",\"distanceModel\",\"setDistanceModel\",\"getMaxDistance\",\"setMaxDistance\",\"setDirectionalCone\",\"coneInnerAngle\",\"coneOuterAngle\",\"coneOuterGain\",\"getFrequencyData\",\"getByteFrequencyData\",\"getAverageFrequency\",\"accumulate\",\"accuIndex\",\"currentWeight\",\"mix\",\"originalValueOffset\",\"saveOriginalState\",\"getValue\",\"restoreOriginalState\",\"lineGeometry\",\"coneGeometry\",\"Composite\",\"targetGroup\",\"optionalParsedPath\",\"parsedPath\",\"PropertyBinding\",\"parseTrackName\",\"_targetGroup\",\"_bindings\",\"subscribe_\",\"rootNode\",\"findNode\",\"nodeName\",\"AnimationObjectGroup\",\"nCachedObjects_\",\"_indicesByUUID\",\"_paths\",\"_parsedPaths\",\"_bindingsIndicesByPath\",\"stats\",\"total\",\"inUse\",\"bindingsPerObject\",\"AnimationAction\",\"mixer\",\"localRoot\",\"_mixer\",\"_clip\",\"_localRoot\",\"nTracks\",\"interpolants\",\"interpolantSettings\",\"interpolant\",\"_interpolantSettings\",\"_interpolants\",\"_propertyBindings\",\"_cacheIndex\",\"_byClipCacheIndex\",\"_timeScaleInterpolant\",\"_weightInterpolant\",\"_loopCount\",\"_startTime\",\"_effectiveTimeScale\",\"_effectiveWeight\",\"repetitions\",\"paused\",\"clampWhenFinished\",\"zeroSlopeAtStart\",\"zeroSlopeAtEnd\",\"AnimationMixer\",\"root\",\"_root\",\"_initMemoryManager\",\"_accuIndex\",\"Uniform\",\"InstancedBufferGeometry\",\"InstancedInterleavedBuffer\",\"InstancedBufferAttribute\",\"Raycaster\",\"PointCloud\",\"ascSort\",\"intersectObject\",\"Clock\",\"autoStart\",\"oldTime\",\"elapsedTime\",\"running\",\"Spherical\",\"Cylindrical\",\"Box2\",\"Line3\",\"ImmediateRenderObject\",\"VertexNormalsHelper\",\"nNormals\",\"objGeometry\",\"SpotLightHelper\",\"cone\",\"SkeletonHelper\",\"getBoneList\",\"boneList\",\"PointLightHelper\",\"sphereSize\",\"RectAreaLightHelper\",\"HemisphereLightHelper\",\"GridHelper\",\"PolarGridHelper\",\"radials\",\"circles\",\"FaceNormalsHelper\",\"DirectionalLightHelper\",\"lightPlane\",\"targetLine\",\"CameraHelper\",\"pointMap\",\"colorFrustum\",\"colorCone\",\"colorUp\",\"colorTarget\",\"colorCross\",\"addLine\",\"addPoint\",\"BoxHelper\",\"Box3Helper\",\"PlaneHelper\",\"ArrowHelper\",\"headLength\",\"headWidth\",\"setDirection\",\"AxesHelper\",\"firstValidIndex\",\"bindings\",\"unbind\",\"isAnimationObjectGroup\",\"sanitizeNodeName\",\"reservedRe\",\"RegExp\",\"wordChar\",\"wordCharOrDot\",\"directoryRe\",\"nodeRe\",\"objectRe\",\"propertyRe\",\"trackRe\",\"supportedObjectNames\",\"matches\",\"results\",\"objectName\",\"objectIndex\",\"propertyIndex\",\"lastDot\",\"subTreeNode\",\"searchNodeSubtree\",\"childNode\",\"_getValue_unavailable\",\"_setValue_unavailable\",\"BindingType\",\"Direct\",\"EntireArray\",\"ArrayElement\",\"HasFromToArray\",\"Versioning\",\"None\",\"NeedsUpdate\",\"MatrixWorldNeedsUpdate\",\"GetterByBindingType\",\"resolvedProperty\",\"SetterByBindingTypeAndVersioning\",\"targetObject\",\"dest\",\"targetArray\",\"sourceArray\",\"nodeProperty\",\"versioning\",\"bindingType\",\"_getValue_unbound\",\"_setValue_unbound\",\"nObjects\",\"nCachedObjects\",\"indicesByUUID\",\"parsedPaths\",\"nBindings\",\"knownObject\",\"firstActiveIndex\",\"lastCachedObject\",\"bindingsForPath\",\"lastCached\",\"lastCachedIndex\",\"firstActiveObject\",\"firstActive\",\"uncache\",\"lastObject\",\"indicesByPath\",\"unsubscribe_\",\"lastBindingsIndex\",\"lastBindings\",\"_activateAction\",\"_deactivateAction\",\"stopFading\",\"stopWarping\",\"isRunning\",\"_isActiveAction\",\"isScheduled\",\"startAt\",\"setEffectiveWeight\",\"getEffectiveWeight\",\"fadeIn\",\"_scheduleFading\",\"fadeOut\",\"crossFadeFrom\",\"fadeOutAction\",\"warp\",\"fadeInDuration\",\"fadeOutDuration\",\"startEndRatio\",\"endStartRatio\",\"crossFadeTo\",\"fadeInAction\",\"weightInterpolant\",\"_takeBackControlInterpolant\",\"setEffectiveTimeScale\",\"getEffectiveTimeScale\",\"setDuration\",\"syncWith\",\"action\",\"halt\",\"startTimeScale\",\"endTimeScale\",\"now\",\"_lendControlInterpolant\",\"timeScaleInterpolant\",\"getMixer\",\"getClip\",\"getRoot\",\"_update\",\"deltaTime\",\"timeDirection\",\"timeRunning\",\"_updateTimeScale\",\"clipTime\",\"_updateTime\",\"_updateWeight\",\"propertyMixers\",\"interpolantValue\",\"loopCount\",\"pingPong\",\"_setEndings\",\"handle_stop\",\"loopDelta\",\"pending\",\"atStart\",\"atEnd\",\"weightNow\",\"weightThen\",\"_bindAction\",\"prototypeAction\",\"rootUuid\",\"bindingsByRoot\",\"_bindingsByRootAndName\",\"bindingsByName\",\"_addInactiveBinding\",\"clipUuid\",\"actionsForClip\",\"_actionsByClip\",\"knownActions\",\"_addInactiveAction\",\"_lendBinding\",\"_lendAction\",\"_takeBackBinding\",\"_takeBackAction\",\"_actions\",\"_nActiveActions\",\"_nActiveBindings\",\"_controlInterpolants\",\"_nActiveControlInterpolants\",\"actions\",\"controlInterpolants\",\"actionsByClip\",\"actionByRoot\",\"_removeInactiveAction\",\"lastInactiveAction\",\"cacheIndex\",\"knownActionsForClip\",\"lastKnownAction\",\"byClipCacheIndex\",\"_removeInactiveBindingsForAction\",\"_removeInactiveBinding\",\"prevIndex\",\"lastActiveIndex\",\"firstInactiveAction\",\"firstInactiveIndex\",\"lastActiveAction\",\"bindingByName\",\"propBinding\",\"lastInactiveBinding\",\"remove_empty_map\",\"_\",\"firstInactiveBinding\",\"lastActiveBinding\",\"_controlInterpolantsResultBuffer\",\"__cacheIndex\",\"lastActiveInterpolant\",\"clipAction\",\"optionalRoot\",\"clipObject\",\"existingAction\",\"newAction\",\"stopAllAction\",\"nActions\",\"uncacheClip\",\"actionsToRemove\",\"uncacheRoot\",\"uncacheAction\",\"setFromCamera\",\"coords\",\"intersectObjects\",\"performance\",\"Date\",\"getElapsedTime\",\"getDelta\",\"newTime\",\"other\",\"makeSafe\",\"setFromCartesianCoords\",\"distanceSq\",\"closestPointToPointParameter\",\"startP\",\"startEnd\",\"clampToLine\",\"startEnd2\",\"objPos\",\"objNorm\",\"coneLength\",\"coneWidth\",\"boneMatrix\",\"matrixWorldInv\",\"setPoint\",\"setColor\",\"ClosedSplineCurve3\",\"SplineCurve3\",\"Spline\",\"construct\",\"createPointsGeometry\",\"createGeometry\",\"createSpacedPointsGeometry\",\"fromPoints\",\"initFromArray\",\"getControlPointsArray\",\"reparametrizeByArcLength\",\"setColors\",\"isIntersectionBox\",\"isIntersectionSphere\",\"random16\",\"nearestPowerOfTwo\",\"nextPowerOfTwo\",\"flattenToArrayOffset\",\"multiplyVector3\",\"multiplyVector3Array\",\"applyToBuffer\",\"applyToVector3Array\",\"extractPosition\",\"getPosition\",\"multiplyToArray\",\"multiplyVector4\",\"rotateAxis\",\"crossVector\",\"rotateByAxis\",\"makeFrustum\",\"isIntersectionLine\",\"isIntersectionPlane\",\"barycoordFromPoint\",\"midpoint\",\"extractAllPoints\",\"extrude\",\"makeGeometry\",\"fromAttribute\",\"distanceToManhattan\",\"lengthManhattan\",\"setEulerFromRotationMatrix\",\"setEulerFromQuaternion\",\"getPositionFromMatrix\",\"getScaleFromMatrix\",\"getColumnFromMatrix\",\"applyProjection\",\"computeTangents\",\"getChildByName\",\"renderDepth\",\"getWorldRotation\",\"eulerOrder\",\"useQuaternion\",\"setLens\",\"onlyShadow\",\"shadowCameraFov\",\"shadowCameraLeft\",\"shadowCameraRight\",\"shadowCameraTop\",\"shadowCameraBottom\",\"shadowCameraVisible\",\"shadowDarkness\",\"shadowMapWidth\",\"shadowMapHeight\",\"copyIndicesArray\",\"addIndex\",\"addDrawCall\",\"clearDrawCalls\",\"computeOffsets\",\"getArrays\",\"addShapeList\",\"wrapAround\",\"wrapRGB\",\"metal\",\"clearTarget\",\"getCurrentRenderTarget\",\"getPrecision\",\"resetGLState\",\"supportsFloatTextures\",\"supportsHalfFloatTextures\",\"supportsStandardDerivatives\",\"supportsCompressedTextureS3TC\",\"supportsCompressedTexturePVRTC\",\"supportsBlendMinMax\",\"supportsInstancedArrays\",\"enableScissorTest\",\"addPrePlugin\",\"addPostPlugin\",\"updateShadowMap\",\"setFaceCulling\",\"shadowMapCullFace\",\"renderReverseSided\",\"renderSingleSided\",\"standing\",\"getData\",\"updateCubeMap\",\"GeometryUtils\",\"geometry1\",\"loadTextureCube\",\"loadCompressedTexture\",\"loadCompressedTextureCube\",\"SceneUtils\",\"createMultiMaterialObject\",\"detach\",\"attach\",\"MOUSE\",\"LEFT\",\"MIDDLE\",\"RIGHT\",\"CullFaceFrontBack\",\"FrontFaceDirectionCW\",\"FrontFaceDirectionCCW\",\"BasicShadowMap\",\"FlatShading\",\"SmoothShading\",\"LoopOnce\",\"LoopPingPong\",\"InterpolateDiscrete\",\"InterpolateLinear\",\"InterpolateSmooth\",\"ZeroSlopeEnding\",\"WrapAroundEnding\",\"LogLuvEncoding\",\"Face4\",\"LineStrip\",\"LinePieces\",\"MeshFaceMaterial\",\"MultiMaterial\",\"Particle\",\"ParticleSystem\",\"PointCloudMaterial\",\"ParticleBasicMaterial\",\"ParticleSystemMaterial\",\"Vertex\",\"DynamicBufferAttribute\",\"Int8Attribute\",\"Uint8Attribute\",\"Uint8ClampedAttribute\",\"Int16Attribute\",\"Uint16Attribute\",\"Int32Attribute\",\"Uint32Attribute\",\"Float32Attribute\",\"Float64Attribute\",\"AxisHelper\",\"BoundingBoxHelper\",\"EdgesHelper\",\"WireframeHelper\",\"XHRLoader\",\"BinaryTextureLoader\",\"Projector\",\"projectVector\",\"unprojectVector\",\"pickingRay\",\"CanvasRenderer\",\"LensFlare\",\"minZoom\",\"maxZoom\",\"minPolarAngle\",\"minAzimuthAngle\",\"maxAzimuthAngle\",\"enableZoom\",\"zoomSpeed\",\"enableRotate\",\"rotateSpeed\",\"enablePan\",\"panSpeed\",\"keyPanSpeed\",\"autoRotate\",\"autoRotateSpeed\",\"enableKeys\",\"UP\",\"BOTTOM\",\"mouseButtons\",\"target0\",\"position0\",\"zoom0\",\"getPolarAngle\",\"spherical\",\"getAzimuthalAngle\",\"saveState\",\"changeEvent\",\"STATE\",\"NONE\",\"quat\",\"quatInverse\",\"lastPosition\",\"lastQuaternion\",\"rotateLeft\",\"sphericalDelta\",\"panOffset\",\"zoomChanged\",\"EPS\",\"onContextMenu\",\"onMouseDown\",\"onMouseWheel\",\"onTouchStart\",\"onTouchEnd\",\"onTouchMove\",\"onMouseMove\",\"onMouseUp\",\"onKeyDown\",\"startEvent\",\"endEvent\",\"ROTATE\",\"DOLLY\",\"PAN\",\"TOUCH_ROTATE\",\"TOUCH_DOLLY_PAN\",\"rotateStart\",\"rotateEnd\",\"rotateDelta\",\"panStart\",\"panEnd\",\"panDelta\",\"dollyStart\",\"dollyEnd\",\"dollyDelta\",\"getZoomScale\",\"rotateUp\",\"panLeft\",\"objectMatrix\",\"panUp\",\"pan\",\"deltaX\",\"deltaY\",\"targetDistance\",\"clientHeight\",\"clientWidth\",\"dollyIn\",\"dollyScale\",\"dollyOut\",\"handleMouseDownPan\",\"clientX\",\"clientY\",\"button\",\"ctrlKey\",\"metaKey\",\"handleMouseDownRotate\",\"handleMouseDownDolly\",\"handleMouseMoveRotate\",\"handleMouseMoveDolly\",\"handleMouseMovePan\",\"stopPropagation\",\"handleMouseWheel\",\"keyCode\",\"handleKeyDown\",\"touches\",\"pageX\",\"pageY\",\"handleTouchStartRotate\",\"handleTouchStartDollyPan\",\"handleTouchMoveRotate\",\"handleTouchMoveDollyPan\",\"noZoom\",\"noRotate\",\"noPan\",\"noKeys\",\"staticMoving\",\"dynamicDampingFactor\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"\\r\\nimport './three.js';\\r\\nimport './OrbitControls';\\r\\nimport './WebGL';\\r\\n\\r\\nif (WEBGL.isWebGLAvailable() === false) {\\r\\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\\r\\n}\\r\\nvar camera, controls, scene, renderer;\\r\\ninit();\\r\\n//render(); // remove when using next line for animation loop (requestAnimationFrame)\\r\\nanimate();\\r\\n\\r\\n\\r\\nfunction init() {\\r\\n    scene = new THREE.Scene();\\r\\n    scene.background = new THREE.Color(0xffffff);\\r\\n    scene.fog = new THREE.FogExp2(0xcccccc, 0.002);\\r\\n    renderer = new THREE.WebGLRenderer({antialias: true});\\r\\n    renderer.setPixelRatio(window.devicePixelRatio);\\r\\n    renderer.setSize(window.innerWidth, window.innerHeight);\\r\\n    document.body.appendChild(renderer.domElement);\\r\\n    camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 1000);\\r\\n    camera.position.set(-170, 170, 40);\\r\\n\\r\\n    // controls\\r\\n    controls = new THREE.OrbitControls(camera, renderer.domElement);\\r\\n\\r\\n\\r\\n    //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\\r\\n    controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\\r\\n    controls.dampingFactor = 0.25;\\r\\n    controls.screenSpacePanning = false;\\r\\n    controls.minDistance = 10;\\r\\n    controls.maxDistance = 50;\\r\\n    controls.maxPolarAngle = Math.PI / 2;\\r\\n\\r\\n\\r\\n    // world\\r\\n    var geometryCylinder = new THREE.CylinderBufferGeometry(0, 10, 30, 4, 1);\\r\\n    var geometrySphere = new THREE.SphereGeometry(4, Math.random() * 12, Math.random() * 12);\\r\\n    var geometryCube = new THREE.CubeGeometry(4, 4, 4);\\r\\n    // geometryCube.scale(10,10,10);\\r\\n    var material = new THREE.MeshPhongMaterial({color: 0xffffff, flatShading: true});\\r\\n\\r\\n\\r\\n    var createBtn = document.querySelector(\\\".create\\\");\\r\\n    var selectInput = document.querySelector(\\\"#figure-type\\\");\\r\\n    var selectOptions = {\\r\\n        cube: 'cube',\\r\\n        sphere: 'sphere',\\r\\n        pyramid: 'pyramid'\\r\\n    };\\r\\n    var scaleInput = document.querySelector(\\\"#scale\\\");\\r\\n    var idList = document.querySelector(\\\".list\\\");\\r\\n    var listItems = document.querySelectorAll('.list-item');\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    createBtn.addEventListener(\\\"click\\\", function (e) {\\r\\n        e.preventDefault();\\r\\n        var mesh;\\r\\n\\r\\n        if (selectInput.value === selectOptions.cube) {\\r\\n            if(scaleInput.value) {\\r\\n                geometryCube.scale(scaleInput.value,scaleInput.value,scaleInput.value);\\r\\n                scaleInput.value=1;\\r\\n            }\\r\\n\\r\\n            mesh = new THREE.Mesh(geometryCube, material);\\r\\n\\r\\n        }\\r\\n        else if (selectInput.value === selectOptions.sphere) {\\r\\n            if(scaleInput.value) {\\r\\n                geometrySphere.scale(scaleInput.value,scaleInput.value,scaleInput.value);\\r\\n                scaleInput.value=1;\\r\\n            }\\r\\n            mesh = new THREE.Mesh(geometrySphere, material);\\r\\n        }\\r\\n        else  {\\r\\n            if(scaleInput.value) {\\r\\n                geometryCylinder.scale(scaleInput.value,scaleInput.value,scaleInput.value);\\r\\n                scaleInput.value=1;\\r\\n            }\\r\\n            mesh = new THREE.Mesh(geometryCylinder, material);\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        // mesh.position.x = Math.random() * 1600 - 800;\\r\\n        // mesh.position.y = 0;\\r\\n        // mesh.position.z = Math.random() * 1600 - 800;\\r\\n        mesh.position.x = Math.random() * 300;\\r\\n        mesh.position.y = 0;\\r\\n        mesh.position.z = Math.random() * 300;\\r\\n        mesh.updateMatrix();\\r\\n        mesh.matrixAutoUpdate = false;\\r\\n        scene.add(mesh);\\r\\n        var listItem = document.createElement(\\\"li\\\");\\r\\n        listItem.setAttribute('id', mesh.uuid);\\r\\n        listItem.innerHTML = '<span>' + mesh.uuid + '</span>' + '<div class=\\\"close\\\">X</div>';\\r\\n        idList.appendChild(listItem);\\r\\n\\r\\n        (function(){\\r\\n            listItems = document.querySelectorAll('.list li');\\r\\n            listItems[listItems.length - 1].querySelector('.close').addEventListener('click', function () {\\r\\n                this.parentElement.remove();\\r\\n                scene.remove(mesh);\\r\\n            })\\r\\n        })();\\r\\n    });\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // lights\\r\\n    var light = new THREE.DirectionalLight(0xffffff);\\r\\n    light.position.set(1, 1, 1);\\r\\n    scene.add(light);\\r\\n    var light = new THREE.DirectionalLight(0x002288);\\r\\n    light.position.set(-1, -1, -1);\\r\\n    scene.add(light);\\r\\n    var light = new THREE.AmbientLight(0x222222);\\r\\n    scene.add(light);\\r\\n    //\\r\\n    window.addEventListener('resize', onWindowResize, false);\\r\\n}\\r\\n\\r\\n\\r\\nfunction onWindowResize() {\\r\\n    camera.aspect = window.innerWidth / window.innerHeight;\\r\\n    camera.updateProjectionMatrix();\\r\\n    renderer.setSize(window.innerWidth, window.innerHeight);\\r\\n}\\r\\n\\r\\nfunction animate() {\\r\\n    requestAnimationFrame(animate);\\r\\n    controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\\r\\n    render();\\r\\n}\\r\\n\\r\\nfunction render() {\\r\\n    renderer.render(scene, camera);\\r\\n}\\r\\n\",\"(function (global, factory) {\\r\\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\r\\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\\r\\n            (factory((global.THREE = {})));\\r\\n}(this, (function (exports) { 'use strict';\\r\\n\\r\\n    // Polyfills\\r\\n\\r\\n    if ( Number.EPSILON === undefined ) {\\r\\n\\r\\n        Number.EPSILON = Math.pow( 2, - 52 );\\r\\n\\r\\n    }\\r\\n\\r\\n    if ( Number.isInteger === undefined ) {\\r\\n\\r\\n        // Missing in IE\\r\\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\\r\\n\\r\\n        Number.isInteger = function ( value ) {\\r\\n\\r\\n            return typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    if ( Math.sign === undefined ) {\\r\\n\\r\\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\\r\\n\\r\\n        Math.sign = function ( x ) {\\r\\n\\r\\n            return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    if ( 'name' in Function.prototype === false ) {\\r\\n\\r\\n        // Missing in IE\\r\\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\\r\\n\\r\\n        Object.defineProperty( Function.prototype, 'name', {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this.toString().match( /^\\\\s*function\\\\s*([^\\\\(\\\\s]*)/ )[ 1 ];\\r\\n\\r\\n            }\\r\\n\\r\\n        } );\\r\\n\\r\\n    }\\r\\n\\r\\n    if ( Object.assign === undefined ) {\\r\\n\\r\\n        // Missing in IE\\r\\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\r\\n\\r\\n        ( function () {\\r\\n\\r\\n            Object.assign = function ( target ) {\\r\\n\\r\\n                if ( target === undefined || target === null ) {\\r\\n\\r\\n                    throw new TypeError( 'Cannot convert undefined or null to object' );\\r\\n\\r\\n                }\\r\\n\\r\\n                var output = Object( target );\\r\\n\\r\\n                for ( var index = 1; index < arguments.length; index ++ ) {\\r\\n\\r\\n                    var source = arguments[ index ];\\r\\n\\r\\n                    if ( source !== undefined && source !== null ) {\\r\\n\\r\\n                        for ( var nextKey in source ) {\\r\\n\\r\\n                            if ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\\r\\n\\r\\n                                output[ nextKey ] = source[ nextKey ];\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return output;\\r\\n\\r\\n            };\\r\\n\\r\\n        } )();\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * https://github.com/mrdoob/eventdispatcher.js/\\r\\n     */\\r\\n\\r\\n    function EventDispatcher() {}\\r\\n\\r\\n    Object.assign( EventDispatcher.prototype, {\\r\\n\\r\\n        addEventListener: function ( type, listener ) {\\r\\n\\r\\n            if ( this._listeners === undefined ) this._listeners = {};\\r\\n\\r\\n            var listeners = this._listeners;\\r\\n\\r\\n            if ( listeners[ type ] === undefined ) {\\r\\n\\r\\n                listeners[ type ] = [];\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( listeners[ type ].indexOf( listener ) === - 1 ) {\\r\\n\\r\\n                listeners[ type ].push( listener );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        hasEventListener: function ( type, listener ) {\\r\\n\\r\\n            if ( this._listeners === undefined ) return false;\\r\\n\\r\\n            var listeners = this._listeners;\\r\\n\\r\\n            return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\\r\\n\\r\\n        },\\r\\n\\r\\n        removeEventListener: function ( type, listener ) {\\r\\n\\r\\n            if ( this._listeners === undefined ) return;\\r\\n\\r\\n            var listeners = this._listeners;\\r\\n            var listenerArray = listeners[ type ];\\r\\n\\r\\n            if ( listenerArray !== undefined ) {\\r\\n\\r\\n                var index = listenerArray.indexOf( listener );\\r\\n\\r\\n                if ( index !== - 1 ) {\\r\\n\\r\\n                    listenerArray.splice( index, 1 );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        dispatchEvent: function ( event ) {\\r\\n\\r\\n            if ( this._listeners === undefined ) return;\\r\\n\\r\\n            var listeners = this._listeners;\\r\\n            var listenerArray = listeners[ event.type ];\\r\\n\\r\\n            if ( listenerArray !== undefined ) {\\r\\n\\r\\n                event.target = this;\\r\\n\\r\\n                var array = listenerArray.slice( 0 );\\r\\n\\r\\n                for ( var i = 0, l = array.length; i < l; i ++ ) {\\r\\n\\r\\n                    array[ i ].call( this, event );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    var REVISION = '97';\\r\\n    var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\\r\\n    var CullFaceNone = 0;\\r\\n    var CullFaceBack = 1;\\r\\n    var CullFaceFront = 2;\\r\\n    var CullFaceFrontBack = 3;\\r\\n    var FrontFaceDirectionCW = 0;\\r\\n    var FrontFaceDirectionCCW = 1;\\r\\n    var BasicShadowMap = 0;\\r\\n    var PCFShadowMap = 1;\\r\\n    var PCFSoftShadowMap = 2;\\r\\n    var FrontSide = 0;\\r\\n    var BackSide = 1;\\r\\n    var DoubleSide = 2;\\r\\n    var FlatShading = 1;\\r\\n    var SmoothShading = 2;\\r\\n    var NoColors = 0;\\r\\n    var FaceColors = 1;\\r\\n    var VertexColors = 2;\\r\\n    var NoBlending = 0;\\r\\n    var NormalBlending = 1;\\r\\n    var AdditiveBlending = 2;\\r\\n    var SubtractiveBlending = 3;\\r\\n    var MultiplyBlending = 4;\\r\\n    var CustomBlending = 5;\\r\\n    var AddEquation = 100;\\r\\n    var SubtractEquation = 101;\\r\\n    var ReverseSubtractEquation = 102;\\r\\n    var MinEquation = 103;\\r\\n    var MaxEquation = 104;\\r\\n    var ZeroFactor = 200;\\r\\n    var OneFactor = 201;\\r\\n    var SrcColorFactor = 202;\\r\\n    var OneMinusSrcColorFactor = 203;\\r\\n    var SrcAlphaFactor = 204;\\r\\n    var OneMinusSrcAlphaFactor = 205;\\r\\n    var DstAlphaFactor = 206;\\r\\n    var OneMinusDstAlphaFactor = 207;\\r\\n    var DstColorFactor = 208;\\r\\n    var OneMinusDstColorFactor = 209;\\r\\n    var SrcAlphaSaturateFactor = 210;\\r\\n    var NeverDepth = 0;\\r\\n    var AlwaysDepth = 1;\\r\\n    var LessDepth = 2;\\r\\n    var LessEqualDepth = 3;\\r\\n    var EqualDepth = 4;\\r\\n    var GreaterEqualDepth = 5;\\r\\n    var GreaterDepth = 6;\\r\\n    var NotEqualDepth = 7;\\r\\n    var MultiplyOperation = 0;\\r\\n    var MixOperation = 1;\\r\\n    var AddOperation = 2;\\r\\n    var NoToneMapping = 0;\\r\\n    var LinearToneMapping = 1;\\r\\n    var ReinhardToneMapping = 2;\\r\\n    var Uncharted2ToneMapping = 3;\\r\\n    var CineonToneMapping = 4;\\r\\n    var UVMapping = 300;\\r\\n    var CubeReflectionMapping = 301;\\r\\n    var CubeRefractionMapping = 302;\\r\\n    var EquirectangularReflectionMapping = 303;\\r\\n    var EquirectangularRefractionMapping = 304;\\r\\n    var SphericalReflectionMapping = 305;\\r\\n    var CubeUVReflectionMapping = 306;\\r\\n    var CubeUVRefractionMapping = 307;\\r\\n    var RepeatWrapping = 1000;\\r\\n    var ClampToEdgeWrapping = 1001;\\r\\n    var MirroredRepeatWrapping = 1002;\\r\\n    var NearestFilter = 1003;\\r\\n    var NearestMipMapNearestFilter = 1004;\\r\\n    var NearestMipMapLinearFilter = 1005;\\r\\n    var LinearFilter = 1006;\\r\\n    var LinearMipMapNearestFilter = 1007;\\r\\n    var LinearMipMapLinearFilter = 1008;\\r\\n    var UnsignedByteType = 1009;\\r\\n    var ByteType = 1010;\\r\\n    var ShortType = 1011;\\r\\n    var UnsignedShortType = 1012;\\r\\n    var IntType = 1013;\\r\\n    var UnsignedIntType = 1014;\\r\\n    var FloatType = 1015;\\r\\n    var HalfFloatType = 1016;\\r\\n    var UnsignedShort4444Type = 1017;\\r\\n    var UnsignedShort5551Type = 1018;\\r\\n    var UnsignedShort565Type = 1019;\\r\\n    var UnsignedInt248Type = 1020;\\r\\n    var AlphaFormat = 1021;\\r\\n    var RGBFormat = 1022;\\r\\n    var RGBAFormat = 1023;\\r\\n    var LuminanceFormat = 1024;\\r\\n    var LuminanceAlphaFormat = 1025;\\r\\n    var RGBEFormat = RGBAFormat;\\r\\n    var DepthFormat = 1026;\\r\\n    var DepthStencilFormat = 1027;\\r\\n    var RedFormat = 1028;\\r\\n    var RGB_S3TC_DXT1_Format = 33776;\\r\\n    var RGBA_S3TC_DXT1_Format = 33777;\\r\\n    var RGBA_S3TC_DXT3_Format = 33778;\\r\\n    var RGBA_S3TC_DXT5_Format = 33779;\\r\\n    var RGB_PVRTC_4BPPV1_Format = 35840;\\r\\n    var RGB_PVRTC_2BPPV1_Format = 35841;\\r\\n    var RGBA_PVRTC_4BPPV1_Format = 35842;\\r\\n    var RGBA_PVRTC_2BPPV1_Format = 35843;\\r\\n    var RGB_ETC1_Format = 36196;\\r\\n    var RGBA_ASTC_4x4_Format = 37808;\\r\\n    var RGBA_ASTC_5x4_Format = 37809;\\r\\n    var RGBA_ASTC_5x5_Format = 37810;\\r\\n    var RGBA_ASTC_6x5_Format = 37811;\\r\\n    var RGBA_ASTC_6x6_Format = 37812;\\r\\n    var RGBA_ASTC_8x5_Format = 37813;\\r\\n    var RGBA_ASTC_8x6_Format = 37814;\\r\\n    var RGBA_ASTC_8x8_Format = 37815;\\r\\n    var RGBA_ASTC_10x5_Format = 37816;\\r\\n    var RGBA_ASTC_10x6_Format = 37817;\\r\\n    var RGBA_ASTC_10x8_Format = 37818;\\r\\n    var RGBA_ASTC_10x10_Format = 37819;\\r\\n    var RGBA_ASTC_12x10_Format = 37820;\\r\\n    var RGBA_ASTC_12x12_Format = 37821;\\r\\n    var LoopOnce = 2200;\\r\\n    var LoopRepeat = 2201;\\r\\n    var LoopPingPong = 2202;\\r\\n    var InterpolateDiscrete = 2300;\\r\\n    var InterpolateLinear = 2301;\\r\\n    var InterpolateSmooth = 2302;\\r\\n    var ZeroCurvatureEnding = 2400;\\r\\n    var ZeroSlopeEnding = 2401;\\r\\n    var WrapAroundEnding = 2402;\\r\\n    var TrianglesDrawMode = 0;\\r\\n    var TriangleStripDrawMode = 1;\\r\\n    var TriangleFanDrawMode = 2;\\r\\n    var LinearEncoding = 3000;\\r\\n    var sRGBEncoding = 3001;\\r\\n    var GammaEncoding = 3007;\\r\\n    var RGBEEncoding = 3002;\\r\\n    var LogLuvEncoding = 3003;\\r\\n    var RGBM7Encoding = 3004;\\r\\n    var RGBM16Encoding = 3005;\\r\\n    var RGBDEncoding = 3006;\\r\\n    var BasicDepthPacking = 3200;\\r\\n    var RGBADepthPacking = 3201;\\r\\n    var TangentSpaceNormalMap = 0;\\r\\n    var ObjectSpaceNormalMap = 1;\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var _Math = {\\r\\n\\r\\n        DEG2RAD: Math.PI / 180,\\r\\n        RAD2DEG: 180 / Math.PI,\\r\\n\\r\\n        generateUUID: ( function () {\\r\\n\\r\\n            // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\\r\\n\\r\\n            var lut = [];\\r\\n\\r\\n            for ( var i = 0; i < 256; i ++ ) {\\r\\n\\r\\n                lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\\r\\n\\r\\n            }\\r\\n\\r\\n            return function generateUUID() {\\r\\n\\r\\n                var d0 = Math.random() * 0xffffffff | 0;\\r\\n                var d1 = Math.random() * 0xffffffff | 0;\\r\\n                var d2 = Math.random() * 0xffffffff | 0;\\r\\n                var d3 = Math.random() * 0xffffffff | 0;\\r\\n                var uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\\r\\n                    lut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\\r\\n                    lut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\\r\\n                    lut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\\r\\n\\r\\n                // .toUpperCase() here flattens concatenated strings to save heap memory space.\\r\\n                return uuid.toUpperCase();\\r\\n\\r\\n            };\\r\\n\\r\\n        } )(),\\r\\n\\r\\n        clamp: function ( value, min, max ) {\\r\\n\\r\\n            return Math.max( min, Math.min( max, value ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        // compute euclidian modulo of m % n\\r\\n        // https://en.wikipedia.org/wiki/Modulo_operation\\r\\n\\r\\n        euclideanModulo: function ( n, m ) {\\r\\n\\r\\n            return ( ( n % m ) + m ) % m;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Linear mapping from range <a1, a2> to range <b1, b2>\\r\\n\\r\\n        mapLinear: function ( x, a1, a2, b1, b2 ) {\\r\\n\\r\\n            return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        // https://en.wikipedia.org/wiki/Linear_interpolation\\r\\n\\r\\n        lerp: function ( x, y, t ) {\\r\\n\\r\\n            return ( 1 - t ) * x + t * y;\\r\\n\\r\\n        },\\r\\n\\r\\n        // http://en.wikipedia.org/wiki/Smoothstep\\r\\n\\r\\n        smoothstep: function ( x, min, max ) {\\r\\n\\r\\n            if ( x <= min ) return 0;\\r\\n            if ( x >= max ) return 1;\\r\\n\\r\\n            x = ( x - min ) / ( max - min );\\r\\n\\r\\n            return x * x * ( 3 - 2 * x );\\r\\n\\r\\n        },\\r\\n\\r\\n        smootherstep: function ( x, min, max ) {\\r\\n\\r\\n            if ( x <= min ) return 0;\\r\\n            if ( x >= max ) return 1;\\r\\n\\r\\n            x = ( x - min ) / ( max - min );\\r\\n\\r\\n            return x * x * x * ( x * ( x * 6 - 15 ) + 10 );\\r\\n\\r\\n        },\\r\\n\\r\\n        // Random integer from <low, high> interval\\r\\n\\r\\n        randInt: function ( low, high ) {\\r\\n\\r\\n            return low + Math.floor( Math.random() * ( high - low + 1 ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        // Random float from <low, high> interval\\r\\n\\r\\n        randFloat: function ( low, high ) {\\r\\n\\r\\n            return low + Math.random() * ( high - low );\\r\\n\\r\\n        },\\r\\n\\r\\n        // Random float from <-range/2, range/2> interval\\r\\n\\r\\n        randFloatSpread: function ( range ) {\\r\\n\\r\\n            return range * ( 0.5 - Math.random() );\\r\\n\\r\\n        },\\r\\n\\r\\n        degToRad: function ( degrees ) {\\r\\n\\r\\n            return degrees * _Math.DEG2RAD;\\r\\n\\r\\n        },\\r\\n\\r\\n        radToDeg: function ( radians ) {\\r\\n\\r\\n            return radians * _Math.RAD2DEG;\\r\\n\\r\\n        },\\r\\n\\r\\n        isPowerOfTwo: function ( value ) {\\r\\n\\r\\n            return ( value & ( value - 1 ) ) === 0 && value !== 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        ceilPowerOfTwo: function ( value ) {\\r\\n\\r\\n            return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        floorPowerOfTwo: function ( value ) {\\r\\n\\r\\n            return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author philogb / http://blog.thejit.org/\\r\\n     * @author egraether / http://egraether.com/\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     */\\r\\n\\r\\n    function Vector2( x, y ) {\\r\\n\\r\\n        this.x = x || 0;\\r\\n        this.y = y || 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.defineProperties( Vector2.prototype, {\\r\\n\\r\\n        \\\"width\\\": {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this.x;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this.x = value;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        \\\"height\\\": {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this.y;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this.y = value;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Vector2.prototype, {\\r\\n\\r\\n        isVector2: true,\\r\\n\\r\\n        set: function ( x, y ) {\\r\\n\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setScalar: function ( scalar ) {\\r\\n\\r\\n            this.x = scalar;\\r\\n            this.y = scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setX: function ( x ) {\\r\\n\\r\\n            this.x = x;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setY: function ( y ) {\\r\\n\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setComponent: function ( index, value ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: this.x = value; break;\\r\\n                case 1: this.y = value; break;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getComponent: function ( index ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: return this.x;\\r\\n                case 1: return this.y;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.x, this.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( v ) {\\r\\n\\r\\n            this.x = v.x;\\r\\n            this.y = v.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        add: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n                return this.addVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x += v.x;\\r\\n            this.y += v.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScalar: function ( s ) {\\r\\n\\r\\n            this.x += s;\\r\\n            this.y += s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x + b.x;\\r\\n            this.y = a.y + b.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScaledVector: function ( v, s ) {\\r\\n\\r\\n            this.x += v.x * s;\\r\\n            this.y += v.y * s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        sub: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n                return this.subVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x -= v.x;\\r\\n            this.y -= v.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subScalar: function ( s ) {\\r\\n\\r\\n            this.x -= s;\\r\\n            this.y -= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x - b.x;\\r\\n            this.y = a.y - b.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiply: function ( v ) {\\r\\n\\r\\n            this.x *= v.x;\\r\\n            this.y *= v.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( scalar ) {\\r\\n\\r\\n            this.x *= scalar;\\r\\n            this.y *= scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        divide: function ( v ) {\\r\\n\\r\\n            this.x /= v.x;\\r\\n            this.y /= v.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        divideScalar: function ( scalar ) {\\r\\n\\r\\n            return this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix3: function ( m ) {\\r\\n\\r\\n            var x = this.x, y = this.y;\\r\\n            var e = m.elements;\\r\\n\\r\\n            this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\\r\\n            this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        min: function ( v ) {\\r\\n\\r\\n            this.x = Math.min( this.x, v.x );\\r\\n            this.y = Math.min( this.y, v.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        max: function ( v ) {\\r\\n\\r\\n            this.x = Math.max( this.x, v.x );\\r\\n            this.y = Math.max( this.y, v.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clamp: function ( min, max ) {\\r\\n\\r\\n            // assumes min < max, componentwise\\r\\n\\r\\n            this.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n            this.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clampScalar: function () {\\r\\n\\r\\n            var min = new Vector2();\\r\\n            var max = new Vector2();\\r\\n\\r\\n            return function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n                min.set( minVal, minVal );\\r\\n                max.set( maxVal, maxVal );\\r\\n\\r\\n                return this.clamp( min, max );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clampLength: function ( min, max ) {\\r\\n\\r\\n            var length = this.length();\\r\\n\\r\\n            return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        floor: function () {\\r\\n\\r\\n            this.x = Math.floor( this.x );\\r\\n            this.y = Math.floor( this.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        ceil: function () {\\r\\n\\r\\n            this.x = Math.ceil( this.x );\\r\\n            this.y = Math.ceil( this.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        round: function () {\\r\\n\\r\\n            this.x = Math.round( this.x );\\r\\n            this.y = Math.round( this.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        roundToZero: function () {\\r\\n\\r\\n            this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n            this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        negate: function () {\\r\\n\\r\\n            this.x = - this.x;\\r\\n            this.y = - this.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dot: function ( v ) {\\r\\n\\r\\n            return this.x * v.x + this.y * v.y;\\r\\n\\r\\n        },\\r\\n\\r\\n        cross: function ( v ) {\\r\\n\\r\\n            return this.x * v.y - this.y * v.x;\\r\\n\\r\\n        },\\r\\n\\r\\n        lengthSq: function () {\\r\\n\\r\\n            return this.x * this.x + this.y * this.y;\\r\\n\\r\\n        },\\r\\n\\r\\n        length: function () {\\r\\n\\r\\n            return Math.sqrt( this.x * this.x + this.y * this.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        manhattanLength: function () {\\r\\n\\r\\n            return Math.abs( this.x ) + Math.abs( this.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            return this.divideScalar( this.length() || 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        angle: function () {\\r\\n\\r\\n            // computes the angle in radians with respect to the positive x-axis\\r\\n\\r\\n            var angle = Math.atan2( this.y, this.x );\\r\\n\\r\\n            if ( angle < 0 ) angle += 2 * Math.PI;\\r\\n\\r\\n            return angle;\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceTo: function ( v ) {\\r\\n\\r\\n            return Math.sqrt( this.distanceToSquared( v ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToSquared: function ( v ) {\\r\\n\\r\\n            var dx = this.x - v.x, dy = this.y - v.y;\\r\\n            return dx * dx + dy * dy;\\r\\n\\r\\n        },\\r\\n\\r\\n        manhattanDistanceTo: function ( v ) {\\r\\n\\r\\n            return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        setLength: function ( length ) {\\r\\n\\r\\n            return this.normalize().multiplyScalar( length );\\r\\n\\r\\n        },\\r\\n\\r\\n        lerp: function ( v, alpha ) {\\r\\n\\r\\n            this.x += ( v.x - this.x ) * alpha;\\r\\n            this.y += ( v.y - this.y ) * alpha;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        lerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n            return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( v ) {\\r\\n\\r\\n            return ( ( v.x === this.x ) && ( v.y === this.y ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.x = array[ offset ];\\r\\n            this.y = array[ offset + 1 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this.x;\\r\\n            array[ offset + 1 ] = this.y;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromBufferAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            if ( offset !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x = attribute.getX( index );\\r\\n            this.y = attribute.getY( index );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        rotateAround: function ( center, angle ) {\\r\\n\\r\\n            var c = Math.cos( angle ), s = Math.sin( angle );\\r\\n\\r\\n            var x = this.x - center.x;\\r\\n            var y = this.y - center.y;\\r\\n\\r\\n            this.x = x * c - y * s + center.x;\\r\\n            this.y = x * s + y * c + center.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n     * @author philogb / http://blog.thejit.org/\\r\\n     * @author jordi_ros / http://plattsoft.com\\r\\n     * @author D1plo1d / http://github.com/D1plo1d\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author timknip / http://www.floorplanner.com/\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Matrix4() {\\r\\n\\r\\n        this.elements = [\\r\\n\\r\\n            1, 0, 0, 0,\\r\\n            0, 1, 0, 0,\\r\\n            0, 0, 1, 0,\\r\\n            0, 0, 0, 1\\r\\n\\r\\n        ];\\r\\n\\r\\n        if ( arguments.length > 0 ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Matrix4.prototype, {\\r\\n\\r\\n        isMatrix4: true,\\r\\n\\r\\n        set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\\r\\n            te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\\r\\n            te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\\r\\n            te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        identity: function () {\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                1, 0, 0, 0,\\r\\n                0, 1, 0, 0,\\r\\n                0, 0, 1, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new Matrix4().fromArray( this.elements );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( m ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var me = m.elements;\\r\\n\\r\\n            te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\\r\\n            te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\\r\\n            te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\\r\\n            te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyPosition: function ( m ) {\\r\\n\\r\\n            var te = this.elements, me = m.elements;\\r\\n\\r\\n            te[ 12 ] = me[ 12 ];\\r\\n            te[ 13 ] = me[ 13 ];\\r\\n            te[ 14 ] = me[ 14 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        extractBasis: function ( xAxis, yAxis, zAxis ) {\\r\\n\\r\\n            xAxis.setFromMatrixColumn( this, 0 );\\r\\n            yAxis.setFromMatrixColumn( this, 1 );\\r\\n            zAxis.setFromMatrixColumn( this, 2 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeBasis: function ( xAxis, yAxis, zAxis ) {\\r\\n\\r\\n            this.set(\\r\\n                xAxis.x, yAxis.x, zAxis.x, 0,\\r\\n                xAxis.y, yAxis.y, zAxis.y, 0,\\r\\n                xAxis.z, yAxis.z, zAxis.z, 0,\\r\\n                0, 0, 0, 1\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        extractRotation: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function extractRotation( m ) {\\r\\n\\r\\n                // this method does not support reflection matrices\\r\\n\\r\\n                var te = this.elements;\\r\\n                var me = m.elements;\\r\\n\\r\\n                var scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\\r\\n                var scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\\r\\n                var scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\\r\\n\\r\\n                te[ 0 ] = me[ 0 ] * scaleX;\\r\\n                te[ 1 ] = me[ 1 ] * scaleX;\\r\\n                te[ 2 ] = me[ 2 ] * scaleX;\\r\\n                te[ 3 ] = 0;\\r\\n\\r\\n                te[ 4 ] = me[ 4 ] * scaleY;\\r\\n                te[ 5 ] = me[ 5 ] * scaleY;\\r\\n                te[ 6 ] = me[ 6 ] * scaleY;\\r\\n                te[ 7 ] = 0;\\r\\n\\r\\n                te[ 8 ] = me[ 8 ] * scaleZ;\\r\\n                te[ 9 ] = me[ 9 ] * scaleZ;\\r\\n                te[ 10 ] = me[ 10 ] * scaleZ;\\r\\n                te[ 11 ] = 0;\\r\\n\\r\\n                te[ 12 ] = 0;\\r\\n                te[ 13 ] = 0;\\r\\n                te[ 14 ] = 0;\\r\\n                te[ 15 ] = 1;\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        makeRotationFromEuler: function ( euler ) {\\r\\n\\r\\n            if ( ! ( euler && euler.isEuler ) ) {\\r\\n\\r\\n                console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var x = euler.x, y = euler.y, z = euler.z;\\r\\n            var a = Math.cos( x ), b = Math.sin( x );\\r\\n            var c = Math.cos( y ), d = Math.sin( y );\\r\\n            var e = Math.cos( z ), f = Math.sin( z );\\r\\n\\r\\n            if ( euler.order === 'XYZ' ) {\\r\\n\\r\\n                var ae = a * e, af = a * f, be = b * e, bf = b * f;\\r\\n\\r\\n                te[ 0 ] = c * e;\\r\\n                te[ 4 ] = - c * f;\\r\\n                te[ 8 ] = d;\\r\\n\\r\\n                te[ 1 ] = af + be * d;\\r\\n                te[ 5 ] = ae - bf * d;\\r\\n                te[ 9 ] = - b * c;\\r\\n\\r\\n                te[ 2 ] = bf - ae * d;\\r\\n                te[ 6 ] = be + af * d;\\r\\n                te[ 10 ] = a * c;\\r\\n\\r\\n            } else if ( euler.order === 'YXZ' ) {\\r\\n\\r\\n                var ce = c * e, cf = c * f, de = d * e, df = d * f;\\r\\n\\r\\n                te[ 0 ] = ce + df * b;\\r\\n                te[ 4 ] = de * b - cf;\\r\\n                te[ 8 ] = a * d;\\r\\n\\r\\n                te[ 1 ] = a * f;\\r\\n                te[ 5 ] = a * e;\\r\\n                te[ 9 ] = - b;\\r\\n\\r\\n                te[ 2 ] = cf * b - de;\\r\\n                te[ 6 ] = df + ce * b;\\r\\n                te[ 10 ] = a * c;\\r\\n\\r\\n            } else if ( euler.order === 'ZXY' ) {\\r\\n\\r\\n                var ce = c * e, cf = c * f, de = d * e, df = d * f;\\r\\n\\r\\n                te[ 0 ] = ce - df * b;\\r\\n                te[ 4 ] = - a * f;\\r\\n                te[ 8 ] = de + cf * b;\\r\\n\\r\\n                te[ 1 ] = cf + de * b;\\r\\n                te[ 5 ] = a * e;\\r\\n                te[ 9 ] = df - ce * b;\\r\\n\\r\\n                te[ 2 ] = - a * d;\\r\\n                te[ 6 ] = b;\\r\\n                te[ 10 ] = a * c;\\r\\n\\r\\n            } else if ( euler.order === 'ZYX' ) {\\r\\n\\r\\n                var ae = a * e, af = a * f, be = b * e, bf = b * f;\\r\\n\\r\\n                te[ 0 ] = c * e;\\r\\n                te[ 4 ] = be * d - af;\\r\\n                te[ 8 ] = ae * d + bf;\\r\\n\\r\\n                te[ 1 ] = c * f;\\r\\n                te[ 5 ] = bf * d + ae;\\r\\n                te[ 9 ] = af * d - be;\\r\\n\\r\\n                te[ 2 ] = - d;\\r\\n                te[ 6 ] = b * c;\\r\\n                te[ 10 ] = a * c;\\r\\n\\r\\n            } else if ( euler.order === 'YZX' ) {\\r\\n\\r\\n                var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\r\\n\\r\\n                te[ 0 ] = c * e;\\r\\n                te[ 4 ] = bd - ac * f;\\r\\n                te[ 8 ] = bc * f + ad;\\r\\n\\r\\n                te[ 1 ] = f;\\r\\n                te[ 5 ] = a * e;\\r\\n                te[ 9 ] = - b * e;\\r\\n\\r\\n                te[ 2 ] = - d * e;\\r\\n                te[ 6 ] = ad * f + bc;\\r\\n                te[ 10 ] = ac - bd * f;\\r\\n\\r\\n            } else if ( euler.order === 'XZY' ) {\\r\\n\\r\\n                var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\r\\n\\r\\n                te[ 0 ] = c * e;\\r\\n                te[ 4 ] = - f;\\r\\n                te[ 8 ] = d * e;\\r\\n\\r\\n                te[ 1 ] = ac * f + bd;\\r\\n                te[ 5 ] = a * e;\\r\\n                te[ 9 ] = ad * f - bc;\\r\\n\\r\\n                te[ 2 ] = bc * f - ad;\\r\\n                te[ 6 ] = b * e;\\r\\n                te[ 10 ] = bd * f + ac;\\r\\n\\r\\n            }\\r\\n\\r\\n            // bottom row\\r\\n            te[ 3 ] = 0;\\r\\n            te[ 7 ] = 0;\\r\\n            te[ 11 ] = 0;\\r\\n\\r\\n            // last column\\r\\n            te[ 12 ] = 0;\\r\\n            te[ 13 ] = 0;\\r\\n            te[ 14 ] = 0;\\r\\n            te[ 15 ] = 1;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeRotationFromQuaternion: function () {\\r\\n\\r\\n            var zero = new Vector3( 0, 0, 0 );\\r\\n            var one = new Vector3( 1, 1, 1 );\\r\\n\\r\\n            return function makeRotationFromQuaternion( q ) {\\r\\n\\r\\n                return this.compose( zero, q, one );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        lookAt: function () {\\r\\n\\r\\n            var x = new Vector3();\\r\\n            var y = new Vector3();\\r\\n            var z = new Vector3();\\r\\n\\r\\n            return function lookAt( eye, target, up ) {\\r\\n\\r\\n                var te = this.elements;\\r\\n\\r\\n                z.subVectors( eye, target );\\r\\n\\r\\n                if ( z.lengthSq() === 0 ) {\\r\\n\\r\\n                    // eye and target are in the same position\\r\\n\\r\\n                    z.z = 1;\\r\\n\\r\\n                }\\r\\n\\r\\n                z.normalize();\\r\\n                x.crossVectors( up, z );\\r\\n\\r\\n                if ( x.lengthSq() === 0 ) {\\r\\n\\r\\n                    // up and z are parallel\\r\\n\\r\\n                    if ( Math.abs( up.z ) === 1 ) {\\r\\n\\r\\n                        z.x += 0.0001;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        z.z += 0.0001;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    z.normalize();\\r\\n                    x.crossVectors( up, z );\\r\\n\\r\\n                }\\r\\n\\r\\n                x.normalize();\\r\\n                y.crossVectors( z, x );\\r\\n\\r\\n                te[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\\r\\n                te[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\\r\\n                te[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        multiply: function ( m, n ) {\\r\\n\\r\\n            if ( n !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\\r\\n                return this.multiplyMatrices( m, n );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.multiplyMatrices( this, m );\\r\\n\\r\\n        },\\r\\n\\r\\n        premultiply: function ( m ) {\\r\\n\\r\\n            return this.multiplyMatrices( m, this );\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyMatrices: function ( a, b ) {\\r\\n\\r\\n            var ae = a.elements;\\r\\n            var be = b.elements;\\r\\n            var te = this.elements;\\r\\n\\r\\n            var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\\r\\n            var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\\r\\n            var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\\r\\n            var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\\r\\n\\r\\n            var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\\r\\n            var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\\r\\n            var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\\r\\n            var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\\r\\n\\r\\n            te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\\r\\n            te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\\r\\n            te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\\r\\n            te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\\r\\n\\r\\n            te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\\r\\n            te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\\r\\n            te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\\r\\n            te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\\r\\n\\r\\n            te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\\r\\n            te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\\r\\n            te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\\r\\n            te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\\r\\n\\r\\n            te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\\r\\n            te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\\r\\n            te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\\r\\n            te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( s ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\\r\\n            te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\\r\\n            te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\\r\\n            te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyToBufferAttribute: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function applyToBufferAttribute( attribute ) {\\r\\n\\r\\n                for ( var i = 0, l = attribute.count; i < l; i ++ ) {\\r\\n\\r\\n                    v1.x = attribute.getX( i );\\r\\n                    v1.y = attribute.getY( i );\\r\\n                    v1.z = attribute.getZ( i );\\r\\n\\r\\n                    v1.applyMatrix4( this );\\r\\n\\r\\n                    attribute.setXYZ( i, v1.x, v1.y, v1.z );\\r\\n\\r\\n                }\\r\\n\\r\\n                return attribute;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        determinant: function () {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\\r\\n            var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\\r\\n            var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\\r\\n            var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\\r\\n\\r\\n            //TODO: make this more efficient\\r\\n            //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\\r\\n\\r\\n            return (\\r\\n                n41 * (\\r\\n                    + n14 * n23 * n32\\r\\n                    - n13 * n24 * n32\\r\\n                    - n14 * n22 * n33\\r\\n                    + n12 * n24 * n33\\r\\n                    + n13 * n22 * n34\\r\\n                    - n12 * n23 * n34\\r\\n                ) +\\r\\n                n42 * (\\r\\n                    + n11 * n23 * n34\\r\\n                    - n11 * n24 * n33\\r\\n                    + n14 * n21 * n33\\r\\n                    - n13 * n21 * n34\\r\\n                    + n13 * n24 * n31\\r\\n                    - n14 * n23 * n31\\r\\n                ) +\\r\\n                n43 * (\\r\\n                    + n11 * n24 * n32\\r\\n                    - n11 * n22 * n34\\r\\n                    - n14 * n21 * n32\\r\\n                    + n12 * n21 * n34\\r\\n                    + n14 * n22 * n31\\r\\n                    - n12 * n24 * n31\\r\\n                ) +\\r\\n                n44 * (\\r\\n                    - n13 * n22 * n31\\r\\n                    - n11 * n23 * n32\\r\\n                    + n11 * n22 * n33\\r\\n                    + n13 * n21 * n32\\r\\n                    - n12 * n21 * n33\\r\\n                    + n12 * n23 * n31\\r\\n                )\\r\\n\\r\\n            );\\r\\n\\r\\n        },\\r\\n\\r\\n        transpose: function () {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var tmp;\\r\\n\\r\\n            tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\\r\\n            tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\\r\\n            tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\\r\\n\\r\\n            tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\\r\\n            tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\\r\\n            tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPosition: function ( v ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 12 ] = v.x;\\r\\n            te[ 13 ] = v.y;\\r\\n            te[ 14 ] = v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getInverse: function ( m, throwOnDegenerate ) {\\r\\n\\r\\n            // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\\r\\n            var te = this.elements,\\r\\n                me = m.elements,\\r\\n\\r\\n                n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\\r\\n                n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\\r\\n                n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\\r\\n                n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\\r\\n\\r\\n                t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\\r\\n                t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\\r\\n                t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\\r\\n                t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\\r\\n\\r\\n            var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\\r\\n\\r\\n            if ( det === 0 ) {\\r\\n\\r\\n                var msg = \\\"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\\\";\\r\\n\\r\\n                if ( throwOnDegenerate === true ) {\\r\\n\\r\\n                    throw new Error( msg );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    console.warn( msg );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this.identity();\\r\\n\\r\\n            }\\r\\n\\r\\n            var detInv = 1 / det;\\r\\n\\r\\n            te[ 0 ] = t11 * detInv;\\r\\n            te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\\r\\n            te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\\r\\n            te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\\r\\n\\r\\n            te[ 4 ] = t12 * detInv;\\r\\n            te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\\r\\n            te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\\r\\n            te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\\r\\n\\r\\n            te[ 8 ] = t13 * detInv;\\r\\n            te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\\r\\n            te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\\r\\n            te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\\r\\n\\r\\n            te[ 12 ] = t14 * detInv;\\r\\n            te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\\r\\n            te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\\r\\n            te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        scale: function ( v ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var x = v.x, y = v.y, z = v.z;\\r\\n\\r\\n            te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\\r\\n            te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\\r\\n            te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\\r\\n            te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getMaxScaleOnAxis: function () {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\\r\\n            var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\\r\\n            var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\\r\\n\\r\\n            return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        makeTranslation: function ( x, y, z ) {\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                1, 0, 0, x,\\r\\n                0, 1, 0, y,\\r\\n                0, 0, 1, z,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeRotationX: function ( theta ) {\\r\\n\\r\\n            var c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                1, 0, 0, 0,\\r\\n                0, c, - s, 0,\\r\\n                0, s, c, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeRotationY: function ( theta ) {\\r\\n\\r\\n            var c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                c, 0, s, 0,\\r\\n                0, 1, 0, 0,\\r\\n                - s, 0, c, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeRotationZ: function ( theta ) {\\r\\n\\r\\n            var c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                c, - s, 0, 0,\\r\\n                s, c, 0, 0,\\r\\n                0, 0, 1, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeRotationAxis: function ( axis, angle ) {\\r\\n\\r\\n            // Based on http://www.gamedev.net/reference/articles/article1199.asp\\r\\n\\r\\n            var c = Math.cos( angle );\\r\\n            var s = Math.sin( angle );\\r\\n            var t = 1 - c;\\r\\n            var x = axis.x, y = axis.y, z = axis.z;\\r\\n            var tx = t * x, ty = t * y;\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                tx * x + c, tx * y - s * z, tx * z + s * y, 0,\\r\\n                tx * y + s * z, ty * y + c, ty * z - s * x, 0,\\r\\n                tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeScale: function ( x, y, z ) {\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                x, 0, 0, 0,\\r\\n                0, y, 0, 0,\\r\\n                0, 0, z, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeShear: function ( x, y, z ) {\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                1, y, z, 0,\\r\\n                x, 1, z, 0,\\r\\n                x, y, 1, 0,\\r\\n                0, 0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        compose: function ( position, quaternion, scale ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\\r\\n            var x2 = x + x,\\ty2 = y + y, z2 = z + z;\\r\\n            var xx = x * x2, xy = x * y2, xz = x * z2;\\r\\n            var yy = y * y2, yz = y * z2, zz = z * z2;\\r\\n            var wx = w * x2, wy = w * y2, wz = w * z2;\\r\\n\\r\\n            var sx = scale.x, sy = scale.y, sz = scale.z;\\r\\n\\r\\n            te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\\r\\n            te[ 1 ] = ( xy + wz ) * sx;\\r\\n            te[ 2 ] = ( xz - wy ) * sx;\\r\\n            te[ 3 ] = 0;\\r\\n\\r\\n            te[ 4 ] = ( xy - wz ) * sy;\\r\\n            te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\\r\\n            te[ 6 ] = ( yz + wx ) * sy;\\r\\n            te[ 7 ] = 0;\\r\\n\\r\\n            te[ 8 ] = ( xz + wy ) * sz;\\r\\n            te[ 9 ] = ( yz - wx ) * sz;\\r\\n            te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\\r\\n            te[ 11 ] = 0;\\r\\n\\r\\n            te[ 12 ] = position.x;\\r\\n            te[ 13 ] = position.y;\\r\\n            te[ 14 ] = position.z;\\r\\n            te[ 15 ] = 1;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        decompose: function () {\\r\\n\\r\\n            var vector = new Vector3();\\r\\n            var matrix = new Matrix4();\\r\\n\\r\\n            return function decompose( position, quaternion, scale ) {\\r\\n\\r\\n                var te = this.elements;\\r\\n\\r\\n                var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\\r\\n                var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\\r\\n                var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\\r\\n\\r\\n                // if determine is negative, we need to invert one scale\\r\\n                var det = this.determinant();\\r\\n                if ( det < 0 ) sx = - sx;\\r\\n\\r\\n                position.x = te[ 12 ];\\r\\n                position.y = te[ 13 ];\\r\\n                position.z = te[ 14 ];\\r\\n\\r\\n                // scale the rotation part\\r\\n                matrix.copy( this );\\r\\n\\r\\n                var invSX = 1 / sx;\\r\\n                var invSY = 1 / sy;\\r\\n                var invSZ = 1 / sz;\\r\\n\\r\\n                matrix.elements[ 0 ] *= invSX;\\r\\n                matrix.elements[ 1 ] *= invSX;\\r\\n                matrix.elements[ 2 ] *= invSX;\\r\\n\\r\\n                matrix.elements[ 4 ] *= invSY;\\r\\n                matrix.elements[ 5 ] *= invSY;\\r\\n                matrix.elements[ 6 ] *= invSY;\\r\\n\\r\\n                matrix.elements[ 8 ] *= invSZ;\\r\\n                matrix.elements[ 9 ] *= invSZ;\\r\\n                matrix.elements[ 10 ] *= invSZ;\\r\\n\\r\\n                quaternion.setFromRotationMatrix( matrix );\\r\\n\\r\\n                scale.x = sx;\\r\\n                scale.y = sy;\\r\\n                scale.z = sz;\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        makePerspective: function ( left, right, top, bottom, near, far ) {\\r\\n\\r\\n            if ( far === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            var te = this.elements;\\r\\n            var x = 2 * near / ( right - left );\\r\\n            var y = 2 * near / ( top - bottom );\\r\\n\\r\\n            var a = ( right + left ) / ( right - left );\\r\\n            var b = ( top + bottom ) / ( top - bottom );\\r\\n            var c = - ( far + near ) / ( far - near );\\r\\n            var d = - 2 * far * near / ( far - near );\\r\\n\\r\\n            te[ 0 ] = x;\\tte[ 4 ] = 0;\\tte[ 8 ] = a;\\tte[ 12 ] = 0;\\r\\n            te[ 1 ] = 0;\\tte[ 5 ] = y;\\tte[ 9 ] = b;\\tte[ 13 ] = 0;\\r\\n            te[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = c;\\tte[ 14 ] = d;\\r\\n            te[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = - 1;\\tte[ 15 ] = 0;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeOrthographic: function ( left, right, top, bottom, near, far ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var w = 1.0 / ( right - left );\\r\\n            var h = 1.0 / ( top - bottom );\\r\\n            var p = 1.0 / ( far - near );\\r\\n\\r\\n            var x = ( right + left ) * w;\\r\\n            var y = ( top + bottom ) * h;\\r\\n            var z = ( far + near ) * p;\\r\\n\\r\\n            te[ 0 ] = 2 * w;\\tte[ 4 ] = 0;\\tte[ 8 ] = 0;\\tte[ 12 ] = - x;\\r\\n            te[ 1 ] = 0;\\tte[ 5 ] = 2 * h;\\tte[ 9 ] = 0;\\tte[ 13 ] = - y;\\r\\n            te[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = - 2 * p;\\tte[ 14 ] = - z;\\r\\n            te[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = 0;\\tte[ 15 ] = 1;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( matrix ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var me = matrix.elements;\\r\\n\\r\\n            for ( var i = 0; i < 16; i ++ ) {\\r\\n\\r\\n                if ( te[ i ] !== me[ i ] ) return false;\\r\\n\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            for ( var i = 0; i < 16; i ++ ) {\\r\\n\\r\\n                this.elements[ i ] = array[ i + offset ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            array[ offset ] = te[ 0 ];\\r\\n            array[ offset + 1 ] = te[ 1 ];\\r\\n            array[ offset + 2 ] = te[ 2 ];\\r\\n            array[ offset + 3 ] = te[ 3 ];\\r\\n\\r\\n            array[ offset + 4 ] = te[ 4 ];\\r\\n            array[ offset + 5 ] = te[ 5 ];\\r\\n            array[ offset + 6 ] = te[ 6 ];\\r\\n            array[ offset + 7 ] = te[ 7 ];\\r\\n\\r\\n            array[ offset + 8 ] = te[ 8 ];\\r\\n            array[ offset + 9 ] = te[ 9 ];\\r\\n            array[ offset + 10 ] = te[ 10 ];\\r\\n            array[ offset + 11 ] = te[ 11 ];\\r\\n\\r\\n            array[ offset + 12 ] = te[ 12 ];\\r\\n            array[ offset + 13 ] = te[ 13 ];\\r\\n            array[ offset + 14 ] = te[ 14 ];\\r\\n            array[ offset + 15 ] = te[ 15 ];\\r\\n\\r\\n            return array;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Quaternion( x, y, z, w ) {\\r\\n\\r\\n        this._x = x || 0;\\r\\n        this._y = y || 0;\\r\\n        this._z = z || 0;\\r\\n        this._w = ( w !== undefined ) ? w : 1;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Quaternion, {\\r\\n\\r\\n        slerp: function ( qa, qb, qm, t ) {\\r\\n\\r\\n            return qm.copy( qa ).slerp( qb, t );\\r\\n\\r\\n        },\\r\\n\\r\\n        slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\\r\\n\\r\\n            // fuzz-free, array-based Quaternion SLERP operation\\r\\n\\r\\n            var x0 = src0[ srcOffset0 + 0 ],\\r\\n                y0 = src0[ srcOffset0 + 1 ],\\r\\n                z0 = src0[ srcOffset0 + 2 ],\\r\\n                w0 = src0[ srcOffset0 + 3 ],\\r\\n\\r\\n                x1 = src1[ srcOffset1 + 0 ],\\r\\n                y1 = src1[ srcOffset1 + 1 ],\\r\\n                z1 = src1[ srcOffset1 + 2 ],\\r\\n                w1 = src1[ srcOffset1 + 3 ];\\r\\n\\r\\n            if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\\r\\n\\r\\n                var s = 1 - t,\\r\\n\\r\\n                    cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\\r\\n\\r\\n                    dir = ( cos >= 0 ? 1 : - 1 ),\\r\\n                    sqrSin = 1 - cos * cos;\\r\\n\\r\\n                // Skip the Slerp for tiny steps to avoid numeric problems:\\r\\n                if ( sqrSin > Number.EPSILON ) {\\r\\n\\r\\n                    var sin = Math.sqrt( sqrSin ),\\r\\n                        len = Math.atan2( sin, cos * dir );\\r\\n\\r\\n                    s = Math.sin( s * len ) / sin;\\r\\n                    t = Math.sin( t * len ) / sin;\\r\\n\\r\\n                }\\r\\n\\r\\n                var tDir = t * dir;\\r\\n\\r\\n                x0 = x0 * s + x1 * tDir;\\r\\n                y0 = y0 * s + y1 * tDir;\\r\\n                z0 = z0 * s + z1 * tDir;\\r\\n                w0 = w0 * s + w1 * tDir;\\r\\n\\r\\n                // Normalize in case we just did a lerp:\\r\\n                if ( s === 1 - t ) {\\r\\n\\r\\n                    var f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\\r\\n\\r\\n                    x0 *= f;\\r\\n                    y0 *= f;\\r\\n                    z0 *= f;\\r\\n                    w0 *= f;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            dst[ dstOffset ] = x0;\\r\\n            dst[ dstOffset + 1 ] = y0;\\r\\n            dst[ dstOffset + 2 ] = z0;\\r\\n            dst[ dstOffset + 3 ] = w0;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( Quaternion.prototype, {\\r\\n\\r\\n        x: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._x;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._x = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        y: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._y;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._y = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        z: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._z;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._z = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        w: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._w;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._w = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Quaternion.prototype, {\\r\\n\\r\\n        isQuaternion: true,\\r\\n\\r\\n        set: function ( x, y, z, w ) {\\r\\n\\r\\n            this._x = x;\\r\\n            this._y = y;\\r\\n            this._z = z;\\r\\n            this._w = w;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this._x, this._y, this._z, this._w );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( quaternion ) {\\r\\n\\r\\n            this._x = quaternion.x;\\r\\n            this._y = quaternion.y;\\r\\n            this._z = quaternion.z;\\r\\n            this._w = quaternion.w;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromEuler: function ( euler, update ) {\\r\\n\\r\\n            if ( ! ( euler && euler.isEuler ) ) {\\r\\n\\r\\n                throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            var x = euler._x, y = euler._y, z = euler._z, order = euler.order;\\r\\n\\r\\n            // http://www.mathworks.com/matlabcentral/fileexchange/\\r\\n            // \\t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\\r\\n            //\\tcontent/SpinCalc.m\\r\\n\\r\\n            var cos = Math.cos;\\r\\n            var sin = Math.sin;\\r\\n\\r\\n            var c1 = cos( x / 2 );\\r\\n            var c2 = cos( y / 2 );\\r\\n            var c3 = cos( z / 2 );\\r\\n\\r\\n            var s1 = sin( x / 2 );\\r\\n            var s2 = sin( y / 2 );\\r\\n            var s3 = sin( z / 2 );\\r\\n\\r\\n            if ( order === 'XYZ' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n            } else if ( order === 'YXZ' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n            } else if ( order === 'ZXY' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n            } else if ( order === 'ZYX' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n            } else if ( order === 'YZX' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n            } else if ( order === 'XZY' ) {\\r\\n\\r\\n                this._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n                this._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n                this._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n                this._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( update !== false ) this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromAxisAngle: function ( axis, angle ) {\\r\\n\\r\\n            // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\\r\\n\\r\\n            // assumes axis is normalized\\r\\n\\r\\n            var halfAngle = angle / 2, s = Math.sin( halfAngle );\\r\\n\\r\\n            this._x = axis.x * s;\\r\\n            this._y = axis.y * s;\\r\\n            this._z = axis.z * s;\\r\\n            this._w = Math.cos( halfAngle );\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromRotationMatrix: function ( m ) {\\r\\n\\r\\n            // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\\r\\n\\r\\n            // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n            var te = m.elements,\\r\\n\\r\\n                m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\r\\n                m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\r\\n                m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\\r\\n\\r\\n                trace = m11 + m22 + m33,\\r\\n                s;\\r\\n\\r\\n            if ( trace > 0 ) {\\r\\n\\r\\n                s = 0.5 / Math.sqrt( trace + 1.0 );\\r\\n\\r\\n                this._w = 0.25 / s;\\r\\n                this._x = ( m32 - m23 ) * s;\\r\\n                this._y = ( m13 - m31 ) * s;\\r\\n                this._z = ( m21 - m12 ) * s;\\r\\n\\r\\n            } else if ( m11 > m22 && m11 > m33 ) {\\r\\n\\r\\n                s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\\r\\n\\r\\n                this._w = ( m32 - m23 ) / s;\\r\\n                this._x = 0.25 * s;\\r\\n                this._y = ( m12 + m21 ) / s;\\r\\n                this._z = ( m13 + m31 ) / s;\\r\\n\\r\\n            } else if ( m22 > m33 ) {\\r\\n\\r\\n                s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\\r\\n\\r\\n                this._w = ( m13 - m31 ) / s;\\r\\n                this._x = ( m12 + m21 ) / s;\\r\\n                this._y = 0.25 * s;\\r\\n                this._z = ( m23 + m32 ) / s;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\\r\\n\\r\\n                this._w = ( m21 - m12 ) / s;\\r\\n                this._x = ( m13 + m31 ) / s;\\r\\n                this._y = ( m23 + m32 ) / s;\\r\\n                this._z = 0.25 * s;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromUnitVectors: function () {\\r\\n\\r\\n            // assumes direction vectors vFrom and vTo are normalized\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n            var r;\\r\\n\\r\\n            var EPS = 0.000001;\\r\\n\\r\\n            return function setFromUnitVectors( vFrom, vTo ) {\\r\\n\\r\\n                if ( v1 === undefined ) v1 = new Vector3();\\r\\n\\r\\n                r = vFrom.dot( vTo ) + 1;\\r\\n\\r\\n                if ( r < EPS ) {\\r\\n\\r\\n                    r = 0;\\r\\n\\r\\n                    if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\\r\\n\\r\\n                        v1.set( - vFrom.y, vFrom.x, 0 );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        v1.set( 0, - vFrom.z, vFrom.y );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    v1.crossVectors( vFrom, vTo );\\r\\n\\r\\n                }\\r\\n\\r\\n                this._x = v1.x;\\r\\n                this._y = v1.y;\\r\\n                this._z = v1.z;\\r\\n                this._w = r;\\r\\n\\r\\n                return this.normalize();\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        angleTo: function ( q ) {\\r\\n\\r\\n            return 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        rotateTowards: function ( q, step ) {\\r\\n\\r\\n            var angle = this.angleTo( q );\\r\\n\\r\\n            if ( angle === 0 ) return this;\\r\\n\\r\\n            var t = Math.min( 1, step / angle );\\r\\n\\r\\n            this.slerp( q, t );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        inverse: function () {\\r\\n\\r\\n            // quaternion is assumed to have unit length\\r\\n\\r\\n            return this.conjugate();\\r\\n\\r\\n        },\\r\\n\\r\\n        conjugate: function () {\\r\\n\\r\\n            this._x *= - 1;\\r\\n            this._y *= - 1;\\r\\n            this._z *= - 1;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dot: function ( v ) {\\r\\n\\r\\n            return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\\r\\n\\r\\n        },\\r\\n\\r\\n        lengthSq: function () {\\r\\n\\r\\n            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\\r\\n\\r\\n        },\\r\\n\\r\\n        length: function () {\\r\\n\\r\\n            return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\\r\\n\\r\\n        },\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            var l = this.length();\\r\\n\\r\\n            if ( l === 0 ) {\\r\\n\\r\\n                this._x = 0;\\r\\n                this._y = 0;\\r\\n                this._z = 0;\\r\\n                this._w = 1;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                l = 1 / l;\\r\\n\\r\\n                this._x = this._x * l;\\r\\n                this._y = this._y * l;\\r\\n                this._z = this._z * l;\\r\\n                this._w = this._w * l;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiply: function ( q, p ) {\\r\\n\\r\\n            if ( p !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\\r\\n                return this.multiplyQuaternions( q, p );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.multiplyQuaternions( this, q );\\r\\n\\r\\n        },\\r\\n\\r\\n        premultiply: function ( q ) {\\r\\n\\r\\n            return this.multiplyQuaternions( q, this );\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyQuaternions: function ( a, b ) {\\r\\n\\r\\n            // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\\r\\n\\r\\n            var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\\r\\n            var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\\r\\n\\r\\n            this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\\r\\n            this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\\r\\n            this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\\r\\n            this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        slerp: function ( qb, t ) {\\r\\n\\r\\n            if ( t === 0 ) return this;\\r\\n            if ( t === 1 ) return this.copy( qb );\\r\\n\\r\\n            var x = this._x, y = this._y, z = this._z, w = this._w;\\r\\n\\r\\n            // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\\r\\n\\r\\n            var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\\r\\n\\r\\n            if ( cosHalfTheta < 0 ) {\\r\\n\\r\\n                this._w = - qb._w;\\r\\n                this._x = - qb._x;\\r\\n                this._y = - qb._y;\\r\\n                this._z = - qb._z;\\r\\n\\r\\n                cosHalfTheta = - cosHalfTheta;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.copy( qb );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( cosHalfTheta >= 1.0 ) {\\r\\n\\r\\n                this._w = w;\\r\\n                this._x = x;\\r\\n                this._y = y;\\r\\n                this._z = z;\\r\\n\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\\r\\n\\r\\n            if ( sqrSinHalfTheta <= Number.EPSILON ) {\\r\\n\\r\\n                var s = 1 - t;\\r\\n                this._w = s * w + t * this._w;\\r\\n                this._x = s * x + t * this._x;\\r\\n                this._y = s * y + t * this._y;\\r\\n                this._z = s * z + t * this._z;\\r\\n\\r\\n                return this.normalize();\\r\\n\\r\\n            }\\r\\n\\r\\n            var sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\\r\\n            var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\\r\\n            var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\\r\\n                ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\\r\\n\\r\\n            this._w = ( w * ratioA + this._w * ratioB );\\r\\n            this._x = ( x * ratioA + this._x * ratioB );\\r\\n            this._y = ( y * ratioA + this._y * ratioB );\\r\\n            this._z = ( z * ratioA + this._z * ratioB );\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( quaternion ) {\\r\\n\\r\\n            return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this._x = array[ offset ];\\r\\n            this._y = array[ offset + 1 ];\\r\\n            this._z = array[ offset + 2 ];\\r\\n            this._w = array[ offset + 3 ];\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this._x;\\r\\n            array[ offset + 1 ] = this._y;\\r\\n            array[ offset + 2 ] = this._z;\\r\\n            array[ offset + 3 ] = this._w;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        onChange: function ( callback ) {\\r\\n\\r\\n            this.onChangeCallback = callback;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        onChangeCallback: function () {}\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author kile / http://kile.stravaganza.org/\\r\\n     * @author philogb / http://blog.thejit.org/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author egraether / http://egraether.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Vector3( x, y, z ) {\\r\\n\\r\\n        this.x = x || 0;\\r\\n        this.y = y || 0;\\r\\n        this.z = z || 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Vector3.prototype, {\\r\\n\\r\\n        isVector3: true,\\r\\n\\r\\n        set: function ( x, y, z ) {\\r\\n\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.z = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setScalar: function ( scalar ) {\\r\\n\\r\\n            this.x = scalar;\\r\\n            this.y = scalar;\\r\\n            this.z = scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setX: function ( x ) {\\r\\n\\r\\n            this.x = x;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setY: function ( y ) {\\r\\n\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setZ: function ( z ) {\\r\\n\\r\\n            this.z = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setComponent: function ( index, value ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: this.x = value; break;\\r\\n                case 1: this.y = value; break;\\r\\n                case 2: this.z = value; break;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getComponent: function ( index ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: return this.x;\\r\\n                case 1: return this.y;\\r\\n                case 2: return this.z;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.x, this.y, this.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( v ) {\\r\\n\\r\\n            this.x = v.x;\\r\\n            this.y = v.y;\\r\\n            this.z = v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        add: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n                return this.addVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x += v.x;\\r\\n            this.y += v.y;\\r\\n            this.z += v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScalar: function ( s ) {\\r\\n\\r\\n            this.x += s;\\r\\n            this.y += s;\\r\\n            this.z += s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x + b.x;\\r\\n            this.y = a.y + b.y;\\r\\n            this.z = a.z + b.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScaledVector: function ( v, s ) {\\r\\n\\r\\n            this.x += v.x * s;\\r\\n            this.y += v.y * s;\\r\\n            this.z += v.z * s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        sub: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n                return this.subVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x -= v.x;\\r\\n            this.y -= v.y;\\r\\n            this.z -= v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subScalar: function ( s ) {\\r\\n\\r\\n            this.x -= s;\\r\\n            this.y -= s;\\r\\n            this.z -= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x - b.x;\\r\\n            this.y = a.y - b.y;\\r\\n            this.z = a.z - b.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiply: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\\r\\n                return this.multiplyVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x *= v.x;\\r\\n            this.y *= v.y;\\r\\n            this.z *= v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( scalar ) {\\r\\n\\r\\n            this.x *= scalar;\\r\\n            this.y *= scalar;\\r\\n            this.z *= scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x * b.x;\\r\\n            this.y = a.y * b.y;\\r\\n            this.z = a.z * b.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyEuler: function () {\\r\\n\\r\\n            var quaternion = new Quaternion();\\r\\n\\r\\n            return function applyEuler( euler ) {\\r\\n\\r\\n                if ( ! ( euler && euler.isEuler ) ) {\\r\\n\\r\\n                    console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this.applyQuaternion( quaternion.setFromEuler( euler ) );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        applyAxisAngle: function () {\\r\\n\\r\\n            var quaternion = new Quaternion();\\r\\n\\r\\n            return function applyAxisAngle( axis, angle ) {\\r\\n\\r\\n                return this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        applyMatrix3: function ( m ) {\\r\\n\\r\\n            var x = this.x, y = this.y, z = this.z;\\r\\n            var e = m.elements;\\r\\n\\r\\n            this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\\r\\n            this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\\r\\n            this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function ( m ) {\\r\\n\\r\\n            var x = this.x, y = this.y, z = this.z;\\r\\n            var e = m.elements;\\r\\n\\r\\n            var w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\\r\\n\\r\\n            this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\\r\\n            this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\\r\\n            this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyQuaternion: function ( q ) {\\r\\n\\r\\n            var x = this.x, y = this.y, z = this.z;\\r\\n            var qx = q.x, qy = q.y, qz = q.z, qw = q.w;\\r\\n\\r\\n            // calculate quat * vector\\r\\n\\r\\n            var ix = qw * x + qy * z - qz * y;\\r\\n            var iy = qw * y + qz * x - qx * z;\\r\\n            var iz = qw * z + qx * y - qy * x;\\r\\n            var iw = - qx * x - qy * y - qz * z;\\r\\n\\r\\n            // calculate result * inverse quat\\r\\n\\r\\n            this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\\r\\n            this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\\r\\n            this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        project: function ( camera ) {\\r\\n\\r\\n            return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\\r\\n\\r\\n        },\\r\\n\\r\\n        unproject: function () {\\r\\n\\r\\n            var matrix = new Matrix4();\\r\\n\\r\\n            return function unproject( camera ) {\\r\\n\\r\\n                return this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        transformDirection: function ( m ) {\\r\\n\\r\\n            // input: THREE.Matrix4 affine matrix\\r\\n            // vector interpreted as a direction\\r\\n\\r\\n            var x = this.x, y = this.y, z = this.z;\\r\\n            var e = m.elements;\\r\\n\\r\\n            this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\\r\\n            this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\\r\\n            this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\\r\\n\\r\\n            return this.normalize();\\r\\n\\r\\n        },\\r\\n\\r\\n        divide: function ( v ) {\\r\\n\\r\\n            this.x /= v.x;\\r\\n            this.y /= v.y;\\r\\n            this.z /= v.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        divideScalar: function ( scalar ) {\\r\\n\\r\\n            return this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n        },\\r\\n\\r\\n        min: function ( v ) {\\r\\n\\r\\n            this.x = Math.min( this.x, v.x );\\r\\n            this.y = Math.min( this.y, v.y );\\r\\n            this.z = Math.min( this.z, v.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        max: function ( v ) {\\r\\n\\r\\n            this.x = Math.max( this.x, v.x );\\r\\n            this.y = Math.max( this.y, v.y );\\r\\n            this.z = Math.max( this.z, v.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clamp: function ( min, max ) {\\r\\n\\r\\n            // assumes min < max, componentwise\\r\\n\\r\\n            this.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n            this.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n            this.z = Math.max( min.z, Math.min( max.z, this.z ) );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clampScalar: function () {\\r\\n\\r\\n            var min = new Vector3();\\r\\n            var max = new Vector3();\\r\\n\\r\\n            return function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n                min.set( minVal, minVal, minVal );\\r\\n                max.set( maxVal, maxVal, maxVal );\\r\\n\\r\\n                return this.clamp( min, max );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clampLength: function ( min, max ) {\\r\\n\\r\\n            var length = this.length();\\r\\n\\r\\n            return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        floor: function () {\\r\\n\\r\\n            this.x = Math.floor( this.x );\\r\\n            this.y = Math.floor( this.y );\\r\\n            this.z = Math.floor( this.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        ceil: function () {\\r\\n\\r\\n            this.x = Math.ceil( this.x );\\r\\n            this.y = Math.ceil( this.y );\\r\\n            this.z = Math.ceil( this.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        round: function () {\\r\\n\\r\\n            this.x = Math.round( this.x );\\r\\n            this.y = Math.round( this.y );\\r\\n            this.z = Math.round( this.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        roundToZero: function () {\\r\\n\\r\\n            this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n            this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n            this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        negate: function () {\\r\\n\\r\\n            this.x = - this.x;\\r\\n            this.y = - this.y;\\r\\n            this.z = - this.z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dot: function ( v ) {\\r\\n\\r\\n            return this.x * v.x + this.y * v.y + this.z * v.z;\\r\\n\\r\\n        },\\r\\n\\r\\n        // TODO lengthSquared?\\r\\n\\r\\n        lengthSq: function () {\\r\\n\\r\\n            return this.x * this.x + this.y * this.y + this.z * this.z;\\r\\n\\r\\n        },\\r\\n\\r\\n        length: function () {\\r\\n\\r\\n            return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        manhattanLength: function () {\\r\\n\\r\\n            return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            return this.divideScalar( this.length() || 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        setLength: function ( length ) {\\r\\n\\r\\n            return this.normalize().multiplyScalar( length );\\r\\n\\r\\n        },\\r\\n\\r\\n        lerp: function ( v, alpha ) {\\r\\n\\r\\n            this.x += ( v.x - this.x ) * alpha;\\r\\n            this.y += ( v.y - this.y ) * alpha;\\r\\n            this.z += ( v.z - this.z ) * alpha;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        lerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n            return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        cross: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\\r\\n                return this.crossVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.crossVectors( this, v );\\r\\n\\r\\n        },\\r\\n\\r\\n        crossVectors: function ( a, b ) {\\r\\n\\r\\n            var ax = a.x, ay = a.y, az = a.z;\\r\\n            var bx = b.x, by = b.y, bz = b.z;\\r\\n\\r\\n            this.x = ay * bz - az * by;\\r\\n            this.y = az * bx - ax * bz;\\r\\n            this.z = ax * by - ay * bx;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        projectOnVector: function ( vector ) {\\r\\n\\r\\n            var scalar = vector.dot( this ) / vector.lengthSq();\\r\\n\\r\\n            return this.copy( vector ).multiplyScalar( scalar );\\r\\n\\r\\n        },\\r\\n\\r\\n        projectOnPlane: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function projectOnPlane( planeNormal ) {\\r\\n\\r\\n                v1.copy( this ).projectOnVector( planeNormal );\\r\\n\\r\\n                return this.sub( v1 );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        reflect: function () {\\r\\n\\r\\n            // reflect incident vector off plane orthogonal to normal\\r\\n            // normal is assumed to have unit length\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function reflect( normal ) {\\r\\n\\r\\n                return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        angleTo: function ( v ) {\\r\\n\\r\\n            var theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\\r\\n\\r\\n            // clamp, to handle numerical problems\\r\\n\\r\\n            return Math.acos( _Math.clamp( theta, - 1, 1 ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceTo: function ( v ) {\\r\\n\\r\\n            return Math.sqrt( this.distanceToSquared( v ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToSquared: function ( v ) {\\r\\n\\r\\n            var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\\r\\n\\r\\n            return dx * dx + dy * dy + dz * dz;\\r\\n\\r\\n        },\\r\\n\\r\\n        manhattanDistanceTo: function ( v ) {\\r\\n\\r\\n            return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromSpherical: function ( s ) {\\r\\n\\r\\n            return this.setFromSphericalCoords( s.radius, s.phi, s.theta );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromSphericalCoords: function ( radius, phi, theta ) {\\r\\n\\r\\n            var sinPhiRadius = Math.sin( phi ) * radius;\\r\\n\\r\\n            this.x = sinPhiRadius * Math.sin( theta );\\r\\n            this.y = Math.cos( phi ) * radius;\\r\\n            this.z = sinPhiRadius * Math.cos( theta );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCylindrical: function ( c ) {\\r\\n\\r\\n            return this.setFromCylindricalCoords( c.radius, c.theta, c.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCylindricalCoords: function ( radius, theta, y ) {\\r\\n\\r\\n            this.x = radius * Math.sin( theta );\\r\\n            this.y = y;\\r\\n            this.z = radius * Math.cos( theta );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromMatrixPosition: function ( m ) {\\r\\n\\r\\n            var e = m.elements;\\r\\n\\r\\n            this.x = e[ 12 ];\\r\\n            this.y = e[ 13 ];\\r\\n            this.z = e[ 14 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromMatrixScale: function ( m ) {\\r\\n\\r\\n            var sx = this.setFromMatrixColumn( m, 0 ).length();\\r\\n            var sy = this.setFromMatrixColumn( m, 1 ).length();\\r\\n            var sz = this.setFromMatrixColumn( m, 2 ).length();\\r\\n\\r\\n            this.x = sx;\\r\\n            this.y = sy;\\r\\n            this.z = sz;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromMatrixColumn: function ( m, index ) {\\r\\n\\r\\n            return this.fromArray( m.elements, index * 4 );\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( v ) {\\r\\n\\r\\n            return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.x = array[ offset ];\\r\\n            this.y = array[ offset + 1 ];\\r\\n            this.z = array[ offset + 2 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this.x;\\r\\n            array[ offset + 1 ] = this.y;\\r\\n            array[ offset + 2 ] = this.z;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromBufferAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            if ( offset !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x = attribute.getX( index );\\r\\n            this.y = attribute.getY( index );\\r\\n            this.z = attribute.getZ( index );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function Matrix3() {\\r\\n\\r\\n        this.elements = [\\r\\n\\r\\n            1, 0, 0,\\r\\n            0, 1, 0,\\r\\n            0, 0, 1\\r\\n\\r\\n        ];\\r\\n\\r\\n        if ( arguments.length > 0 ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Matrix3.prototype, {\\r\\n\\r\\n        isMatrix3: true,\\r\\n\\r\\n        set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\\r\\n            te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\\r\\n            te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        identity: function () {\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                1, 0, 0,\\r\\n                0, 1, 0,\\r\\n                0, 0, 1\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().fromArray( this.elements );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( m ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var me = m.elements;\\r\\n\\r\\n            te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\\r\\n            te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\\r\\n            te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromMatrix4: function ( m ) {\\r\\n\\r\\n            var me = m.elements;\\r\\n\\r\\n            this.set(\\r\\n\\r\\n                me[ 0 ], me[ 4 ], me[ 8 ],\\r\\n                me[ 1 ], me[ 5 ], me[ 9 ],\\r\\n                me[ 2 ], me[ 6 ], me[ 10 ]\\r\\n\\r\\n            );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyToBufferAttribute: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function applyToBufferAttribute( attribute ) {\\r\\n\\r\\n                for ( var i = 0, l = attribute.count; i < l; i ++ ) {\\r\\n\\r\\n                    v1.x = attribute.getX( i );\\r\\n                    v1.y = attribute.getY( i );\\r\\n                    v1.z = attribute.getZ( i );\\r\\n\\r\\n                    v1.applyMatrix3( this );\\r\\n\\r\\n                    attribute.setXYZ( i, v1.x, v1.y, v1.z );\\r\\n\\r\\n                }\\r\\n\\r\\n                return attribute;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        multiply: function ( m ) {\\r\\n\\r\\n            return this.multiplyMatrices( this, m );\\r\\n\\r\\n        },\\r\\n\\r\\n        premultiply: function ( m ) {\\r\\n\\r\\n            return this.multiplyMatrices( m, this );\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyMatrices: function ( a, b ) {\\r\\n\\r\\n            var ae = a.elements;\\r\\n            var be = b.elements;\\r\\n            var te = this.elements;\\r\\n\\r\\n            var a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\\r\\n            var a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\\r\\n            var a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\\r\\n\\r\\n            var b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\\r\\n            var b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\\r\\n            var b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\\r\\n\\r\\n            te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\\r\\n            te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\\r\\n            te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\\r\\n\\r\\n            te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\\r\\n            te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\\r\\n            te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\\r\\n\\r\\n            te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\\r\\n            te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\\r\\n            te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( s ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\\r\\n            te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\\r\\n            te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        determinant: function () {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\\r\\n                d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\\r\\n                g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\\r\\n\\r\\n            return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\\r\\n\\r\\n        },\\r\\n\\r\\n        getInverse: function ( matrix, throwOnDegenerate ) {\\r\\n\\r\\n            if ( matrix && matrix.isMatrix4 ) {\\r\\n\\r\\n                console.error( \\\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\\\" );\\r\\n\\r\\n            }\\r\\n\\r\\n            var me = matrix.elements,\\r\\n                te = this.elements,\\r\\n\\r\\n                n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\\r\\n                n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\\r\\n                n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\\r\\n\\r\\n                t11 = n33 * n22 - n32 * n23,\\r\\n                t12 = n32 * n13 - n33 * n12,\\r\\n                t13 = n23 * n12 - n22 * n13,\\r\\n\\r\\n                det = n11 * t11 + n21 * t12 + n31 * t13;\\r\\n\\r\\n            if ( det === 0 ) {\\r\\n\\r\\n                var msg = \\\"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\\\";\\r\\n\\r\\n                if ( throwOnDegenerate === true ) {\\r\\n\\r\\n                    throw new Error( msg );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    console.warn( msg );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this.identity();\\r\\n\\r\\n            }\\r\\n\\r\\n            var detInv = 1 / det;\\r\\n\\r\\n            te[ 0 ] = t11 * detInv;\\r\\n            te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\\r\\n            te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\\r\\n\\r\\n            te[ 3 ] = t12 * detInv;\\r\\n            te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\\r\\n            te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\\r\\n\\r\\n            te[ 6 ] = t13 * detInv;\\r\\n            te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\\r\\n            te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        transpose: function () {\\r\\n\\r\\n            var tmp, m = this.elements;\\r\\n\\r\\n            tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\\r\\n            tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\\r\\n            tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getNormalMatrix: function ( matrix4 ) {\\r\\n\\r\\n            return this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\\r\\n\\r\\n        },\\r\\n\\r\\n        transposeIntoArray: function ( r ) {\\r\\n\\r\\n            var m = this.elements;\\r\\n\\r\\n            r[ 0 ] = m[ 0 ];\\r\\n            r[ 1 ] = m[ 3 ];\\r\\n            r[ 2 ] = m[ 6 ];\\r\\n            r[ 3 ] = m[ 1 ];\\r\\n            r[ 4 ] = m[ 4 ];\\r\\n            r[ 5 ] = m[ 7 ];\\r\\n            r[ 6 ] = m[ 2 ];\\r\\n            r[ 7 ] = m[ 5 ];\\r\\n            r[ 8 ] = m[ 8 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\\r\\n\\r\\n            var c = Math.cos( rotation );\\r\\n            var s = Math.sin( rotation );\\r\\n\\r\\n            this.set(\\r\\n                sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\\r\\n                - sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\\r\\n                0, 0, 1\\r\\n            );\\r\\n\\r\\n        },\\r\\n\\r\\n        scale: function ( sx, sy ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\\r\\n            te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        rotate: function ( theta ) {\\r\\n\\r\\n            var c = Math.cos( theta );\\r\\n            var s = Math.sin( theta );\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            var a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\\r\\n            var a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\\r\\n\\r\\n            te[ 0 ] = c * a11 + s * a21;\\r\\n            te[ 3 ] = c * a12 + s * a22;\\r\\n            te[ 6 ] = c * a13 + s * a23;\\r\\n\\r\\n            te[ 1 ] = - s * a11 + c * a21;\\r\\n            te[ 4 ] = - s * a12 + c * a22;\\r\\n            te[ 7 ] = - s * a13 + c * a23;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        translate: function ( tx, ty ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\\r\\n            te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( matrix ) {\\r\\n\\r\\n            var te = this.elements;\\r\\n            var me = matrix.elements;\\r\\n\\r\\n            for ( var i = 0; i < 9; i ++ ) {\\r\\n\\r\\n                if ( te[ i ] !== me[ i ] ) return false;\\r\\n\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            for ( var i = 0; i < 9; i ++ ) {\\r\\n\\r\\n                this.elements[ i ] = array[ i + offset ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            var te = this.elements;\\r\\n\\r\\n            array[ offset ] = te[ 0 ];\\r\\n            array[ offset + 1 ] = te[ 1 ];\\r\\n            array[ offset + 2 ] = te[ 2 ];\\r\\n\\r\\n            array[ offset + 3 ] = te[ 3 ];\\r\\n            array[ offset + 4 ] = te[ 4 ];\\r\\n            array[ offset + 5 ] = te[ 5 ];\\r\\n\\r\\n            array[ offset + 6 ] = te[ 6 ];\\r\\n            array[ offset + 7 ] = te[ 7 ];\\r\\n            array[ offset + 8 ] = te[ 8 ];\\r\\n\\r\\n            return array;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author szimek / https://github.com/szimek/\\r\\n     */\\r\\n\\r\\n    var ImageUtils = {\\r\\n\\r\\n        getDataURL: function ( image ) {\\r\\n\\r\\n            var canvas;\\r\\n\\r\\n            if ( image instanceof HTMLCanvasElement ) {\\r\\n\\r\\n                canvas = image;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n                canvas.width = image.width;\\r\\n                canvas.height = image.height;\\r\\n\\r\\n                var context = canvas.getContext( '2d' );\\r\\n\\r\\n                if ( image instanceof ImageData ) {\\r\\n\\r\\n                    context.putImageData( image, 0, 0 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    context.drawImage( image, 0, 0, image.width, image.height );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( canvas.width > 2048 || canvas.height > 2048 ) {\\r\\n\\r\\n                return canvas.toDataURL( 'image/jpeg', 0.6 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                return canvas.toDataURL( 'image/png' );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author szimek / https://github.com/szimek/\\r\\n     */\\r\\n\\r\\n    var textureId = 0;\\r\\n\\r\\n    function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\r\\n\\r\\n        Object.defineProperty( this, 'id', { value: textureId ++ } );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.name = '';\\r\\n\\r\\n        this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\\r\\n        this.mipmaps = [];\\r\\n\\r\\n        this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\\r\\n\\r\\n        this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\\r\\n        this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\\r\\n\\r\\n        this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\\r\\n        this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\\r\\n\\r\\n        this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\\r\\n\\r\\n        this.format = format !== undefined ? format : RGBAFormat;\\r\\n        this.type = type !== undefined ? type : UnsignedByteType;\\r\\n\\r\\n        this.offset = new Vector2( 0, 0 );\\r\\n        this.repeat = new Vector2( 1, 1 );\\r\\n        this.center = new Vector2( 0, 0 );\\r\\n        this.rotation = 0;\\r\\n\\r\\n        this.matrixAutoUpdate = true;\\r\\n        this.matrix = new Matrix3();\\r\\n\\r\\n        this.generateMipmaps = true;\\r\\n        this.premultiplyAlpha = false;\\r\\n        this.flipY = true;\\r\\n        this.unpackAlignment = 4;\\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\\r\\n\\r\\n        // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\\r\\n        //\\r\\n        // Also changing the encoding after already used by a Material will not automatically make the Material\\r\\n        // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\\r\\n        this.encoding = encoding !== undefined ? encoding : LinearEncoding;\\r\\n\\r\\n        this.version = 0;\\r\\n        this.onUpdate = null;\\r\\n\\r\\n    }\\r\\n\\r\\n    Texture.DEFAULT_IMAGE = undefined;\\r\\n    Texture.DEFAULT_MAPPING = UVMapping;\\r\\n\\r\\n    Texture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: Texture,\\r\\n\\r\\n        isTexture: true,\\r\\n\\r\\n        updateMatrix: function () {\\r\\n\\r\\n            this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.name = source.name;\\r\\n\\r\\n            this.image = source.image;\\r\\n            this.mipmaps = source.mipmaps.slice( 0 );\\r\\n\\r\\n            this.mapping = source.mapping;\\r\\n\\r\\n            this.wrapS = source.wrapS;\\r\\n            this.wrapT = source.wrapT;\\r\\n\\r\\n            this.magFilter = source.magFilter;\\r\\n            this.minFilter = source.minFilter;\\r\\n\\r\\n            this.anisotropy = source.anisotropy;\\r\\n\\r\\n            this.format = source.format;\\r\\n            this.type = source.type;\\r\\n\\r\\n            this.offset.copy( source.offset );\\r\\n            this.repeat.copy( source.repeat );\\r\\n            this.center.copy( source.center );\\r\\n            this.rotation = source.rotation;\\r\\n\\r\\n            this.matrixAutoUpdate = source.matrixAutoUpdate;\\r\\n            this.matrix.copy( source.matrix );\\r\\n\\r\\n            this.generateMipmaps = source.generateMipmaps;\\r\\n            this.premultiplyAlpha = source.premultiplyAlpha;\\r\\n            this.flipY = source.flipY;\\r\\n            this.unpackAlignment = source.unpackAlignment;\\r\\n            this.encoding = source.encoding;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var isRootObject = ( meta === undefined || typeof meta === 'string' );\\r\\n\\r\\n            if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\\r\\n\\r\\n                return meta.textures[ this.uuid ];\\r\\n\\r\\n            }\\r\\n\\r\\n            var output = {\\r\\n\\r\\n                metadata: {\\r\\n                    version: 4.5,\\r\\n                    type: 'Texture',\\r\\n                    generator: 'Texture.toJSON'\\r\\n                },\\r\\n\\r\\n                uuid: this.uuid,\\r\\n                name: this.name,\\r\\n\\r\\n                mapping: this.mapping,\\r\\n\\r\\n                repeat: [ this.repeat.x, this.repeat.y ],\\r\\n                offset: [ this.offset.x, this.offset.y ],\\r\\n                center: [ this.center.x, this.center.y ],\\r\\n                rotation: this.rotation,\\r\\n\\r\\n                wrap: [ this.wrapS, this.wrapT ],\\r\\n\\r\\n                format: this.format,\\r\\n                minFilter: this.minFilter,\\r\\n                magFilter: this.magFilter,\\r\\n                anisotropy: this.anisotropy,\\r\\n\\r\\n                flipY: this.flipY\\r\\n\\r\\n            };\\r\\n\\r\\n            if ( this.image !== undefined ) {\\r\\n\\r\\n                // TODO: Move to THREE.Image\\r\\n\\r\\n                var image = this.image;\\r\\n\\r\\n                if ( image.uuid === undefined ) {\\r\\n\\r\\n                    image.uuid = _Math.generateUUID(); // UGH\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\\r\\n\\r\\n                    var url;\\r\\n\\r\\n                    if ( Array.isArray( image ) ) {\\r\\n\\r\\n                        // process array of images e.g. CubeTexture\\r\\n\\r\\n                        url = [];\\r\\n\\r\\n                        for ( var i = 0, l = image.length; i < l; i ++ ) {\\r\\n\\r\\n                            url.push( ImageUtils.getDataURL( image[ i ] ) );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // process single image\\r\\n\\r\\n                        url = ImageUtils.getDataURL( image );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    meta.images[ image.uuid ] = {\\r\\n                        uuid: image.uuid,\\r\\n                        url: url\\r\\n                    };\\r\\n\\r\\n                }\\r\\n\\r\\n                output.image = image.uuid;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ! isRootObject ) {\\r\\n\\r\\n                meta.textures[ this.uuid ] = output;\\r\\n\\r\\n            }\\r\\n\\r\\n            return output;\\r\\n\\r\\n        },\\r\\n\\r\\n        dispose: function () {\\r\\n\\r\\n            this.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n        },\\r\\n\\r\\n        transformUv: function ( uv ) {\\r\\n\\r\\n            if ( this.mapping !== UVMapping ) return uv;\\r\\n\\r\\n            uv.applyMatrix3( this.matrix );\\r\\n\\r\\n            if ( uv.x < 0 || uv.x > 1 ) {\\r\\n\\r\\n                switch ( this.wrapS ) {\\r\\n\\r\\n                    case RepeatWrapping:\\r\\n\\r\\n                        uv.x = uv.x - Math.floor( uv.x );\\r\\n                        break;\\r\\n\\r\\n                    case ClampToEdgeWrapping:\\r\\n\\r\\n                        uv.x = uv.x < 0 ? 0 : 1;\\r\\n                        break;\\r\\n\\r\\n                    case MirroredRepeatWrapping:\\r\\n\\r\\n                        if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\\r\\n\\r\\n                            uv.x = Math.ceil( uv.x ) - uv.x;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            uv.x = uv.x - Math.floor( uv.x );\\r\\n\\r\\n                        }\\r\\n                        break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( uv.y < 0 || uv.y > 1 ) {\\r\\n\\r\\n                switch ( this.wrapT ) {\\r\\n\\r\\n                    case RepeatWrapping:\\r\\n\\r\\n                        uv.y = uv.y - Math.floor( uv.y );\\r\\n                        break;\\r\\n\\r\\n                    case ClampToEdgeWrapping:\\r\\n\\r\\n                        uv.y = uv.y < 0 ? 0 : 1;\\r\\n                        break;\\r\\n\\r\\n                    case MirroredRepeatWrapping:\\r\\n\\r\\n                        if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\\r\\n\\r\\n                            uv.y = Math.ceil( uv.y ) - uv.y;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            uv.y = uv.y - Math.floor( uv.y );\\r\\n\\r\\n                        }\\r\\n                        break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.flipY ) {\\r\\n\\r\\n                uv.y = 1 - uv.y;\\r\\n\\r\\n            }\\r\\n\\r\\n            return uv;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperty( Texture.prototype, \\\"needsUpdate\\\", {\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            if ( value === true ) this.version ++;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n     * @author philogb / http://blog.thejit.org/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author egraether / http://egraether.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Vector4( x, y, z, w ) {\\r\\n\\r\\n        this.x = x || 0;\\r\\n        this.y = y || 0;\\r\\n        this.z = z || 0;\\r\\n        this.w = ( w !== undefined ) ? w : 1;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Vector4.prototype, {\\r\\n\\r\\n        isVector4: true,\\r\\n\\r\\n        set: function ( x, y, z, w ) {\\r\\n\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.z = z;\\r\\n            this.w = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setScalar: function ( scalar ) {\\r\\n\\r\\n            this.x = scalar;\\r\\n            this.y = scalar;\\r\\n            this.z = scalar;\\r\\n            this.w = scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setX: function ( x ) {\\r\\n\\r\\n            this.x = x;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setY: function ( y ) {\\r\\n\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setZ: function ( z ) {\\r\\n\\r\\n            this.z = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setW: function ( w ) {\\r\\n\\r\\n            this.w = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setComponent: function ( index, value ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: this.x = value; break;\\r\\n                case 1: this.y = value; break;\\r\\n                case 2: this.z = value; break;\\r\\n                case 3: this.w = value; break;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getComponent: function ( index ) {\\r\\n\\r\\n            switch ( index ) {\\r\\n\\r\\n                case 0: return this.x;\\r\\n                case 1: return this.y;\\r\\n                case 2: return this.z;\\r\\n                case 3: return this.w;\\r\\n                default: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.x, this.y, this.z, this.w );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( v ) {\\r\\n\\r\\n            this.x = v.x;\\r\\n            this.y = v.y;\\r\\n            this.z = v.z;\\r\\n            this.w = ( v.w !== undefined ) ? v.w : 1;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        add: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n                return this.addVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x += v.x;\\r\\n            this.y += v.y;\\r\\n            this.z += v.z;\\r\\n            this.w += v.w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScalar: function ( s ) {\\r\\n\\r\\n            this.x += s;\\r\\n            this.y += s;\\r\\n            this.z += s;\\r\\n            this.w += s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x + b.x;\\r\\n            this.y = a.y + b.y;\\r\\n            this.z = a.z + b.z;\\r\\n            this.w = a.w + b.w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScaledVector: function ( v, s ) {\\r\\n\\r\\n            this.x += v.x * s;\\r\\n            this.y += v.y * s;\\r\\n            this.z += v.z * s;\\r\\n            this.w += v.w * s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        sub: function ( v, w ) {\\r\\n\\r\\n            if ( w !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n                return this.subVectors( v, w );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x -= v.x;\\r\\n            this.y -= v.y;\\r\\n            this.z -= v.z;\\r\\n            this.w -= v.w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subScalar: function ( s ) {\\r\\n\\r\\n            this.x -= s;\\r\\n            this.y -= s;\\r\\n            this.z -= s;\\r\\n            this.w -= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        subVectors: function ( a, b ) {\\r\\n\\r\\n            this.x = a.x - b.x;\\r\\n            this.y = a.y - b.y;\\r\\n            this.z = a.z - b.z;\\r\\n            this.w = a.w - b.w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( scalar ) {\\r\\n\\r\\n            this.x *= scalar;\\r\\n            this.y *= scalar;\\r\\n            this.z *= scalar;\\r\\n            this.w *= scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function ( m ) {\\r\\n\\r\\n            var x = this.x, y = this.y, z = this.z, w = this.w;\\r\\n            var e = m.elements;\\r\\n\\r\\n            this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\\r\\n            this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\\r\\n            this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\\r\\n            this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        divideScalar: function ( scalar ) {\\r\\n\\r\\n            return this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n        },\\r\\n\\r\\n        setAxisAngleFromQuaternion: function ( q ) {\\r\\n\\r\\n            // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\\r\\n\\r\\n            // q is assumed to be normalized\\r\\n\\r\\n            this.w = 2 * Math.acos( q.w );\\r\\n\\r\\n            var s = Math.sqrt( 1 - q.w * q.w );\\r\\n\\r\\n            if ( s < 0.0001 ) {\\r\\n\\r\\n                this.x = 1;\\r\\n                this.y = 0;\\r\\n                this.z = 0;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.x = q.x / s;\\r\\n                this.y = q.y / s;\\r\\n                this.z = q.z / s;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setAxisAngleFromRotationMatrix: function ( m ) {\\r\\n\\r\\n            // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\\r\\n\\r\\n            // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n            var angle, x, y, z,\\t\\t// variables for result\\r\\n                epsilon = 0.01,\\t\\t// margin to allow for rounding errors\\r\\n                epsilon2 = 0.1,\\t\\t// margin to distinguish between 0 and 180 degrees\\r\\n\\r\\n                te = m.elements,\\r\\n\\r\\n                m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\r\\n                m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\r\\n                m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\r\\n\\r\\n            if ( ( Math.abs( m12 - m21 ) < epsilon ) &&\\r\\n                ( Math.abs( m13 - m31 ) < epsilon ) &&\\r\\n                ( Math.abs( m23 - m32 ) < epsilon ) ) {\\r\\n\\r\\n                // singularity found\\r\\n                // first check for identity matrix which must have +1 for all terms\\r\\n                // in leading diagonal and zero in other terms\\r\\n\\r\\n                if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\\r\\n                    ( Math.abs( m13 + m31 ) < epsilon2 ) &&\\r\\n                    ( Math.abs( m23 + m32 ) < epsilon2 ) &&\\r\\n                    ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\\r\\n\\r\\n                    // this singularity is identity matrix so angle = 0\\r\\n\\r\\n                    this.set( 1, 0, 0, 0 );\\r\\n\\r\\n                    return this; // zero angle, arbitrary axis\\r\\n\\r\\n                }\\r\\n\\r\\n                // otherwise this singularity is angle = 180\\r\\n\\r\\n                angle = Math.PI;\\r\\n\\r\\n                var xx = ( m11 + 1 ) / 2;\\r\\n                var yy = ( m22 + 1 ) / 2;\\r\\n                var zz = ( m33 + 1 ) / 2;\\r\\n                var xy = ( m12 + m21 ) / 4;\\r\\n                var xz = ( m13 + m31 ) / 4;\\r\\n                var yz = ( m23 + m32 ) / 4;\\r\\n\\r\\n                if ( ( xx > yy ) && ( xx > zz ) ) {\\r\\n\\r\\n                    // m11 is the largest diagonal term\\r\\n\\r\\n                    if ( xx < epsilon ) {\\r\\n\\r\\n                        x = 0;\\r\\n                        y = 0.707106781;\\r\\n                        z = 0.707106781;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        x = Math.sqrt( xx );\\r\\n                        y = xy / x;\\r\\n                        z = xz / x;\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( yy > zz ) {\\r\\n\\r\\n                    // m22 is the largest diagonal term\\r\\n\\r\\n                    if ( yy < epsilon ) {\\r\\n\\r\\n                        x = 0.707106781;\\r\\n                        y = 0;\\r\\n                        z = 0.707106781;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        y = Math.sqrt( yy );\\r\\n                        x = xy / y;\\r\\n                        z = yz / y;\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // m33 is the largest diagonal term so base result on this\\r\\n\\r\\n                    if ( zz < epsilon ) {\\r\\n\\r\\n                        x = 0.707106781;\\r\\n                        y = 0.707106781;\\r\\n                        z = 0;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        z = Math.sqrt( zz );\\r\\n                        x = xz / z;\\r\\n                        y = yz / z;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this.set( x, y, z, angle );\\r\\n\\r\\n                return this; // return 180 deg rotation\\r\\n\\r\\n            }\\r\\n\\r\\n            // as we have reached here there are no singularities so we can handle normally\\r\\n\\r\\n            var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\\r\\n                ( m13 - m31 ) * ( m13 - m31 ) +\\r\\n                ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\\r\\n\\r\\n            if ( Math.abs( s ) < 0.001 ) s = 1;\\r\\n\\r\\n            // prevent divide by zero, should not happen if matrix is orthogonal and should be\\r\\n            // caught by singularity test above, but I've left it in just in case\\r\\n\\r\\n            this.x = ( m32 - m23 ) / s;\\r\\n            this.y = ( m13 - m31 ) / s;\\r\\n            this.z = ( m21 - m12 ) / s;\\r\\n            this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        min: function ( v ) {\\r\\n\\r\\n            this.x = Math.min( this.x, v.x );\\r\\n            this.y = Math.min( this.y, v.y );\\r\\n            this.z = Math.min( this.z, v.z );\\r\\n            this.w = Math.min( this.w, v.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        max: function ( v ) {\\r\\n\\r\\n            this.x = Math.max( this.x, v.x );\\r\\n            this.y = Math.max( this.y, v.y );\\r\\n            this.z = Math.max( this.z, v.z );\\r\\n            this.w = Math.max( this.w, v.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clamp: function ( min, max ) {\\r\\n\\r\\n            // assumes min < max, componentwise\\r\\n\\r\\n            this.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n            this.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n            this.z = Math.max( min.z, Math.min( max.z, this.z ) );\\r\\n            this.w = Math.max( min.w, Math.min( max.w, this.w ) );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clampScalar: function () {\\r\\n\\r\\n            var min, max;\\r\\n\\r\\n            return function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n                if ( min === undefined ) {\\r\\n\\r\\n                    min = new Vector4();\\r\\n                    max = new Vector4();\\r\\n\\r\\n                }\\r\\n\\r\\n                min.set( minVal, minVal, minVal, minVal );\\r\\n                max.set( maxVal, maxVal, maxVal, maxVal );\\r\\n\\r\\n                return this.clamp( min, max );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clampLength: function ( min, max ) {\\r\\n\\r\\n            var length = this.length();\\r\\n\\r\\n            return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        floor: function () {\\r\\n\\r\\n            this.x = Math.floor( this.x );\\r\\n            this.y = Math.floor( this.y );\\r\\n            this.z = Math.floor( this.z );\\r\\n            this.w = Math.floor( this.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        ceil: function () {\\r\\n\\r\\n            this.x = Math.ceil( this.x );\\r\\n            this.y = Math.ceil( this.y );\\r\\n            this.z = Math.ceil( this.z );\\r\\n            this.w = Math.ceil( this.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        round: function () {\\r\\n\\r\\n            this.x = Math.round( this.x );\\r\\n            this.y = Math.round( this.y );\\r\\n            this.z = Math.round( this.z );\\r\\n            this.w = Math.round( this.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        roundToZero: function () {\\r\\n\\r\\n            this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n            this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n            this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\r\\n            this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        negate: function () {\\r\\n\\r\\n            this.x = - this.x;\\r\\n            this.y = - this.y;\\r\\n            this.z = - this.z;\\r\\n            this.w = - this.w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dot: function ( v ) {\\r\\n\\r\\n            return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\\r\\n\\r\\n        },\\r\\n\\r\\n        lengthSq: function () {\\r\\n\\r\\n            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\\r\\n\\r\\n        },\\r\\n\\r\\n        length: function () {\\r\\n\\r\\n            return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\\r\\n\\r\\n        },\\r\\n\\r\\n        manhattanLength: function () {\\r\\n\\r\\n            return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\\r\\n\\r\\n        },\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            return this.divideScalar( this.length() || 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        setLength: function ( length ) {\\r\\n\\r\\n            return this.normalize().multiplyScalar( length );\\r\\n\\r\\n        },\\r\\n\\r\\n        lerp: function ( v, alpha ) {\\r\\n\\r\\n            this.x += ( v.x - this.x ) * alpha;\\r\\n            this.y += ( v.y - this.y ) * alpha;\\r\\n            this.z += ( v.z - this.z ) * alpha;\\r\\n            this.w += ( v.w - this.w ) * alpha;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        lerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n            return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( v ) {\\r\\n\\r\\n            return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.x = array[ offset ];\\r\\n            this.y = array[ offset + 1 ];\\r\\n            this.z = array[ offset + 2 ];\\r\\n            this.w = array[ offset + 3 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this.x;\\r\\n            array[ offset + 1 ] = this.y;\\r\\n            array[ offset + 2 ] = this.z;\\r\\n            array[ offset + 3 ] = this.w;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromBufferAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            if ( offset !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.x = attribute.getX( index );\\r\\n            this.y = attribute.getY( index );\\r\\n            this.z = attribute.getZ( index );\\r\\n            this.w = attribute.getW( index );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author szimek / https://github.com/szimek/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author Marius Kintel / https://github.com/kintel\\r\\n     */\\r\\n\\r\\n    /*\\r\\n\\t In options, we can specify:\\r\\n\\t * Texture parameters for an auto-generated target texture\\r\\n\\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\\r\\n\\t*/\\r\\n    function WebGLRenderTarget( width, height, options ) {\\r\\n\\r\\n        this.width = width;\\r\\n        this.height = height;\\r\\n\\r\\n        this.scissor = new Vector4( 0, 0, width, height );\\r\\n        this.scissorTest = false;\\r\\n\\r\\n        this.viewport = new Vector4( 0, 0, width, height );\\r\\n\\r\\n        options = options || {};\\r\\n\\r\\n        if ( options.minFilter === undefined ) options.minFilter = LinearFilter;\\r\\n\\r\\n        this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\\r\\n\\r\\n        this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\\r\\n\\r\\n        this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\\r\\n        this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\\r\\n        this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\\r\\n\\r\\n    }\\r\\n\\r\\n    WebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: WebGLRenderTarget,\\r\\n\\r\\n        isWebGLRenderTarget: true,\\r\\n\\r\\n        setSize: function ( width, height ) {\\r\\n\\r\\n            if ( this.width !== width || this.height !== height ) {\\r\\n\\r\\n                this.width = width;\\r\\n                this.height = height;\\r\\n\\r\\n                this.dispose();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.viewport.set( 0, 0, width, height );\\r\\n            this.scissor.set( 0, 0, width, height );\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.width = source.width;\\r\\n            this.height = source.height;\\r\\n\\r\\n            this.viewport.copy( source.viewport );\\r\\n\\r\\n            this.texture = source.texture.clone();\\r\\n\\r\\n            this.depthBuffer = source.depthBuffer;\\r\\n            this.stencilBuffer = source.stencilBuffer;\\r\\n            this.depthTexture = source.depthTexture;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dispose: function () {\\r\\n\\r\\n            this.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com\\r\\n     */\\r\\n\\r\\n    function WebGLRenderTargetCube( width, height, options ) {\\r\\n\\r\\n        WebGLRenderTarget.call( this, width, height, options );\\r\\n\\r\\n        this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\\r\\n        this.activeMipMapLevel = 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\\r\\n    WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\\r\\n\\r\\n    WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\r\\n\\r\\n        Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n        this.image = { data: data, width: width, height: height };\\r\\n\\r\\n        this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\\r\\n        this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\\r\\n\\r\\n        this.generateMipmaps = false;\\r\\n        this.flipY = false;\\r\\n        this.unpackAlignment = 1;\\r\\n\\r\\n    }\\r\\n\\r\\n    DataTexture.prototype = Object.create( Texture.prototype );\\r\\n    DataTexture.prototype.constructor = DataTexture;\\r\\n\\r\\n    DataTexture.prototype.isDataTexture = true;\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Box3( min, max ) {\\r\\n\\r\\n        this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\\r\\n        this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Box3.prototype, {\\r\\n\\r\\n        isBox3: true,\\r\\n\\r\\n        set: function ( min, max ) {\\r\\n\\r\\n            this.min.copy( min );\\r\\n            this.max.copy( max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromArray: function ( array ) {\\r\\n\\r\\n            var minX = + Infinity;\\r\\n            var minY = + Infinity;\\r\\n            var minZ = + Infinity;\\r\\n\\r\\n            var maxX = - Infinity;\\r\\n            var maxY = - Infinity;\\r\\n            var maxZ = - Infinity;\\r\\n\\r\\n            for ( var i = 0, l = array.length; i < l; i += 3 ) {\\r\\n\\r\\n                var x = array[ i ];\\r\\n                var y = array[ i + 1 ];\\r\\n                var z = array[ i + 2 ];\\r\\n\\r\\n                if ( x < minX ) minX = x;\\r\\n                if ( y < minY ) minY = y;\\r\\n                if ( z < minZ ) minZ = z;\\r\\n\\r\\n                if ( x > maxX ) maxX = x;\\r\\n                if ( y > maxY ) maxY = y;\\r\\n                if ( z > maxZ ) maxZ = z;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.min.set( minX, minY, minZ );\\r\\n            this.max.set( maxX, maxY, maxZ );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromBufferAttribute: function ( attribute ) {\\r\\n\\r\\n            var minX = + Infinity;\\r\\n            var minY = + Infinity;\\r\\n            var minZ = + Infinity;\\r\\n\\r\\n            var maxX = - Infinity;\\r\\n            var maxY = - Infinity;\\r\\n            var maxZ = - Infinity;\\r\\n\\r\\n            for ( var i = 0, l = attribute.count; i < l; i ++ ) {\\r\\n\\r\\n                var x = attribute.getX( i );\\r\\n                var y = attribute.getY( i );\\r\\n                var z = attribute.getZ( i );\\r\\n\\r\\n                if ( x < minX ) minX = x;\\r\\n                if ( y < minY ) minY = y;\\r\\n                if ( z < minZ ) minZ = z;\\r\\n\\r\\n                if ( x > maxX ) maxX = x;\\r\\n                if ( y > maxY ) maxY = y;\\r\\n                if ( z > maxZ ) maxZ = z;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.min.set( minX, minY, minZ );\\r\\n            this.max.set( maxX, maxY, maxZ );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPoints: function ( points ) {\\r\\n\\r\\n            this.makeEmpty();\\r\\n\\r\\n            for ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n                this.expandByPoint( points[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCenterAndSize: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function setFromCenterAndSize( center, size ) {\\r\\n\\r\\n                var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\r\\n\\r\\n                this.min.copy( center ).sub( halfSize );\\r\\n                this.max.copy( center ).add( halfSize );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        setFromObject: function ( object ) {\\r\\n\\r\\n            this.makeEmpty();\\r\\n\\r\\n            return this.expandByObject( object );\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( box ) {\\r\\n\\r\\n            this.min.copy( box.min );\\r\\n            this.max.copy( box.max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeEmpty: function () {\\r\\n\\r\\n            this.min.x = this.min.y = this.min.z = + Infinity;\\r\\n            this.max.x = this.max.y = this.max.z = - Infinity;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        isEmpty: function () {\\r\\n\\r\\n            // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\r\\n\\r\\n            return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        getCenter: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box3: .getCenter() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\r\\n\\r\\n        },\\r\\n\\r\\n        getSize: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box3: .getSize() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByPoint: function ( point ) {\\r\\n\\r\\n            this.min.min( point );\\r\\n            this.max.max( point );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByVector: function ( vector ) {\\r\\n\\r\\n            this.min.sub( vector );\\r\\n            this.max.add( vector );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByScalar: function ( scalar ) {\\r\\n\\r\\n            this.min.addScalar( - scalar );\\r\\n            this.max.addScalar( scalar );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByObject: function () {\\r\\n\\r\\n            // Computes the world-axis-aligned bounding box of an object (including its children),\\r\\n            // accounting for both the object's, and children's, world transforms\\r\\n\\r\\n            var scope, i, l;\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            function traverse( node ) {\\r\\n\\r\\n                var geometry = node.geometry;\\r\\n\\r\\n                if ( geometry !== undefined ) {\\r\\n\\r\\n                    if ( geometry.isGeometry ) {\\r\\n\\r\\n                        var vertices = geometry.vertices;\\r\\n\\r\\n                        for ( i = 0, l = vertices.length; i < l; i ++ ) {\\r\\n\\r\\n                            v1.copy( vertices[ i ] );\\r\\n                            v1.applyMatrix4( node.matrixWorld );\\r\\n\\r\\n                            scope.expandByPoint( v1 );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                        var attribute = geometry.attributes.position;\\r\\n\\r\\n                        if ( attribute !== undefined ) {\\r\\n\\r\\n                            for ( i = 0, l = attribute.count; i < l; i ++ ) {\\r\\n\\r\\n                                v1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\\r\\n\\r\\n                                scope.expandByPoint( v1 );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return function expandByObject( object ) {\\r\\n\\r\\n                scope = this;\\r\\n\\r\\n                object.updateMatrixWorld( true );\\r\\n\\r\\n                object.traverse( traverse );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        containsPoint: function ( point ) {\\r\\n\\r\\n            return point.x < this.min.x || point.x > this.max.x ||\\r\\n            point.y < this.min.y || point.y > this.max.y ||\\r\\n            point.z < this.min.z || point.z > this.max.z ? false : true;\\r\\n\\r\\n        },\\r\\n\\r\\n        containsBox: function ( box ) {\\r\\n\\r\\n            return this.min.x <= box.min.x && box.max.x <= this.max.x &&\\r\\n                this.min.y <= box.min.y && box.max.y <= this.max.y &&\\r\\n                this.min.z <= box.min.z && box.max.z <= this.max.z;\\r\\n\\r\\n        },\\r\\n\\r\\n        getParameter: function ( point, target ) {\\r\\n\\r\\n            // This can potentially have a divide by zero if the box\\r\\n            // has a size dimension of 0.\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box3: .getParameter() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.set(\\r\\n                ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\r\\n                ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\\r\\n                ( point.z - this.min.z ) / ( this.max.z - this.min.z )\\r\\n            );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function ( box ) {\\r\\n\\r\\n            // using 6 splitting planes to rule out intersections.\\r\\n            return box.max.x < this.min.x || box.min.x > this.max.x ||\\r\\n            box.max.y < this.min.y || box.min.y > this.max.y ||\\r\\n            box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsSphere: ( function () {\\r\\n\\r\\n            var closestPoint = new Vector3();\\r\\n\\r\\n            return function intersectsSphere( sphere ) {\\r\\n\\r\\n                // Find the point on the AABB closest to the sphere center.\\r\\n                this.clampPoint( sphere.center, closestPoint );\\r\\n\\r\\n                // If that point is inside the sphere, the AABB and sphere intersect.\\r\\n                return closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\\r\\n\\r\\n            };\\r\\n\\r\\n        } )(),\\r\\n\\r\\n        intersectsPlane: function ( plane ) {\\r\\n\\r\\n            // We compute the minimum and maximum dot product values. If those values\\r\\n            // are on the same side (back or front) of the plane, then there is no intersection.\\r\\n\\r\\n            var min, max;\\r\\n\\r\\n            if ( plane.normal.x > 0 ) {\\r\\n\\r\\n                min = plane.normal.x * this.min.x;\\r\\n                max = plane.normal.x * this.max.x;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                min = plane.normal.x * this.max.x;\\r\\n                max = plane.normal.x * this.min.x;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( plane.normal.y > 0 ) {\\r\\n\\r\\n                min += plane.normal.y * this.min.y;\\r\\n                max += plane.normal.y * this.max.y;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                min += plane.normal.y * this.max.y;\\r\\n                max += plane.normal.y * this.min.y;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( plane.normal.z > 0 ) {\\r\\n\\r\\n                min += plane.normal.z * this.min.z;\\r\\n                max += plane.normal.z * this.max.z;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                min += plane.normal.z * this.max.z;\\r\\n                max += plane.normal.z * this.min.z;\\r\\n\\r\\n            }\\r\\n\\r\\n            return ( min <= - plane.constant && max >= - plane.constant );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsTriangle: ( function () {\\r\\n\\r\\n            // triangle centered vertices\\r\\n            var v0 = new Vector3();\\r\\n            var v1 = new Vector3();\\r\\n            var v2 = new Vector3();\\r\\n\\r\\n            // triangle edge vectors\\r\\n            var f0 = new Vector3();\\r\\n            var f1 = new Vector3();\\r\\n            var f2 = new Vector3();\\r\\n\\r\\n            var testAxis = new Vector3();\\r\\n\\r\\n            var center = new Vector3();\\r\\n            var extents = new Vector3();\\r\\n\\r\\n            var triangleNormal = new Vector3();\\r\\n\\r\\n            function satForAxes( axes ) {\\r\\n\\r\\n                var i, j;\\r\\n\\r\\n                for ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\\r\\n\\r\\n                    testAxis.fromArray( axes, i );\\r\\n                    // project the aabb onto the seperating axis\\r\\n                    var r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\\r\\n                    // project all 3 vertices of the triangle onto the seperating axis\\r\\n                    var p0 = v0.dot( testAxis );\\r\\n                    var p1 = v1.dot( testAxis );\\r\\n                    var p2 = v2.dot( testAxis );\\r\\n                    // actual test, basically see if either of the most extreme of the triangle points intersects r\\r\\n                    if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n                        // points of the projected triangle are outside the projected half-length of the aabb\\r\\n                        // the axis is seperating and we can exit\\r\\n                        return false;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            return function intersectsTriangle( triangle ) {\\r\\n\\r\\n                if ( this.isEmpty() ) {\\r\\n\\r\\n                    return false;\\r\\n\\r\\n                }\\r\\n\\r\\n                // compute box center and extents\\r\\n                this.getCenter( center );\\r\\n                extents.subVectors( this.max, center );\\r\\n\\r\\n                // translate triangle to aabb origin\\r\\n                v0.subVectors( triangle.a, center );\\r\\n                v1.subVectors( triangle.b, center );\\r\\n                v2.subVectors( triangle.c, center );\\r\\n\\r\\n                // compute edge vectors for triangle\\r\\n                f0.subVectors( v1, v0 );\\r\\n                f1.subVectors( v2, v1 );\\r\\n                f2.subVectors( v0, v2 );\\r\\n\\r\\n                // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\\r\\n                // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\\r\\n                // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\\r\\n                var axes = [\\r\\n                    0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\\r\\n                    f0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\\r\\n                    - f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\\r\\n                ];\\r\\n                if ( ! satForAxes( axes ) ) {\\r\\n\\r\\n                    return false;\\r\\n\\r\\n                }\\r\\n\\r\\n                // test 3 face normals from the aabb\\r\\n                axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\\r\\n                if ( ! satForAxes( axes ) ) {\\r\\n\\r\\n                    return false;\\r\\n\\r\\n                }\\r\\n\\r\\n                // finally testing the face normal of the triangle\\r\\n                // use already existing triangle edge vectors here\\r\\n                triangleNormal.crossVectors( f0, f1 );\\r\\n                axes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\\r\\n                return satForAxes( axes );\\r\\n\\r\\n            };\\r\\n\\r\\n        } )(),\\r\\n\\r\\n        clampPoint: function ( point, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box3: .clampPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( point ).clamp( this.min, this.max );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPoint: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function distanceToPoint( point ) {\\r\\n\\r\\n                var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\r\\n                return clampedPoint.sub( point ).length();\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        getBoundingSphere: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function getBoundingSphere( target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\\r\\n                    target = new Sphere();\\r\\n\\r\\n                }\\r\\n\\r\\n                this.getCenter( target.center );\\r\\n\\r\\n                target.radius = this.getSize( v1 ).length() * 0.5;\\r\\n\\r\\n                return target;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersect: function ( box ) {\\r\\n\\r\\n            this.min.max( box.min );\\r\\n            this.max.min( box.max );\\r\\n\\r\\n            // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\\r\\n            if ( this.isEmpty() ) this.makeEmpty();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        union: function ( box ) {\\r\\n\\r\\n            this.min.min( box.min );\\r\\n            this.max.max( box.max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function () {\\r\\n\\r\\n            var points = [\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3(),\\r\\n                new Vector3()\\r\\n            ];\\r\\n\\r\\n            return function applyMatrix4( matrix ) {\\r\\n\\r\\n                // transform of empty box is an empty box.\\r\\n                if ( this.isEmpty() ) return this;\\r\\n\\r\\n                // NOTE: I am using a binary pattern to specify all 2^3 combinations below\\r\\n                points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\\r\\n                points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\\r\\n                points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\\r\\n                points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\\r\\n                points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\\r\\n                points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\\r\\n                points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\\r\\n                points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\\r\\n\\r\\n                this.setFromPoints( points );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translate: function ( offset ) {\\r\\n\\r\\n            this.min.add( offset );\\r\\n            this.max.add( offset );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( box ) {\\r\\n\\r\\n            return box.min.equals( this.min ) && box.max.equals( this.max );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Sphere( center, radius ) {\\r\\n\\r\\n        this.center = ( center !== undefined ) ? center : new Vector3();\\r\\n        this.radius = ( radius !== undefined ) ? radius : 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Sphere.prototype, {\\r\\n\\r\\n        set: function ( center, radius ) {\\r\\n\\r\\n            this.center.copy( center );\\r\\n            this.radius = radius;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPoints: function () {\\r\\n\\r\\n            var box = new Box3();\\r\\n\\r\\n            return function setFromPoints( points, optionalCenter ) {\\r\\n\\r\\n                var center = this.center;\\r\\n\\r\\n                if ( optionalCenter !== undefined ) {\\r\\n\\r\\n                    center.copy( optionalCenter );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    box.setFromPoints( points ).getCenter( center );\\r\\n\\r\\n                }\\r\\n\\r\\n                var maxRadiusSq = 0;\\r\\n\\r\\n                for ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n                    maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.radius = Math.sqrt( maxRadiusSq );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( sphere ) {\\r\\n\\r\\n            this.center.copy( sphere.center );\\r\\n            this.radius = sphere.radius;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        empty: function () {\\r\\n\\r\\n            return ( this.radius <= 0 );\\r\\n\\r\\n        },\\r\\n\\r\\n        containsPoint: function ( point ) {\\r\\n\\r\\n            return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPoint: function ( point ) {\\r\\n\\r\\n            return ( point.distanceTo( this.center ) - this.radius );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsSphere: function ( sphere ) {\\r\\n\\r\\n            var radiusSum = this.radius + sphere.radius;\\r\\n\\r\\n            return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function ( box ) {\\r\\n\\r\\n            return box.intersectsSphere( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsPlane: function ( plane ) {\\r\\n\\r\\n            return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\\r\\n\\r\\n        },\\r\\n\\r\\n        clampPoint: function ( point, target ) {\\r\\n\\r\\n            var deltaLengthSq = this.center.distanceToSquared( point );\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Sphere: .clampPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            target.copy( point );\\r\\n\\r\\n            if ( deltaLengthSq > ( this.radius * this.radius ) ) {\\r\\n\\r\\n                target.sub( this.center ).normalize();\\r\\n                target.multiplyScalar( this.radius ).add( this.center );\\r\\n\\r\\n            }\\r\\n\\r\\n            return target;\\r\\n\\r\\n        },\\r\\n\\r\\n        getBoundingBox: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\\r\\n                target = new Box3();\\r\\n\\r\\n            }\\r\\n\\r\\n            target.set( this.center, this.center );\\r\\n            target.expandByScalar( this.radius );\\r\\n\\r\\n            return target;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function ( matrix ) {\\r\\n\\r\\n            this.center.applyMatrix4( matrix );\\r\\n            this.radius = this.radius * matrix.getMaxScaleOnAxis();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        translate: function ( offset ) {\\r\\n\\r\\n            this.center.add( offset );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( sphere ) {\\r\\n\\r\\n            return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Plane( normal, constant ) {\\r\\n\\r\\n        // normal is assumed to be normalized\\r\\n\\r\\n        this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\\r\\n        this.constant = ( constant !== undefined ) ? constant : 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Plane.prototype, {\\r\\n\\r\\n        set: function ( normal, constant ) {\\r\\n\\r\\n            this.normal.copy( normal );\\r\\n            this.constant = constant;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setComponents: function ( x, y, z, w ) {\\r\\n\\r\\n            this.normal.set( x, y, z );\\r\\n            this.constant = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromNormalAndCoplanarPoint: function ( normal, point ) {\\r\\n\\r\\n            this.normal.copy( normal );\\r\\n            this.constant = - point.dot( this.normal );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCoplanarPoints: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n            var v2 = new Vector3();\\r\\n\\r\\n            return function setFromCoplanarPoints( a, b, c ) {\\r\\n\\r\\n                var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\\r\\n\\r\\n                // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\\r\\n\\r\\n                this.setFromNormalAndCoplanarPoint( normal, a );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( plane ) {\\r\\n\\r\\n            this.normal.copy( plane.normal );\\r\\n            this.constant = plane.constant;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            // Note: will lead to a divide by zero if the plane is invalid.\\r\\n\\r\\n            var inverseNormalLength = 1.0 / this.normal.length();\\r\\n            this.normal.multiplyScalar( inverseNormalLength );\\r\\n            this.constant *= inverseNormalLength;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        negate: function () {\\r\\n\\r\\n            this.constant *= - 1;\\r\\n            this.normal.negate();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPoint: function ( point ) {\\r\\n\\r\\n            return this.normal.dot( point ) + this.constant;\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToSphere: function ( sphere ) {\\r\\n\\r\\n            return this.distanceToPoint( sphere.center ) - sphere.radius;\\r\\n\\r\\n        },\\r\\n\\r\\n        projectPoint: function ( point, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Plane: .projectPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectLine: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function intersectLine( line, target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Plane: .intersectLine() target is now required' );\\r\\n                    target = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                var direction = line.delta( v1 );\\r\\n\\r\\n                var denominator = this.normal.dot( direction );\\r\\n\\r\\n                if ( denominator === 0 ) {\\r\\n\\r\\n                    // line is coplanar, return origin\\r\\n                    if ( this.distanceToPoint( line.start ) === 0 ) {\\r\\n\\r\\n                        return target.copy( line.start );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    // Unsure if this is the correct method to handle this case.\\r\\n                    return undefined;\\r\\n\\r\\n                }\\r\\n\\r\\n                var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\\r\\n\\r\\n                if ( t < 0 || t > 1 ) {\\r\\n\\r\\n                    return undefined;\\r\\n\\r\\n                }\\r\\n\\r\\n                return target.copy( direction ).multiplyScalar( t ).add( line.start );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersectsLine: function ( line ) {\\r\\n\\r\\n            // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\\r\\n\\r\\n            var startSign = this.distanceToPoint( line.start );\\r\\n            var endSign = this.distanceToPoint( line.end );\\r\\n\\r\\n            return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function ( box ) {\\r\\n\\r\\n            return box.intersectsPlane( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsSphere: function ( sphere ) {\\r\\n\\r\\n            return sphere.intersectsPlane( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        coplanarPoint: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( this.normal ).multiplyScalar( - this.constant );\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n            var m1 = new Matrix3();\\r\\n\\r\\n            return function applyMatrix4( matrix, optionalNormalMatrix ) {\\r\\n\\r\\n                var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\\r\\n\\r\\n                var referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\\r\\n\\r\\n                var normal = this.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n                this.constant = - referencePoint.dot( normal );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translate: function ( offset ) {\\r\\n\\r\\n            this.constant -= offset.dot( this.normal );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( plane ) {\\r\\n\\r\\n            return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Frustum( p0, p1, p2, p3, p4, p5 ) {\\r\\n\\r\\n        this.planes = [\\r\\n\\r\\n            ( p0 !== undefined ) ? p0 : new Plane(),\\r\\n            ( p1 !== undefined ) ? p1 : new Plane(),\\r\\n            ( p2 !== undefined ) ? p2 : new Plane(),\\r\\n            ( p3 !== undefined ) ? p3 : new Plane(),\\r\\n            ( p4 !== undefined ) ? p4 : new Plane(),\\r\\n            ( p5 !== undefined ) ? p5 : new Plane()\\r\\n\\r\\n        ];\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Frustum.prototype, {\\r\\n\\r\\n        set: function ( p0, p1, p2, p3, p4, p5 ) {\\r\\n\\r\\n            var planes = this.planes;\\r\\n\\r\\n            planes[ 0 ].copy( p0 );\\r\\n            planes[ 1 ].copy( p1 );\\r\\n            planes[ 2 ].copy( p2 );\\r\\n            planes[ 3 ].copy( p3 );\\r\\n            planes[ 4 ].copy( p4 );\\r\\n            planes[ 5 ].copy( p5 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( frustum ) {\\r\\n\\r\\n            var planes = this.planes;\\r\\n\\r\\n            for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                planes[ i ].copy( frustum.planes[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromMatrix: function ( m ) {\\r\\n\\r\\n            var planes = this.planes;\\r\\n            var me = m.elements;\\r\\n            var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\\r\\n            var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\\r\\n            var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\\r\\n            var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\\r\\n\\r\\n            planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\\r\\n            planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\\r\\n            planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\\r\\n            planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\\r\\n            planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\\r\\n            planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsObject: function () {\\r\\n\\r\\n            var sphere = new Sphere();\\r\\n\\r\\n            return function intersectsObject( object ) {\\r\\n\\r\\n                var geometry = object.geometry;\\r\\n\\r\\n                if ( geometry.boundingSphere === null )\\r\\n                    geometry.computeBoundingSphere();\\r\\n\\r\\n                sphere.copy( geometry.boundingSphere )\\r\\n                    .applyMatrix4( object.matrixWorld );\\r\\n\\r\\n                return this.intersectsSphere( sphere );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersectsSprite: function () {\\r\\n\\r\\n            var sphere = new Sphere();\\r\\n\\r\\n            return function intersectsSprite( sprite ) {\\r\\n\\r\\n                sphere.center.set( 0, 0, 0 );\\r\\n                sphere.radius = 0.7071067811865476;\\r\\n                sphere.applyMatrix4( sprite.matrixWorld );\\r\\n\\r\\n                return this.intersectsSphere( sphere );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersectsSphere: function ( sphere ) {\\r\\n\\r\\n            var planes = this.planes;\\r\\n            var center = sphere.center;\\r\\n            var negRadius = - sphere.radius;\\r\\n\\r\\n            for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                var distance = planes[ i ].distanceToPoint( center );\\r\\n\\r\\n                if ( distance < negRadius ) {\\r\\n\\r\\n                    return false;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function () {\\r\\n\\r\\n            var p = new Vector3();\\r\\n\\r\\n            return function intersectsBox( box ) {\\r\\n\\r\\n                var planes = this.planes;\\r\\n\\r\\n                for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                    var plane = planes[ i ];\\r\\n\\r\\n                    // corner at max distance\\r\\n\\r\\n                    p.x = plane.normal.x > 0 ? box.max.x : box.min.x;\\r\\n                    p.y = plane.normal.y > 0 ? box.max.y : box.min.y;\\r\\n                    p.z = plane.normal.z > 0 ? box.max.z : box.min.z;\\r\\n\\r\\n                    if ( plane.distanceToPoint( p ) < 0 ) {\\r\\n\\r\\n                        return false;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return true;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        containsPoint: function ( point ) {\\r\\n\\r\\n            var planes = this.planes;\\r\\n\\r\\n            for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                if ( planes[ i ].distanceToPoint( point ) < 0 ) {\\r\\n\\r\\n                    return false;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    var alphamap_fragment = \\\"#ifdef USE_ALPHAMAP\\\\n\\\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var alphamap_pars_fragment = \\\"#ifdef USE_ALPHAMAP\\\\n\\\\tuniform sampler2D alphaMap;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var alphatest_fragment = \\\"#ifdef ALPHATEST\\\\n\\\\tif ( diffuseColor.a < ALPHATEST ) discard;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var aomap_fragment = \\\"#ifdef USE_AOMAP\\\\n\\\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\\\n\\\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\\\n\\\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\\\t\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\t\\\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var aomap_pars_fragment = \\\"#ifdef USE_AOMAP\\\\n\\\\tuniform sampler2D aoMap;\\\\n\\\\tuniform float aoMapIntensity;\\\\n#endif\\\";\\r\\n\\r\\n    var begin_vertex = \\\"\\\\nvec3 transformed = vec3( position );\\\\n\\\";\\r\\n\\r\\n    var beginnormal_vertex = \\\"\\\\nvec3 objectNormal = vec3( normal );\\\\n\\\";\\r\\n\\r\\n    var bsdfs = \\\"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\\\n\\\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\\\n\\\\tif( cutoffDistance > 0.0 ) {\\\\n\\\\t\\\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\\\n\\\\t}\\\\n\\\\treturn distanceFalloff;\\\\n#else\\\\n\\\\tif( cutoffDistance > 0.0 ) {\\\\n\\\\t\\\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\\\n\\\\t}\\\\n\\\\treturn 1.0;\\\\n#endif\\\\n}\\\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\\\n\\\\treturn RECIPROCAL_PI * diffuseColor;\\\\n}\\\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\\\n\\\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\\\n\\\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\\\n}\\\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\\\treturn 1.0 / ( gl * gv );\\\\n}\\\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\\\treturn 0.5 / max( gv + gl, EPSILON );\\\\n}\\\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\\\n\\\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\\\n}\\\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\\\tfloat alpha = pow2( roughness );\\\\n\\\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\\\n\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\\\n\\\\tfloat D = D_GGX( alpha, dotNH );\\\\n\\\\treturn F * ( G * D );\\\\n}\\\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\\\n\\\\tconst float LUT_SIZE  = 64.0;\\\\n\\\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\\\n\\\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\\\n\\\\tfloat dotNV = saturate( dot( N, V ) );\\\\n\\\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\\\n\\\\tuv = uv * LUT_SCALE + LUT_BIAS;\\\\n\\\\treturn uv;\\\\n}\\\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\\\n\\\\tfloat l = length( f );\\\\n\\\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\\\n}\\\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\\\n\\\\tfloat x = dot( v1, v2 );\\\\n\\\\tfloat y = abs( x );\\\\n\\\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\\\n\\\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\\\n\\\\tfloat v = a / b;\\\\n\\\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\\\n\\\\treturn cross( v1, v2 ) * theta_sintheta;\\\\n}\\\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\\\n\\\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\\\n\\\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\\\n\\\\tvec3 lightNormal = cross( v1, v2 );\\\\n\\\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\\\n\\\\tvec3 T1, T2;\\\\n\\\\tT1 = normalize( V - N * dot( V, N ) );\\\\n\\\\tT2 = - cross( N, T1 );\\\\n\\\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\\\n\\\\tvec3 coords[ 4 ];\\\\n\\\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\\\n\\\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\\\n\\\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\\\n\\\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\\\n\\\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\\\n\\\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\\\n\\\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\\\n\\\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\\\n\\\\tvec3 vectorFormFactor = vec3( 0.0 );\\\\n\\\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\\\n\\\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\\\n\\\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\\\n\\\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\\\n\\\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\\\n\\\\treturn vec3( result );\\\\n}\\\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\\\n\\\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\\\n\\\\tvec4 r = roughness * c0 + c1;\\\\n\\\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\\\n\\\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\\\n\\\\treturn specularColor * AB.x + AB.y;\\\\n}\\\\nfloat G_BlinnPhong_Implicit( ) {\\\\n\\\\treturn 0.25;\\\\n}\\\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\\\n\\\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\\\n}\\\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\\\n\\\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\\\tfloat G = G_BlinnPhong_Implicit( );\\\\n\\\\tfloat D = D_BlinnPhong( shininess, dotNH );\\\\n\\\\treturn F * ( G * D );\\\\n}\\\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\\\n\\\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\\\n}\\\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\\\n\\\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var bumpmap_pars_fragment = \\\"#ifdef USE_BUMPMAP\\\\n\\\\tuniform sampler2D bumpMap;\\\\n\\\\tuniform float bumpScale;\\\\n\\\\tvec2 dHdxy_fwd() {\\\\n\\\\t\\\\tvec2 dSTdx = dFdx( vUv );\\\\n\\\\t\\\\tvec2 dSTdy = dFdy( vUv );\\\\n\\\\t\\\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\\\n\\\\t\\\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\\\n\\\\t\\\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\\\n\\\\t\\\\treturn vec2( dBx, dBy );\\\\n\\\\t}\\\\n\\\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\\\n\\\\t\\\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\\\n\\\\t\\\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\\\n\\\\t\\\\tvec3 vN = surf_norm;\\\\n\\\\t\\\\tvec3 R1 = cross( vSigmaY, vN );\\\\n\\\\t\\\\tvec3 R2 = cross( vN, vSigmaX );\\\\n\\\\t\\\\tfloat fDet = dot( vSigmaX, R1 );\\\\n\\\\t\\\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n\\\\t\\\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\\\n\\\\t\\\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var clipping_planes_fragment = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\\\tvec4 plane;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\\\n\\\\t\\\\tplane = clippingPlanes[ i ];\\\\n\\\\t\\\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\\\n\\\\t}\\\\n\\\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\\\n\\\\t\\\\tbool clipped = true;\\\\n\\\\t\\\\t#pragma unroll_loop\\\\n\\\\t\\\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\\\n\\\\t\\\\t\\\\tplane = clippingPlanes[ i ];\\\\n\\\\t\\\\t\\\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\tif ( clipped ) discard;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var clipping_planes_pars_fragment = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\\\n\\\\t\\\\tvarying vec3 vViewPosition;\\\\n\\\\t#endif\\\\n\\\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var clipping_planes_pars_vertex = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\\\n\\\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var clipping_planes_vertex = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var color_fragment = \\\"#ifdef USE_COLOR\\\\n\\\\tdiffuseColor.rgb *= vColor;\\\\n#endif\\\";\\r\\n\\r\\n    var color_pars_fragment = \\\"#ifdef USE_COLOR\\\\n\\\\tvarying vec3 vColor;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var color_pars_vertex = \\\"#ifdef USE_COLOR\\\\n\\\\tvarying vec3 vColor;\\\\n#endif\\\";\\r\\n\\r\\n    var color_vertex = \\\"#ifdef USE_COLOR\\\\n\\\\tvColor.xyz = color.xyz;\\\\n#endif\\\";\\r\\n\\r\\n    var common = \\\"#define PI 3.14159265359\\\\n#define PI2 6.28318530718\\\\n#define PI_HALF 1.5707963267949\\\\n#define RECIPROCAL_PI 0.31830988618\\\\n#define RECIPROCAL_PI2 0.15915494\\\\n#define LOG2 1.442695\\\\n#define EPSILON 1e-6\\\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\\\nfloat pow2( const in float x ) { return x*x; }\\\\nfloat pow3( const in float x ) { return x*x*x; }\\\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\\\nhighp float rand( const in vec2 uv ) {\\\\n\\\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\\\n\\\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\\\n\\\\treturn fract(sin(sn) * c);\\\\n}\\\\nstruct IncidentLight {\\\\n\\\\tvec3 color;\\\\n\\\\tvec3 direction;\\\\n\\\\tbool visible;\\\\n};\\\\nstruct ReflectedLight {\\\\n\\\\tvec3 directDiffuse;\\\\n\\\\tvec3 directSpecular;\\\\n\\\\tvec3 indirectDiffuse;\\\\n\\\\tvec3 indirectSpecular;\\\\n};\\\\nstruct GeometricContext {\\\\n\\\\tvec3 position;\\\\n\\\\tvec3 normal;\\\\n\\\\tvec3 viewDir;\\\\n};\\\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\\\n}\\\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\\\n}\\\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\\\n\\\\treturn - distance * planeNormal + point;\\\\n}\\\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\\\n}\\\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\\\n}\\\\nmat3 transposeMat3( const in mat3 m ) {\\\\n\\\\tmat3 tmp;\\\\n\\\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\\\n\\\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\\\n\\\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\\\n\\\\treturn tmp;\\\\n}\\\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\\\n\\\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\\\n\\\\treturn dot( weights, color.rgb );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var cube_uv_reflection_fragment = \\\"#ifdef ENVMAP_TYPE_CUBE_UV\\\\n#define cubeUV_textureSize (1024.0)\\\\nint getFaceFromDirection(vec3 direction) {\\\\n\\\\tvec3 absDirection = abs(direction);\\\\n\\\\tint face = -1;\\\\n\\\\tif( absDirection.x > absDirection.z ) {\\\\n\\\\t\\\\tif(absDirection.x > absDirection.y )\\\\n\\\\t\\\\t\\\\tface = direction.x > 0.0 ? 0 : 3;\\\\n\\\\t\\\\telse\\\\n\\\\t\\\\t\\\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\\\t}\\\\n\\\\telse {\\\\n\\\\t\\\\tif(absDirection.z > absDirection.y )\\\\n\\\\t\\\\t\\\\tface = direction.z > 0.0 ? 2 : 5;\\\\n\\\\t\\\\telse\\\\n\\\\t\\\\t\\\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\\\t}\\\\n\\\\treturn face;\\\\n}\\\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\\\n\\\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\\\n\\\\tfloat dxRoughness = dFdx(roughness);\\\\n\\\\tfloat dyRoughness = dFdy(roughness);\\\\n\\\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\\\n\\\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\\\n\\\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\\\n\\\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\\\n\\\\tfloat mipLevel = 0.5 * log2(d);\\\\n\\\\treturn vec2(floor(mipLevel), fract(mipLevel));\\\\n}\\\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\\\n\\\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\\\n\\\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\\\n\\\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\\\n\\\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\\\n\\\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\\\n\\\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\\\n\\\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\\\n\\\\tbool bRes = mipLevel == 0.0;\\\\n\\\\tscale =  bRes && (scale < a) ? a : scale;\\\\n\\\\tvec3 r;\\\\n\\\\tvec2 offset;\\\\n\\\\tint face = getFaceFromDirection(direction);\\\\n\\\\tfloat rcpPowScale = 1.0 / powScale;\\\\n\\\\tif( face == 0) {\\\\n\\\\t\\\\tr = vec3(direction.x, -direction.z, direction.y);\\\\n\\\\t\\\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 1) {\\\\n\\\\t\\\\tr = vec3(direction.y, direction.x, direction.z);\\\\n\\\\t\\\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 2) {\\\\n\\\\t\\\\tr = vec3(direction.z, direction.x, direction.y);\\\\n\\\\t\\\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 3) {\\\\n\\\\t\\\\tr = vec3(direction.x, direction.z, direction.y);\\\\n\\\\t\\\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 4) {\\\\n\\\\t\\\\tr = vec3(direction.y, direction.x, -direction.z);\\\\n\\\\t\\\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\telse {\\\\n\\\\t\\\\tr = vec3(direction.z, -direction.x, direction.y);\\\\n\\\\t\\\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\tr = normalize(r);\\\\n\\\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\\\n\\\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\\\n\\\\tvec2 base = offset + vec2( texelOffset );\\\\n\\\\treturn base + s * ( scale - 2.0 * texelOffset );\\\\n}\\\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\\\n\\\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\\\n\\\\tfloat r1 = floor(roughnessVal);\\\\n\\\\tfloat r2 = r1 + 1.0;\\\\n\\\\tfloat t = fract(roughnessVal);\\\\n\\\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\\\n\\\\tfloat s = mipInfo.y;\\\\n\\\\tfloat level0 = mipInfo.x;\\\\n\\\\tfloat level1 = level0 + 1.0;\\\\n\\\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\\\n\\\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\\\n\\\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\\\n\\\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\\\n\\\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\\\n\\\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\\\n\\\\tvec4 result = mix(color10, color20, t);\\\\n\\\\treturn vec4(result.rgb, 1.0);\\\\n}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var defaultnormal_vertex = \\\"vec3 transformedNormal = normalMatrix * objectNormal;\\\\n#ifdef FLIP_SIDED\\\\n\\\\ttransformedNormal = - transformedNormal;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var displacementmap_pars_vertex = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\\\tuniform sampler2D displacementMap;\\\\n\\\\tuniform float displacementScale;\\\\n\\\\tuniform float displacementBias;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var displacementmap_vertex = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var emissivemap_fragment = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\\\n\\\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\\\n\\\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var emissivemap_pars_fragment = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\\\tuniform sampler2D emissiveMap;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var encodings_fragment = \\\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\\\n\\\";\\r\\n\\r\\n    var encodings_pars_fragment = \\\"\\\\nvec4 LinearToLinear( in vec4 value ) {\\\\n\\\\treturn value;\\\\n}\\\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\\\n\\\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\\\n}\\\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\\\n\\\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\\\n}\\\\nvec4 sRGBToLinear( in vec4 value ) {\\\\n\\\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\\\n}\\\\nvec4 LinearTosRGB( in vec4 value ) {\\\\n\\\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\\\n}\\\\nvec4 RGBEToLinear( in vec4 value ) {\\\\n\\\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBE( in vec4 value ) {\\\\n\\\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\\\n\\\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\\\n\\\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\\\n}\\\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\\\n\\\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\\\n}\\\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\\\n\\\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\\\n\\\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\\\n\\\\tM = ceil( M * 255.0 ) / 255.0;\\\\n\\\\treturn vec4( value.rgb / ( M * maxRange ), M );\\\\n}\\\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\\\n\\\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\\\n\\\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\\\n\\\\tfloat D = max( maxRange / maxRGB, 1.0 );\\\\n\\\\tD = min( floor( D ) / 255.0, 1.0 );\\\\n\\\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\\\n}\\\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\\\nvec4 LinearToLogLuv( in vec4 value )  {\\\\n\\\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\\\n\\\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\\\n\\\\tvec4 vResult;\\\\n\\\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\\\n\\\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\\\n\\\\tvResult.w = fract( Le );\\\\n\\\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\\\n\\\\treturn vResult;\\\\n}\\\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\\\nvec4 LogLuvToLinear( in vec4 value ) {\\\\n\\\\tfloat Le = value.z * 255.0 + value.w;\\\\n\\\\tvec3 Xp_Y_XYZp;\\\\n\\\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\\\n\\\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\\\n\\\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\\\n\\\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\\\n\\\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var envmap_fragment = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 reflectVec = vReflect;\\\\n\\\\t#endif\\\\n\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\\\n\\\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\\\t\\\\tvec2 sampleUV;\\\\n\\\\t\\\\treflectVec = normalize( reflectVec );\\\\n\\\\t\\\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\\\n\\\\t\\\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\t\\\\tvec4 envColor = texture2D( envMap, sampleUV );\\\\n\\\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\\\t\\\\treflectVec = normalize( reflectVec );\\\\n\\\\t\\\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\\\n\\\\t\\\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\\\n\\\\t#else\\\\n\\\\t\\\\tvec4 envColor = vec4( 0.0 );\\\\n\\\\t#endif\\\\n\\\\tenvColor = envMapTexelToLinear( envColor );\\\\n\\\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\\\n\\\\t\\\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\\\n\\\\t#elif defined( ENVMAP_BLENDING_MIX )\\\\n\\\\t\\\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\\\n\\\\t#elif defined( ENVMAP_BLENDING_ADD )\\\\n\\\\t\\\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var envmap_pars_fragment = \\\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\\\n\\\\tuniform float reflectivity;\\\\n\\\\tuniform float envMapIntensity;\\\\n#endif\\\\n#ifdef USE_ENVMAP\\\\n\\\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\\\n\\\\t\\\\tvarying vec3 vWorldPosition;\\\\n\\\\t#endif\\\\n\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\tuniform samplerCube envMap;\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform sampler2D envMap;\\\\n\\\\t#endif\\\\n\\\\tuniform float flipEnvMap;\\\\n\\\\tuniform int maxMipLevel;\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\\\n\\\\t\\\\tuniform float refractionRatio;\\\\n\\\\t#else\\\\n\\\\t\\\\tvarying vec3 vReflect;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var envmap_pars_vertex = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvarying vec3 vWorldPosition;\\\\n\\\\t#else\\\\n\\\\t\\\\tvarying vec3 vReflect;\\\\n\\\\t\\\\tuniform float refractionRatio;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var envmap_vertex = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvWorldPosition = worldPosition.xyz;\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvReflect = reflect( cameraToVertex, worldNormal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var fog_vertex = \\\"#ifdef USE_FOG\\\\n\\\\tfogDepth = -mvPosition.z;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var fog_pars_vertex = \\\"#ifdef USE_FOG\\\\n\\\\tvarying float fogDepth;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var fog_fragment = \\\"#ifdef USE_FOG\\\\n\\\\t#ifdef FOG_EXP2\\\\n\\\\t\\\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\\\n\\\\t#endif\\\\n\\\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var fog_pars_fragment = \\\"#ifdef USE_FOG\\\\n\\\\tuniform vec3 fogColor;\\\\n\\\\tvarying float fogDepth;\\\\n\\\\t#ifdef FOG_EXP2\\\\n\\\\t\\\\tuniform float fogDensity;\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform float fogNear;\\\\n\\\\t\\\\tuniform float fogFar;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var gradientmap_pars_fragment = \\\"#ifdef TOON\\\\n\\\\tuniform sampler2D gradientMap;\\\\n\\\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\\\n\\\\t\\\\tfloat dotNL = dot( normal, lightDirection );\\\\n\\\\t\\\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\\\n\\\\t\\\\t#ifdef USE_GRADIENTMAP\\\\n\\\\t\\\\t\\\\treturn texture2D( gradientMap, coord ).rgb;\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lightmap_fragment = \\\"#ifdef USE_LIGHTMAP\\\\n\\\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lightmap_pars_fragment = \\\"#ifdef USE_LIGHTMAP\\\\n\\\\tuniform sampler2D lightMap;\\\\n\\\\tuniform float lightMapIntensity;\\\\n#endif\\\";\\r\\n\\r\\n    var lights_lambert_vertex = \\\"vec3 diffuse = vec3( 1.0 );\\\\nGeometricContext geometry;\\\\ngeometry.position = mvPosition.xyz;\\\\ngeometry.normal = normalize( transformedNormal );\\\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\\\nGeometricContext backGeometry;\\\\nbackGeometry.position = geometry.position;\\\\nbackGeometry.normal = -geometry.normal;\\\\nbackGeometry.viewDir = geometry.viewDir;\\\\nvLightFront = vec3( 0.0 );\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvLightBack = vec3( 0.0 );\\\\n#endif\\\\nIncidentLight directLight;\\\\nfloat dotNL;\\\\nvec3 directLightColor_Diffuse;\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lights_pars_begin = \\\"uniform vec3 ambientLightColor;\\\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\\\n\\\\tvec3 irradiance = ambientLightColor;\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\treturn irradiance;\\\\n}\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\\\tstruct DirectionalLight {\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t};\\\\n\\\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\\\n\\\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\\\t\\\\tdirectLight.color = directionalLight.color;\\\\n\\\\t\\\\tdirectLight.direction = directionalLight.direction;\\\\n\\\\t\\\\tdirectLight.visible = true;\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\\\tstruct PointLight {\\\\n\\\\t\\\\tvec3 position;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tfloat distance;\\\\n\\\\t\\\\tfloat decay;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t\\\\tfloat shadowCameraNear;\\\\n\\\\t\\\\tfloat shadowCameraFar;\\\\n\\\\t};\\\\n\\\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\\\n\\\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\\\t\\\\tvec3 lVector = pointLight.position - geometry.position;\\\\n\\\\t\\\\tdirectLight.direction = normalize( lVector );\\\\n\\\\t\\\\tfloat lightDistance = length( lVector );\\\\n\\\\t\\\\tdirectLight.color = pointLight.color;\\\\n\\\\t\\\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\\\n\\\\t\\\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tstruct SpotLight {\\\\n\\\\t\\\\tvec3 position;\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tfloat distance;\\\\n\\\\t\\\\tfloat decay;\\\\n\\\\t\\\\tfloat coneCos;\\\\n\\\\t\\\\tfloat penumbraCos;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t};\\\\n\\\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\\\n\\\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\\\n\\\\t\\\\tvec3 lVector = spotLight.position - geometry.position;\\\\n\\\\t\\\\tdirectLight.direction = normalize( lVector );\\\\n\\\\t\\\\tfloat lightDistance = length( lVector );\\\\n\\\\t\\\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\\\n\\\\t\\\\tif ( angleCos > spotLight.coneCos ) {\\\\n\\\\t\\\\t\\\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\\\n\\\\t\\\\t\\\\tdirectLight.color = spotLight.color;\\\\n\\\\t\\\\t\\\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = true;\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tdirectLight.color = vec3( 0.0 );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = false;\\\\n\\\\t\\\\t}\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_RECT_AREA_LIGHTS > 0\\\\n\\\\tstruct RectAreaLight {\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tvec3 position;\\\\n\\\\t\\\\tvec3 halfWidth;\\\\n\\\\t\\\\tvec3 halfHeight;\\\\n\\\\t};\\\\n\\\\tuniform sampler2D ltc_1;\\\\tuniform sampler2D ltc_2;\\\\n\\\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\\\tstruct HemisphereLight {\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 skyColor;\\\\n\\\\t\\\\tvec3 groundColor;\\\\n\\\\t};\\\\n\\\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\\\n\\\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\\\n\\\\t\\\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\\\n\\\\t\\\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\\\n\\\\t\\\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\\\n\\\\t\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\t\\\\tirradiance *= PI;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn irradiance;\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var envmap_physical_pars_fragment = \\\"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\t\\\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t\\\\t\\\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = vec4( 0.0 );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn PI * envMapColor.rgb * envMapIntensity;\\\\n\\\\t}\\\\n\\\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\\\t\\\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\\\n\\\\t\\\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\\\n\\\\t\\\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\\\n\\\\t}\\\\n\\\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\\\n\\\\t\\\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\\\n\\\\t\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\t\\\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t\\\\t\\\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\\\t\\\\t\\\\tvec2 sampleUV;\\\\n\\\\t\\\\t\\\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\\\n\\\\t\\\\t\\\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\\\t\\\\t\\\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn envMapColor.rgb * envMapIntensity;\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lights_phong_fragment = \\\"BlinnPhongMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb;\\\\nmaterial.specularColor = specular;\\\\nmaterial.specularShininess = shininess;\\\\nmaterial.specularStrength = specularStrength;\\\\n\\\";\\r\\n\\r\\n    var lights_phong_pars_fragment = \\\"varying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\nstruct BlinnPhongMaterial {\\\\n\\\\tvec3\\\\tdiffuseColor;\\\\n\\\\tvec3\\\\tspecularColor;\\\\n\\\\tfloat\\\\tspecularShininess;\\\\n\\\\tfloat\\\\tspecularStrength;\\\\n};\\\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\t#ifdef TOON\\\\n\\\\t\\\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\\\t\\\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\\\t#endif\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\\\n}\\\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\n#define RE_Direct\\\\t\\\\t\\\\t\\\\tRE_Direct_BlinnPhong\\\\n#define RE_IndirectDiffuse\\\\t\\\\tRE_IndirectDiffuse_BlinnPhong\\\\n#define Material_LightProbeLOD( material )\\\\t(0)\\\\n\\\";\\r\\n\\r\\n    var lights_physical_fragment = \\\"PhysicalMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\\\n#ifdef STANDARD\\\\n\\\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\\\n#else\\\\n\\\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\\\n\\\\tmaterial.clearCoat = saturate( clearCoat );\\\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lights_physical_pars_fragment = \\\"struct PhysicalMaterial {\\\\n\\\\tvec3\\\\tdiffuseColor;\\\\n\\\\tfloat\\\\tspecularRoughness;\\\\n\\\\tvec3\\\\tspecularColor;\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat clearCoat;\\\\n\\\\t\\\\tfloat clearCoatRoughness;\\\\n\\\\t#endif\\\\n};\\\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\\\n\\\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\\\n}\\\\n#if NUM_RECT_AREA_LIGHTS > 0\\\\n\\\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\t\\\\tvec3 normal = geometry.normal;\\\\n\\\\t\\\\tvec3 viewDir = geometry.viewDir;\\\\n\\\\t\\\\tvec3 position = geometry.position;\\\\n\\\\t\\\\tvec3 lightPos = rectAreaLight.position;\\\\n\\\\t\\\\tvec3 halfWidth = rectAreaLight.halfWidth;\\\\n\\\\t\\\\tvec3 halfHeight = rectAreaLight.halfHeight;\\\\n\\\\t\\\\tvec3 lightColor = rectAreaLight.color;\\\\n\\\\t\\\\tfloat roughness = material.specularRoughness;\\\\n\\\\t\\\\tvec3 rectCoords[ 4 ];\\\\n\\\\t\\\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\\\t\\\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\\\n\\\\t\\\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\\\n\\\\t\\\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\\\n\\\\t\\\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\\\n\\\\t\\\\tvec4 t1 = texture2D( ltc_1, uv );\\\\n\\\\t\\\\tvec4 t2 = texture2D( ltc_2, uv );\\\\n\\\\t\\\\tmat3 mInv = mat3(\\\\n\\\\t\\\\t\\\\tvec3( t1.x, 0, t1.y ),\\\\n\\\\t\\\\t\\\\tvec3(    0, 1,    0 ),\\\\n\\\\t\\\\t\\\\tvec3( t1.z, 0, t1.w )\\\\n\\\\t\\\\t);\\\\n\\\\t\\\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\\\n\\\\t\\\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\\\n\\\\t\\\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\\\n\\\\t}\\\\n#endif\\\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat clearCoatDHR = 0.0;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\\\n\\\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\\\t#endif\\\\n}\\\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\t\\\\tfloat dotNL = dotNV;\\\\n\\\\t\\\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat clearCoatDHR = 0.0;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\\\t#endif\\\\n}\\\\n#define RE_Direct\\\\t\\\\t\\\\t\\\\tRE_Direct_Physical\\\\n#define RE_Direct_RectArea\\\\t\\\\tRE_Direct_RectArea_Physical\\\\n#define RE_IndirectDiffuse\\\\t\\\\tRE_IndirectDiffuse_Physical\\\\n#define RE_IndirectSpecular\\\\t\\\\tRE_IndirectSpecular_Physical\\\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\\\n\\\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var lights_fragment_begin = \\\"\\\\nGeometricContext geometry;\\\\ngeometry.position = - vViewPosition;\\\\ngeometry.normal = normal;\\\\ngeometry.viewDir = normalize( vViewPosition );\\\\nIncidentLight directLight;\\\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tPointLight pointLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tpointLight = pointLights[ i ];\\\\n\\\\t\\\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tSpotLight spotLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tspotLight = spotLights[ i ];\\\\n\\\\t\\\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tDirectionalLight directionalLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tdirectionalLight = directionalLights[ i ];\\\\n\\\\t\\\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\\\n\\\\tRectAreaLight rectAreaLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\\\n\\\\t\\\\trectAreaLight = rectAreaLights[ i ];\\\\n\\\\t\\\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if defined( RE_IndirectDiffuse )\\\\n\\\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\\\n\\\\t#if ( NUM_HEMI_LIGHTS > 0 )\\\\n\\\\t\\\\t#pragma unroll_loop\\\\n\\\\t\\\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\\\t\\\\t\\\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\\\t\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n#if defined( RE_IndirectSpecular )\\\\n\\\\tvec3 radiance = vec3( 0.0 );\\\\n\\\\tvec3 clearCoatRadiance = vec3( 0.0 );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lights_fragment_maps = \\\"#if defined( RE_IndirectDiffuse )\\\\n\\\\t#ifdef USE_LIGHTMAP\\\\n\\\\t\\\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n\\\\t\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\t\\\\tlightMapIrradiance *= PI;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tirradiance += lightMapIrradiance;\\\\n\\\\t#endif\\\\n\\\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t\\\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\\\n\\\\t#endif\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\\\n\\\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var lights_fragment_end = \\\"#if defined( RE_IndirectDiffuse )\\\\n\\\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\\\n#endif\\\\n#if defined( RE_IndirectSpecular )\\\\n\\\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var logdepthbuf_fragment = \\\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\\\n\\\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\\\n#endif\\\";\\r\\n\\r\\n    var logdepthbuf_pars_fragment = \\\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\\\n\\\\tuniform float logDepthBufFC;\\\\n\\\\tvarying float vFragDepth;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var logdepthbuf_pars_vertex = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tvarying float vFragDepth;\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform float logDepthBufFC;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var logdepthbuf_vertex = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tvFragDepth = 1.0 + gl_Position.w;\\\\n\\\\t#else\\\\n\\\\t\\\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\\\n\\\\t\\\\tgl_Position.z *= gl_Position.w;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var map_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tvec4 texelColor = texture2D( map, vUv );\\\\n\\\\ttexelColor = mapTexelToLinear( texelColor );\\\\n\\\\tdiffuseColor *= texelColor;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var map_pars_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var map_particle_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\\\n\\\\tvec4 mapTexel = texture2D( map, uv );\\\\n\\\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var map_particle_pars_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tuniform mat3 uvTransform;\\\\n\\\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var metalnessmap_fragment = \\\"float metalnessFactor = metalness;\\\\n#ifdef USE_METALNESSMAP\\\\n\\\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\\\n\\\\tmetalnessFactor *= texelMetalness.b;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var metalnessmap_pars_fragment = \\\"#ifdef USE_METALNESSMAP\\\\n\\\\tuniform sampler2D metalnessMap;\\\\n#endif\\\";\\r\\n\\r\\n    var morphnormal_vertex = \\\"#ifdef USE_MORPHNORMALS\\\\n\\\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\\\n\\\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\\\n\\\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\\\n\\\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var morphtarget_pars_vertex = \\\"#ifdef USE_MORPHTARGETS\\\\n\\\\t#ifndef USE_MORPHNORMALS\\\\n\\\\tuniform float morphTargetInfluences[ 8 ];\\\\n\\\\t#else\\\\n\\\\tuniform float morphTargetInfluences[ 4 ];\\\\n\\\\t#endif\\\\n#endif\\\";\\r\\n\\r\\n    var morphtarget_vertex = \\\"#ifdef USE_MORPHTARGETS\\\\n\\\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\\\n\\\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\\\n\\\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\\\n\\\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\\\n\\\\t#ifndef USE_MORPHNORMALS\\\\n\\\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\\\n\\\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\\\n\\\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\\\n\\\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var normal_fragment_begin = \\\"#ifdef FLAT_SHADED\\\\n\\\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\\\n\\\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\\\n\\\\tvec3 normal = normalize( cross( fdx, fdy ) );\\\\n#else\\\\n\\\\tvec3 normal = normalize( vNormal );\\\\n\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var normal_fragment_maps = \\\"#ifdef USE_NORMALMAP\\\\n\\\\t#ifdef OBJECTSPACE_NORMALMAP\\\\n\\\\t\\\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\\\n\\\\t\\\\t#ifdef FLIP_SIDED\\\\n\\\\t\\\\t\\\\tnormal = - normal;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tnormal = normalize( normalMatrix * normal );\\\\n\\\\t#else\\\\n\\\\t\\\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\\\n\\\\t#endif\\\\n#elif defined( USE_BUMPMAP )\\\\n\\\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var normalmap_pars_fragment = \\\"#ifdef USE_NORMALMAP\\\\n\\\\tuniform sampler2D normalMap;\\\\n\\\\tuniform vec2 normalScale;\\\\n\\\\t#ifdef OBJECTSPACE_NORMALMAP\\\\n\\\\t\\\\tuniform mat3 normalMatrix;\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\\\n\\\\t\\\\t\\\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\\\n\\\\t\\\\t\\\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\\\n\\\\t\\\\t\\\\tvec2 st0 = dFdx( vUv.st );\\\\n\\\\t\\\\t\\\\tvec2 st1 = dFdy( vUv.st );\\\\n\\\\t\\\\t\\\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\\\n\\\\t\\\\t\\\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\\\n\\\\t\\\\t\\\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\\\n\\\\t\\\\t\\\\tvec3 N = normalize( surf_norm );\\\\n\\\\t\\\\t\\\\tmat3 tsn = mat3( S, T, N );\\\\n\\\\t\\\\t\\\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\\\n\\\\t\\\\t\\\\tmapN.xy *= normalScale;\\\\n\\\\t\\\\t\\\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n\\\\t\\\\t\\\\treturn normalize( tsn * mapN );\\\\n\\\\t\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var packing = \\\"vec3 packNormalToRGB( const in vec3 normal ) {\\\\n\\\\treturn normalize( normal ) * 0.5 + 0.5;\\\\n}\\\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\\\n\\\\treturn 2.0 * rgb.xyz - 1.0;\\\\n}\\\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\\\nconst float ShiftRight8 = 1. / 256.;\\\\nvec4 packDepthToRGBA( const in float v ) {\\\\n\\\\tvec4 r = vec4( fract( v * PackFactors ), v );\\\\n\\\\tr.yzw -= r.xyz * ShiftRight8;\\\\treturn r * PackUpscale;\\\\n}\\\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\\\n\\\\treturn dot( v, UnpackFactors );\\\\n}\\\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\\\n\\\\treturn ( viewZ + near ) / ( near - far );\\\\n}\\\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\\\n\\\\treturn linearClipZ * ( near - far ) - near;\\\\n}\\\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\\\n\\\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\\\n}\\\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\\\n\\\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var premultiplied_alpha_fragment = \\\"#ifdef PREMULTIPLIED_ALPHA\\\\n\\\\tgl_FragColor.rgb *= gl_FragColor.a;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var project_vertex = \\\"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\\\ngl_Position = projectionMatrix * mvPosition;\\\\n\\\";\\r\\n\\r\\n    var dithering_fragment = \\\"#if defined( DITHERING )\\\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var dithering_pars_fragment = \\\"#if defined( DITHERING )\\\\n\\\\tvec3 dithering( vec3 color ) {\\\\n\\\\t\\\\tfloat grid_position = rand( gl_FragCoord.xy );\\\\n\\\\t\\\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\\\n\\\\t\\\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\\\n\\\\t\\\\treturn color + dither_shift_RGB;\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var roughnessmap_fragment = \\\"float roughnessFactor = roughness;\\\\n#ifdef USE_ROUGHNESSMAP\\\\n\\\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\\\n\\\\troughnessFactor *= texelRoughness.g;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var roughnessmap_pars_fragment = \\\"#ifdef USE_ROUGHNESSMAP\\\\n\\\\tuniform sampler2D roughnessMap;\\\\n#endif\\\";\\r\\n\\r\\n    var shadowmap_pars_fragment = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\\\n\\\\t\\\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\\\n\\\\t}\\\\n\\\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\\\n\\\\t\\\\tconst vec2 offset = vec2( 0.0, 1.0 );\\\\n\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / size;\\\\n\\\\t\\\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\\\n\\\\t\\\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\\\n\\\\t\\\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\\\n\\\\t\\\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\\\n\\\\t\\\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\\\n\\\\t\\\\tvec2 f = fract( uv * size + 0.5 );\\\\n\\\\t\\\\tfloat a = mix( lb, lt, f.y );\\\\n\\\\t\\\\tfloat b = mix( rb, rt, f.y );\\\\n\\\\t\\\\tfloat c = mix( a, b, f.x );\\\\n\\\\t\\\\treturn c;\\\\n\\\\t}\\\\n\\\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\\\t\\\\tfloat shadow = 1.0;\\\\n\\\\t\\\\tshadowCoord.xyz /= shadowCoord.w;\\\\n\\\\t\\\\tshadowCoord.z += shadowBias;\\\\n\\\\t\\\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\\\n\\\\t\\\\tbool inFrustum = all( inFrustumVec );\\\\n\\\\t\\\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\\\n\\\\t\\\\tbool frustumTest = all( frustumTestVec );\\\\n\\\\t\\\\tif ( frustumTest ) {\\\\n\\\\t\\\\t#if defined( SHADOWMAP_TYPE_PCF )\\\\n\\\\t\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\\\t\\\\t\\\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tshadow = (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\\\t\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\\\t\\\\t\\\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tshadow = (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn shadow;\\\\n\\\\t}\\\\n\\\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\\\n\\\\t\\\\tvec3 absV = abs( v );\\\\n\\\\t\\\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\\\n\\\\t\\\\tabsV *= scaleToCube;\\\\n\\\\t\\\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\\\n\\\\t\\\\tvec2 planar = v.xy;\\\\n\\\\t\\\\tfloat almostATexel = 1.5 * texelSizeY;\\\\n\\\\t\\\\tfloat almostOne = 1.0 - almostATexel;\\\\n\\\\t\\\\tif ( absV.z >= almostOne ) {\\\\n\\\\t\\\\t\\\\tif ( v.z > 0.0 )\\\\n\\\\t\\\\t\\\\t\\\\tplanar.x = 4.0 - v.x;\\\\n\\\\t\\\\t} else if ( absV.x >= almostOne ) {\\\\n\\\\t\\\\t\\\\tfloat signX = sign( v.x );\\\\n\\\\t\\\\t\\\\tplanar.x = v.z * signX + 2.0 * signX;\\\\n\\\\t\\\\t} else if ( absV.y >= almostOne ) {\\\\n\\\\t\\\\t\\\\tfloat signY = sign( v.y );\\\\n\\\\t\\\\t\\\\tplanar.x = v.x + 2.0 * signY + 2.0;\\\\n\\\\t\\\\t\\\\tplanar.y = v.z * signY - 2.0;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\\\n\\\\t}\\\\n\\\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\\\n\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\\\n\\\\t\\\\tvec3 lightToPosition = shadowCoord.xyz;\\\\n\\\\t\\\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\\\t\\\\tdp += shadowBias;\\\\n\\\\t\\\\tvec3 bd3D = normalize( lightToPosition );\\\\n\\\\t\\\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\\\t\\\\t\\\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\\\n\\\\t\\\\t\\\\treturn (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var shadowmap_pars_vertex = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var shadowmap_vertex = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var shadowmask_pars_fragment = \\\"float getShadowMask() {\\\\n\\\\tfloat shadow = 1.0;\\\\n\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\tDirectionalLight directionalLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tdirectionalLight = directionalLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tSpotLight spotLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tspotLight = spotLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\tPointLight pointLight;\\\\n\\\\t#pragma unroll_loop\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tpointLight = pointLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#endif\\\\n\\\\treturn shadow;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var skinbase_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\\\n\\\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\\\n\\\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\\\n\\\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\\\n#endif\\\";\\r\\n\\r\\n    var skinning_pars_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tuniform mat4 bindMatrix;\\\\n\\\\tuniform mat4 bindMatrixInverse;\\\\n\\\\t#ifdef BONE_TEXTURE\\\\n\\\\t\\\\tuniform sampler2D boneTexture;\\\\n\\\\t\\\\tuniform int boneTextureSize;\\\\n\\\\t\\\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\\\t\\\\t\\\\tfloat j = i * 4.0;\\\\n\\\\t\\\\t\\\\tfloat x = mod( j, float( boneTextureSize ) );\\\\n\\\\t\\\\t\\\\tfloat y = floor( j / float( boneTextureSize ) );\\\\n\\\\t\\\\t\\\\tfloat dx = 1.0 / float( boneTextureSize );\\\\n\\\\t\\\\t\\\\tfloat dy = 1.0 / float( boneTextureSize );\\\\n\\\\t\\\\t\\\\ty = dy * ( y + 0.5 );\\\\n\\\\t\\\\t\\\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\\\n\\\\t\\\\t\\\\tmat4 bone = mat4( v1, v2, v3, v4 );\\\\n\\\\t\\\\t\\\\treturn bone;\\\\n\\\\t\\\\t}\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform mat4 boneMatrices[ MAX_BONES ];\\\\n\\\\t\\\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\\\t\\\\t\\\\tmat4 bone = boneMatrices[ int(i) ];\\\\n\\\\t\\\\t\\\\treturn bone;\\\\n\\\\t\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var skinning_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\\\n\\\\tvec4 skinned = vec4( 0.0 );\\\\n\\\\tskinned += boneMatX * skinVertex * skinWeight.x;\\\\n\\\\tskinned += boneMatY * skinVertex * skinWeight.y;\\\\n\\\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\\\n\\\\tskinned += boneMatW * skinVertex * skinWeight.w;\\\\n\\\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var skinnormal_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tmat4 skinMatrix = mat4( 0.0 );\\\\n\\\\tskinMatrix += skinWeight.x * boneMatX;\\\\n\\\\tskinMatrix += skinWeight.y * boneMatY;\\\\n\\\\tskinMatrix += skinWeight.z * boneMatZ;\\\\n\\\\tskinMatrix += skinWeight.w * boneMatW;\\\\n\\\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\\\n\\\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var specularmap_fragment = \\\"float specularStrength;\\\\n#ifdef USE_SPECULARMAP\\\\n\\\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\\\n\\\\tspecularStrength = texelSpecular.r;\\\\n#else\\\\n\\\\tspecularStrength = 1.0;\\\\n#endif\\\";\\r\\n\\r\\n    var specularmap_pars_fragment = \\\"#ifdef USE_SPECULARMAP\\\\n\\\\tuniform sampler2D specularMap;\\\\n#endif\\\";\\r\\n\\r\\n    var tonemapping_fragment = \\\"#if defined( TONE_MAPPING )\\\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var tonemapping_pars_fragment = \\\"#ifndef saturate\\\\n\\\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\\\n#endif\\\\nuniform float toneMappingExposure;\\\\nuniform float toneMappingWhitePoint;\\\\nvec3 LinearToneMapping( vec3 color ) {\\\\n\\\\treturn toneMappingExposure * color;\\\\n}\\\\nvec3 ReinhardToneMapping( vec3 color ) {\\\\n\\\\tcolor *= toneMappingExposure;\\\\n\\\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\\\n}\\\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\\\n\\\\tcolor *= toneMappingExposure;\\\\n\\\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\\\n}\\\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\\\n\\\\tcolor *= toneMappingExposure;\\\\n\\\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\\\n\\\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var uv_pars_fragment = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvarying vec2 vUv;\\\\n#endif\\\";\\r\\n\\r\\n    var uv_pars_vertex = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvarying vec2 vUv;\\\\n\\\\tuniform mat3 uvTransform;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var uv_vertex = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\\\n#endif\\\";\\r\\n\\r\\n    var uv2_pars_fragment = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tvarying vec2 vUv2;\\\\n#endif\\\";\\r\\n\\r\\n    var uv2_pars_vertex = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tattribute vec2 uv2;\\\\n\\\\tvarying vec2 vUv2;\\\\n#endif\\\";\\r\\n\\r\\n    var uv2_vertex = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tvUv2 = uv2;\\\\n#endif\\\";\\r\\n\\r\\n    var worldpos_vertex = \\\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\\\n\\\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n    var background_frag = \\\"uniform sampler2D t2D;\\\\nvarying vec2 vUv;\\\\nvoid main() {\\\\n\\\\tgl_FragColor = texture2D( t2D, vUv );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var background_vert = \\\"varying vec2 vUv;\\\\nvoid main() {\\\\n\\\\tvUv = uv;\\\\n\\\\tgl_Position = vec4( position, 1.0 );\\\\n\\\\tgl_Position.z = 1.0;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var cube_frag = \\\"uniform samplerCube tCube;\\\\nuniform float tFlip;\\\\nuniform float opacity;\\\\nvarying vec3 vWorldPosition;\\\\nvoid main() {\\\\n\\\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\\\n\\\\tgl_FragColor.a *= opacity;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var cube_vert = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\tgl_Position.z = gl_Position.w;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var depth_frag = \\\"#if DEPTH_PACKING == 3200\\\\n\\\\tuniform float opacity;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( 1.0 );\\\\n\\\\t#if DEPTH_PACKING == 3200\\\\n\\\\t\\\\tdiffuseColor.a = opacity;\\\\n\\\\t#endif\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#if DEPTH_PACKING == 3200\\\\n\\\\t\\\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\\\n\\\\t#elif DEPTH_PACKING == 3201\\\\n\\\\t\\\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\\\n\\\\t#endif\\\\n}\\\\n\\\";\\r\\n\\r\\n    var depth_vert = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#ifdef USE_DISPLACEMENTMAP\\\\n\\\\t\\\\t#include <beginnormal_vertex>\\\\n\\\\t\\\\t#include <morphnormal_vertex>\\\\n\\\\t\\\\t#include <skinnormal_vertex>\\\\n\\\\t#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var distanceRGBA_frag = \\\"#define DISTANCE\\\\nuniform vec3 referencePosition;\\\\nuniform float nearDistance;\\\\nuniform float farDistance;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main () {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( 1.0 );\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\tfloat dist = length( vWorldPosition - referencePosition );\\\\n\\\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\\\n\\\\tdist = saturate( dist );\\\\n\\\\tgl_FragColor = packDepthToRGBA( dist );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var distanceRGBA_vert = \\\"#define DISTANCE\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#ifdef USE_DISPLACEMENTMAP\\\\n\\\\t\\\\t#include <beginnormal_vertex>\\\\n\\\\t\\\\t#include <morphnormal_vertex>\\\\n\\\\t\\\\t#include <skinnormal_vertex>\\\\n\\\\t#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvWorldPosition = worldPosition.xyz;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var equirect_frag = \\\"uniform sampler2D tEquirect;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvec3 direction = normalize( vWorldPosition );\\\\n\\\\tvec2 sampleUV;\\\\n\\\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\\\n\\\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var equirect_vert = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var linedashed_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\nuniform float dashSize;\\\\nuniform float totalSize;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\\\n\\\\t\\\\tdiscard;\\\\n\\\\t}\\\\n\\\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\toutgoingLight = diffuseColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var linedashed_vert = \\\"uniform float scale;\\\\nattribute float lineDistance;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <color_vertex>\\\\n\\\\tvLineDistance = scale * lineDistance;\\\\n\\\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\\n\\\\tgl_Position = projectionMatrix * mvPosition;\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshbasic_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\t#ifdef USE_LIGHTMAP\\\\n\\\\t\\\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n\\\\t#else\\\\n\\\\t\\\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\\\n\\\\t#endif\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\\\n\\\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshbasic_vert = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#ifdef USE_ENVMAP\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n\\\\t#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshlambert_frag = \\\"uniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float opacity;\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <dithering_pars_fragment>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars_begin>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\\\n\\\\t#include <lightmap_fragment>\\\\n\\\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\\\n\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\\\n\\\\t#else\\\\n\\\\t\\\\treflectedLight.directDiffuse = vLightFront;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <dithering_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshlambert_vert = \\\"#define LAMBERT\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <bsdfs>\\\\n#include <lights_pars_begin>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n\\\\t#include <lights_lambert_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshmatcap_frag = \\\"#define MATCAP\\\\nuniform vec3 diffuse;\\\\nuniform float opacity;\\\\nuniform sampler2D matcap;\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <normal_fragment_begin>\\\\n\\\\t#include <normal_fragment_maps>\\\\n\\\\tvec3 viewDir = normalize( vViewPosition );\\\\n\\\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\\\n\\\\tvec3 y = cross( viewDir, x );\\\\n\\\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\\\n\\\\tvec4 matcapColor = texture2D( matcap, uv );\\\\n\\\\tmatcapColor = matcapTexelToLinear( matcapColor );\\\\n\\\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshmatcap_vert = \\\"#define MATCAP\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n\\\\t#ifndef FLAT_SHADED\\\\n\\\\t\\\\tvNormal = normalize( transformedNormal );\\\\n\\\\t#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshphong_frag = \\\"#define PHONG\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform vec3 specular;\\\\nuniform float shininess;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <dithering_pars_fragment>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <gradientmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars_begin>\\\\n#include <lights_phong_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\t#include <normal_fragment_begin>\\\\n\\\\t#include <normal_fragment_maps>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\t#include <lights_phong_fragment>\\\\n\\\\t#include <lights_fragment_begin>\\\\n\\\\t#include <lights_fragment_maps>\\\\n\\\\t#include <lights_fragment_end>\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <dithering_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshphong_vert = \\\"#define PHONG\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshphysical_frag = \\\"#define PHYSICAL\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float roughness;\\\\nuniform float metalness;\\\\nuniform float opacity;\\\\n#ifndef STANDARD\\\\n\\\\tuniform float clearCoat;\\\\n\\\\tuniform float clearCoatRoughness;\\\\n#endif\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <dithering_pars_fragment>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <cube_uv_reflection_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <envmap_physical_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <lights_pars_begin>\\\\n#include <lights_physical_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <roughnessmap_pars_fragment>\\\\n#include <metalnessmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <roughnessmap_fragment>\\\\n\\\\t#include <metalnessmap_fragment>\\\\n\\\\t#include <normal_fragment_begin>\\\\n\\\\t#include <normal_fragment_maps>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\t#include <lights_physical_fragment>\\\\n\\\\t#include <lights_fragment_begin>\\\\n\\\\t#include <lights_fragment_maps>\\\\n\\\\t#include <lights_fragment_end>\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <dithering_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var meshphysical_vert = \\\"#define PHYSICAL\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var normal_frag = \\\"#define NORMAL\\\\nuniform float opacity;\\\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\\\n\\\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <normal_fragment_begin>\\\\n\\\\t#include <normal_fragment_maps>\\\\n\\\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\\\n}\\\\n\\\";\\r\\n\\r\\n    var normal_vert = \\\"#define NORMAL\\\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\\\n\\\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n#endif\\\\n}\\\\n\\\";\\r\\n\\r\\n    var points_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <map_particle_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_particle_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\toutgoingLight = diffuseColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var points_vert = \\\"uniform float size;\\\\nuniform float scale;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\tgl_PointSize = size;\\\\n\\\\t#ifdef USE_SIZEATTENUATION\\\\n\\\\t\\\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\\\n\\\\t\\\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\\\n\\\\t#endif\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var shadow_frag = \\\"uniform vec3 color;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars_begin>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\nvoid main() {\\\\n\\\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var shadow_vert = \\\"#include <fog_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var sprite_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\toutgoingLight = diffuseColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var sprite_vert = \\\"uniform float rotation;\\\\nuniform vec2 center;\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <fog_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\\\n\\\\tvec2 scale;\\\\n\\\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\\\n\\\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\\\n\\\\t#ifndef USE_SIZEATTENUATION\\\\n\\\\t\\\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\\\n\\\\t\\\\tif ( isPerspective ) scale *= - mvPosition.z;\\\\n\\\\t#endif\\\\n\\\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\\\n\\\\tvec2 rotatedPosition;\\\\n\\\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\\\n\\\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\\\n\\\\tmvPosition.xy += rotatedPosition;\\\\n\\\\tgl_Position = projectionMatrix * mvPosition;\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <fog_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n    var ShaderChunk = {\\r\\n        alphamap_fragment: alphamap_fragment,\\r\\n        alphamap_pars_fragment: alphamap_pars_fragment,\\r\\n        alphatest_fragment: alphatest_fragment,\\r\\n        aomap_fragment: aomap_fragment,\\r\\n        aomap_pars_fragment: aomap_pars_fragment,\\r\\n        begin_vertex: begin_vertex,\\r\\n        beginnormal_vertex: beginnormal_vertex,\\r\\n        bsdfs: bsdfs,\\r\\n        bumpmap_pars_fragment: bumpmap_pars_fragment,\\r\\n        clipping_planes_fragment: clipping_planes_fragment,\\r\\n        clipping_planes_pars_fragment: clipping_planes_pars_fragment,\\r\\n        clipping_planes_pars_vertex: clipping_planes_pars_vertex,\\r\\n        clipping_planes_vertex: clipping_planes_vertex,\\r\\n        color_fragment: color_fragment,\\r\\n        color_pars_fragment: color_pars_fragment,\\r\\n        color_pars_vertex: color_pars_vertex,\\r\\n        color_vertex: color_vertex,\\r\\n        common: common,\\r\\n        cube_uv_reflection_fragment: cube_uv_reflection_fragment,\\r\\n        defaultnormal_vertex: defaultnormal_vertex,\\r\\n        displacementmap_pars_vertex: displacementmap_pars_vertex,\\r\\n        displacementmap_vertex: displacementmap_vertex,\\r\\n        emissivemap_fragment: emissivemap_fragment,\\r\\n        emissivemap_pars_fragment: emissivemap_pars_fragment,\\r\\n        encodings_fragment: encodings_fragment,\\r\\n        encodings_pars_fragment: encodings_pars_fragment,\\r\\n        envmap_fragment: envmap_fragment,\\r\\n        envmap_pars_fragment: envmap_pars_fragment,\\r\\n        envmap_pars_vertex: envmap_pars_vertex,\\r\\n        envmap_physical_pars_fragment: envmap_physical_pars_fragment,\\r\\n        envmap_vertex: envmap_vertex,\\r\\n        fog_vertex: fog_vertex,\\r\\n        fog_pars_vertex: fog_pars_vertex,\\r\\n        fog_fragment: fog_fragment,\\r\\n        fog_pars_fragment: fog_pars_fragment,\\r\\n        gradientmap_pars_fragment: gradientmap_pars_fragment,\\r\\n        lightmap_fragment: lightmap_fragment,\\r\\n        lightmap_pars_fragment: lightmap_pars_fragment,\\r\\n        lights_lambert_vertex: lights_lambert_vertex,\\r\\n        lights_pars_begin: lights_pars_begin,\\r\\n        lights_phong_fragment: lights_phong_fragment,\\r\\n        lights_phong_pars_fragment: lights_phong_pars_fragment,\\r\\n        lights_physical_fragment: lights_physical_fragment,\\r\\n        lights_physical_pars_fragment: lights_physical_pars_fragment,\\r\\n        lights_fragment_begin: lights_fragment_begin,\\r\\n        lights_fragment_maps: lights_fragment_maps,\\r\\n        lights_fragment_end: lights_fragment_end,\\r\\n        logdepthbuf_fragment: logdepthbuf_fragment,\\r\\n        logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\\r\\n        logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\\r\\n        logdepthbuf_vertex: logdepthbuf_vertex,\\r\\n        map_fragment: map_fragment,\\r\\n        map_pars_fragment: map_pars_fragment,\\r\\n        map_particle_fragment: map_particle_fragment,\\r\\n        map_particle_pars_fragment: map_particle_pars_fragment,\\r\\n        metalnessmap_fragment: metalnessmap_fragment,\\r\\n        metalnessmap_pars_fragment: metalnessmap_pars_fragment,\\r\\n        morphnormal_vertex: morphnormal_vertex,\\r\\n        morphtarget_pars_vertex: morphtarget_pars_vertex,\\r\\n        morphtarget_vertex: morphtarget_vertex,\\r\\n        normal_fragment_begin: normal_fragment_begin,\\r\\n        normal_fragment_maps: normal_fragment_maps,\\r\\n        normalmap_pars_fragment: normalmap_pars_fragment,\\r\\n        packing: packing,\\r\\n        premultiplied_alpha_fragment: premultiplied_alpha_fragment,\\r\\n        project_vertex: project_vertex,\\r\\n        dithering_fragment: dithering_fragment,\\r\\n        dithering_pars_fragment: dithering_pars_fragment,\\r\\n        roughnessmap_fragment: roughnessmap_fragment,\\r\\n        roughnessmap_pars_fragment: roughnessmap_pars_fragment,\\r\\n        shadowmap_pars_fragment: shadowmap_pars_fragment,\\r\\n        shadowmap_pars_vertex: shadowmap_pars_vertex,\\r\\n        shadowmap_vertex: shadowmap_vertex,\\r\\n        shadowmask_pars_fragment: shadowmask_pars_fragment,\\r\\n        skinbase_vertex: skinbase_vertex,\\r\\n        skinning_pars_vertex: skinning_pars_vertex,\\r\\n        skinning_vertex: skinning_vertex,\\r\\n        skinnormal_vertex: skinnormal_vertex,\\r\\n        specularmap_fragment: specularmap_fragment,\\r\\n        specularmap_pars_fragment: specularmap_pars_fragment,\\r\\n        tonemapping_fragment: tonemapping_fragment,\\r\\n        tonemapping_pars_fragment: tonemapping_pars_fragment,\\r\\n        uv_pars_fragment: uv_pars_fragment,\\r\\n        uv_pars_vertex: uv_pars_vertex,\\r\\n        uv_vertex: uv_vertex,\\r\\n        uv2_pars_fragment: uv2_pars_fragment,\\r\\n        uv2_pars_vertex: uv2_pars_vertex,\\r\\n        uv2_vertex: uv2_vertex,\\r\\n        worldpos_vertex: worldpos_vertex,\\r\\n\\r\\n        background_frag: background_frag,\\r\\n        background_vert: background_vert,\\r\\n        cube_frag: cube_frag,\\r\\n        cube_vert: cube_vert,\\r\\n        depth_frag: depth_frag,\\r\\n        depth_vert: depth_vert,\\r\\n        distanceRGBA_frag: distanceRGBA_frag,\\r\\n        distanceRGBA_vert: distanceRGBA_vert,\\r\\n        equirect_frag: equirect_frag,\\r\\n        equirect_vert: equirect_vert,\\r\\n        linedashed_frag: linedashed_frag,\\r\\n        linedashed_vert: linedashed_vert,\\r\\n        meshbasic_frag: meshbasic_frag,\\r\\n        meshbasic_vert: meshbasic_vert,\\r\\n        meshlambert_frag: meshlambert_frag,\\r\\n        meshlambert_vert: meshlambert_vert,\\r\\n        meshmatcap_frag: meshmatcap_frag,\\r\\n        meshmatcap_vert: meshmatcap_vert,\\r\\n        meshphong_frag: meshphong_frag,\\r\\n        meshphong_vert: meshphong_vert,\\r\\n        meshphysical_frag: meshphysical_frag,\\r\\n        meshphysical_vert: meshphysical_vert,\\r\\n        normal_frag: normal_frag,\\r\\n        normal_vert: normal_vert,\\r\\n        points_frag: points_frag,\\r\\n        points_vert: points_vert,\\r\\n        shadow_frag: shadow_frag,\\r\\n        shadow_vert: shadow_vert,\\r\\n        sprite_frag: sprite_frag,\\r\\n        sprite_vert: sprite_vert\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Uniform Utilities\\r\\n     */\\r\\n\\r\\n    var UniformsUtils = {\\r\\n\\r\\n        merge: function ( uniforms ) {\\r\\n\\r\\n            var merged = {};\\r\\n\\r\\n            for ( var u = 0; u < uniforms.length; u ++ ) {\\r\\n\\r\\n                var tmp = this.clone( uniforms[ u ] );\\r\\n\\r\\n                for ( var p in tmp ) {\\r\\n\\r\\n                    merged[ p ] = tmp[ p ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return merged;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function ( uniforms_src ) {\\r\\n\\r\\n            var uniforms_dst = {};\\r\\n\\r\\n            for ( var u in uniforms_src ) {\\r\\n\\r\\n                uniforms_dst[ u ] = {};\\r\\n\\r\\n                for ( var p in uniforms_src[ u ] ) {\\r\\n\\r\\n                    var parameter_src = uniforms_src[ u ][ p ];\\r\\n\\r\\n                    if ( parameter_src && ( parameter_src.isColor ||\\r\\n                            parameter_src.isMatrix3 || parameter_src.isMatrix4 ||\\r\\n                            parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\\r\\n                            parameter_src.isTexture ) ) {\\r\\n\\r\\n                        uniforms_dst[ u ][ p ] = parameter_src.clone();\\r\\n\\r\\n                    } else if ( Array.isArray( parameter_src ) ) {\\r\\n\\r\\n                        uniforms_dst[ u ][ p ] = parameter_src.slice();\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        uniforms_dst[ u ][ p ] = parameter_src;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return uniforms_dst;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\\r\\n        'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\\r\\n        'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\\r\\n        'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\\r\\n        'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\\r\\n        'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\\r\\n        'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\\r\\n        'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\\r\\n        'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\\r\\n        'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\\r\\n        'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\\r\\n        'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\\r\\n        'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\\r\\n        'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\\r\\n        'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\\r\\n        'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\\r\\n        'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\\r\\n        'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\\r\\n        'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\\r\\n        'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\\r\\n        'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\\r\\n        'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\\r\\n        'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\\r\\n        'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\\r\\n\\r\\n    function Color( r, g, b ) {\\r\\n\\r\\n        if ( g === undefined && b === undefined ) {\\r\\n\\r\\n            // r is THREE.Color, hex or string\\r\\n            return this.set( r );\\r\\n\\r\\n        }\\r\\n\\r\\n        return this.setRGB( r, g, b );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Color.prototype, {\\r\\n\\r\\n        isColor: true,\\r\\n\\r\\n        r: 1, g: 1, b: 1,\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            if ( value && value.isColor ) {\\r\\n\\r\\n                this.copy( value );\\r\\n\\r\\n            } else if ( typeof value === 'number' ) {\\r\\n\\r\\n                this.setHex( value );\\r\\n\\r\\n            } else if ( typeof value === 'string' ) {\\r\\n\\r\\n                this.setStyle( value );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setScalar: function ( scalar ) {\\r\\n\\r\\n            this.r = scalar;\\r\\n            this.g = scalar;\\r\\n            this.b = scalar;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setHex: function ( hex ) {\\r\\n\\r\\n            hex = Math.floor( hex );\\r\\n\\r\\n            this.r = ( hex >> 16 & 255 ) / 255;\\r\\n            this.g = ( hex >> 8 & 255 ) / 255;\\r\\n            this.b = ( hex & 255 ) / 255;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setRGB: function ( r, g, b ) {\\r\\n\\r\\n            this.r = r;\\r\\n            this.g = g;\\r\\n            this.b = b;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setHSL: function () {\\r\\n\\r\\n            function hue2rgb( p, q, t ) {\\r\\n\\r\\n                if ( t < 0 ) t += 1;\\r\\n                if ( t > 1 ) t -= 1;\\r\\n                if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\\r\\n                if ( t < 1 / 2 ) return q;\\r\\n                if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\\r\\n                return p;\\r\\n\\r\\n            }\\r\\n\\r\\n            return function setHSL( h, s, l ) {\\r\\n\\r\\n                // h,s,l ranges are in 0.0 - 1.0\\r\\n                h = _Math.euclideanModulo( h, 1 );\\r\\n                s = _Math.clamp( s, 0, 1 );\\r\\n                l = _Math.clamp( l, 0, 1 );\\r\\n\\r\\n                if ( s === 0 ) {\\r\\n\\r\\n                    this.r = this.g = this.b = l;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\\r\\n                    var q = ( 2 * l ) - p;\\r\\n\\r\\n                    this.r = hue2rgb( q, p, h + 1 / 3 );\\r\\n                    this.g = hue2rgb( q, p, h );\\r\\n                    this.b = hue2rgb( q, p, h - 1 / 3 );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        setStyle: function ( style ) {\\r\\n\\r\\n            function handleAlpha( string ) {\\r\\n\\r\\n                if ( string === undefined ) return;\\r\\n\\r\\n                if ( parseFloat( string ) < 1 ) {\\r\\n\\r\\n                    console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            var m;\\r\\n\\r\\n            if ( m = /^((?:rgb|hsl)a?)\\\\(\\\\s*([^\\\\)]*)\\\\)/.exec( style ) ) {\\r\\n\\r\\n                // rgb / hsl\\r\\n\\r\\n                var color;\\r\\n                var name = m[ 1 ];\\r\\n                var components = m[ 2 ];\\r\\n\\r\\n                switch ( name ) {\\r\\n\\r\\n                    case 'rgb':\\r\\n                    case 'rgba':\\r\\n\\r\\n                        if ( color = /^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n                            // rgb(255,0,0) rgba(255,0,0,0.5)\\r\\n                            this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\\r\\n                            this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\\r\\n                            this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\\r\\n\\r\\n                            handleAlpha( color[ 5 ] );\\r\\n\\r\\n                            return this;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( color = /^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n                            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\r\\n                            this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\\r\\n                            this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\\r\\n                            this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\\r\\n\\r\\n                            handleAlpha( color[ 5 ] );\\r\\n\\r\\n                            return this;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case 'hsl':\\r\\n                    case 'hsla':\\r\\n\\r\\n                        if ( color = /^([0-9]*\\\\.?[0-9]+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n                            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\r\\n                            var h = parseFloat( color[ 1 ] ) / 360;\\r\\n                            var s = parseInt( color[ 2 ], 10 ) / 100;\\r\\n                            var l = parseInt( color[ 3 ], 10 ) / 100;\\r\\n\\r\\n                            handleAlpha( color[ 5 ] );\\r\\n\\r\\n                            return this.setHSL( h, s, l );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        break;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( m = /^\\\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\\r\\n\\r\\n                // hex color\\r\\n\\r\\n                var hex = m[ 1 ];\\r\\n                var size = hex.length;\\r\\n\\r\\n                if ( size === 3 ) {\\r\\n\\r\\n                    // #ff0\\r\\n                    this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\\r\\n                    this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\\r\\n                    this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\\r\\n\\r\\n                    return this;\\r\\n\\r\\n                } else if ( size === 6 ) {\\r\\n\\r\\n                    // #ff0000\\r\\n                    this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\\r\\n                    this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\\r\\n                    this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\\r\\n\\r\\n                    return this;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( style && style.length > 0 ) {\\r\\n\\r\\n                // color keywords\\r\\n                var hex = ColorKeywords[ style ];\\r\\n\\r\\n                if ( hex !== undefined ) {\\r\\n\\r\\n                    // red\\r\\n                    this.setHex( hex );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // unknown color\\r\\n                    console.warn( 'THREE.Color: Unknown color ' + style );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.r, this.g, this.b );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( color ) {\\r\\n\\r\\n            this.r = color.r;\\r\\n            this.g = color.g;\\r\\n            this.b = color.b;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyGammaToLinear: function ( color, gammaFactor ) {\\r\\n\\r\\n            if ( gammaFactor === undefined ) gammaFactor = 2.0;\\r\\n\\r\\n            this.r = Math.pow( color.r, gammaFactor );\\r\\n            this.g = Math.pow( color.g, gammaFactor );\\r\\n            this.b = Math.pow( color.b, gammaFactor );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyLinearToGamma: function ( color, gammaFactor ) {\\r\\n\\r\\n            if ( gammaFactor === undefined ) gammaFactor = 2.0;\\r\\n\\r\\n            var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\\r\\n\\r\\n            this.r = Math.pow( color.r, safeInverse );\\r\\n            this.g = Math.pow( color.g, safeInverse );\\r\\n            this.b = Math.pow( color.b, safeInverse );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        convertGammaToLinear: function ( gammaFactor ) {\\r\\n\\r\\n            this.copyGammaToLinear( this, gammaFactor );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        convertLinearToGamma: function ( gammaFactor ) {\\r\\n\\r\\n            this.copyLinearToGamma( this, gammaFactor );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copySRGBToLinear: function () {\\r\\n\\r\\n            function SRGBToLinear( c ) {\\r\\n\\r\\n                return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\\r\\n\\r\\n            }\\r\\n\\r\\n            return function copySRGBToLinear( color ) {\\r\\n\\r\\n                this.r = SRGBToLinear( color.r );\\r\\n                this.g = SRGBToLinear( color.g );\\r\\n                this.b = SRGBToLinear( color.b );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        copyLinearToSRGB: function () {\\r\\n\\r\\n            function LinearToSRGB( c ) {\\r\\n\\r\\n                return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\\r\\n\\r\\n            }\\r\\n\\r\\n            return function copyLinearToSRGB( color ) {\\r\\n\\r\\n                this.r = LinearToSRGB( color.r );\\r\\n                this.g = LinearToSRGB( color.g );\\r\\n                this.b = LinearToSRGB( color.b );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        convertSRGBToLinear: function () {\\r\\n\\r\\n            this.copySRGBToLinear( this );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        convertLinearToSRGB: function () {\\r\\n\\r\\n            this.copyLinearToSRGB( this );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getHex: function () {\\r\\n\\r\\n            return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        getHexString: function () {\\r\\n\\r\\n            return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\\r\\n\\r\\n        },\\r\\n\\r\\n        getHSL: function ( target ) {\\r\\n\\r\\n            // h,s,l ranges are in 0.0 - 1.0\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Color: .getHSL() target is now required' );\\r\\n                target = { h: 0, s: 0, l: 0 };\\r\\n\\r\\n            }\\r\\n\\r\\n            var r = this.r, g = this.g, b = this.b;\\r\\n\\r\\n            var max = Math.max( r, g, b );\\r\\n            var min = Math.min( r, g, b );\\r\\n\\r\\n            var hue, saturation;\\r\\n            var lightness = ( min + max ) / 2.0;\\r\\n\\r\\n            if ( min === max ) {\\r\\n\\r\\n                hue = 0;\\r\\n                saturation = 0;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var delta = max - min;\\r\\n\\r\\n                saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\\r\\n\\r\\n                switch ( max ) {\\r\\n\\r\\n                    case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\\r\\n                    case g: hue = ( b - r ) / delta + 2; break;\\r\\n                    case b: hue = ( r - g ) / delta + 4; break;\\r\\n\\r\\n                }\\r\\n\\r\\n                hue /= 6;\\r\\n\\r\\n            }\\r\\n\\r\\n            target.h = hue;\\r\\n            target.s = saturation;\\r\\n            target.l = lightness;\\r\\n\\r\\n            return target;\\r\\n\\r\\n        },\\r\\n\\r\\n        getStyle: function () {\\r\\n\\r\\n            return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\\r\\n\\r\\n        },\\r\\n\\r\\n        offsetHSL: function () {\\r\\n\\r\\n            var hsl = {};\\r\\n\\r\\n            return function ( h, s, l ) {\\r\\n\\r\\n                this.getHSL( hsl );\\r\\n\\r\\n                hsl.h += h; hsl.s += s; hsl.l += l;\\r\\n\\r\\n                this.setHSL( hsl.h, hsl.s, hsl.l );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        add: function ( color ) {\\r\\n\\r\\n            this.r += color.r;\\r\\n            this.g += color.g;\\r\\n            this.b += color.b;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addColors: function ( color1, color2 ) {\\r\\n\\r\\n            this.r = color1.r + color2.r;\\r\\n            this.g = color1.g + color2.g;\\r\\n            this.b = color1.b + color2.b;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addScalar: function ( s ) {\\r\\n\\r\\n            this.r += s;\\r\\n            this.g += s;\\r\\n            this.b += s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        sub: function ( color ) {\\r\\n\\r\\n            this.r = Math.max( 0, this.r - color.r );\\r\\n            this.g = Math.max( 0, this.g - color.g );\\r\\n            this.b = Math.max( 0, this.b - color.b );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiply: function ( color ) {\\r\\n\\r\\n            this.r *= color.r;\\r\\n            this.g *= color.g;\\r\\n            this.b *= color.b;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        multiplyScalar: function ( s ) {\\r\\n\\r\\n            this.r *= s;\\r\\n            this.g *= s;\\r\\n            this.b *= s;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        lerp: function ( color, alpha ) {\\r\\n\\r\\n            this.r += ( color.r - this.r ) * alpha;\\r\\n            this.g += ( color.g - this.g ) * alpha;\\r\\n            this.b += ( color.b - this.b ) * alpha;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        lerpHSL: function () {\\r\\n\\r\\n            var hslA = { h: 0, s: 0, l: 0 };\\r\\n            var hslB = { h: 0, s: 0, l: 0 };\\r\\n\\r\\n            return function lerpHSL( color, alpha ) {\\r\\n\\r\\n                this.getHSL( hslA );\\r\\n                color.getHSL( hslB );\\r\\n\\r\\n                var h = _Math.lerp( hslA.h, hslB.h, alpha );\\r\\n                var s = _Math.lerp( hslA.s, hslB.s, alpha );\\r\\n                var l = _Math.lerp( hslA.l, hslB.l, alpha );\\r\\n\\r\\n                this.setHSL( h, s, l );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        equals: function ( c ) {\\r\\n\\r\\n            return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.r = array[ offset ];\\r\\n            this.g = array[ offset + 1 ];\\r\\n            this.b = array[ offset + 2 ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this.r;\\r\\n            array[ offset + 1 ] = this.g;\\r\\n            array[ offset + 2 ] = this.b;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            return this.getHex();\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * Uniforms library for shared webgl shaders\\r\\n     */\\r\\n\\r\\n    var UniformsLib = {\\r\\n\\r\\n        common: {\\r\\n\\r\\n            diffuse: { value: new Color( 0xeeeeee ) },\\r\\n            opacity: { value: 1.0 },\\r\\n\\r\\n            map: { value: null },\\r\\n            uvTransform: { value: new Matrix3() },\\r\\n\\r\\n            alphaMap: { value: null },\\r\\n\\r\\n        },\\r\\n\\r\\n        specularmap: {\\r\\n\\r\\n            specularMap: { value: null },\\r\\n\\r\\n        },\\r\\n\\r\\n        envmap: {\\r\\n\\r\\n            envMap: { value: null },\\r\\n            flipEnvMap: { value: - 1 },\\r\\n            reflectivity: { value: 1.0 },\\r\\n            refractionRatio: { value: 0.98 },\\r\\n            maxMipLevel: { value: 0 }\\r\\n\\r\\n        },\\r\\n\\r\\n        aomap: {\\r\\n\\r\\n            aoMap: { value: null },\\r\\n            aoMapIntensity: { value: 1 }\\r\\n\\r\\n        },\\r\\n\\r\\n        lightmap: {\\r\\n\\r\\n            lightMap: { value: null },\\r\\n            lightMapIntensity: { value: 1 }\\r\\n\\r\\n        },\\r\\n\\r\\n        emissivemap: {\\r\\n\\r\\n            emissiveMap: { value: null }\\r\\n\\r\\n        },\\r\\n\\r\\n        bumpmap: {\\r\\n\\r\\n            bumpMap: { value: null },\\r\\n            bumpScale: { value: 1 }\\r\\n\\r\\n        },\\r\\n\\r\\n        normalmap: {\\r\\n\\r\\n            normalMap: { value: null },\\r\\n            normalScale: { value: new Vector2( 1, 1 ) }\\r\\n\\r\\n        },\\r\\n\\r\\n        displacementmap: {\\r\\n\\r\\n            displacementMap: { value: null },\\r\\n            displacementScale: { value: 1 },\\r\\n            displacementBias: { value: 0 }\\r\\n\\r\\n        },\\r\\n\\r\\n        roughnessmap: {\\r\\n\\r\\n            roughnessMap: { value: null }\\r\\n\\r\\n        },\\r\\n\\r\\n        metalnessmap: {\\r\\n\\r\\n            metalnessMap: { value: null }\\r\\n\\r\\n        },\\r\\n\\r\\n        gradientmap: {\\r\\n\\r\\n            gradientMap: { value: null }\\r\\n\\r\\n        },\\r\\n\\r\\n        fog: {\\r\\n\\r\\n            fogDensity: { value: 0.00025 },\\r\\n            fogNear: { value: 1 },\\r\\n            fogFar: { value: 2000 },\\r\\n            fogColor: { value: new Color( 0xffffff ) }\\r\\n\\r\\n        },\\r\\n\\r\\n        lights: {\\r\\n\\r\\n            ambientLightColor: { value: [] },\\r\\n\\r\\n            directionalLights: { value: [], properties: {\\r\\n                direction: {},\\r\\n                color: {},\\r\\n\\r\\n                shadow: {},\\r\\n                shadowBias: {},\\r\\n                shadowRadius: {},\\r\\n                shadowMapSize: {}\\r\\n            } },\\r\\n\\r\\n            directionalShadowMap: { value: [] },\\r\\n            directionalShadowMatrix: { value: [] },\\r\\n\\r\\n            spotLights: { value: [], properties: {\\r\\n                color: {},\\r\\n                position: {},\\r\\n                direction: {},\\r\\n                distance: {},\\r\\n                coneCos: {},\\r\\n                penumbraCos: {},\\r\\n                decay: {},\\r\\n\\r\\n                shadow: {},\\r\\n                shadowBias: {},\\r\\n                shadowRadius: {},\\r\\n                shadowMapSize: {}\\r\\n            } },\\r\\n\\r\\n            spotShadowMap: { value: [] },\\r\\n            spotShadowMatrix: { value: [] },\\r\\n\\r\\n            pointLights: { value: [], properties: {\\r\\n                color: {},\\r\\n                position: {},\\r\\n                decay: {},\\r\\n                distance: {},\\r\\n\\r\\n                shadow: {},\\r\\n                shadowBias: {},\\r\\n                shadowRadius: {},\\r\\n                shadowMapSize: {},\\r\\n                shadowCameraNear: {},\\r\\n                shadowCameraFar: {}\\r\\n            } },\\r\\n\\r\\n            pointShadowMap: { value: [] },\\r\\n            pointShadowMatrix: { value: [] },\\r\\n\\r\\n            hemisphereLights: { value: [], properties: {\\r\\n                direction: {},\\r\\n                skyColor: {},\\r\\n                groundColor: {}\\r\\n            } },\\r\\n\\r\\n            // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\\r\\n            rectAreaLights: { value: [], properties: {\\r\\n                color: {},\\r\\n                position: {},\\r\\n                width: {},\\r\\n                height: {}\\r\\n            } }\\r\\n\\r\\n        },\\r\\n\\r\\n        points: {\\r\\n\\r\\n            diffuse: { value: new Color( 0xeeeeee ) },\\r\\n            opacity: { value: 1.0 },\\r\\n            size: { value: 1.0 },\\r\\n            scale: { value: 1.0 },\\r\\n            map: { value: null },\\r\\n            uvTransform: { value: new Matrix3() }\\r\\n\\r\\n        },\\r\\n\\r\\n        sprite: {\\r\\n\\r\\n            diffuse: { value: new Color( 0xeeeeee ) },\\r\\n            opacity: { value: 1.0 },\\r\\n            center: { value: new Vector2( 0.5, 0.5 ) },\\r\\n            rotation: { value: 0.0 },\\r\\n            map: { value: null },\\r\\n            uvTransform: { value: new Matrix3() }\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     */\\r\\n\\r\\n    var ShaderLib = {\\r\\n\\r\\n        basic: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.specularmap,\\r\\n                UniformsLib.envmap,\\r\\n                UniformsLib.aomap,\\r\\n                UniformsLib.lightmap,\\r\\n                UniformsLib.fog\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.meshbasic_vert,\\r\\n            fragmentShader: ShaderChunk.meshbasic_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        lambert: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.specularmap,\\r\\n                UniformsLib.envmap,\\r\\n                UniformsLib.aomap,\\r\\n                UniformsLib.lightmap,\\r\\n                UniformsLib.emissivemap,\\r\\n                UniformsLib.fog,\\r\\n                UniformsLib.lights,\\r\\n                {\\r\\n                    emissive: { value: new Color( 0x000000 ) }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.meshlambert_vert,\\r\\n            fragmentShader: ShaderChunk.meshlambert_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        phong: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.specularmap,\\r\\n                UniformsLib.envmap,\\r\\n                UniformsLib.aomap,\\r\\n                UniformsLib.lightmap,\\r\\n                UniformsLib.emissivemap,\\r\\n                UniformsLib.bumpmap,\\r\\n                UniformsLib.normalmap,\\r\\n                UniformsLib.displacementmap,\\r\\n                UniformsLib.gradientmap,\\r\\n                UniformsLib.fog,\\r\\n                UniformsLib.lights,\\r\\n                {\\r\\n                    emissive: { value: new Color( 0x000000 ) },\\r\\n                    specular: { value: new Color( 0x111111 ) },\\r\\n                    shininess: { value: 30 }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.meshphong_vert,\\r\\n            fragmentShader: ShaderChunk.meshphong_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        standard: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.envmap,\\r\\n                UniformsLib.aomap,\\r\\n                UniformsLib.lightmap,\\r\\n                UniformsLib.emissivemap,\\r\\n                UniformsLib.bumpmap,\\r\\n                UniformsLib.normalmap,\\r\\n                UniformsLib.displacementmap,\\r\\n                UniformsLib.roughnessmap,\\r\\n                UniformsLib.metalnessmap,\\r\\n                UniformsLib.fog,\\r\\n                UniformsLib.lights,\\r\\n                {\\r\\n                    emissive: { value: new Color( 0x000000 ) },\\r\\n                    roughness: { value: 0.5 },\\r\\n                    metalness: { value: 0.5 },\\r\\n                    envMapIntensity: { value: 1 } // temporary\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.meshphysical_vert,\\r\\n            fragmentShader: ShaderChunk.meshphysical_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        matcap: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.bumpmap,\\r\\n                UniformsLib.normalmap,\\r\\n                UniformsLib.displacementmap,\\r\\n                UniformsLib.fog,\\r\\n                {\\r\\n                    matcap: { value: null }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.meshmatcap_vert,\\r\\n            fragmentShader: ShaderChunk.meshmatcap_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        points: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.points,\\r\\n                UniformsLib.fog\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.points_vert,\\r\\n            fragmentShader: ShaderChunk.points_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        dashed: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.fog,\\r\\n                {\\r\\n                    scale: { value: 1 },\\r\\n                    dashSize: { value: 1 },\\r\\n                    totalSize: { value: 2 }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.linedashed_vert,\\r\\n            fragmentShader: ShaderChunk.linedashed_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        depth: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.displacementmap\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.depth_vert,\\r\\n            fragmentShader: ShaderChunk.depth_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        normal: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.bumpmap,\\r\\n                UniformsLib.normalmap,\\r\\n                UniformsLib.displacementmap,\\r\\n                {\\r\\n                    opacity: { value: 1.0 }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.normal_vert,\\r\\n            fragmentShader: ShaderChunk.normal_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        sprite: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.sprite,\\r\\n                UniformsLib.fog\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.sprite_vert,\\r\\n            fragmentShader: ShaderChunk.sprite_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        background: {\\r\\n\\r\\n            uniforms: {\\r\\n                t2D: { value: null },\\r\\n            },\\r\\n\\r\\n            vertexShader: ShaderChunk.background_vert,\\r\\n            fragmentShader: ShaderChunk.background_frag\\r\\n\\r\\n        },\\r\\n        /* -------------------------------------------------------------------------\\r\\n\\t\\t//\\tCube map shader\\r\\n\\t\\t ------------------------------------------------------------------------- */\\r\\n\\r\\n        cube: {\\r\\n\\r\\n            uniforms: {\\r\\n                tCube: { value: null },\\r\\n                tFlip: { value: - 1 },\\r\\n                opacity: { value: 1.0 }\\r\\n            },\\r\\n\\r\\n            vertexShader: ShaderChunk.cube_vert,\\r\\n            fragmentShader: ShaderChunk.cube_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        equirect: {\\r\\n\\r\\n            uniforms: {\\r\\n                tEquirect: { value: null },\\r\\n            },\\r\\n\\r\\n            vertexShader: ShaderChunk.equirect_vert,\\r\\n            fragmentShader: ShaderChunk.equirect_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceRGBA: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.common,\\r\\n                UniformsLib.displacementmap,\\r\\n                {\\r\\n                    referencePosition: { value: new Vector3() },\\r\\n                    nearDistance: { value: 1 },\\r\\n                    farDistance: { value: 1000 }\\r\\n                }\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.distanceRGBA_vert,\\r\\n            fragmentShader: ShaderChunk.distanceRGBA_frag\\r\\n\\r\\n        },\\r\\n\\r\\n        shadow: {\\r\\n\\r\\n            uniforms: UniformsUtils.merge( [\\r\\n                UniformsLib.lights,\\r\\n                UniformsLib.fog,\\r\\n                {\\r\\n                    color: { value: new Color( 0x00000 ) },\\r\\n                    opacity: { value: 1.0 }\\r\\n                },\\r\\n            ] ),\\r\\n\\r\\n            vertexShader: ShaderChunk.shadow_vert,\\r\\n            fragmentShader: ShaderChunk.shadow_frag\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    ShaderLib.physical = {\\r\\n\\r\\n        uniforms: UniformsUtils.merge( [\\r\\n            ShaderLib.standard.uniforms,\\r\\n            {\\r\\n                clearCoat: { value: 0 },\\r\\n                clearCoatRoughness: { value: 0 }\\r\\n            }\\r\\n        ] ),\\r\\n\\r\\n        vertexShader: ShaderChunk.meshphysical_vert,\\r\\n        fragmentShader: ShaderChunk.meshphysical_frag\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLAnimation() {\\r\\n\\r\\n        var context = null;\\r\\n        var isAnimating = false;\\r\\n        var animationLoop = null;\\r\\n\\r\\n        function onAnimationFrame( time, frame ) {\\r\\n\\r\\n            if ( isAnimating === false ) return;\\r\\n\\r\\n            animationLoop( time, frame );\\r\\n\\r\\n            context.requestAnimationFrame( onAnimationFrame );\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            start: function () {\\r\\n\\r\\n                if ( isAnimating === true ) return;\\r\\n                if ( animationLoop === null ) return;\\r\\n\\r\\n                context.requestAnimationFrame( onAnimationFrame );\\r\\n\\r\\n                isAnimating = true;\\r\\n\\r\\n            },\\r\\n\\r\\n            stop: function () {\\r\\n\\r\\n                isAnimating = false;\\r\\n\\r\\n            },\\r\\n\\r\\n            setAnimationLoop: function ( callback ) {\\r\\n\\r\\n                animationLoop = callback;\\r\\n\\r\\n            },\\r\\n\\r\\n            setContext: function ( value ) {\\r\\n\\r\\n                context = value;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLAttributes( gl ) {\\r\\n\\r\\n        var buffers = new WeakMap();\\r\\n\\r\\n        function createBuffer( attribute, bufferType ) {\\r\\n\\r\\n            var array = attribute.array;\\r\\n            var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\\r\\n\\r\\n            var buffer = gl.createBuffer();\\r\\n\\r\\n            gl.bindBuffer( bufferType, buffer );\\r\\n            gl.bufferData( bufferType, array, usage );\\r\\n\\r\\n            attribute.onUploadCallback();\\r\\n\\r\\n            var type = gl.FLOAT;\\r\\n\\r\\n            if ( array instanceof Float32Array ) {\\r\\n\\r\\n                type = gl.FLOAT;\\r\\n\\r\\n            } else if ( array instanceof Float64Array ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\\r\\n\\r\\n            } else if ( array instanceof Uint16Array ) {\\r\\n\\r\\n                type = gl.UNSIGNED_SHORT;\\r\\n\\r\\n            } else if ( array instanceof Int16Array ) {\\r\\n\\r\\n                type = gl.SHORT;\\r\\n\\r\\n            } else if ( array instanceof Uint32Array ) {\\r\\n\\r\\n                type = gl.UNSIGNED_INT;\\r\\n\\r\\n            } else if ( array instanceof Int32Array ) {\\r\\n\\r\\n                type = gl.INT;\\r\\n\\r\\n            } else if ( array instanceof Int8Array ) {\\r\\n\\r\\n                type = gl.BYTE;\\r\\n\\r\\n            } else if ( array instanceof Uint8Array ) {\\r\\n\\r\\n                type = gl.UNSIGNED_BYTE;\\r\\n\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                buffer: buffer,\\r\\n                type: type,\\r\\n                bytesPerElement: array.BYTES_PER_ELEMENT,\\r\\n                version: attribute.version\\r\\n            };\\r\\n\\r\\n        }\\r\\n\\r\\n        function updateBuffer( buffer, attribute, bufferType ) {\\r\\n\\r\\n            var array = attribute.array;\\r\\n            var updateRange = attribute.updateRange;\\r\\n\\r\\n            gl.bindBuffer( bufferType, buffer );\\r\\n\\r\\n            if ( attribute.dynamic === false ) {\\r\\n\\r\\n                gl.bufferData( bufferType, array, gl.STATIC_DRAW );\\r\\n\\r\\n            } else if ( updateRange.count === - 1 ) {\\r\\n\\r\\n                // Not using update ranges\\r\\n\\r\\n                gl.bufferSubData( bufferType, 0, array );\\r\\n\\r\\n            } else if ( updateRange.count === 0 ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\\r\\n                    array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\\r\\n\\r\\n                updateRange.count = - 1; // reset range\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function get( attribute ) {\\r\\n\\r\\n            if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\\r\\n\\r\\n            return buffers.get( attribute );\\r\\n\\r\\n        }\\r\\n\\r\\n        function remove( attribute ) {\\r\\n\\r\\n            if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\\r\\n\\r\\n            var data = buffers.get( attribute );\\r\\n\\r\\n            if ( data ) {\\r\\n\\r\\n                gl.deleteBuffer( data.buffer );\\r\\n\\r\\n                buffers.delete( attribute );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function update( attribute, bufferType ) {\\r\\n\\r\\n            if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\\r\\n\\r\\n            var data = buffers.get( attribute );\\r\\n\\r\\n            if ( data === undefined ) {\\r\\n\\r\\n                buffers.set( attribute, createBuffer( attribute, bufferType ) );\\r\\n\\r\\n            } else if ( data.version < attribute.version ) {\\r\\n\\r\\n                updateBuffer( data.buffer, attribute, bufferType );\\r\\n\\r\\n                data.version = attribute.version;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            get: get,\\r\\n            remove: remove,\\r\\n            update: update\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Face3( a, b, c, normal, color, materialIndex ) {\\r\\n\\r\\n        this.a = a;\\r\\n        this.b = b;\\r\\n        this.c = c;\\r\\n\\r\\n        this.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\\r\\n        this.vertexNormals = Array.isArray( normal ) ? normal : [];\\r\\n\\r\\n        this.color = ( color && color.isColor ) ? color : new Color();\\r\\n        this.vertexColors = Array.isArray( color ) ? color : [];\\r\\n\\r\\n        this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Face3.prototype, {\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.a = source.a;\\r\\n            this.b = source.b;\\r\\n            this.c = source.c;\\r\\n\\r\\n            this.normal.copy( source.normal );\\r\\n            this.color.copy( source.color );\\r\\n\\r\\n            this.materialIndex = source.materialIndex;\\r\\n\\r\\n            for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\\r\\n\\r\\n                this.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\\r\\n\\r\\n                this.vertexColors[ i ] = source.vertexColors[ i ].clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Euler( x, y, z, order ) {\\r\\n\\r\\n        this._x = x || 0;\\r\\n        this._y = y || 0;\\r\\n        this._z = z || 0;\\r\\n        this._order = order || Euler.DefaultOrder;\\r\\n\\r\\n    }\\r\\n\\r\\n    Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\\r\\n\\r\\n    Euler.DefaultOrder = 'XYZ';\\r\\n\\r\\n    Object.defineProperties( Euler.prototype, {\\r\\n\\r\\n        x: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._x;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._x = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        y: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._y;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._y = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        z: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._z;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._z = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        order: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this._order;\\r\\n\\r\\n            },\\r\\n\\r\\n            set: function ( value ) {\\r\\n\\r\\n                this._order = value;\\r\\n                this.onChangeCallback();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Euler.prototype, {\\r\\n\\r\\n        isEuler: true,\\r\\n\\r\\n        set: function ( x, y, z, order ) {\\r\\n\\r\\n            this._x = x;\\r\\n            this._y = y;\\r\\n            this._z = z;\\r\\n            this._order = order || this._order;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this._x, this._y, this._z, this._order );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( euler ) {\\r\\n\\r\\n            this._x = euler._x;\\r\\n            this._y = euler._y;\\r\\n            this._z = euler._z;\\r\\n            this._order = euler._order;\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromRotationMatrix: function ( m, order, update ) {\\r\\n\\r\\n            var clamp = _Math.clamp;\\r\\n\\r\\n            // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n            var te = m.elements;\\r\\n            var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\\r\\n            var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\\r\\n            var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\r\\n\\r\\n            order = order || this._order;\\r\\n\\r\\n            if ( order === 'XYZ' ) {\\r\\n\\r\\n                this._y = Math.asin( clamp( m13, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m13 ) < 0.99999 ) {\\r\\n\\r\\n                    this._x = Math.atan2( - m23, m33 );\\r\\n                    this._z = Math.atan2( - m12, m11 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._x = Math.atan2( m32, m22 );\\r\\n                    this._z = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( order === 'YXZ' ) {\\r\\n\\r\\n                this._x = Math.asin( - clamp( m23, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m23 ) < 0.99999 ) {\\r\\n\\r\\n                    this._y = Math.atan2( m13, m33 );\\r\\n                    this._z = Math.atan2( m21, m22 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._y = Math.atan2( - m31, m11 );\\r\\n                    this._z = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( order === 'ZXY' ) {\\r\\n\\r\\n                this._x = Math.asin( clamp( m32, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m32 ) < 0.99999 ) {\\r\\n\\r\\n                    this._y = Math.atan2( - m31, m33 );\\r\\n                    this._z = Math.atan2( - m12, m22 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._y = 0;\\r\\n                    this._z = Math.atan2( m21, m11 );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( order === 'ZYX' ) {\\r\\n\\r\\n                this._y = Math.asin( - clamp( m31, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m31 ) < 0.99999 ) {\\r\\n\\r\\n                    this._x = Math.atan2( m32, m33 );\\r\\n                    this._z = Math.atan2( m21, m11 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._x = 0;\\r\\n                    this._z = Math.atan2( - m12, m22 );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( order === 'YZX' ) {\\r\\n\\r\\n                this._z = Math.asin( clamp( m21, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m21 ) < 0.99999 ) {\\r\\n\\r\\n                    this._x = Math.atan2( - m23, m22 );\\r\\n                    this._y = Math.atan2( - m31, m11 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._x = 0;\\r\\n                    this._y = Math.atan2( m13, m33 );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( order === 'XZY' ) {\\r\\n\\r\\n                this._z = Math.asin( - clamp( m12, - 1, 1 ) );\\r\\n\\r\\n                if ( Math.abs( m12 ) < 0.99999 ) {\\r\\n\\r\\n                    this._x = Math.atan2( m32, m22 );\\r\\n                    this._y = Math.atan2( m13, m11 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this._x = Math.atan2( - m23, m33 );\\r\\n                    this._y = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\\r\\n\\r\\n            }\\r\\n\\r\\n            this._order = order;\\r\\n\\r\\n            if ( update !== false ) this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromQuaternion: function () {\\r\\n\\r\\n            var matrix = new Matrix4();\\r\\n\\r\\n            return function setFromQuaternion( q, order, update ) {\\r\\n\\r\\n                matrix.makeRotationFromQuaternion( q );\\r\\n\\r\\n                return this.setFromRotationMatrix( matrix, order, update );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        setFromVector3: function ( v, order ) {\\r\\n\\r\\n            return this.set( v.x, v.y, v.z, order || this._order );\\r\\n\\r\\n        },\\r\\n\\r\\n        reorder: function () {\\r\\n\\r\\n            // WARNING: this discards revolution information -bhouston\\r\\n\\r\\n            var q = new Quaternion();\\r\\n\\r\\n            return function reorder( newOrder ) {\\r\\n\\r\\n                q.setFromEuler( this );\\r\\n\\r\\n                return this.setFromQuaternion( q, newOrder );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        equals: function ( euler ) {\\r\\n\\r\\n            return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromArray: function ( array ) {\\r\\n\\r\\n            this._x = array[ 0 ];\\r\\n            this._y = array[ 1 ];\\r\\n            this._z = array[ 2 ];\\r\\n            if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\\r\\n\\r\\n            this.onChangeCallback();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toArray: function ( array, offset ) {\\r\\n\\r\\n            if ( array === undefined ) array = [];\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            array[ offset ] = this._x;\\r\\n            array[ offset + 1 ] = this._y;\\r\\n            array[ offset + 2 ] = this._z;\\r\\n            array[ offset + 3 ] = this._order;\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        toVector3: function ( optionalResult ) {\\r\\n\\r\\n            if ( optionalResult ) {\\r\\n\\r\\n                return optionalResult.set( this._x, this._y, this._z );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                return new Vector3( this._x, this._y, this._z );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        onChange: function ( callback ) {\\r\\n\\r\\n            this.onChangeCallback = callback;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        onChangeCallback: function () {}\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Layers() {\\r\\n\\r\\n        this.mask = 1 | 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Layers.prototype, {\\r\\n\\r\\n        set: function ( channel ) {\\r\\n\\r\\n            this.mask = 1 << channel | 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        enable: function ( channel ) {\\r\\n\\r\\n            this.mask |= 1 << channel | 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        toggle: function ( channel ) {\\r\\n\\r\\n            this.mask ^= 1 << channel | 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        disable: function ( channel ) {\\r\\n\\r\\n            this.mask &= ~ ( 1 << channel | 0 );\\r\\n\\r\\n        },\\r\\n\\r\\n        test: function ( layers ) {\\r\\n\\r\\n            return ( this.mask & layers.mask ) !== 0;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author elephantatwork / www.elephantatwork.ch\\r\\n     */\\r\\n\\r\\n    var object3DId = 0;\\r\\n\\r\\n    function Object3D() {\\r\\n\\r\\n        Object.defineProperty( this, 'id', { value: object3DId ++ } );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.name = '';\\r\\n        this.type = 'Object3D';\\r\\n\\r\\n        this.parent = null;\\r\\n        this.children = [];\\r\\n\\r\\n        this.up = Object3D.DefaultUp.clone();\\r\\n\\r\\n        var position = new Vector3();\\r\\n        var rotation = new Euler();\\r\\n        var quaternion = new Quaternion();\\r\\n        var scale = new Vector3( 1, 1, 1 );\\r\\n\\r\\n        function onRotationChange() {\\r\\n\\r\\n            quaternion.setFromEuler( rotation, false );\\r\\n\\r\\n        }\\r\\n\\r\\n        function onQuaternionChange() {\\r\\n\\r\\n            rotation.setFromQuaternion( quaternion, undefined, false );\\r\\n\\r\\n        }\\r\\n\\r\\n        rotation.onChange( onRotationChange );\\r\\n        quaternion.onChange( onQuaternionChange );\\r\\n\\r\\n        Object.defineProperties( this, {\\r\\n            position: {\\r\\n                enumerable: true,\\r\\n                value: position\\r\\n            },\\r\\n            rotation: {\\r\\n                enumerable: true,\\r\\n                value: rotation\\r\\n            },\\r\\n            quaternion: {\\r\\n                enumerable: true,\\r\\n                value: quaternion\\r\\n            },\\r\\n            scale: {\\r\\n                enumerable: true,\\r\\n                value: scale\\r\\n            },\\r\\n            modelViewMatrix: {\\r\\n                value: new Matrix4()\\r\\n            },\\r\\n            normalMatrix: {\\r\\n                value: new Matrix3()\\r\\n            }\\r\\n        } );\\r\\n\\r\\n        this.matrix = new Matrix4();\\r\\n        this.matrixWorld = new Matrix4();\\r\\n\\r\\n        this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\\r\\n        this.matrixWorldNeedsUpdate = false;\\r\\n\\r\\n        this.layers = new Layers();\\r\\n        this.visible = true;\\r\\n\\r\\n        this.castShadow = false;\\r\\n        this.receiveShadow = false;\\r\\n\\r\\n        this.frustumCulled = true;\\r\\n        this.renderOrder = 0;\\r\\n\\r\\n        this.userData = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    Object3D.DefaultUp = new Vector3( 0, 1, 0 );\\r\\n    Object3D.DefaultMatrixAutoUpdate = true;\\r\\n\\r\\n    Object3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: Object3D,\\r\\n\\r\\n        isObject3D: true,\\r\\n\\r\\n        onBeforeRender: function () {},\\r\\n        onAfterRender: function () {},\\r\\n\\r\\n        applyMatrix: function ( matrix ) {\\r\\n\\r\\n            this.matrix.multiplyMatrices( matrix, this.matrix );\\r\\n\\r\\n            this.matrix.decompose( this.position, this.quaternion, this.scale );\\r\\n\\r\\n        },\\r\\n\\r\\n        applyQuaternion: function ( q ) {\\r\\n\\r\\n            this.quaternion.premultiply( q );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setRotationFromAxisAngle: function ( axis, angle ) {\\r\\n\\r\\n            // assumes axis is normalized\\r\\n\\r\\n            this.quaternion.setFromAxisAngle( axis, angle );\\r\\n\\r\\n        },\\r\\n\\r\\n        setRotationFromEuler: function ( euler ) {\\r\\n\\r\\n            this.quaternion.setFromEuler( euler, true );\\r\\n\\r\\n        },\\r\\n\\r\\n        setRotationFromMatrix: function ( m ) {\\r\\n\\r\\n            // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n            this.quaternion.setFromRotationMatrix( m );\\r\\n\\r\\n        },\\r\\n\\r\\n        setRotationFromQuaternion: function ( q ) {\\r\\n\\r\\n            // assumes q is normalized\\r\\n\\r\\n            this.quaternion.copy( q );\\r\\n\\r\\n        },\\r\\n\\r\\n        rotateOnAxis: function () {\\r\\n\\r\\n            // rotate object on axis in object space\\r\\n            // axis is assumed to be normalized\\r\\n\\r\\n            var q1 = new Quaternion();\\r\\n\\r\\n            return function rotateOnAxis( axis, angle ) {\\r\\n\\r\\n                q1.setFromAxisAngle( axis, angle );\\r\\n\\r\\n                this.quaternion.multiply( q1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateOnWorldAxis: function () {\\r\\n\\r\\n            // rotate object on axis in world space\\r\\n            // axis is assumed to be normalized\\r\\n            // method assumes no rotated parent\\r\\n\\r\\n            var q1 = new Quaternion();\\r\\n\\r\\n            return function rotateOnWorldAxis( axis, angle ) {\\r\\n\\r\\n                q1.setFromAxisAngle( axis, angle );\\r\\n\\r\\n                this.quaternion.premultiply( q1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateX: function () {\\r\\n\\r\\n            var v1 = new Vector3( 1, 0, 0 );\\r\\n\\r\\n            return function rotateX( angle ) {\\r\\n\\r\\n                return this.rotateOnAxis( v1, angle );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateY: function () {\\r\\n\\r\\n            var v1 = new Vector3( 0, 1, 0 );\\r\\n\\r\\n            return function rotateY( angle ) {\\r\\n\\r\\n                return this.rotateOnAxis( v1, angle );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateZ: function () {\\r\\n\\r\\n            var v1 = new Vector3( 0, 0, 1 );\\r\\n\\r\\n            return function rotateZ( angle ) {\\r\\n\\r\\n                return this.rotateOnAxis( v1, angle );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translateOnAxis: function () {\\r\\n\\r\\n            // translate object by distance along axis in object space\\r\\n            // axis is assumed to be normalized\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function translateOnAxis( axis, distance ) {\\r\\n\\r\\n                v1.copy( axis ).applyQuaternion( this.quaternion );\\r\\n\\r\\n                this.position.add( v1.multiplyScalar( distance ) );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translateX: function () {\\r\\n\\r\\n            var v1 = new Vector3( 1, 0, 0 );\\r\\n\\r\\n            return function translateX( distance ) {\\r\\n\\r\\n                return this.translateOnAxis( v1, distance );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translateY: function () {\\r\\n\\r\\n            var v1 = new Vector3( 0, 1, 0 );\\r\\n\\r\\n            return function translateY( distance ) {\\r\\n\\r\\n                return this.translateOnAxis( v1, distance );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translateZ: function () {\\r\\n\\r\\n            var v1 = new Vector3( 0, 0, 1 );\\r\\n\\r\\n            return function translateZ( distance ) {\\r\\n\\r\\n                return this.translateOnAxis( v1, distance );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        localToWorld: function ( vector ) {\\r\\n\\r\\n            return vector.applyMatrix4( this.matrixWorld );\\r\\n\\r\\n        },\\r\\n\\r\\n        worldToLocal: function () {\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function worldToLocal( vector ) {\\r\\n\\r\\n                return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        lookAt: function () {\\r\\n\\r\\n            // This method does not support objects having non-uniformly-scaled parent(s)\\r\\n\\r\\n            var q1 = new Quaternion();\\r\\n            var m1 = new Matrix4();\\r\\n            var target = new Vector3();\\r\\n            var position = new Vector3();\\r\\n\\r\\n            return function lookAt( x, y, z ) {\\r\\n\\r\\n                if ( x.isVector3 ) {\\r\\n\\r\\n                    target.copy( x );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    target.set( x, y, z );\\r\\n\\r\\n                }\\r\\n\\r\\n                var parent = this.parent;\\r\\n\\r\\n                this.updateWorldMatrix( true, false );\\r\\n\\r\\n                position.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n                if ( this.isCamera ) {\\r\\n\\r\\n                    m1.lookAt( position, target, this.up );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    m1.lookAt( target, position, this.up );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.quaternion.setFromRotationMatrix( m1 );\\r\\n\\r\\n                if ( parent ) {\\r\\n\\r\\n                    m1.extractRotation( parent.matrixWorld );\\r\\n                    q1.setFromRotationMatrix( m1 );\\r\\n                    this.quaternion.premultiply( q1.inverse() );\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        add: function ( object ) {\\r\\n\\r\\n            if ( arguments.length > 1 ) {\\r\\n\\r\\n                for ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n                    this.add( arguments[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( object === this ) {\\r\\n\\r\\n                console.error( \\\"THREE.Object3D.add: object can't be added as a child of itself.\\\", object );\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ( object && object.isObject3D ) ) {\\r\\n\\r\\n                if ( object.parent !== null ) {\\r\\n\\r\\n                    object.parent.remove( object );\\r\\n\\r\\n                }\\r\\n\\r\\n                object.parent = this;\\r\\n                object.dispatchEvent( { type: 'added' } );\\r\\n\\r\\n                this.children.push( object );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                console.error( \\\"THREE.Object3D.add: object not an instance of THREE.Object3D.\\\", object );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        remove: function ( object ) {\\r\\n\\r\\n            if ( arguments.length > 1 ) {\\r\\n\\r\\n                for ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n                    this.remove( arguments[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            var index = this.children.indexOf( object );\\r\\n\\r\\n            if ( index !== - 1 ) {\\r\\n\\r\\n                object.parent = null;\\r\\n\\r\\n                object.dispatchEvent( { type: 'removed' } );\\r\\n\\r\\n                this.children.splice( index, 1 );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getObjectById: function ( id ) {\\r\\n\\r\\n            return this.getObjectByProperty( 'id', id );\\r\\n\\r\\n        },\\r\\n\\r\\n        getObjectByName: function ( name ) {\\r\\n\\r\\n            return this.getObjectByProperty( 'name', name );\\r\\n\\r\\n        },\\r\\n\\r\\n        getObjectByProperty: function ( name, value ) {\\r\\n\\r\\n            if ( this[ name ] === value ) return this;\\r\\n\\r\\n            for ( var i = 0, l = this.children.length; i < l; i ++ ) {\\r\\n\\r\\n                var child = this.children[ i ];\\r\\n                var object = child.getObjectByProperty( name, value );\\r\\n\\r\\n                if ( object !== undefined ) {\\r\\n\\r\\n                    return object;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return undefined;\\r\\n\\r\\n        },\\r\\n\\r\\n        getWorldPosition: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.updateMatrixWorld( true );\\r\\n\\r\\n            return target.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n        },\\r\\n\\r\\n        getWorldQuaternion: function () {\\r\\n\\r\\n            var position = new Vector3();\\r\\n            var scale = new Vector3();\\r\\n\\r\\n            return function getWorldQuaternion( target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\\r\\n                    target = new Quaternion();\\r\\n\\r\\n                }\\r\\n\\r\\n                this.updateMatrixWorld( true );\\r\\n\\r\\n                this.matrixWorld.decompose( position, target, scale );\\r\\n\\r\\n                return target;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        getWorldScale: function () {\\r\\n\\r\\n            var position = new Vector3();\\r\\n            var quaternion = new Quaternion();\\r\\n\\r\\n            return function getWorldScale( target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\\r\\n                    target = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                this.updateMatrixWorld( true );\\r\\n\\r\\n                this.matrixWorld.decompose( position, quaternion, target );\\r\\n\\r\\n                return target;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        getWorldDirection: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.updateMatrixWorld( true );\\r\\n\\r\\n            var e = this.matrixWorld.elements;\\r\\n\\r\\n            return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\\r\\n\\r\\n        },\\r\\n\\r\\n        raycast: function () {},\\r\\n\\r\\n        traverse: function ( callback ) {\\r\\n\\r\\n            callback( this );\\r\\n\\r\\n            var children = this.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                children[ i ].traverse( callback );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        traverseVisible: function ( callback ) {\\r\\n\\r\\n            if ( this.visible === false ) return;\\r\\n\\r\\n            callback( this );\\r\\n\\r\\n            var children = this.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                children[ i ].traverseVisible( callback );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        traverseAncestors: function ( callback ) {\\r\\n\\r\\n            var parent = this.parent;\\r\\n\\r\\n            if ( parent !== null ) {\\r\\n\\r\\n                callback( parent );\\r\\n\\r\\n                parent.traverseAncestors( callback );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrix: function () {\\r\\n\\r\\n            this.matrix.compose( this.position, this.quaternion, this.scale );\\r\\n\\r\\n            this.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrixWorld: function ( force ) {\\r\\n\\r\\n            if ( this.matrixAutoUpdate ) this.updateMatrix();\\r\\n\\r\\n            if ( this.matrixWorldNeedsUpdate || force ) {\\r\\n\\r\\n                if ( this.parent === null ) {\\r\\n\\r\\n                    this.matrixWorld.copy( this.matrix );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.matrixWorldNeedsUpdate = false;\\r\\n\\r\\n                force = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            // update children\\r\\n\\r\\n            var children = this.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                children[ i ].updateMatrixWorld( force );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        updateWorldMatrix: function ( updateParents, updateChildren ) {\\r\\n\\r\\n            var parent = this.parent;\\r\\n\\r\\n            if ( updateParents === true && parent !== null ) {\\r\\n\\r\\n                parent.updateWorldMatrix( true, false );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.matrixAutoUpdate ) this.updateMatrix();\\r\\n\\r\\n            if ( this.parent === null ) {\\r\\n\\r\\n                this.matrixWorld.copy( this.matrix );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n            // update children\\r\\n\\r\\n            if ( updateChildren === true ) {\\r\\n\\r\\n                var children = this.children;\\r\\n\\r\\n                for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                    children[ i ].updateWorldMatrix( false, true );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            // meta is a string when called from JSON.stringify\\r\\n            var isRootObject = ( meta === undefined || typeof meta === 'string' );\\r\\n\\r\\n            var output = {};\\r\\n\\r\\n            // meta is a hash used to collect geometries, materials.\\r\\n            // not providing it implies that this is the root object\\r\\n            // being serialized.\\r\\n            if ( isRootObject ) {\\r\\n\\r\\n                // initialize meta obj\\r\\n                meta = {\\r\\n                    geometries: {},\\r\\n                    materials: {},\\r\\n                    textures: {},\\r\\n                    images: {},\\r\\n                    shapes: {}\\r\\n                };\\r\\n\\r\\n                output.metadata = {\\r\\n                    version: 4.5,\\r\\n                    type: 'Object',\\r\\n                    generator: 'Object3D.toJSON'\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            // standard Object3D serialization\\r\\n\\r\\n            var object = {};\\r\\n\\r\\n            object.uuid = this.uuid;\\r\\n            object.type = this.type;\\r\\n\\r\\n            if ( this.name !== '' ) object.name = this.name;\\r\\n            if ( this.castShadow === true ) object.castShadow = true;\\r\\n            if ( this.receiveShadow === true ) object.receiveShadow = true;\\r\\n            if ( this.visible === false ) object.visible = false;\\r\\n            if ( this.frustumCulled === false ) object.frustumCulled = false;\\r\\n            if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\\r\\n            if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\\r\\n\\r\\n            object.layers = this.layers.mask;\\r\\n            object.matrix = this.matrix.toArray();\\r\\n\\r\\n            if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\\r\\n\\r\\n            //\\r\\n\\r\\n            function serialize( library, element ) {\\r\\n\\r\\n                if ( library[ element.uuid ] === undefined ) {\\r\\n\\r\\n                    library[ element.uuid ] = element.toJSON( meta );\\r\\n\\r\\n                }\\r\\n\\r\\n                return element.uuid;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.isMesh || this.isLine || this.isPoints ) {\\r\\n\\r\\n                object.geometry = serialize( meta.geometries, this.geometry );\\r\\n\\r\\n                var parameters = this.geometry.parameters;\\r\\n\\r\\n                if ( parameters !== undefined && parameters.shapes !== undefined ) {\\r\\n\\r\\n                    var shapes = parameters.shapes;\\r\\n\\r\\n                    if ( Array.isArray( shapes ) ) {\\r\\n\\r\\n                        for ( var i = 0, l = shapes.length; i < l; i ++ ) {\\r\\n\\r\\n                            var shape = shapes[ i ];\\r\\n\\r\\n                            serialize( meta.shapes, shape );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        serialize( meta.shapes, shapes );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.material !== undefined ) {\\r\\n\\r\\n                if ( Array.isArray( this.material ) ) {\\r\\n\\r\\n                    var uuids = [];\\r\\n\\r\\n                    for ( var i = 0, l = this.material.length; i < l; i ++ ) {\\r\\n\\r\\n                        uuids.push( serialize( meta.materials, this.material[ i ] ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    object.material = uuids;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    object.material = serialize( meta.materials, this.material );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( this.children.length > 0 ) {\\r\\n\\r\\n                object.children = [];\\r\\n\\r\\n                for ( var i = 0; i < this.children.length; i ++ ) {\\r\\n\\r\\n                    object.children.push( this.children[ i ].toJSON( meta ).object );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( isRootObject ) {\\r\\n\\r\\n                var geometries = extractFromCache( meta.geometries );\\r\\n                var materials = extractFromCache( meta.materials );\\r\\n                var textures = extractFromCache( meta.textures );\\r\\n                var images = extractFromCache( meta.images );\\r\\n                var shapes = extractFromCache( meta.shapes );\\r\\n\\r\\n                if ( geometries.length > 0 ) output.geometries = geometries;\\r\\n                if ( materials.length > 0 ) output.materials = materials;\\r\\n                if ( textures.length > 0 ) output.textures = textures;\\r\\n                if ( images.length > 0 ) output.images = images;\\r\\n                if ( shapes.length > 0 ) output.shapes = shapes;\\r\\n\\r\\n            }\\r\\n\\r\\n            output.object = object;\\r\\n\\r\\n            return output;\\r\\n\\r\\n            // extract data from the cache hash\\r\\n            // remove metadata on each item\\r\\n            // and return as array\\r\\n            function extractFromCache( cache ) {\\r\\n\\r\\n                var values = [];\\r\\n                for ( var key in cache ) {\\r\\n\\r\\n                    var data = cache[ key ];\\r\\n                    delete data.metadata;\\r\\n                    values.push( data );\\r\\n\\r\\n                }\\r\\n                return values;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function ( recursive ) {\\r\\n\\r\\n            return new this.constructor().copy( this, recursive );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source, recursive ) {\\r\\n\\r\\n            if ( recursive === undefined ) recursive = true;\\r\\n\\r\\n            this.name = source.name;\\r\\n\\r\\n            this.up.copy( source.up );\\r\\n\\r\\n            this.position.copy( source.position );\\r\\n            this.quaternion.copy( source.quaternion );\\r\\n            this.scale.copy( source.scale );\\r\\n\\r\\n            this.matrix.copy( source.matrix );\\r\\n            this.matrixWorld.copy( source.matrixWorld );\\r\\n\\r\\n            this.matrixAutoUpdate = source.matrixAutoUpdate;\\r\\n            this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\\r\\n\\r\\n            this.layers.mask = source.layers.mask;\\r\\n            this.visible = source.visible;\\r\\n\\r\\n            this.castShadow = source.castShadow;\\r\\n            this.receiveShadow = source.receiveShadow;\\r\\n\\r\\n            this.frustumCulled = source.frustumCulled;\\r\\n            this.renderOrder = source.renderOrder;\\r\\n\\r\\n            this.userData = JSON.parse( JSON.stringify( source.userData ) );\\r\\n\\r\\n            if ( recursive === true ) {\\r\\n\\r\\n                for ( var i = 0; i < source.children.length; i ++ ) {\\r\\n\\r\\n                    var child = source.children[ i ];\\r\\n                    this.add( child.clone() );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author kile / http://kile.stravaganza.org/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    var geometryId = 0; // Geometry uses even numbers as Id\\r\\n\\r\\n    function Geometry() {\\r\\n\\r\\n        Object.defineProperty( this, 'id', { value: geometryId += 2 } );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.name = '';\\r\\n        this.type = 'Geometry';\\r\\n\\r\\n        this.vertices = [];\\r\\n        this.colors = [];\\r\\n        this.faces = [];\\r\\n        this.faceVertexUvs = [[]];\\r\\n\\r\\n        this.morphTargets = [];\\r\\n        this.morphNormals = [];\\r\\n\\r\\n        this.skinWeights = [];\\r\\n        this.skinIndices = [];\\r\\n\\r\\n        this.lineDistances = [];\\r\\n\\r\\n        this.boundingBox = null;\\r\\n        this.boundingSphere = null;\\r\\n\\r\\n        // update flags\\r\\n\\r\\n        this.elementsNeedUpdate = false;\\r\\n        this.verticesNeedUpdate = false;\\r\\n        this.uvsNeedUpdate = false;\\r\\n        this.normalsNeedUpdate = false;\\r\\n        this.colorsNeedUpdate = false;\\r\\n        this.lineDistancesNeedUpdate = false;\\r\\n        this.groupsNeedUpdate = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    Geometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: Geometry,\\r\\n\\r\\n        isGeometry: true,\\r\\n\\r\\n        applyMatrix: function ( matrix ) {\\r\\n\\r\\n            var normalMatrix = new Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n            for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\\r\\n\\r\\n                var vertex = this.vertices[ i ];\\r\\n                vertex.applyMatrix4( matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0, il = this.faces.length; i < il; i ++ ) {\\r\\n\\r\\n                var face = this.faces[ i ];\\r\\n                face.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n                for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n                    face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.boundingBox !== null ) {\\r\\n\\r\\n                this.computeBoundingBox();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.boundingSphere !== null ) {\\r\\n\\r\\n                this.computeBoundingSphere();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.verticesNeedUpdate = true;\\r\\n            this.normalsNeedUpdate = true;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        rotateX: function () {\\r\\n\\r\\n            // rotate geometry around world x-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateX( angle ) {\\r\\n\\r\\n                m1.makeRotationX( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateY: function () {\\r\\n\\r\\n            // rotate geometry around world y-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateY( angle ) {\\r\\n\\r\\n                m1.makeRotationY( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateZ: function () {\\r\\n\\r\\n            // rotate geometry around world z-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateZ( angle ) {\\r\\n\\r\\n                m1.makeRotationZ( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translate: function () {\\r\\n\\r\\n            // translate geometry\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function translate( x, y, z ) {\\r\\n\\r\\n                m1.makeTranslation( x, y, z );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        scale: function () {\\r\\n\\r\\n            // scale geometry\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function scale( x, y, z ) {\\r\\n\\r\\n                m1.makeScale( x, y, z );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        lookAt: function () {\\r\\n\\r\\n            var obj = new Object3D();\\r\\n\\r\\n            return function lookAt( vector ) {\\r\\n\\r\\n                obj.lookAt( vector );\\r\\n\\r\\n                obj.updateMatrix();\\r\\n\\r\\n                this.applyMatrix( obj.matrix );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        fromBufferGeometry: function ( geometry ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var indices = geometry.index !== null ? geometry.index.array : undefined;\\r\\n            var attributes = geometry.attributes;\\r\\n\\r\\n            var positions = attributes.position.array;\\r\\n            var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\\r\\n            var colors = attributes.color !== undefined ? attributes.color.array : undefined;\\r\\n            var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\\r\\n            var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\\r\\n\\r\\n            if ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\\r\\n\\r\\n            var tempNormals = [];\\r\\n            var tempUVs = [];\\r\\n            var tempUVs2 = [];\\r\\n\\r\\n            for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\\r\\n\\r\\n                scope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\\r\\n\\r\\n                if ( normals !== undefined ) {\\r\\n\\r\\n                    tempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( colors !== undefined ) {\\r\\n\\r\\n                    scope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( uvs !== undefined ) {\\r\\n\\r\\n                    tempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( uvs2 !== undefined ) {\\r\\n\\r\\n                    tempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function addFace( a, b, c, materialIndex ) {\\r\\n\\r\\n                var vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\\r\\n                var vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\\r\\n\\r\\n                var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\\r\\n\\r\\n                scope.faces.push( face );\\r\\n\\r\\n                if ( uvs !== undefined ) {\\r\\n\\r\\n                    scope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( uvs2 !== undefined ) {\\r\\n\\r\\n                    scope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var groups = geometry.groups;\\r\\n\\r\\n            if ( groups.length > 0 ) {\\r\\n\\r\\n                for ( var i = 0; i < groups.length; i ++ ) {\\r\\n\\r\\n                    var group = groups[ i ];\\r\\n\\r\\n                    var start = group.start;\\r\\n                    var count = group.count;\\r\\n\\r\\n                    for ( var j = start, jl = start + count; j < jl; j += 3 ) {\\r\\n\\r\\n                        if ( indices !== undefined ) {\\r\\n\\r\\n                            addFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            addFace( j, j + 1, j + 2, group.materialIndex );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                if ( indices !== undefined ) {\\r\\n\\r\\n                    for ( var i = 0; i < indices.length; i += 3 ) {\\r\\n\\r\\n                        addFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    for ( var i = 0; i < positions.length / 3; i += 3 ) {\\r\\n\\r\\n                        addFace( i, i + 1, i + 2 );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this.computeFaceNormals();\\r\\n\\r\\n            if ( geometry.boundingBox !== null ) {\\r\\n\\r\\n                this.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n                this.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        center: function () {\\r\\n\\r\\n            var offset = new Vector3();\\r\\n\\r\\n            return function center() {\\r\\n\\r\\n                this.computeBoundingBox();\\r\\n\\r\\n                this.boundingBox.getCenter( offset ).negate();\\r\\n\\r\\n                this.translate( offset.x, offset.y, offset.z );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        normalize: function () {\\r\\n\\r\\n            this.computeBoundingSphere();\\r\\n\\r\\n            var center = this.boundingSphere.center;\\r\\n            var radius = this.boundingSphere.radius;\\r\\n\\r\\n            var s = radius === 0 ? 1 : 1.0 / radius;\\r\\n\\r\\n            var matrix = new Matrix4();\\r\\n            matrix.set(\\r\\n                s, 0, 0, - s * center.x,\\r\\n                0, s, 0, - s * center.y,\\r\\n                0, 0, s, - s * center.z,\\r\\n                0, 0, 0, 1\\r\\n            );\\r\\n\\r\\n            this.applyMatrix( matrix );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        computeFaceNormals: function () {\\r\\n\\r\\n            var cb = new Vector3(), ab = new Vector3();\\r\\n\\r\\n            for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                var face = this.faces[ f ];\\r\\n\\r\\n                var vA = this.vertices[ face.a ];\\r\\n                var vB = this.vertices[ face.b ];\\r\\n                var vC = this.vertices[ face.c ];\\r\\n\\r\\n                cb.subVectors( vC, vB );\\r\\n                ab.subVectors( vA, vB );\\r\\n                cb.cross( ab );\\r\\n\\r\\n                cb.normalize();\\r\\n\\r\\n                face.normal.copy( cb );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        computeVertexNormals: function ( areaWeighted ) {\\r\\n\\r\\n            if ( areaWeighted === undefined ) areaWeighted = true;\\r\\n\\r\\n            var v, vl, f, fl, face, vertices;\\r\\n\\r\\n            vertices = new Array( this.vertices.length );\\r\\n\\r\\n            for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\r\\n\\r\\n                vertices[ v ] = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( areaWeighted ) {\\r\\n\\r\\n                // vertex normals weighted by triangle areas\\r\\n                // http://www.iquilezles.org/www/articles/normals/normals.htm\\r\\n\\r\\n                var vA, vB, vC;\\r\\n                var cb = new Vector3(), ab = new Vector3();\\r\\n\\r\\n                for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                    face = this.faces[ f ];\\r\\n\\r\\n                    vA = this.vertices[ face.a ];\\r\\n                    vB = this.vertices[ face.b ];\\r\\n                    vC = this.vertices[ face.c ];\\r\\n\\r\\n                    cb.subVectors( vC, vB );\\r\\n                    ab.subVectors( vA, vB );\\r\\n                    cb.cross( ab );\\r\\n\\r\\n                    vertices[ face.a ].add( cb );\\r\\n                    vertices[ face.b ].add( cb );\\r\\n                    vertices[ face.c ].add( cb );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.computeFaceNormals();\\r\\n\\r\\n                for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                    face = this.faces[ f ];\\r\\n\\r\\n                    vertices[ face.a ].add( face.normal );\\r\\n                    vertices[ face.b ].add( face.normal );\\r\\n                    vertices[ face.c ].add( face.normal );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\r\\n\\r\\n                vertices[ v ].normalize();\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                face = this.faces[ f ];\\r\\n\\r\\n                var vertexNormals = face.vertexNormals;\\r\\n\\r\\n                if ( vertexNormals.length === 3 ) {\\r\\n\\r\\n                    vertexNormals[ 0 ].copy( vertices[ face.a ] );\\r\\n                    vertexNormals[ 1 ].copy( vertices[ face.b ] );\\r\\n                    vertexNormals[ 2 ].copy( vertices[ face.c ] );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    vertexNormals[ 0 ] = vertices[ face.a ].clone();\\r\\n                    vertexNormals[ 1 ] = vertices[ face.b ].clone();\\r\\n                    vertexNormals[ 2 ] = vertices[ face.c ].clone();\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.faces.length > 0 ) {\\r\\n\\r\\n                this.normalsNeedUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        computeFlatVertexNormals: function () {\\r\\n\\r\\n            var f, fl, face;\\r\\n\\r\\n            this.computeFaceNormals();\\r\\n\\r\\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                face = this.faces[ f ];\\r\\n\\r\\n                var vertexNormals = face.vertexNormals;\\r\\n\\r\\n                if ( vertexNormals.length === 3 ) {\\r\\n\\r\\n                    vertexNormals[ 0 ].copy( face.normal );\\r\\n                    vertexNormals[ 1 ].copy( face.normal );\\r\\n                    vertexNormals[ 2 ].copy( face.normal );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    vertexNormals[ 0 ] = face.normal.clone();\\r\\n                    vertexNormals[ 1 ] = face.normal.clone();\\r\\n                    vertexNormals[ 2 ] = face.normal.clone();\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.faces.length > 0 ) {\\r\\n\\r\\n                this.normalsNeedUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        computeMorphNormals: function () {\\r\\n\\r\\n            var i, il, f, fl, face;\\r\\n\\r\\n            // save original normals\\r\\n            // - create temp variables on first access\\r\\n            //   otherwise just copy (for faster repeated calls)\\r\\n\\r\\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                face = this.faces[ f ];\\r\\n\\r\\n                if ( ! face.__originalFaceNormal ) {\\r\\n\\r\\n                    face.__originalFaceNormal = face.normal.clone();\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    face.__originalFaceNormal.copy( face.normal );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\\r\\n\\r\\n                for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\\r\\n\\r\\n                    if ( ! face.__originalVertexNormals[ i ] ) {\\r\\n\\r\\n                        face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // use temp geometry to compute face and vertex normals for each morph\\r\\n\\r\\n            var tmpGeo = new Geometry();\\r\\n            tmpGeo.faces = this.faces;\\r\\n\\r\\n            for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n                // create on first access\\r\\n\\r\\n                if ( ! this.morphNormals[ i ] ) {\\r\\n\\r\\n                    this.morphNormals[ i ] = {};\\r\\n                    this.morphNormals[ i ].faceNormals = [];\\r\\n                    this.morphNormals[ i ].vertexNormals = [];\\r\\n\\r\\n                    var dstNormalsFace = this.morphNormals[ i ].faceNormals;\\r\\n                    var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\\r\\n\\r\\n                    var faceNormal, vertexNormals;\\r\\n\\r\\n                    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                        faceNormal = new Vector3();\\r\\n                        vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\\r\\n\\r\\n                        dstNormalsFace.push( faceNormal );\\r\\n                        dstNormalsVertex.push( vertexNormals );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                var morphNormals = this.morphNormals[ i ];\\r\\n\\r\\n                // set vertices to morph target\\r\\n\\r\\n                tmpGeo.vertices = this.morphTargets[ i ].vertices;\\r\\n\\r\\n                // compute morph normals\\r\\n\\r\\n                tmpGeo.computeFaceNormals();\\r\\n                tmpGeo.computeVertexNormals();\\r\\n\\r\\n                // store morph normals\\r\\n\\r\\n                var faceNormal, vertexNormals;\\r\\n\\r\\n                for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                    face = this.faces[ f ];\\r\\n\\r\\n                    faceNormal = morphNormals.faceNormals[ f ];\\r\\n                    vertexNormals = morphNormals.vertexNormals[ f ];\\r\\n\\r\\n                    faceNormal.copy( face.normal );\\r\\n\\r\\n                    vertexNormals.a.copy( face.vertexNormals[ 0 ] );\\r\\n                    vertexNormals.b.copy( face.vertexNormals[ 1 ] );\\r\\n                    vertexNormals.c.copy( face.vertexNormals[ 2 ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // restore original normals\\r\\n\\r\\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                face = this.faces[ f ];\\r\\n\\r\\n                face.normal = face.__originalFaceNormal;\\r\\n                face.vertexNormals = face.__originalVertexNormals;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        computeBoundingBox: function () {\\r\\n\\r\\n            if ( this.boundingBox === null ) {\\r\\n\\r\\n                this.boundingBox = new Box3();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.boundingBox.setFromPoints( this.vertices );\\r\\n\\r\\n        },\\r\\n\\r\\n        computeBoundingSphere: function () {\\r\\n\\r\\n            if ( this.boundingSphere === null ) {\\r\\n\\r\\n                this.boundingSphere = new Sphere();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.boundingSphere.setFromPoints( this.vertices );\\r\\n\\r\\n        },\\r\\n\\r\\n        merge: function ( geometry, matrix, materialIndexOffset ) {\\r\\n\\r\\n            if ( ! ( geometry && geometry.isGeometry ) ) {\\r\\n\\r\\n                console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            var normalMatrix,\\r\\n                vertexOffset = this.vertices.length,\\r\\n                vertices1 = this.vertices,\\r\\n                vertices2 = geometry.vertices,\\r\\n                faces1 = this.faces,\\r\\n                faces2 = geometry.faces,\\r\\n                uvs1 = this.faceVertexUvs[ 0 ],\\r\\n                uvs2 = geometry.faceVertexUvs[ 0 ],\\r\\n                colors1 = this.colors,\\r\\n                colors2 = geometry.colors;\\r\\n\\r\\n            if ( materialIndexOffset === undefined ) materialIndexOffset = 0;\\r\\n\\r\\n            if ( matrix !== undefined ) {\\r\\n\\r\\n                normalMatrix = new Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n            // vertices\\r\\n\\r\\n            for ( var i = 0, il = vertices2.length; i < il; i ++ ) {\\r\\n\\r\\n                var vertex = vertices2[ i ];\\r\\n\\r\\n                var vertexCopy = vertex.clone();\\r\\n\\r\\n                if ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\\r\\n\\r\\n                vertices1.push( vertexCopy );\\r\\n\\r\\n            }\\r\\n\\r\\n            // colors\\r\\n\\r\\n            for ( var i = 0, il = colors2.length; i < il; i ++ ) {\\r\\n\\r\\n                colors1.push( colors2[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // faces\\r\\n\\r\\n            for ( i = 0, il = faces2.length; i < il; i ++ ) {\\r\\n\\r\\n                var face = faces2[ i ], faceCopy, normal, color,\\r\\n                    faceVertexNormals = face.vertexNormals,\\r\\n                    faceVertexColors = face.vertexColors;\\r\\n\\r\\n                faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\\r\\n                faceCopy.normal.copy( face.normal );\\r\\n\\r\\n                if ( normalMatrix !== undefined ) {\\r\\n\\r\\n                    faceCopy.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n                    normal = faceVertexNormals[ j ].clone();\\r\\n\\r\\n                    if ( normalMatrix !== undefined ) {\\r\\n\\r\\n                        normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n                    }\\r\\n\\r\\n                    faceCopy.vertexNormals.push( normal );\\r\\n\\r\\n                }\\r\\n\\r\\n                faceCopy.color.copy( face.color );\\r\\n\\r\\n                for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\\r\\n\\r\\n                    color = faceVertexColors[ j ];\\r\\n                    faceCopy.vertexColors.push( color.clone() );\\r\\n\\r\\n                }\\r\\n\\r\\n                faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\\r\\n\\r\\n                faces1.push( faceCopy );\\r\\n\\r\\n            }\\r\\n\\r\\n            // uvs\\r\\n\\r\\n            for ( i = 0, il = uvs2.length; i < il; i ++ ) {\\r\\n\\r\\n                var uv = uvs2[ i ], uvCopy = [];\\r\\n\\r\\n                if ( uv === undefined ) {\\r\\n\\r\\n                    continue;\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( var j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n                    uvCopy.push( uv[ j ].clone() );\\r\\n\\r\\n                }\\r\\n\\r\\n                uvs1.push( uvCopy );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        mergeMesh: function ( mesh ) {\\r\\n\\r\\n            if ( ! ( mesh && mesh.isMesh ) ) {\\r\\n\\r\\n                console.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\\r\\n\\r\\n            this.merge( mesh.geometry, mesh.matrix );\\r\\n\\r\\n        },\\r\\n\\r\\n        /*\\r\\n\\t\\t * Checks for duplicate vertices with hashmap.\\r\\n\\t\\t * Duplicated vertices are removed\\r\\n\\t\\t * and faces' vertices are updated.\\r\\n\\t\\t */\\r\\n\\r\\n        mergeVertices: function () {\\r\\n\\r\\n            var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\\r\\n            var unique = [], changes = [];\\r\\n\\r\\n            var v, key;\\r\\n            var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\\r\\n            var precision = Math.pow( 10, precisionPoints );\\r\\n            var i, il, face;\\r\\n            var indices, j, jl;\\r\\n\\r\\n            for ( i = 0, il = this.vertices.length; i < il; i ++ ) {\\r\\n\\r\\n                v = this.vertices[ i ];\\r\\n                key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\\r\\n\\r\\n                if ( verticesMap[ key ] === undefined ) {\\r\\n\\r\\n                    verticesMap[ key ] = i;\\r\\n                    unique.push( this.vertices[ i ] );\\r\\n                    changes[ i ] = unique.length - 1;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\\r\\n                    changes[ i ] = changes[ verticesMap[ key ] ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            // if faces are completely degenerate after merging vertices, we\\r\\n            // have to remove them from the geometry.\\r\\n            var faceIndicesToRemove = [];\\r\\n\\r\\n            for ( i = 0, il = this.faces.length; i < il; i ++ ) {\\r\\n\\r\\n                face = this.faces[ i ];\\r\\n\\r\\n                face.a = changes[ face.a ];\\r\\n                face.b = changes[ face.b ];\\r\\n                face.c = changes[ face.c ];\\r\\n\\r\\n                indices = [ face.a, face.b, face.c ];\\r\\n\\r\\n                // if any duplicate vertices are found in a Face3\\r\\n                // we have to remove the face as nothing can be saved\\r\\n                for ( var n = 0; n < 3; n ++ ) {\\r\\n\\r\\n                    if ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\\r\\n\\r\\n                        faceIndicesToRemove.push( i );\\r\\n                        break;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\\r\\n\\r\\n                var idx = faceIndicesToRemove[ i ];\\r\\n\\r\\n                this.faces.splice( idx, 1 );\\r\\n\\r\\n                for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\\r\\n\\r\\n                    this.faceVertexUvs[ j ].splice( idx, 1 );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // Use unique set of vertices\\r\\n\\r\\n            var diff = this.vertices.length - unique.length;\\r\\n            this.vertices = unique;\\r\\n            return diff;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPoints: function ( points ) {\\r\\n\\r\\n            this.vertices = [];\\r\\n\\r\\n            for ( var i = 0, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n                var point = points[ i ];\\r\\n                this.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        sortFacesByMaterialIndex: function () {\\r\\n\\r\\n            var faces = this.faces;\\r\\n            var length = faces.length;\\r\\n\\r\\n            // tag faces\\r\\n\\r\\n            for ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n                faces[ i ]._id = i;\\r\\n\\r\\n            }\\r\\n\\r\\n            // sort faces\\r\\n\\r\\n            function materialIndexSort( a, b ) {\\r\\n\\r\\n                return a.materialIndex - b.materialIndex;\\r\\n\\r\\n            }\\r\\n\\r\\n            faces.sort( materialIndexSort );\\r\\n\\r\\n            // sort uvs\\r\\n\\r\\n            var uvs1 = this.faceVertexUvs[ 0 ];\\r\\n            var uvs2 = this.faceVertexUvs[ 1 ];\\r\\n\\r\\n            var newUvs1, newUvs2;\\r\\n\\r\\n            if ( uvs1 && uvs1.length === length ) newUvs1 = [];\\r\\n            if ( uvs2 && uvs2.length === length ) newUvs2 = [];\\r\\n\\r\\n            for ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n                var id = faces[ i ]._id;\\r\\n\\r\\n                if ( newUvs1 ) newUvs1.push( uvs1[ id ] );\\r\\n                if ( newUvs2 ) newUvs2.push( uvs2[ id ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\\r\\n            if ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = {\\r\\n                metadata: {\\r\\n                    version: 4.5,\\r\\n                    type: 'Geometry',\\r\\n                    generator: 'Geometry.toJSON'\\r\\n                }\\r\\n            };\\r\\n\\r\\n            // standard Geometry serialization\\r\\n\\r\\n            data.uuid = this.uuid;\\r\\n            data.type = this.type;\\r\\n            if ( this.name !== '' ) data.name = this.name;\\r\\n\\r\\n            if ( this.parameters !== undefined ) {\\r\\n\\r\\n                var parameters = this.parameters;\\r\\n\\r\\n                for ( var key in parameters ) {\\r\\n\\r\\n                    if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\r\\n\\r\\n                }\\r\\n\\r\\n                return data;\\r\\n\\r\\n            }\\r\\n\\r\\n            var vertices = [];\\r\\n\\r\\n            for ( var i = 0; i < this.vertices.length; i ++ ) {\\r\\n\\r\\n                var vertex = this.vertices[ i ];\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n            }\\r\\n\\r\\n            var faces = [];\\r\\n            var normals = [];\\r\\n            var normalsHash = {};\\r\\n            var colors = [];\\r\\n            var colorsHash = {};\\r\\n            var uvs = [];\\r\\n            var uvsHash = {};\\r\\n\\r\\n            for ( var i = 0; i < this.faces.length; i ++ ) {\\r\\n\\r\\n                var face = this.faces[ i ];\\r\\n\\r\\n                var hasMaterial = true;\\r\\n                var hasFaceUv = false; // deprecated\\r\\n                var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\\r\\n                var hasFaceNormal = face.normal.length() > 0;\\r\\n                var hasFaceVertexNormal = face.vertexNormals.length > 0;\\r\\n                var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\\r\\n                var hasFaceVertexColor = face.vertexColors.length > 0;\\r\\n\\r\\n                var faceType = 0;\\r\\n\\r\\n                faceType = setBit( faceType, 0, 0 ); // isQuad\\r\\n                faceType = setBit( faceType, 1, hasMaterial );\\r\\n                faceType = setBit( faceType, 2, hasFaceUv );\\r\\n                faceType = setBit( faceType, 3, hasFaceVertexUv );\\r\\n                faceType = setBit( faceType, 4, hasFaceNormal );\\r\\n                faceType = setBit( faceType, 5, hasFaceVertexNormal );\\r\\n                faceType = setBit( faceType, 6, hasFaceColor );\\r\\n                faceType = setBit( faceType, 7, hasFaceVertexColor );\\r\\n\\r\\n                faces.push( faceType );\\r\\n                faces.push( face.a, face.b, face.c );\\r\\n                faces.push( face.materialIndex );\\r\\n\\r\\n                if ( hasFaceVertexUv ) {\\r\\n\\r\\n                    var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\\r\\n\\r\\n                    faces.push(\\r\\n                        getUvIndex( faceVertexUvs[ 0 ] ),\\r\\n                        getUvIndex( faceVertexUvs[ 1 ] ),\\r\\n                        getUvIndex( faceVertexUvs[ 2 ] )\\r\\n                    );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceNormal ) {\\r\\n\\r\\n                    faces.push( getNormalIndex( face.normal ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceVertexNormal ) {\\r\\n\\r\\n                    var vertexNormals = face.vertexNormals;\\r\\n\\r\\n                    faces.push(\\r\\n                        getNormalIndex( vertexNormals[ 0 ] ),\\r\\n                        getNormalIndex( vertexNormals[ 1 ] ),\\r\\n                        getNormalIndex( vertexNormals[ 2 ] )\\r\\n                    );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceColor ) {\\r\\n\\r\\n                    faces.push( getColorIndex( face.color ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceVertexColor ) {\\r\\n\\r\\n                    var vertexColors = face.vertexColors;\\r\\n\\r\\n                    faces.push(\\r\\n                        getColorIndex( vertexColors[ 0 ] ),\\r\\n                        getColorIndex( vertexColors[ 1 ] ),\\r\\n                        getColorIndex( vertexColors[ 2 ] )\\r\\n                    );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function setBit( value, position, enabled ) {\\r\\n\\r\\n                return enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            function getNormalIndex( normal ) {\\r\\n\\r\\n                var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\\r\\n\\r\\n                if ( normalsHash[ hash ] !== undefined ) {\\r\\n\\r\\n                    return normalsHash[ hash ];\\r\\n\\r\\n                }\\r\\n\\r\\n                normalsHash[ hash ] = normals.length / 3;\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                return normalsHash[ hash ];\\r\\n\\r\\n            }\\r\\n\\r\\n            function getColorIndex( color ) {\\r\\n\\r\\n                var hash = color.r.toString() + color.g.toString() + color.b.toString();\\r\\n\\r\\n                if ( colorsHash[ hash ] !== undefined ) {\\r\\n\\r\\n                    return colorsHash[ hash ];\\r\\n\\r\\n                }\\r\\n\\r\\n                colorsHash[ hash ] = colors.length;\\r\\n                colors.push( color.getHex() );\\r\\n\\r\\n                return colorsHash[ hash ];\\r\\n\\r\\n            }\\r\\n\\r\\n            function getUvIndex( uv ) {\\r\\n\\r\\n                var hash = uv.x.toString() + uv.y.toString();\\r\\n\\r\\n                if ( uvsHash[ hash ] !== undefined ) {\\r\\n\\r\\n                    return uvsHash[ hash ];\\r\\n\\r\\n                }\\r\\n\\r\\n                uvsHash[ hash ] = uvs.length / 2;\\r\\n                uvs.push( uv.x, uv.y );\\r\\n\\r\\n                return uvsHash[ hash ];\\r\\n\\r\\n            }\\r\\n\\r\\n            data.data = {};\\r\\n\\r\\n            data.data.vertices = vertices;\\r\\n            data.data.normals = normals;\\r\\n            if ( colors.length > 0 ) data.data.colors = colors;\\r\\n            if ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\\r\\n            data.data.faces = faces;\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            /*\\r\\n\\t\\t\\t // Handle primitives\\r\\n\\r\\n\\t\\t\\t var parameters = this.parameters;\\r\\n\\r\\n\\t\\t\\t if ( parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\t var values = [];\\r\\n\\r\\n\\t\\t\\t for ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t values.push( parameters[ key ] );\\r\\n\\r\\n\\t\\t\\t }\\r\\n\\r\\n\\t\\t\\t var geometry = Object.create( this.constructor.prototype );\\r\\n\\t\\t\\t this.constructor.apply( geometry, values );\\r\\n\\t\\t\\t return geometry;\\r\\n\\r\\n\\t\\t\\t }\\r\\n\\r\\n\\t\\t\\t return new this.constructor().copy( this );\\r\\n\\t\\t\\t */\\r\\n\\r\\n            return new Geometry().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            var i, il, j, jl, k, kl;\\r\\n\\r\\n            // reset\\r\\n\\r\\n            this.vertices = [];\\r\\n            this.colors = [];\\r\\n            this.faces = [];\\r\\n            this.faceVertexUvs = [[]];\\r\\n            this.morphTargets = [];\\r\\n            this.morphNormals = [];\\r\\n            this.skinWeights = [];\\r\\n            this.skinIndices = [];\\r\\n            this.lineDistances = [];\\r\\n            this.boundingBox = null;\\r\\n            this.boundingSphere = null;\\r\\n\\r\\n            // name\\r\\n\\r\\n            this.name = source.name;\\r\\n\\r\\n            // vertices\\r\\n\\r\\n            var vertices = source.vertices;\\r\\n\\r\\n            for ( i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n                this.vertices.push( vertices[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // colors\\r\\n\\r\\n            var colors = source.colors;\\r\\n\\r\\n            for ( i = 0, il = colors.length; i < il; i ++ ) {\\r\\n\\r\\n                this.colors.push( colors[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // faces\\r\\n\\r\\n            var faces = source.faces;\\r\\n\\r\\n            for ( i = 0, il = faces.length; i < il; i ++ ) {\\r\\n\\r\\n                this.faces.push( faces[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // face vertex uvs\\r\\n\\r\\n            for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\\r\\n\\r\\n                var faceVertexUvs = source.faceVertexUvs[ i ];\\r\\n\\r\\n                if ( this.faceVertexUvs[ i ] === undefined ) {\\r\\n\\r\\n                    this.faceVertexUvs[ i ] = [];\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\\r\\n\\r\\n                    var uvs = faceVertexUvs[ j ], uvsCopy = [];\\r\\n\\r\\n                    for ( k = 0, kl = uvs.length; k < kl; k ++ ) {\\r\\n\\r\\n                        var uv = uvs[ k ];\\r\\n\\r\\n                        uvsCopy.push( uv.clone() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    this.faceVertexUvs[ i ].push( uvsCopy );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // morph targets\\r\\n\\r\\n            var morphTargets = source.morphTargets;\\r\\n\\r\\n            for ( i = 0, il = morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n                var morphTarget = {};\\r\\n                morphTarget.name = morphTargets[ i ].name;\\r\\n\\r\\n                // vertices\\r\\n\\r\\n                if ( morphTargets[ i ].vertices !== undefined ) {\\r\\n\\r\\n                    morphTarget.vertices = [];\\r\\n\\r\\n                    for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\\r\\n\\r\\n                        morphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // normals\\r\\n\\r\\n                if ( morphTargets[ i ].normals !== undefined ) {\\r\\n\\r\\n                    morphTarget.normals = [];\\r\\n\\r\\n                    for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\\r\\n\\r\\n                        morphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphTargets.push( morphTarget );\\r\\n\\r\\n            }\\r\\n\\r\\n            // morph normals\\r\\n\\r\\n            var morphNormals = source.morphNormals;\\r\\n\\r\\n            for ( i = 0, il = morphNormals.length; i < il; i ++ ) {\\r\\n\\r\\n                var morphNormal = {};\\r\\n\\r\\n                // vertex normals\\r\\n\\r\\n                if ( morphNormals[ i ].vertexNormals !== undefined ) {\\r\\n\\r\\n                    morphNormal.vertexNormals = [];\\r\\n\\r\\n                    for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n                        var srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\\r\\n                        var destVertexNormal = {};\\r\\n\\r\\n                        destVertexNormal.a = srcVertexNormal.a.clone();\\r\\n                        destVertexNormal.b = srcVertexNormal.b.clone();\\r\\n                        destVertexNormal.c = srcVertexNormal.c.clone();\\r\\n\\r\\n                        morphNormal.vertexNormals.push( destVertexNormal );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // face normals\\r\\n\\r\\n                if ( morphNormals[ i ].faceNormals !== undefined ) {\\r\\n\\r\\n                    morphNormal.faceNormals = [];\\r\\n\\r\\n                    for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n                        morphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphNormals.push( morphNormal );\\r\\n\\r\\n            }\\r\\n\\r\\n            // skin weights\\r\\n\\r\\n            var skinWeights = source.skinWeights;\\r\\n\\r\\n            for ( i = 0, il = skinWeights.length; i < il; i ++ ) {\\r\\n\\r\\n                this.skinWeights.push( skinWeights[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // skin indices\\r\\n\\r\\n            var skinIndices = source.skinIndices;\\r\\n\\r\\n            for ( i = 0, il = skinIndices.length; i < il; i ++ ) {\\r\\n\\r\\n                this.skinIndices.push( skinIndices[ i ].clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // line distances\\r\\n\\r\\n            var lineDistances = source.lineDistances;\\r\\n\\r\\n            for ( i = 0, il = lineDistances.length; i < il; i ++ ) {\\r\\n\\r\\n                this.lineDistances.push( lineDistances[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            // bounding box\\r\\n\\r\\n            var boundingBox = source.boundingBox;\\r\\n\\r\\n            if ( boundingBox !== null ) {\\r\\n\\r\\n                this.boundingBox = boundingBox.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            // bounding sphere\\r\\n\\r\\n            var boundingSphere = source.boundingSphere;\\r\\n\\r\\n            if ( boundingSphere !== null ) {\\r\\n\\r\\n                this.boundingSphere = boundingSphere.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            // update flags\\r\\n\\r\\n            this.elementsNeedUpdate = source.elementsNeedUpdate;\\r\\n            this.verticesNeedUpdate = source.verticesNeedUpdate;\\r\\n            this.uvsNeedUpdate = source.uvsNeedUpdate;\\r\\n            this.normalsNeedUpdate = source.normalsNeedUpdate;\\r\\n            this.colorsNeedUpdate = source.colorsNeedUpdate;\\r\\n            this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\\r\\n            this.groupsNeedUpdate = source.groupsNeedUpdate;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dispose: function () {\\r\\n\\r\\n            this.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        if ( Array.isArray( array ) ) {\\r\\n\\r\\n            throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.name = '';\\r\\n\\r\\n        this.array = array;\\r\\n        this.itemSize = itemSize;\\r\\n        this.count = array !== undefined ? array.length / itemSize : 0;\\r\\n        this.normalized = normalized === true;\\r\\n\\r\\n        this.dynamic = false;\\r\\n        this.updateRange = { offset: 0, count: - 1 };\\r\\n\\r\\n        this.version = 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            if ( value === true ) this.version ++;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( BufferAttribute.prototype, {\\r\\n\\r\\n        isBufferAttribute: true,\\r\\n\\r\\n        onUploadCallback: function () {},\\r\\n\\r\\n        setArray: function ( array ) {\\r\\n\\r\\n            if ( Array.isArray( array ) ) {\\r\\n\\r\\n                throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.count = array !== undefined ? array.length / this.itemSize : 0;\\r\\n            this.array = array;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setDynamic: function ( value ) {\\r\\n\\r\\n            this.dynamic = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.name = source.name;\\r\\n            this.array = new source.array.constructor( source.array );\\r\\n            this.itemSize = source.itemSize;\\r\\n            this.count = source.count;\\r\\n            this.normalized = source.normalized;\\r\\n\\r\\n            this.dynamic = source.dynamic;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyAt: function ( index1, attribute, index2 ) {\\r\\n\\r\\n            index1 *= this.itemSize;\\r\\n            index2 *= attribute.itemSize;\\r\\n\\r\\n            for ( var i = 0, l = this.itemSize; i < l; i ++ ) {\\r\\n\\r\\n                this.array[ index1 + i ] = attribute.array[ index2 + i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyArray: function ( array ) {\\r\\n\\r\\n            this.array.set( array );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyColorsArray: function ( colors ) {\\r\\n\\r\\n            var array = this.array, offset = 0;\\r\\n\\r\\n            for ( var i = 0, l = colors.length; i < l; i ++ ) {\\r\\n\\r\\n                var color = colors[ i ];\\r\\n\\r\\n                if ( color === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\\r\\n                    color = new Color();\\r\\n\\r\\n                }\\r\\n\\r\\n                array[ offset ++ ] = color.r;\\r\\n                array[ offset ++ ] = color.g;\\r\\n                array[ offset ++ ] = color.b;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyVector2sArray: function ( vectors ) {\\r\\n\\r\\n            var array = this.array, offset = 0;\\r\\n\\r\\n            for ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n                var vector = vectors[ i ];\\r\\n\\r\\n                if ( vector === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\\r\\n                    vector = new Vector2();\\r\\n\\r\\n                }\\r\\n\\r\\n                array[ offset ++ ] = vector.x;\\r\\n                array[ offset ++ ] = vector.y;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyVector3sArray: function ( vectors ) {\\r\\n\\r\\n            var array = this.array, offset = 0;\\r\\n\\r\\n            for ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n                var vector = vectors[ i ];\\r\\n\\r\\n                if ( vector === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\\r\\n                    vector = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                array[ offset ++ ] = vector.x;\\r\\n                array[ offset ++ ] = vector.y;\\r\\n                array[ offset ++ ] = vector.z;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyVector4sArray: function ( vectors ) {\\r\\n\\r\\n            var array = this.array, offset = 0;\\r\\n\\r\\n            for ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n                var vector = vectors[ i ];\\r\\n\\r\\n                if ( vector === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\\r\\n                    vector = new Vector4();\\r\\n\\r\\n                }\\r\\n\\r\\n                array[ offset ++ ] = vector.x;\\r\\n                array[ offset ++ ] = vector.y;\\r\\n                array[ offset ++ ] = vector.z;\\r\\n                array[ offset ++ ] = vector.w;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.array.set( value, offset );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getX: function ( index ) {\\r\\n\\r\\n            return this.array[ index * this.itemSize ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setX: function ( index, x ) {\\r\\n\\r\\n            this.array[ index * this.itemSize ] = x;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getY: function ( index ) {\\r\\n\\r\\n            return this.array[ index * this.itemSize + 1 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setY: function ( index, y ) {\\r\\n\\r\\n            this.array[ index * this.itemSize + 1 ] = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getZ: function ( index ) {\\r\\n\\r\\n            return this.array[ index * this.itemSize + 2 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setZ: function ( index, z ) {\\r\\n\\r\\n            this.array[ index * this.itemSize + 2 ] = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getW: function ( index ) {\\r\\n\\r\\n            return this.array[ index * this.itemSize + 3 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setW: function ( index, w ) {\\r\\n\\r\\n            this.array[ index * this.itemSize + 3 ] = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setXY: function ( index, x, y ) {\\r\\n\\r\\n            index *= this.itemSize;\\r\\n\\r\\n            this.array[ index + 0 ] = x;\\r\\n            this.array[ index + 1 ] = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setXYZ: function ( index, x, y, z ) {\\r\\n\\r\\n            index *= this.itemSize;\\r\\n\\r\\n            this.array[ index + 0 ] = x;\\r\\n            this.array[ index + 1 ] = y;\\r\\n            this.array[ index + 2 ] = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setXYZW: function ( index, x, y, z, w ) {\\r\\n\\r\\n            index *= this.itemSize;\\r\\n\\r\\n            this.array[ index + 0 ] = x;\\r\\n            this.array[ index + 1 ] = y;\\r\\n            this.array[ index + 2 ] = z;\\r\\n            this.array[ index + 3 ] = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        onUpload: function ( callback ) {\\r\\n\\r\\n            this.onUploadCallback = callback;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.array, this.itemSize ).copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    function Int8BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\\r\\n\\r\\n\\r\\n    function Uint8BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\\r\\n\\r\\n\\r\\n    function Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\\r\\n\\r\\n\\r\\n    function Int16BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\\r\\n\\r\\n\\r\\n    function Uint16BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\\r\\n\\r\\n\\r\\n    function Int32BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\\r\\n\\r\\n\\r\\n    function Uint32BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\\r\\n\\r\\n\\r\\n    function Float32BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\\r\\n\\r\\n\\r\\n    function Float64BufferAttribute( array, itemSize, normalized ) {\\r\\n\\r\\n        BufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\\r\\n\\r\\n    }\\r\\n\\r\\n    Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\r\\n    Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function DirectGeometry() {\\r\\n\\r\\n        this.vertices = [];\\r\\n        this.normals = [];\\r\\n        this.colors = [];\\r\\n        this.uvs = [];\\r\\n        this.uvs2 = [];\\r\\n\\r\\n        this.groups = [];\\r\\n\\r\\n        this.morphTargets = {};\\r\\n\\r\\n        this.skinWeights = [];\\r\\n        this.skinIndices = [];\\r\\n\\r\\n        // this.lineDistances = [];\\r\\n\\r\\n        this.boundingBox = null;\\r\\n        this.boundingSphere = null;\\r\\n\\r\\n        // update flags\\r\\n\\r\\n        this.verticesNeedUpdate = false;\\r\\n        this.normalsNeedUpdate = false;\\r\\n        this.colorsNeedUpdate = false;\\r\\n        this.uvsNeedUpdate = false;\\r\\n        this.groupsNeedUpdate = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( DirectGeometry.prototype, {\\r\\n\\r\\n        computeGroups: function ( geometry ) {\\r\\n\\r\\n            var group;\\r\\n            var groups = [];\\r\\n            var materialIndex = undefined;\\r\\n\\r\\n            var faces = geometry.faces;\\r\\n\\r\\n            for ( var i = 0; i < faces.length; i ++ ) {\\r\\n\\r\\n                var face = faces[ i ];\\r\\n\\r\\n                // materials\\r\\n\\r\\n                if ( face.materialIndex !== materialIndex ) {\\r\\n\\r\\n                    materialIndex = face.materialIndex;\\r\\n\\r\\n                    if ( group !== undefined ) {\\r\\n\\r\\n                        group.count = ( i * 3 ) - group.start;\\r\\n                        groups.push( group );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    group = {\\r\\n                        start: i * 3,\\r\\n                        materialIndex: materialIndex\\r\\n                    };\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( group !== undefined ) {\\r\\n\\r\\n                group.count = ( i * 3 ) - group.start;\\r\\n                groups.push( group );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.groups = groups;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromGeometry: function ( geometry ) {\\r\\n\\r\\n            var faces = geometry.faces;\\r\\n            var vertices = geometry.vertices;\\r\\n            var faceVertexUvs = geometry.faceVertexUvs;\\r\\n\\r\\n            var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\\r\\n            var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\\r\\n\\r\\n            // morphs\\r\\n\\r\\n            var morphTargets = geometry.morphTargets;\\r\\n            var morphTargetsLength = morphTargets.length;\\r\\n\\r\\n            var morphTargetsPosition;\\r\\n\\r\\n            if ( morphTargetsLength > 0 ) {\\r\\n\\r\\n                morphTargetsPosition = [];\\r\\n\\r\\n                for ( var i = 0; i < morphTargetsLength; i ++ ) {\\r\\n\\r\\n                    morphTargetsPosition[ i ] = {\\r\\n                        name: morphTargets[ i ].name,\\r\\n                        data: []\\r\\n                    };\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphTargets.position = morphTargetsPosition;\\r\\n\\r\\n            }\\r\\n\\r\\n            var morphNormals = geometry.morphNormals;\\r\\n            var morphNormalsLength = morphNormals.length;\\r\\n\\r\\n            var morphTargetsNormal;\\r\\n\\r\\n            if ( morphNormalsLength > 0 ) {\\r\\n\\r\\n                morphTargetsNormal = [];\\r\\n\\r\\n                for ( var i = 0; i < morphNormalsLength; i ++ ) {\\r\\n\\r\\n                    morphTargetsNormal[ i ] = {\\r\\n                        name: morphNormals[ i ].name,\\r\\n                        data: []\\r\\n                    };\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphTargets.normal = morphTargetsNormal;\\r\\n\\r\\n            }\\r\\n\\r\\n            // skins\\r\\n\\r\\n            var skinIndices = geometry.skinIndices;\\r\\n            var skinWeights = geometry.skinWeights;\\r\\n\\r\\n            var hasSkinIndices = skinIndices.length === vertices.length;\\r\\n            var hasSkinWeights = skinWeights.length === vertices.length;\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( vertices.length > 0 && faces.length === 0 ) {\\r\\n\\r\\n                console.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i < faces.length; i ++ ) {\\r\\n\\r\\n                var face = faces[ i ];\\r\\n\\r\\n                this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\\r\\n\\r\\n                var vertexNormals = face.vertexNormals;\\r\\n\\r\\n                if ( vertexNormals.length === 3 ) {\\r\\n\\r\\n                    this.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    var normal = face.normal;\\r\\n\\r\\n                    this.normals.push( normal, normal, normal );\\r\\n\\r\\n                }\\r\\n\\r\\n                var vertexColors = face.vertexColors;\\r\\n\\r\\n                if ( vertexColors.length === 3 ) {\\r\\n\\r\\n                    this.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    var color = face.color;\\r\\n\\r\\n                    this.colors.push( color, color, color );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceVertexUv === true ) {\\r\\n\\r\\n                    var vertexUvs = faceVertexUvs[ 0 ][ i ];\\r\\n\\r\\n                    if ( vertexUvs !== undefined ) {\\r\\n\\r\\n                        this.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\\r\\n\\r\\n                        this.uvs.push( new Vector2(), new Vector2(), new Vector2() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasFaceVertexUv2 === true ) {\\r\\n\\r\\n                    var vertexUvs = faceVertexUvs[ 1 ][ i ];\\r\\n\\r\\n                    if ( vertexUvs !== undefined ) {\\r\\n\\r\\n                        this.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\\r\\n\\r\\n                        this.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // morphs\\r\\n\\r\\n                for ( var j = 0; j < morphTargetsLength; j ++ ) {\\r\\n\\r\\n                    var morphTarget = morphTargets[ j ].vertices;\\r\\n\\r\\n                    morphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( var j = 0; j < morphNormalsLength; j ++ ) {\\r\\n\\r\\n                    var morphNormal = morphNormals[ j ].vertexNormals[ i ];\\r\\n\\r\\n                    morphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\\r\\n\\r\\n                }\\r\\n\\r\\n                // skins\\r\\n\\r\\n                if ( hasSkinIndices ) {\\r\\n\\r\\n                    this.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( hasSkinWeights ) {\\r\\n\\r\\n                    this.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this.computeGroups( geometry );\\r\\n\\r\\n            this.verticesNeedUpdate = geometry.verticesNeedUpdate;\\r\\n            this.normalsNeedUpdate = geometry.normalsNeedUpdate;\\r\\n            this.colorsNeedUpdate = geometry.colorsNeedUpdate;\\r\\n            this.uvsNeedUpdate = geometry.uvsNeedUpdate;\\r\\n            this.groupsNeedUpdate = geometry.groupsNeedUpdate;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function arrayMax( array ) {\\r\\n\\r\\n        if ( array.length === 0 ) return - Infinity;\\r\\n\\r\\n        var max = array[ 0 ];\\r\\n\\r\\n        for ( var i = 1, l = array.length; i < l; ++ i ) {\\r\\n\\r\\n            if ( array[ i ] > max ) max = array[ i ];\\r\\n\\r\\n        }\\r\\n\\r\\n        return max;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\\r\\n\\r\\n    function BufferGeometry() {\\r\\n\\r\\n        Object.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.name = '';\\r\\n        this.type = 'BufferGeometry';\\r\\n\\r\\n        this.index = null;\\r\\n        this.attributes = {};\\r\\n\\r\\n        this.morphAttributes = {};\\r\\n\\r\\n        this.groups = [];\\r\\n\\r\\n        this.boundingBox = null;\\r\\n        this.boundingSphere = null;\\r\\n\\r\\n        this.drawRange = { start: 0, count: Infinity };\\r\\n\\r\\n        this.userData = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    BufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: BufferGeometry,\\r\\n\\r\\n        isBufferGeometry: true,\\r\\n\\r\\n        getIndex: function () {\\r\\n\\r\\n            return this.index;\\r\\n\\r\\n        },\\r\\n\\r\\n        setIndex: function ( index ) {\\r\\n\\r\\n            if ( Array.isArray( index ) ) {\\r\\n\\r\\n                this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.index = index;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        addAttribute: function ( name, attribute ) {\\r\\n\\r\\n            if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\\r\\n\\r\\n                console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\\r\\n\\r\\n                return this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( name === 'index' ) {\\r\\n\\r\\n                console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\\r\\n                this.setIndex( attribute );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.attributes[ name ] = attribute;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getAttribute: function ( name ) {\\r\\n\\r\\n            return this.attributes[ name ];\\r\\n\\r\\n        },\\r\\n\\r\\n        removeAttribute: function ( name ) {\\r\\n\\r\\n            delete this.attributes[ name ];\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addGroup: function ( start, count, materialIndex ) {\\r\\n\\r\\n            this.groups.push( {\\r\\n\\r\\n                start: start,\\r\\n                count: count,\\r\\n                materialIndex: materialIndex !== undefined ? materialIndex : 0\\r\\n\\r\\n            } );\\r\\n\\r\\n        },\\r\\n\\r\\n        clearGroups: function () {\\r\\n\\r\\n            this.groups = [];\\r\\n\\r\\n        },\\r\\n\\r\\n        setDrawRange: function ( start, count ) {\\r\\n\\r\\n            this.drawRange.start = start;\\r\\n            this.drawRange.count = count;\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix: function ( matrix ) {\\r\\n\\r\\n            var position = this.attributes.position;\\r\\n\\r\\n            if ( position !== undefined ) {\\r\\n\\r\\n                matrix.applyToBufferAttribute( position );\\r\\n                position.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            var normal = this.attributes.normal;\\r\\n\\r\\n            if ( normal !== undefined ) {\\r\\n\\r\\n                var normalMatrix = new Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n                normalMatrix.applyToBufferAttribute( normal );\\r\\n                normal.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.boundingBox !== null ) {\\r\\n\\r\\n                this.computeBoundingBox();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.boundingSphere !== null ) {\\r\\n\\r\\n                this.computeBoundingSphere();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        rotateX: function () {\\r\\n\\r\\n            // rotate geometry around world x-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateX( angle ) {\\r\\n\\r\\n                m1.makeRotationX( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateY: function () {\\r\\n\\r\\n            // rotate geometry around world y-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateY( angle ) {\\r\\n\\r\\n                m1.makeRotationY( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        rotateZ: function () {\\r\\n\\r\\n            // rotate geometry around world z-axis\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function rotateZ( angle ) {\\r\\n\\r\\n                m1.makeRotationZ( angle );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        translate: function () {\\r\\n\\r\\n            // translate geometry\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function translate( x, y, z ) {\\r\\n\\r\\n                m1.makeTranslation( x, y, z );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        scale: function () {\\r\\n\\r\\n            // scale geometry\\r\\n\\r\\n            var m1 = new Matrix4();\\r\\n\\r\\n            return function scale( x, y, z ) {\\r\\n\\r\\n                m1.makeScale( x, y, z );\\r\\n\\r\\n                this.applyMatrix( m1 );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        lookAt: function () {\\r\\n\\r\\n            var obj = new Object3D();\\r\\n\\r\\n            return function lookAt( vector ) {\\r\\n\\r\\n                obj.lookAt( vector );\\r\\n\\r\\n                obj.updateMatrix();\\r\\n\\r\\n                this.applyMatrix( obj.matrix );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        center: function () {\\r\\n\\r\\n            var offset = new Vector3();\\r\\n\\r\\n            return function center() {\\r\\n\\r\\n                this.computeBoundingBox();\\r\\n\\r\\n                this.boundingBox.getCenter( offset ).negate();\\r\\n\\r\\n                this.translate( offset.x, offset.y, offset.z );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        setFromObject: function ( object ) {\\r\\n\\r\\n            // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\\r\\n\\r\\n            var geometry = object.geometry;\\r\\n\\r\\n            if ( object.isPoints || object.isLine ) {\\r\\n\\r\\n                var positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\\r\\n                var colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\\r\\n\\r\\n                this.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\\r\\n                this.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\\r\\n\\r\\n                if ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\\r\\n\\r\\n                    var lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\\r\\n\\r\\n                    this.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n                    this.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( geometry.boundingBox !== null ) {\\r\\n\\r\\n                    this.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( object.isMesh ) {\\r\\n\\r\\n                if ( geometry && geometry.isGeometry ) {\\r\\n\\r\\n                    this.fromGeometry( geometry );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPoints: function ( points ) {\\r\\n\\r\\n            var position = [];\\r\\n\\r\\n            for ( var i = 0, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n                var point = points[ i ];\\r\\n                position.push( point.x, point.y, point.z || 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        updateFromObject: function ( object ) {\\r\\n\\r\\n            var geometry = object.geometry;\\r\\n\\r\\n            if ( object.isMesh ) {\\r\\n\\r\\n                var direct = geometry.__directGeometry;\\r\\n\\r\\n                if ( geometry.elementsNeedUpdate === true ) {\\r\\n\\r\\n                    direct = undefined;\\r\\n                    geometry.elementsNeedUpdate = false;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( direct === undefined ) {\\r\\n\\r\\n                    return this.fromGeometry( geometry );\\r\\n\\r\\n                }\\r\\n\\r\\n                direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\\r\\n                direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\\r\\n                direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\\r\\n                direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\\r\\n                direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\\r\\n\\r\\n                geometry.verticesNeedUpdate = false;\\r\\n                geometry.normalsNeedUpdate = false;\\r\\n                geometry.colorsNeedUpdate = false;\\r\\n                geometry.uvsNeedUpdate = false;\\r\\n                geometry.groupsNeedUpdate = false;\\r\\n\\r\\n                geometry = direct;\\r\\n\\r\\n            }\\r\\n\\r\\n            var attribute;\\r\\n\\r\\n            if ( geometry.verticesNeedUpdate === true ) {\\r\\n\\r\\n                attribute = this.attributes.position;\\r\\n\\r\\n                if ( attribute !== undefined ) {\\r\\n\\r\\n                    attribute.copyVector3sArray( geometry.vertices );\\r\\n                    attribute.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.verticesNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.normalsNeedUpdate === true ) {\\r\\n\\r\\n                attribute = this.attributes.normal;\\r\\n\\r\\n                if ( attribute !== undefined ) {\\r\\n\\r\\n                    attribute.copyVector3sArray( geometry.normals );\\r\\n                    attribute.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.normalsNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.colorsNeedUpdate === true ) {\\r\\n\\r\\n                attribute = this.attributes.color;\\r\\n\\r\\n                if ( attribute !== undefined ) {\\r\\n\\r\\n                    attribute.copyColorsArray( geometry.colors );\\r\\n                    attribute.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.colorsNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.uvsNeedUpdate ) {\\r\\n\\r\\n                attribute = this.attributes.uv;\\r\\n\\r\\n                if ( attribute !== undefined ) {\\r\\n\\r\\n                    attribute.copyVector2sArray( geometry.uvs );\\r\\n                    attribute.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.uvsNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.lineDistancesNeedUpdate ) {\\r\\n\\r\\n                attribute = this.attributes.lineDistance;\\r\\n\\r\\n                if ( attribute !== undefined ) {\\r\\n\\r\\n                    attribute.copyArray( geometry.lineDistances );\\r\\n                    attribute.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.lineDistancesNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.groupsNeedUpdate ) {\\r\\n\\r\\n                geometry.computeGroups( object.geometry );\\r\\n                this.groups = geometry.groups;\\r\\n\\r\\n                geometry.groupsNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromGeometry: function ( geometry ) {\\r\\n\\r\\n            geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\\r\\n\\r\\n            return this.fromDirectGeometry( geometry.__directGeometry );\\r\\n\\r\\n        },\\r\\n\\r\\n        fromDirectGeometry: function ( geometry ) {\\r\\n\\r\\n            var positions = new Float32Array( geometry.vertices.length * 3 );\\r\\n            this.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\\r\\n\\r\\n            if ( geometry.normals.length > 0 ) {\\r\\n\\r\\n                var normals = new Float32Array( geometry.normals.length * 3 );\\r\\n                this.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.colors.length > 0 ) {\\r\\n\\r\\n                var colors = new Float32Array( geometry.colors.length * 3 );\\r\\n                this.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.uvs.length > 0 ) {\\r\\n\\r\\n                var uvs = new Float32Array( geometry.uvs.length * 2 );\\r\\n                this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.uvs2.length > 0 ) {\\r\\n\\r\\n                var uvs2 = new Float32Array( geometry.uvs2.length * 2 );\\r\\n                this.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            // groups\\r\\n\\r\\n            this.groups = geometry.groups;\\r\\n\\r\\n            // morphs\\r\\n\\r\\n            for ( var name in geometry.morphTargets ) {\\r\\n\\r\\n                var array = [];\\r\\n                var morphTargets = geometry.morphTargets[ name ];\\r\\n\\r\\n                for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\\r\\n\\r\\n                    var morphTarget = morphTargets[ i ];\\r\\n\\r\\n                    var attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\\r\\n                    attribute.name = morphTarget.name;\\r\\n\\r\\n                    array.push( attribute.copyVector3sArray( morphTarget.data ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphAttributes[ name ] = array;\\r\\n\\r\\n            }\\r\\n\\r\\n            // skinning\\r\\n\\r\\n            if ( geometry.skinIndices.length > 0 ) {\\r\\n\\r\\n                var skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\\r\\n                this.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.skinWeights.length > 0 ) {\\r\\n\\r\\n                var skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\\r\\n                this.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n                this.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry.boundingBox !== null ) {\\r\\n\\r\\n                this.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        computeBoundingBox: function () {\\r\\n\\r\\n            if ( this.boundingBox === null ) {\\r\\n\\r\\n                this.boundingBox = new Box3();\\r\\n\\r\\n            }\\r\\n\\r\\n            var position = this.attributes.position;\\r\\n\\r\\n            if ( position !== undefined ) {\\r\\n\\r\\n                this.boundingBox.setFromBufferAttribute( position );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.boundingBox.makeEmpty();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\\r\\n\\r\\n                console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \\\"position\\\" attribute is likely to have NaN values.', this );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        computeBoundingSphere: function () {\\r\\n\\r\\n            var box = new Box3();\\r\\n            var vector = new Vector3();\\r\\n\\r\\n            return function computeBoundingSphere() {\\r\\n\\r\\n                if ( this.boundingSphere === null ) {\\r\\n\\r\\n                    this.boundingSphere = new Sphere();\\r\\n\\r\\n                }\\r\\n\\r\\n                var position = this.attributes.position;\\r\\n\\r\\n                if ( position ) {\\r\\n\\r\\n                    var center = this.boundingSphere.center;\\r\\n\\r\\n                    box.setFromBufferAttribute( position );\\r\\n                    box.getCenter( center );\\r\\n\\r\\n                    // hoping to find a boundingSphere with a radius smaller than the\\r\\n                    // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\\r\\n\\r\\n                    var maxRadiusSq = 0;\\r\\n\\r\\n                    for ( var i = 0, il = position.count; i < il; i ++ ) {\\r\\n\\r\\n                        vector.x = position.getX( i );\\r\\n                        vector.y = position.getY( i );\\r\\n                        vector.z = position.getZ( i );\\r\\n                        maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\\r\\n\\r\\n                    if ( isNaN( this.boundingSphere.radius ) ) {\\r\\n\\r\\n                        console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \\\"position\\\" attribute is likely to have NaN values.', this );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        computeFaceNormals: function () {\\r\\n\\r\\n            // backwards compatibility\\r\\n\\r\\n        },\\r\\n\\r\\n        computeVertexNormals: function () {\\r\\n\\r\\n            var index = this.index;\\r\\n            var attributes = this.attributes;\\r\\n\\r\\n            if ( attributes.position ) {\\r\\n\\r\\n                var positions = attributes.position.array;\\r\\n\\r\\n                if ( attributes.normal === undefined ) {\\r\\n\\r\\n                    this.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // reset existing normals to zero\\r\\n\\r\\n                    var array = attributes.normal.array;\\r\\n\\r\\n                    for ( var i = 0, il = array.length; i < il; i ++ ) {\\r\\n\\r\\n                        array[ i ] = 0;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                var normals = attributes.normal.array;\\r\\n\\r\\n                var vA, vB, vC;\\r\\n                var pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\\r\\n                var cb = new Vector3(), ab = new Vector3();\\r\\n\\r\\n                // indexed elements\\r\\n\\r\\n                if ( index ) {\\r\\n\\r\\n                    var indices = index.array;\\r\\n\\r\\n                    for ( var i = 0, il = index.count; i < il; i += 3 ) {\\r\\n\\r\\n                        vA = indices[ i + 0 ] * 3;\\r\\n                        vB = indices[ i + 1 ] * 3;\\r\\n                        vC = indices[ i + 2 ] * 3;\\r\\n\\r\\n                        pA.fromArray( positions, vA );\\r\\n                        pB.fromArray( positions, vB );\\r\\n                        pC.fromArray( positions, vC );\\r\\n\\r\\n                        cb.subVectors( pC, pB );\\r\\n                        ab.subVectors( pA, pB );\\r\\n                        cb.cross( ab );\\r\\n\\r\\n                        normals[ vA ] += cb.x;\\r\\n                        normals[ vA + 1 ] += cb.y;\\r\\n                        normals[ vA + 2 ] += cb.z;\\r\\n\\r\\n                        normals[ vB ] += cb.x;\\r\\n                        normals[ vB + 1 ] += cb.y;\\r\\n                        normals[ vB + 2 ] += cb.z;\\r\\n\\r\\n                        normals[ vC ] += cb.x;\\r\\n                        normals[ vC + 1 ] += cb.y;\\r\\n                        normals[ vC + 2 ] += cb.z;\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // non-indexed elements (unconnected triangle soup)\\r\\n\\r\\n                    for ( var i = 0, il = positions.length; i < il; i += 9 ) {\\r\\n\\r\\n                        pA.fromArray( positions, i );\\r\\n                        pB.fromArray( positions, i + 3 );\\r\\n                        pC.fromArray( positions, i + 6 );\\r\\n\\r\\n                        cb.subVectors( pC, pB );\\r\\n                        ab.subVectors( pA, pB );\\r\\n                        cb.cross( ab );\\r\\n\\r\\n                        normals[ i ] = cb.x;\\r\\n                        normals[ i + 1 ] = cb.y;\\r\\n                        normals[ i + 2 ] = cb.z;\\r\\n\\r\\n                        normals[ i + 3 ] = cb.x;\\r\\n                        normals[ i + 4 ] = cb.y;\\r\\n                        normals[ i + 5 ] = cb.z;\\r\\n\\r\\n                        normals[ i + 6 ] = cb.x;\\r\\n                        normals[ i + 7 ] = cb.y;\\r\\n                        normals[ i + 8 ] = cb.z;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this.normalizeNormals();\\r\\n\\r\\n                attributes.normal.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        merge: function ( geometry, offset ) {\\r\\n\\r\\n            if ( ! ( geometry && geometry.isBufferGeometry ) ) {\\r\\n\\r\\n                console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( offset === undefined ) {\\r\\n\\r\\n                offset = 0;\\r\\n\\r\\n                console.warn(\\r\\n                    'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\\r\\n                    + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\\r\\n                );\\r\\n\\r\\n            }\\r\\n\\r\\n            var attributes = this.attributes;\\r\\n\\r\\n            for ( var key in attributes ) {\\r\\n\\r\\n                if ( geometry.attributes[ key ] === undefined ) continue;\\r\\n\\r\\n                var attribute1 = attributes[ key ];\\r\\n                var attributeArray1 = attribute1.array;\\r\\n\\r\\n                var attribute2 = geometry.attributes[ key ];\\r\\n                var attributeArray2 = attribute2.array;\\r\\n\\r\\n                var attributeSize = attribute2.itemSize;\\r\\n\\r\\n                for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\\r\\n\\r\\n                    attributeArray1[ j ] = attributeArray2[ i ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        normalizeNormals: function () {\\r\\n\\r\\n            var vector = new Vector3();\\r\\n\\r\\n            return function normalizeNormals() {\\r\\n\\r\\n                var normals = this.attributes.normal;\\r\\n\\r\\n                for ( var i = 0, il = normals.count; i < il; i ++ ) {\\r\\n\\r\\n                    vector.x = normals.getX( i );\\r\\n                    vector.y = normals.getY( i );\\r\\n                    vector.z = normals.getZ( i );\\r\\n\\r\\n                    vector.normalize();\\r\\n\\r\\n                    normals.setXYZ( i, vector.x, vector.y, vector.z );\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        toNonIndexed: function () {\\r\\n\\r\\n            if ( this.index === null ) {\\r\\n\\r\\n                console.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            var geometry2 = new BufferGeometry();\\r\\n\\r\\n            var indices = this.index.array;\\r\\n            var attributes = this.attributes;\\r\\n\\r\\n            for ( var name in attributes ) {\\r\\n\\r\\n                var attribute = attributes[ name ];\\r\\n\\r\\n                var array = attribute.array;\\r\\n                var itemSize = attribute.itemSize;\\r\\n\\r\\n                var array2 = new array.constructor( indices.length * itemSize );\\r\\n\\r\\n                var index = 0, index2 = 0;\\r\\n\\r\\n                for ( var i = 0, l = indices.length; i < l; i ++ ) {\\r\\n\\r\\n                    index = indices[ i ] * itemSize;\\r\\n\\r\\n                    for ( var j = 0; j < itemSize; j ++ ) {\\r\\n\\r\\n                        array2[ index2 ++ ] = array[ index ++ ];\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            var groups = this.groups;\\r\\n\\r\\n            for ( var i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n                var group = groups[ i ];\\r\\n                geometry2.addGroup( group.start, group.count, group.materialIndex );\\r\\n\\r\\n            }\\r\\n\\r\\n            return geometry2;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = {\\r\\n                metadata: {\\r\\n                    version: 4.5,\\r\\n                    type: 'BufferGeometry',\\r\\n                    generator: 'BufferGeometry.toJSON'\\r\\n                }\\r\\n            };\\r\\n\\r\\n            // standard BufferGeometry serialization\\r\\n\\r\\n            data.uuid = this.uuid;\\r\\n            data.type = this.type;\\r\\n            if ( this.name !== '' ) data.name = this.name;\\r\\n            if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\\r\\n\\r\\n            if ( this.parameters !== undefined ) {\\r\\n\\r\\n                var parameters = this.parameters;\\r\\n\\r\\n                for ( var key in parameters ) {\\r\\n\\r\\n                    if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\r\\n\\r\\n                }\\r\\n\\r\\n                return data;\\r\\n\\r\\n            }\\r\\n\\r\\n            data.data = { attributes: {} };\\r\\n\\r\\n            var index = this.index;\\r\\n\\r\\n            if ( index !== null ) {\\r\\n\\r\\n                var array = Array.prototype.slice.call( index.array );\\r\\n\\r\\n                data.data.index = {\\r\\n                    type: index.array.constructor.name,\\r\\n                    array: array\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            var attributes = this.attributes;\\r\\n\\r\\n            for ( var key in attributes ) {\\r\\n\\r\\n                var attribute = attributes[ key ];\\r\\n\\r\\n                var array = Array.prototype.slice.call( attribute.array );\\r\\n\\r\\n                data.data.attributes[ key ] = {\\r\\n                    itemSize: attribute.itemSize,\\r\\n                    type: attribute.array.constructor.name,\\r\\n                    array: array,\\r\\n                    normalized: attribute.normalized\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            var groups = this.groups;\\r\\n\\r\\n            if ( groups.length > 0 ) {\\r\\n\\r\\n                data.data.groups = JSON.parse( JSON.stringify( groups ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            var boundingSphere = this.boundingSphere;\\r\\n\\r\\n            if ( boundingSphere !== null ) {\\r\\n\\r\\n                data.data.boundingSphere = {\\r\\n                    center: boundingSphere.center.toArray(),\\r\\n                    radius: boundingSphere.radius\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            /*\\r\\n\\t\\t\\t // Handle primitives\\r\\n\\r\\n\\t\\t\\t var parameters = this.parameters;\\r\\n\\r\\n\\t\\t\\t if ( parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\t var values = [];\\r\\n\\r\\n\\t\\t\\t for ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t values.push( parameters[ key ] );\\r\\n\\r\\n\\t\\t\\t }\\r\\n\\r\\n\\t\\t\\t var geometry = Object.create( this.constructor.prototype );\\r\\n\\t\\t\\t this.constructor.apply( geometry, values );\\r\\n\\t\\t\\t return geometry;\\r\\n\\r\\n\\t\\t\\t }\\r\\n\\r\\n\\t\\t\\t return new this.constructor().copy( this );\\r\\n\\t\\t\\t */\\r\\n\\r\\n            return new BufferGeometry().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            var name, i, l;\\r\\n\\r\\n            // reset\\r\\n\\r\\n            this.index = null;\\r\\n            this.attributes = {};\\r\\n            this.morphAttributes = {};\\r\\n            this.groups = [];\\r\\n            this.boundingBox = null;\\r\\n            this.boundingSphere = null;\\r\\n\\r\\n            // name\\r\\n\\r\\n            this.name = source.name;\\r\\n\\r\\n            // index\\r\\n\\r\\n            var index = source.index;\\r\\n\\r\\n            if ( index !== null ) {\\r\\n\\r\\n                this.setIndex( index.clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // attributes\\r\\n\\r\\n            var attributes = source.attributes;\\r\\n\\r\\n            for ( name in attributes ) {\\r\\n\\r\\n                var attribute = attributes[ name ];\\r\\n                this.addAttribute( name, attribute.clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            // morph attributes\\r\\n\\r\\n            var morphAttributes = source.morphAttributes;\\r\\n\\r\\n            for ( name in morphAttributes ) {\\r\\n\\r\\n                var array = [];\\r\\n                var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\\r\\n\\r\\n                for ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\\r\\n\\r\\n                    array.push( morphAttribute[ i ].clone() );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.morphAttributes[ name ] = array;\\r\\n\\r\\n            }\\r\\n\\r\\n            // groups\\r\\n\\r\\n            var groups = source.groups;\\r\\n\\r\\n            for ( i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n                var group = groups[ i ];\\r\\n                this.addGroup( group.start, group.count, group.materialIndex );\\r\\n\\r\\n            }\\r\\n\\r\\n            // bounding box\\r\\n\\r\\n            var boundingBox = source.boundingBox;\\r\\n\\r\\n            if ( boundingBox !== null ) {\\r\\n\\r\\n                this.boundingBox = boundingBox.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            // bounding sphere\\r\\n\\r\\n            var boundingSphere = source.boundingSphere;\\r\\n\\r\\n            if ( boundingSphere !== null ) {\\r\\n\\r\\n                this.boundingSphere = boundingSphere.clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            // draw range\\r\\n\\r\\n            this.drawRange.start = source.drawRange.start;\\r\\n            this.drawRange.count = source.drawRange.count;\\r\\n\\r\\n            // user data\\r\\n\\r\\n            this.userData = source.userData;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dispose: function () {\\r\\n\\r\\n            this.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // BoxGeometry\\r\\n\\r\\n    function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'BoxGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            width: width,\\r\\n            height: height,\\r\\n            depth: depth,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            depthSegments: depthSegments\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    BoxGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    BoxGeometry.prototype.constructor = BoxGeometry;\\r\\n\\r\\n    // BoxBufferGeometry\\r\\n\\r\\n    function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'BoxBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            width: width,\\r\\n            height: height,\\r\\n            depth: depth,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            depthSegments: depthSegments\\r\\n        };\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        width = width || 1;\\r\\n        height = height || 1;\\r\\n        depth = depth || 1;\\r\\n\\r\\n        // segments\\r\\n\\r\\n        widthSegments = Math.floor( widthSegments ) || 1;\\r\\n        heightSegments = Math.floor( heightSegments ) || 1;\\r\\n        depthSegments = Math.floor( depthSegments ) || 1;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var numberOfVertices = 0;\\r\\n        var groupStart = 0;\\r\\n\\r\\n        // build each side of the box geometry\\r\\n\\r\\n        buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\\r\\n        buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\\r\\n        buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\\r\\n        buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\\r\\n        buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\\r\\n        buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n        function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\\r\\n\\r\\n            var segmentWidth = width / gridX;\\r\\n            var segmentHeight = height / gridY;\\r\\n\\r\\n            var widthHalf = width / 2;\\r\\n            var heightHalf = height / 2;\\r\\n            var depthHalf = depth / 2;\\r\\n\\r\\n            var gridX1 = gridX + 1;\\r\\n            var gridY1 = gridY + 1;\\r\\n\\r\\n            var vertexCounter = 0;\\r\\n            var groupCount = 0;\\r\\n\\r\\n            var ix, iy;\\r\\n\\r\\n            var vector = new Vector3();\\r\\n\\r\\n            // generate vertices, normals and uvs\\r\\n\\r\\n            for ( iy = 0; iy < gridY1; iy ++ ) {\\r\\n\\r\\n                var y = iy * segmentHeight - heightHalf;\\r\\n\\r\\n                for ( ix = 0; ix < gridX1; ix ++ ) {\\r\\n\\r\\n                    var x = ix * segmentWidth - widthHalf;\\r\\n\\r\\n                    // set values to correct vector component\\r\\n\\r\\n                    vector[ u ] = x * udir;\\r\\n                    vector[ v ] = y * vdir;\\r\\n                    vector[ w ] = depthHalf;\\r\\n\\r\\n                    // now apply vector to vertex buffer\\r\\n\\r\\n                    vertices.push( vector.x, vector.y, vector.z );\\r\\n\\r\\n                    // set values to correct vector component\\r\\n\\r\\n                    vector[ u ] = 0;\\r\\n                    vector[ v ] = 0;\\r\\n                    vector[ w ] = depth > 0 ? 1 : - 1;\\r\\n\\r\\n                    // now apply vector to normal buffer\\r\\n\\r\\n                    normals.push( vector.x, vector.y, vector.z );\\r\\n\\r\\n                    // uvs\\r\\n\\r\\n                    uvs.push( ix / gridX );\\r\\n                    uvs.push( 1 - ( iy / gridY ) );\\r\\n\\r\\n                    // counters\\r\\n\\r\\n                    vertexCounter += 1;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // indices\\r\\n\\r\\n            // 1. you need three indices to draw a single face\\r\\n            // 2. a single segment consists of two faces\\r\\n            // 3. so we need to generate six (2*3) indices per segment\\r\\n\\r\\n            for ( iy = 0; iy < gridY; iy ++ ) {\\r\\n\\r\\n                for ( ix = 0; ix < gridX; ix ++ ) {\\r\\n\\r\\n                    var a = numberOfVertices + ix + gridX1 * iy;\\r\\n                    var b = numberOfVertices + ix + gridX1 * ( iy + 1 );\\r\\n                    var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\\r\\n                    var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\\r\\n\\r\\n                    // faces\\r\\n\\r\\n                    indices.push( a, b, d );\\r\\n                    indices.push( b, c, d );\\r\\n\\r\\n                    // increase counter\\r\\n\\r\\n                    groupCount += 6;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // add a group to the geometry. this will ensure multi material support\\r\\n\\r\\n            scope.addGroup( groupStart, groupCount, materialIndex );\\r\\n\\r\\n            // calculate new start value for groups\\r\\n\\r\\n            groupStart += groupCount;\\r\\n\\r\\n            // update total number of vertices\\r\\n\\r\\n            numberOfVertices += vertexCounter;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // PlaneGeometry\\r\\n\\r\\n    function PlaneGeometry( width, height, widthSegments, heightSegments ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'PlaneGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            width: width,\\r\\n            height: height,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    PlaneGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    PlaneGeometry.prototype.constructor = PlaneGeometry;\\r\\n\\r\\n    // PlaneBufferGeometry\\r\\n\\r\\n    function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'PlaneBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            width: width,\\r\\n            height: height,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments\\r\\n        };\\r\\n\\r\\n        width = width || 1;\\r\\n        height = height || 1;\\r\\n\\r\\n        var width_half = width / 2;\\r\\n        var height_half = height / 2;\\r\\n\\r\\n        var gridX = Math.floor( widthSegments ) || 1;\\r\\n        var gridY = Math.floor( heightSegments ) || 1;\\r\\n\\r\\n        var gridX1 = gridX + 1;\\r\\n        var gridY1 = gridY + 1;\\r\\n\\r\\n        var segment_width = width / gridX;\\r\\n        var segment_height = height / gridY;\\r\\n\\r\\n        var ix, iy;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        for ( iy = 0; iy < gridY1; iy ++ ) {\\r\\n\\r\\n            var y = iy * segment_height - height_half;\\r\\n\\r\\n            for ( ix = 0; ix < gridX1; ix ++ ) {\\r\\n\\r\\n                var x = ix * segment_width - width_half;\\r\\n\\r\\n                vertices.push( x, - y, 0 );\\r\\n\\r\\n                normals.push( 0, 0, 1 );\\r\\n\\r\\n                uvs.push( ix / gridX );\\r\\n                uvs.push( 1 - ( iy / gridY ) );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // indices\\r\\n\\r\\n        for ( iy = 0; iy < gridY; iy ++ ) {\\r\\n\\r\\n            for ( ix = 0; ix < gridX; ix ++ ) {\\r\\n\\r\\n                var a = ix + gridX1 * iy;\\r\\n                var b = ix + gridX1 * ( iy + 1 );\\r\\n                var c = ( ix + 1 ) + gridX1 * ( iy + 1 );\\r\\n                var d = ( ix + 1 ) + gridX1 * iy;\\r\\n\\r\\n                // faces\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    var materialId = 0;\\r\\n\\r\\n    function Material() {\\r\\n\\r\\n        Object.defineProperty( this, 'id', { value: materialId ++ } );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.name = '';\\r\\n        this.type = 'Material';\\r\\n\\r\\n        this.fog = true;\\r\\n        this.lights = true;\\r\\n\\r\\n        this.blending = NormalBlending;\\r\\n        this.side = FrontSide;\\r\\n        this.flatShading = false;\\r\\n        this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\\r\\n\\r\\n        this.opacity = 1;\\r\\n        this.transparent = false;\\r\\n\\r\\n        this.blendSrc = SrcAlphaFactor;\\r\\n        this.blendDst = OneMinusSrcAlphaFactor;\\r\\n        this.blendEquation = AddEquation;\\r\\n        this.blendSrcAlpha = null;\\r\\n        this.blendDstAlpha = null;\\r\\n        this.blendEquationAlpha = null;\\r\\n\\r\\n        this.depthFunc = LessEqualDepth;\\r\\n        this.depthTest = true;\\r\\n        this.depthWrite = true;\\r\\n\\r\\n        this.clippingPlanes = null;\\r\\n        this.clipIntersection = false;\\r\\n        this.clipShadows = false;\\r\\n\\r\\n        this.shadowSide = null;\\r\\n\\r\\n        this.colorWrite = true;\\r\\n\\r\\n        this.precision = null; // override the renderer's default precision for this material\\r\\n\\r\\n        this.polygonOffset = false;\\r\\n        this.polygonOffsetFactor = 0;\\r\\n        this.polygonOffsetUnits = 0;\\r\\n\\r\\n        this.dithering = false;\\r\\n\\r\\n        this.alphaTest = 0;\\r\\n        this.premultipliedAlpha = false;\\r\\n\\r\\n        this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\\r\\n\\r\\n        this.visible = true;\\r\\n\\r\\n        this.userData = {};\\r\\n\\r\\n        this.needsUpdate = true;\\r\\n\\r\\n    }\\r\\n\\r\\n    Material.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: Material,\\r\\n\\r\\n        isMaterial: true,\\r\\n\\r\\n        onBeforeCompile: function () {},\\r\\n\\r\\n        setValues: function ( values ) {\\r\\n\\r\\n            if ( values === undefined ) return;\\r\\n\\r\\n            for ( var key in values ) {\\r\\n\\r\\n                var newValue = values[ key ];\\r\\n\\r\\n                if ( newValue === undefined ) {\\r\\n\\r\\n                    console.warn( \\\"THREE.Material: '\\\" + key + \\\"' parameter is undefined.\\\" );\\r\\n                    continue;\\r\\n\\r\\n                }\\r\\n\\r\\n                // for backward compatability if shading is set in the constructor\\r\\n                if ( key === 'shading' ) {\\r\\n\\r\\n                    console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\\r\\n                    this.flatShading = ( newValue === FlatShading ) ? true : false;\\r\\n                    continue;\\r\\n\\r\\n                }\\r\\n\\r\\n                var currentValue = this[ key ];\\r\\n\\r\\n                if ( currentValue === undefined ) {\\r\\n\\r\\n                    console.warn( \\\"THREE.\\\" + this.type + \\\": '\\\" + key + \\\"' is not a property of this material.\\\" );\\r\\n                    continue;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( currentValue && currentValue.isColor ) {\\r\\n\\r\\n                    currentValue.set( newValue );\\r\\n\\r\\n                } else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\\r\\n\\r\\n                    currentValue.copy( newValue );\\r\\n\\r\\n                } else if ( key === 'overdraw' ) {\\r\\n\\r\\n                    // ensure overdraw is backwards-compatible with legacy boolean type\\r\\n                    this[ key ] = Number( newValue );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    this[ key ] = newValue;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var isRoot = ( meta === undefined || typeof meta === 'string' );\\r\\n\\r\\n            if ( isRoot ) {\\r\\n\\r\\n                meta = {\\r\\n                    textures: {},\\r\\n                    images: {}\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            var data = {\\r\\n                metadata: {\\r\\n                    version: 4.5,\\r\\n                    type: 'Material',\\r\\n                    generator: 'Material.toJSON'\\r\\n                }\\r\\n            };\\r\\n\\r\\n            // standard Material serialization\\r\\n            data.uuid = this.uuid;\\r\\n            data.type = this.type;\\r\\n\\r\\n            if ( this.name !== '' ) data.name = this.name;\\r\\n\\r\\n            if ( this.color && this.color.isColor ) data.color = this.color.getHex();\\r\\n\\r\\n            if ( this.roughness !== undefined ) data.roughness = this.roughness;\\r\\n            if ( this.metalness !== undefined ) data.metalness = this.metalness;\\r\\n\\r\\n            if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\\r\\n            if ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\\r\\n\\r\\n            if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\\r\\n            if ( this.shininess !== undefined ) data.shininess = this.shininess;\\r\\n            if ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\\r\\n            if ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\\r\\n\\r\\n            if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\\r\\n            if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\\r\\n            if ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\\r\\n\\r\\n            if ( this.aoMap && this.aoMap.isTexture ) {\\r\\n\\r\\n                data.aoMap = this.aoMap.toJSON( meta ).uuid;\\r\\n                data.aoMapIntensity = this.aoMapIntensity;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.bumpMap && this.bumpMap.isTexture ) {\\r\\n\\r\\n                data.bumpMap = this.bumpMap.toJSON( meta ).uuid;\\r\\n                data.bumpScale = this.bumpScale;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.normalMap && this.normalMap.isTexture ) {\\r\\n\\r\\n                data.normalMap = this.normalMap.toJSON( meta ).uuid;\\r\\n                data.normalMapType = this.normalMapType;\\r\\n                data.normalScale = this.normalScale.toArray();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.displacementMap && this.displacementMap.isTexture ) {\\r\\n\\r\\n                data.displacementMap = this.displacementMap.toJSON( meta ).uuid;\\r\\n                data.displacementScale = this.displacementScale;\\r\\n                data.displacementBias = this.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\\r\\n            if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\\r\\n\\r\\n            if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\\r\\n            if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\\r\\n\\r\\n            if ( this.envMap && this.envMap.isTexture ) {\\r\\n\\r\\n                data.envMap = this.envMap.toJSON( meta ).uuid;\\r\\n                data.reflectivity = this.reflectivity; // Scale behind envMap\\r\\n\\r\\n                if ( this.combine !== undefined ) data.combine = this.combine;\\r\\n                if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.gradientMap && this.gradientMap.isTexture ) {\\r\\n\\r\\n                data.gradientMap = this.gradientMap.toJSON( meta ).uuid;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.size !== undefined ) data.size = this.size;\\r\\n            if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\\r\\n\\r\\n            if ( this.blending !== NormalBlending ) data.blending = this.blending;\\r\\n            if ( this.flatShading === true ) data.flatShading = this.flatShading;\\r\\n            if ( this.side !== FrontSide ) data.side = this.side;\\r\\n            if ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\\r\\n\\r\\n            if ( this.opacity < 1 ) data.opacity = this.opacity;\\r\\n            if ( this.transparent === true ) data.transparent = this.transparent;\\r\\n\\r\\n            data.depthFunc = this.depthFunc;\\r\\n            data.depthTest = this.depthTest;\\r\\n            data.depthWrite = this.depthWrite;\\r\\n\\r\\n            // rotation (SpriteMaterial)\\r\\n            if ( this.rotation !== 0 ) data.rotation = this.rotation;\\r\\n\\r\\n            if ( this.polygonOffset === true ) data.polygonOffset = true;\\r\\n            if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\\r\\n            if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\\r\\n\\r\\n            if ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\\r\\n            if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\\r\\n            if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\\r\\n            if ( this.scale !== undefined ) data.scale = this.scale;\\r\\n\\r\\n            if ( this.dithering === true ) data.dithering = true;\\r\\n\\r\\n            if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\\r\\n            if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\\r\\n\\r\\n            if ( this.wireframe === true ) data.wireframe = this.wireframe;\\r\\n            if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\\r\\n            if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\\r\\n            if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\\r\\n\\r\\n            if ( this.morphTargets === true ) data.morphTargets = true;\\r\\n            if ( this.skinning === true ) data.skinning = true;\\r\\n\\r\\n            if ( this.visible === false ) data.visible = false;\\r\\n            if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\\r\\n\\r\\n            // TODO: Copied from Object3D.toJSON\\r\\n\\r\\n            function extractFromCache( cache ) {\\r\\n\\r\\n                var values = [];\\r\\n\\r\\n                for ( var key in cache ) {\\r\\n\\r\\n                    var data = cache[ key ];\\r\\n                    delete data.metadata;\\r\\n                    values.push( data );\\r\\n\\r\\n                }\\r\\n\\r\\n                return values;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( isRoot ) {\\r\\n\\r\\n                var textures = extractFromCache( meta.textures );\\r\\n                var images = extractFromCache( meta.images );\\r\\n\\r\\n                if ( textures.length > 0 ) data.textures = textures;\\r\\n                if ( images.length > 0 ) data.images = images;\\r\\n\\r\\n            }\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.name = source.name;\\r\\n\\r\\n            this.fog = source.fog;\\r\\n            this.lights = source.lights;\\r\\n\\r\\n            this.blending = source.blending;\\r\\n            this.side = source.side;\\r\\n            this.flatShading = source.flatShading;\\r\\n            this.vertexColors = source.vertexColors;\\r\\n\\r\\n            this.opacity = source.opacity;\\r\\n            this.transparent = source.transparent;\\r\\n\\r\\n            this.blendSrc = source.blendSrc;\\r\\n            this.blendDst = source.blendDst;\\r\\n            this.blendEquation = source.blendEquation;\\r\\n            this.blendSrcAlpha = source.blendSrcAlpha;\\r\\n            this.blendDstAlpha = source.blendDstAlpha;\\r\\n            this.blendEquationAlpha = source.blendEquationAlpha;\\r\\n\\r\\n            this.depthFunc = source.depthFunc;\\r\\n            this.depthTest = source.depthTest;\\r\\n            this.depthWrite = source.depthWrite;\\r\\n\\r\\n            this.colorWrite = source.colorWrite;\\r\\n\\r\\n            this.precision = source.precision;\\r\\n\\r\\n            this.polygonOffset = source.polygonOffset;\\r\\n            this.polygonOffsetFactor = source.polygonOffsetFactor;\\r\\n            this.polygonOffsetUnits = source.polygonOffsetUnits;\\r\\n\\r\\n            this.dithering = source.dithering;\\r\\n\\r\\n            this.alphaTest = source.alphaTest;\\r\\n            this.premultipliedAlpha = source.premultipliedAlpha;\\r\\n\\r\\n            this.overdraw = source.overdraw;\\r\\n\\r\\n            this.visible = source.visible;\\r\\n            this.userData = JSON.parse( JSON.stringify( source.userData ) );\\r\\n\\r\\n            this.clipShadows = source.clipShadows;\\r\\n            this.clipIntersection = source.clipIntersection;\\r\\n\\r\\n            var srcPlanes = source.clippingPlanes,\\r\\n                dstPlanes = null;\\r\\n\\r\\n            if ( srcPlanes !== null ) {\\r\\n\\r\\n                var n = srcPlanes.length;\\r\\n                dstPlanes = new Array( n );\\r\\n\\r\\n                for ( var i = 0; i !== n; ++ i )\\r\\n                    dstPlanes[ i ] = srcPlanes[ i ].clone();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.clippingPlanes = dstPlanes;\\r\\n\\r\\n            this.shadowSide = source.shadowSide;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        dispose: function () {\\r\\n\\r\\n            this.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  defines: { \\\"label\\\" : \\\"value\\\" },\\r\\n\\t *  uniforms: { \\\"parameter1\\\": { value: 1.0 }, \\\"parameter2\\\": { value2: 2 } },\\r\\n\\t *\\r\\n\\t *  fragmentShader: <string>,\\r\\n\\t *  vertexShader: <string>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>,\\r\\n\\t *\\r\\n\\t *  lights: <bool>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function ShaderMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'ShaderMaterial';\\r\\n\\r\\n        this.defines = {};\\r\\n        this.uniforms = {};\\r\\n\\r\\n        this.vertexShader = 'void main() {\\\\n\\\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\\n}';\\r\\n        this.fragmentShader = 'void main() {\\\\n\\\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\\\n}';\\r\\n\\r\\n        this.linewidth = 1;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n\\r\\n        this.fog = false; // set to use scene fog\\r\\n        this.lights = false; // set to use scene lights\\r\\n        this.clipping = false; // set to use user-defined clipping planes\\r\\n\\r\\n        this.skinning = false; // set to use skinning attribute streams\\r\\n        this.morphTargets = false; // set to use morph targets\\r\\n        this.morphNormals = false; // set to use morph normals\\r\\n\\r\\n        this.extensions = {\\r\\n            derivatives: false, // set to use derivatives\\r\\n            fragDepth: false, // set to use fragment depth values\\r\\n            drawBuffers: false, // set to use draw buffers\\r\\n            shaderTextureLOD: false // set to use shader texture LOD\\r\\n        };\\r\\n\\r\\n        // When rendered geometry doesn't include these attributes but the material does,\\r\\n        // use these default values in WebGL. This avoids errors when buffer data is missing.\\r\\n        this.defaultAttributeValues = {\\r\\n            'color': [ 1, 1, 1 ],\\r\\n            'uv': [ 0, 0 ],\\r\\n            'uv2': [ 0, 0 ]\\r\\n        };\\r\\n\\r\\n        this.index0AttributeName = undefined;\\r\\n        this.uniformsNeedUpdate = false;\\r\\n\\r\\n        if ( parameters !== undefined ) {\\r\\n\\r\\n            if ( parameters.attributes !== undefined ) {\\r\\n\\r\\n                console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.setValues( parameters );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    ShaderMaterial.prototype = Object.create( Material.prototype );\\r\\n    ShaderMaterial.prototype.constructor = ShaderMaterial;\\r\\n\\r\\n    ShaderMaterial.prototype.isShaderMaterial = true;\\r\\n\\r\\n    ShaderMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.fragmentShader = source.fragmentShader;\\r\\n        this.vertexShader = source.vertexShader;\\r\\n\\r\\n        this.uniforms = UniformsUtils.clone( source.uniforms );\\r\\n\\r\\n        this.defines = Object.assign( {}, source.defines );\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n        this.lights = source.lights;\\r\\n        this.clipping = source.clipping;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        this.extensions = source.extensions;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    ShaderMaterial.prototype.toJSON = function ( meta ) {\\r\\n\\r\\n        var data = Material.prototype.toJSON.call( this, meta );\\r\\n\\r\\n        data.uniforms = {};\\r\\n\\r\\n        for ( var name in this.uniforms ) {\\r\\n\\r\\n            var uniform = this.uniforms[ name ];\\r\\n            var value = uniform.value;\\r\\n\\r\\n            if ( value.isTexture ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 't',\\r\\n                    value: value.toJSON( meta ).uuid\\r\\n                };\\r\\n\\r\\n            } else if ( value.isColor ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 'c',\\r\\n                    value: value.getHex()\\r\\n                };\\r\\n\\r\\n            } else if ( value.isVector2 ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 'v2',\\r\\n                    value: value.toArray()\\r\\n                };\\r\\n\\r\\n            } else if ( value.isVector3 ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 'v3',\\r\\n                    value: value.toArray()\\r\\n                };\\r\\n\\r\\n            } else if ( value.isVector4 ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 'v4',\\r\\n                    value: value.toArray()\\r\\n                };\\r\\n\\r\\n            } else if ( value.isMatrix4 ) {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    type: 'm4',\\r\\n                    value: value.toArray()\\r\\n                };\\r\\n\\r\\n            } else {\\r\\n\\r\\n                data.uniforms[ name ] = {\\r\\n                    value: value\\r\\n                };\\r\\n\\r\\n                // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\\r\\n\\r\\n        data.vertexShader = this.vertexShader;\\r\\n        data.fragmentShader = this.fragmentShader;\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Ray( origin, direction ) {\\r\\n\\r\\n        this.origin = ( origin !== undefined ) ? origin : new Vector3();\\r\\n        this.direction = ( direction !== undefined ) ? direction : new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Ray.prototype, {\\r\\n\\r\\n        set: function ( origin, direction ) {\\r\\n\\r\\n            this.origin.copy( origin );\\r\\n            this.direction.copy( direction );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( ray ) {\\r\\n\\r\\n            this.origin.copy( ray.origin );\\r\\n            this.direction.copy( ray.direction );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        at: function ( t, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Ray: .at() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\\r\\n\\r\\n        },\\r\\n\\r\\n        lookAt: function ( v ) {\\r\\n\\r\\n            this.direction.copy( v ).sub( this.origin ).normalize();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        recast: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function recast( t ) {\\r\\n\\r\\n                this.origin.copy( this.at( t, v1 ) );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        closestPointToPoint: function ( point, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            target.subVectors( point, this.origin );\\r\\n\\r\\n            var directionDistance = target.dot( this.direction );\\r\\n\\r\\n            if ( directionDistance < 0 ) {\\r\\n\\r\\n                return target.copy( this.origin );\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPoint: function ( point ) {\\r\\n\\r\\n            return Math.sqrt( this.distanceSqToPoint( point ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceSqToPoint: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function distanceSqToPoint( point ) {\\r\\n\\r\\n                var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\\r\\n\\r\\n                // point behind the ray\\r\\n\\r\\n                if ( directionDistance < 0 ) {\\r\\n\\r\\n                    return this.origin.distanceToSquared( point );\\r\\n\\r\\n                }\\r\\n\\r\\n                v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\r\\n\\r\\n                return v1.distanceToSquared( point );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        distanceSqToSegment: function () {\\r\\n\\r\\n            var segCenter = new Vector3();\\r\\n            var segDir = new Vector3();\\r\\n            var diff = new Vector3();\\r\\n\\r\\n            return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\\r\\n\\r\\n                // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\\r\\n                // It returns the min distance between the ray and the segment\\r\\n                // defined by v0 and v1\\r\\n                // It can also set two optional targets :\\r\\n                // - The closest point on the ray\\r\\n                // - The closest point on the segment\\r\\n\\r\\n                segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\\r\\n                segDir.copy( v1 ).sub( v0 ).normalize();\\r\\n                diff.copy( this.origin ).sub( segCenter );\\r\\n\\r\\n                var segExtent = v0.distanceTo( v1 ) * 0.5;\\r\\n                var a01 = - this.direction.dot( segDir );\\r\\n                var b0 = diff.dot( this.direction );\\r\\n                var b1 = - diff.dot( segDir );\\r\\n                var c = diff.lengthSq();\\r\\n                var det = Math.abs( 1 - a01 * a01 );\\r\\n                var s0, s1, sqrDist, extDet;\\r\\n\\r\\n                if ( det > 0 ) {\\r\\n\\r\\n                    // The ray and segment are not parallel.\\r\\n\\r\\n                    s0 = a01 * b1 - b0;\\r\\n                    s1 = a01 * b0 - b1;\\r\\n                    extDet = segExtent * det;\\r\\n\\r\\n                    if ( s0 >= 0 ) {\\r\\n\\r\\n                        if ( s1 >= - extDet ) {\\r\\n\\r\\n                            if ( s1 <= extDet ) {\\r\\n\\r\\n                                // region 0\\r\\n                                // Minimum at interior points of ray and segment.\\r\\n\\r\\n                                var invDet = 1 / det;\\r\\n                                s0 *= invDet;\\r\\n                                s1 *= invDet;\\r\\n                                sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                // region 1\\r\\n\\r\\n                                s1 = segExtent;\\r\\n                                s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n                                sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            // region 5\\r\\n\\r\\n                            s1 = - segExtent;\\r\\n                            s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n                            sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        if ( s1 <= - extDet ) {\\r\\n\\r\\n                            // region 4\\r\\n\\r\\n                            s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\\r\\n                            s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n                            sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                        } else if ( s1 <= extDet ) {\\r\\n\\r\\n                            // region 3\\r\\n\\r\\n                            s0 = 0;\\r\\n                            s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n                            sqrDist = s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            // region 2\\r\\n\\r\\n                            s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\\r\\n                            s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n                            sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // Ray and segment are parallel.\\r\\n\\r\\n                    s1 = ( a01 > 0 ) ? - segExtent : segExtent;\\r\\n                    s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n                    sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( optionalPointOnRay ) {\\r\\n\\r\\n                    optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( optionalPointOnSegment ) {\\r\\n\\r\\n                    optionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\\r\\n\\r\\n                }\\r\\n\\r\\n                return sqrDist;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersectSphere: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function intersectSphere( sphere, target ) {\\r\\n\\r\\n                v1.subVectors( sphere.center, this.origin );\\r\\n                var tca = v1.dot( this.direction );\\r\\n                var d2 = v1.dot( v1 ) - tca * tca;\\r\\n                var radius2 = sphere.radius * sphere.radius;\\r\\n\\r\\n                if ( d2 > radius2 ) return null;\\r\\n\\r\\n                var thc = Math.sqrt( radius2 - d2 );\\r\\n\\r\\n                // t0 = first intersect point - entrance on front of sphere\\r\\n                var t0 = tca - thc;\\r\\n\\r\\n                // t1 = second intersect point - exit point on back of sphere\\r\\n                var t1 = tca + thc;\\r\\n\\r\\n                // test to see if both t0 and t1 are behind the ray - if so, return null\\r\\n                if ( t0 < 0 && t1 < 0 ) return null;\\r\\n\\r\\n                // test to see if t0 is behind the ray:\\r\\n                // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\\r\\n                // in order to always return an intersect point that is in front of the ray.\\r\\n                if ( t0 < 0 ) return this.at( t1, target );\\r\\n\\r\\n                // else t0 is in front of the ray, so return the first collision point scaled by t0\\r\\n                return this.at( t0, target );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersectsSphere: function ( sphere ) {\\r\\n\\r\\n            return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPlane: function ( plane ) {\\r\\n\\r\\n            var denominator = plane.normal.dot( this.direction );\\r\\n\\r\\n            if ( denominator === 0 ) {\\r\\n\\r\\n                // line is coplanar, return origin\\r\\n                if ( plane.distanceToPoint( this.origin ) === 0 ) {\\r\\n\\r\\n                    return 0;\\r\\n\\r\\n                }\\r\\n\\r\\n                // Null is preferable to undefined since undefined means.... it is undefined\\r\\n\\r\\n                return null;\\r\\n\\r\\n            }\\r\\n\\r\\n            var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\\r\\n\\r\\n            // Return if the ray never intersects the plane\\r\\n\\r\\n            return t >= 0 ? t : null;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectPlane: function ( plane, target ) {\\r\\n\\r\\n            var t = this.distanceToPlane( plane );\\r\\n\\r\\n            if ( t === null ) {\\r\\n\\r\\n                return null;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.at( t, target );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsPlane: function ( plane ) {\\r\\n\\r\\n            // check if the ray lies on the plane first\\r\\n\\r\\n            var distToPoint = plane.distanceToPoint( this.origin );\\r\\n\\r\\n            if ( distToPoint === 0 ) {\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            var denominator = plane.normal.dot( this.direction );\\r\\n\\r\\n            if ( denominator * distToPoint < 0 ) {\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            // ray origin is behind the plane (and is pointing behind it)\\r\\n\\r\\n            return false;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectBox: function ( box, target ) {\\r\\n\\r\\n            var tmin, tmax, tymin, tymax, tzmin, tzmax;\\r\\n\\r\\n            var invdirx = 1 / this.direction.x,\\r\\n                invdiry = 1 / this.direction.y,\\r\\n                invdirz = 1 / this.direction.z;\\r\\n\\r\\n            var origin = this.origin;\\r\\n\\r\\n            if ( invdirx >= 0 ) {\\r\\n\\r\\n                tmin = ( box.min.x - origin.x ) * invdirx;\\r\\n                tmax = ( box.max.x - origin.x ) * invdirx;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                tmin = ( box.max.x - origin.x ) * invdirx;\\r\\n                tmax = ( box.min.x - origin.x ) * invdirx;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( invdiry >= 0 ) {\\r\\n\\r\\n                tymin = ( box.min.y - origin.y ) * invdiry;\\r\\n                tymax = ( box.max.y - origin.y ) * invdiry;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                tymin = ( box.max.y - origin.y ) * invdiry;\\r\\n                tymax = ( box.min.y - origin.y ) * invdiry;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\\r\\n\\r\\n            // These lines also handle the case where tmin or tmax is NaN\\r\\n            // (result of 0 * Infinity). x !== x returns true if x is NaN\\r\\n\\r\\n            if ( tymin > tmin || tmin !== tmin ) tmin = tymin;\\r\\n\\r\\n            if ( tymax < tmax || tmax !== tmax ) tmax = tymax;\\r\\n\\r\\n            if ( invdirz >= 0 ) {\\r\\n\\r\\n                tzmin = ( box.min.z - origin.z ) * invdirz;\\r\\n                tzmax = ( box.max.z - origin.z ) * invdirz;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                tzmin = ( box.max.z - origin.z ) * invdirz;\\r\\n                tzmax = ( box.min.z - origin.z ) * invdirz;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\\r\\n\\r\\n            if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\\r\\n\\r\\n            if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\\r\\n\\r\\n            //return point closest to the ray (positive side)\\r\\n\\r\\n            if ( tmax < 0 ) return null;\\r\\n\\r\\n            return this.at( tmin >= 0 ? tmin : tmax, target );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: ( function () {\\r\\n\\r\\n            var v = new Vector3();\\r\\n\\r\\n            return function intersectsBox( box ) {\\r\\n\\r\\n                return this.intersectBox( box, v ) !== null;\\r\\n\\r\\n            };\\r\\n\\r\\n        } )(),\\r\\n\\r\\n        intersectTriangle: function () {\\r\\n\\r\\n            // Compute the offset origin, edges, and normal.\\r\\n            var diff = new Vector3();\\r\\n            var edge1 = new Vector3();\\r\\n            var edge2 = new Vector3();\\r\\n            var normal = new Vector3();\\r\\n\\r\\n            return function intersectTriangle( a, b, c, backfaceCulling, target ) {\\r\\n\\r\\n                // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\\r\\n\\r\\n                edge1.subVectors( b, a );\\r\\n                edge2.subVectors( c, a );\\r\\n                normal.crossVectors( edge1, edge2 );\\r\\n\\r\\n                // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\\r\\n                // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\\r\\n                //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\\r\\n                //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\\r\\n                //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\\r\\n                var DdN = this.direction.dot( normal );\\r\\n                var sign;\\r\\n\\r\\n                if ( DdN > 0 ) {\\r\\n\\r\\n                    if ( backfaceCulling ) return null;\\r\\n                    sign = 1;\\r\\n\\r\\n                } else if ( DdN < 0 ) {\\r\\n\\r\\n                    sign = - 1;\\r\\n                    DdN = - DdN;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                }\\r\\n\\r\\n                diff.subVectors( this.origin, a );\\r\\n                var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\\r\\n\\r\\n                // b1 < 0, no intersection\\r\\n                if ( DdQxE2 < 0 ) {\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                }\\r\\n\\r\\n                var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\\r\\n\\r\\n                // b2 < 0, no intersection\\r\\n                if ( DdE1xQ < 0 ) {\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                }\\r\\n\\r\\n                // b1+b2 > 1, no intersection\\r\\n                if ( DdQxE2 + DdE1xQ > DdN ) {\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                }\\r\\n\\r\\n                // Line intersects triangle, check if ray does.\\r\\n                var QdN = - sign * diff.dot( normal );\\r\\n\\r\\n                // t < 0, no intersection\\r\\n                if ( QdN < 0 ) {\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                }\\r\\n\\r\\n                // Ray intersects triangle.\\r\\n                return this.at( QdN / DdN, target );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        applyMatrix4: function ( matrix4 ) {\\r\\n\\r\\n            this.origin.applyMatrix4( matrix4 );\\r\\n            this.direction.transformDirection( matrix4 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( ray ) {\\r\\n\\r\\n            return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Triangle( a, b, c ) {\\r\\n\\r\\n        this.a = ( a !== undefined ) ? a : new Vector3();\\r\\n        this.b = ( b !== undefined ) ? b : new Vector3();\\r\\n        this.c = ( c !== undefined ) ? c : new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Triangle, {\\r\\n\\r\\n        getNormal: function () {\\r\\n\\r\\n            var v0 = new Vector3();\\r\\n\\r\\n            return function getNormal( a, b, c, target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Triangle: .getNormal() target is now required' );\\r\\n                    target = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                target.subVectors( c, b );\\r\\n                v0.subVectors( a, b );\\r\\n                target.cross( v0 );\\r\\n\\r\\n                var targetLengthSq = target.lengthSq();\\r\\n                if ( targetLengthSq > 0 ) {\\r\\n\\r\\n                    return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                return target.set( 0, 0, 0 );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        // static/instance method to calculate barycentric coordinates\\r\\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\\r\\n        getBarycoord: function () {\\r\\n\\r\\n            var v0 = new Vector3();\\r\\n            var v1 = new Vector3();\\r\\n            var v2 = new Vector3();\\r\\n\\r\\n            return function getBarycoord( point, a, b, c, target ) {\\r\\n\\r\\n                v0.subVectors( c, a );\\r\\n                v1.subVectors( b, a );\\r\\n                v2.subVectors( point, a );\\r\\n\\r\\n                var dot00 = v0.dot( v0 );\\r\\n                var dot01 = v0.dot( v1 );\\r\\n                var dot02 = v0.dot( v2 );\\r\\n                var dot11 = v1.dot( v1 );\\r\\n                var dot12 = v1.dot( v2 );\\r\\n\\r\\n                var denom = ( dot00 * dot11 - dot01 * dot01 );\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\\r\\n                    target = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                // collinear or singular triangle\\r\\n                if ( denom === 0 ) {\\r\\n\\r\\n                    // arbitrary location outside of triangle?\\r\\n                    // not sure if this is the best idea, maybe should be returning undefined\\r\\n                    return target.set( - 2, - 1, - 1 );\\r\\n\\r\\n                }\\r\\n\\r\\n                var invDenom = 1 / denom;\\r\\n                var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\\r\\n                var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\\r\\n\\r\\n                // barycentric coordinates must always sum to 1\\r\\n                return target.set( 1 - u - v, v, u );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        containsPoint: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function containsPoint( point, a, b, c ) {\\r\\n\\r\\n                Triangle.getBarycoord( point, a, b, c, v1 );\\r\\n\\r\\n                return ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        getUV: function () {\\r\\n\\r\\n            var barycoord = new Vector3();\\r\\n\\r\\n            return function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\\r\\n\\r\\n                this.getBarycoord( point, p1, p2, p3, barycoord );\\r\\n\\r\\n                target.set( 0, 0 );\\r\\n                target.addScaledVector( uv1, barycoord.x );\\r\\n                target.addScaledVector( uv2, barycoord.y );\\r\\n                target.addScaledVector( uv3, barycoord.z );\\r\\n\\r\\n                return target;\\r\\n\\r\\n            };\\r\\n\\r\\n        }()\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Triangle.prototype, {\\r\\n\\r\\n        set: function ( a, b, c ) {\\r\\n\\r\\n            this.a.copy( a );\\r\\n            this.b.copy( b );\\r\\n            this.c.copy( c );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPointsAndIndices: function ( points, i0, i1, i2 ) {\\r\\n\\r\\n            this.a.copy( points[ i0 ] );\\r\\n            this.b.copy( points[ i1 ] );\\r\\n            this.c.copy( points[ i2 ] );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( triangle ) {\\r\\n\\r\\n            this.a.copy( triangle.a );\\r\\n            this.b.copy( triangle.b );\\r\\n            this.c.copy( triangle.c );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getArea: function () {\\r\\n\\r\\n            var v0 = new Vector3();\\r\\n            var v1 = new Vector3();\\r\\n\\r\\n            return function getArea() {\\r\\n\\r\\n                v0.subVectors( this.c, this.b );\\r\\n                v1.subVectors( this.a, this.b );\\r\\n\\r\\n                return v0.cross( v1 ).length() * 0.5;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        getMidpoint: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\\r\\n\\r\\n        },\\r\\n\\r\\n        getNormal: function ( target ) {\\r\\n\\r\\n            return Triangle.getNormal( this.a, this.b, this.c, target );\\r\\n\\r\\n        },\\r\\n\\r\\n        getPlane: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Triangle: .getPlane() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.setFromCoplanarPoints( this.a, this.b, this.c );\\r\\n\\r\\n        },\\r\\n\\r\\n        getBarycoord: function ( point, target ) {\\r\\n\\r\\n            return Triangle.getBarycoord( point, this.a, this.b, this.c, target );\\r\\n\\r\\n        },\\r\\n\\r\\n        containsPoint: function ( point ) {\\r\\n\\r\\n            return Triangle.containsPoint( point, this.a, this.b, this.c );\\r\\n\\r\\n        },\\r\\n\\r\\n        getUV: function ( point, uv1, uv2, uv3, result ) {\\r\\n\\r\\n            return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function ( box ) {\\r\\n\\r\\n            return box.intersectsTriangle( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        closestPointToPoint: function () {\\r\\n\\r\\n            var vab = new Vector3();\\r\\n            var vac = new Vector3();\\r\\n            var vbc = new Vector3();\\r\\n            var vap = new Vector3();\\r\\n            var vbp = new Vector3();\\r\\n            var vcp = new Vector3();\\r\\n\\r\\n            return function closestPointToPoint( p, target ) {\\r\\n\\r\\n                if ( target === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\\r\\n                    target = new Vector3();\\r\\n\\r\\n                }\\r\\n\\r\\n                var a = this.a, b = this.b, c = this.c;\\r\\n                var v, w;\\r\\n\\r\\n                // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\\r\\n                // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\\r\\n                // under the accompanying license; see chapter 5.1.5 for detailed explanation.\\r\\n                // basically, we're distinguishing which of the voronoi regions of the triangle\\r\\n                // the point lies in with the minimum amount of redundant computation.\\r\\n\\r\\n                vab.subVectors( b, a );\\r\\n                vac.subVectors( c, a );\\r\\n                vap.subVectors( p, a );\\r\\n                var d1 = vab.dot( vap );\\r\\n                var d2 = vac.dot( vap );\\r\\n                if ( d1 <= 0 && d2 <= 0 ) {\\r\\n\\r\\n                    // vertex region of A; barycentric coords (1, 0, 0)\\r\\n                    return target.copy( a );\\r\\n\\r\\n                }\\r\\n\\r\\n                vbp.subVectors( p, b );\\r\\n                var d3 = vab.dot( vbp );\\r\\n                var d4 = vac.dot( vbp );\\r\\n                if ( d3 >= 0 && d4 <= d3 ) {\\r\\n\\r\\n                    // vertex region of B; barycentric coords (0, 1, 0)\\r\\n                    return target.copy( b );\\r\\n\\r\\n                }\\r\\n\\r\\n                var vc = d1 * d4 - d3 * d2;\\r\\n                if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\\r\\n\\r\\n                    v = d1 / ( d1 - d3 );\\r\\n                    // edge region of AB; barycentric coords (1-v, v, 0)\\r\\n                    return target.copy( a ).addScaledVector( vab, v );\\r\\n\\r\\n                }\\r\\n\\r\\n                vcp.subVectors( p, c );\\r\\n                var d5 = vab.dot( vcp );\\r\\n                var d6 = vac.dot( vcp );\\r\\n                if ( d6 >= 0 && d5 <= d6 ) {\\r\\n\\r\\n                    // vertex region of C; barycentric coords (0, 0, 1)\\r\\n                    return target.copy( c );\\r\\n\\r\\n                }\\r\\n\\r\\n                var vb = d5 * d2 - d1 * d6;\\r\\n                if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\\r\\n\\r\\n                    w = d2 / ( d2 - d6 );\\r\\n                    // edge region of AC; barycentric coords (1-w, 0, w)\\r\\n                    return target.copy( a ).addScaledVector( vac, w );\\r\\n\\r\\n                }\\r\\n\\r\\n                var va = d3 * d6 - d5 * d4;\\r\\n                if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\\r\\n\\r\\n                    vbc.subVectors( c, b );\\r\\n                    w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\\r\\n                    // edge region of BC; barycentric coords (0, 1-w, w)\\r\\n                    return target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\\r\\n\\r\\n                }\\r\\n\\r\\n                // face region\\r\\n                var denom = 1 / ( va + vb + vc );\\r\\n                // u = va * denom\\r\\n                v = vb * denom;\\r\\n                w = vc * denom;\\r\\n                return target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        equals: function ( triangle ) {\\r\\n\\r\\n            return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\r\\n\\t *  lightMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\r\\n\\t *  aoMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\r\\n\\t *  combine: THREE.Multiply,\\r\\n\\t *  reflectivity: <float>,\\r\\n\\t *  refractionRatio: <float>,\\r\\n\\t *\\r\\n\\t *  depthTest: <bool>,\\r\\n\\t *  depthWrite: <bool>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshBasicMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshBasicMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff ); // emissive\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.lightMap = null;\\r\\n        this.lightMapIntensity = 1.0;\\r\\n\\r\\n        this.aoMap = null;\\r\\n        this.aoMapIntensity = 1.0;\\r\\n\\r\\n        this.specularMap = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.envMap = null;\\r\\n        this.combine = MultiplyOperation;\\r\\n        this.reflectivity = 1;\\r\\n        this.refractionRatio = 0.98;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n        this.wireframeLinecap = 'round';\\r\\n        this.wireframeLinejoin = 'round';\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshBasicMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\\r\\n\\r\\n    MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\\r\\n\\r\\n    MeshBasicMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.lightMap = source.lightMap;\\r\\n        this.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n        this.aoMap = source.aoMap;\\r\\n        this.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n        this.specularMap = source.specularMap;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.envMap = source.envMap;\\r\\n        this.combine = source.combine;\\r\\n        this.reflectivity = source.reflectivity;\\r\\n        this.refractionRatio = source.refractionRatio;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n        this.wireframeLinecap = source.wireframeLinecap;\\r\\n        this.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author jonobr1 / http://jonobr1.com/\\r\\n     */\\r\\n\\r\\n    function Mesh( geometry, material ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Mesh';\\r\\n\\r\\n        this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\r\\n        this.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n        this.drawMode = TrianglesDrawMode;\\r\\n\\r\\n        this.updateMorphTargets();\\r\\n\\r\\n    }\\r\\n\\r\\n    Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Mesh,\\r\\n\\r\\n        isMesh: true,\\r\\n\\r\\n        setDrawMode: function ( value ) {\\r\\n\\r\\n            this.drawMode = value;\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n            this.drawMode = source.drawMode;\\r\\n\\r\\n            if ( source.morphTargetInfluences !== undefined ) {\\r\\n\\r\\n                this.morphTargetInfluences = source.morphTargetInfluences.slice();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( source.morphTargetDictionary !== undefined ) {\\r\\n\\r\\n                this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMorphTargets: function () {\\r\\n\\r\\n            var geometry = this.geometry;\\r\\n            var m, ml, name;\\r\\n\\r\\n            if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                var morphAttributes = geometry.morphAttributes;\\r\\n                var keys = Object.keys( morphAttributes );\\r\\n\\r\\n                if ( keys.length > 0 ) {\\r\\n\\r\\n                    var morphAttribute = morphAttributes[ keys[ 0 ] ];\\r\\n\\r\\n                    if ( morphAttribute !== undefined ) {\\r\\n\\r\\n                        this.morphTargetInfluences = [];\\r\\n                        this.morphTargetDictionary = {};\\r\\n\\r\\n                        for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\\r\\n\\r\\n                            name = morphAttribute[ m ].name || String( m );\\r\\n\\r\\n                            this.morphTargetInfluences.push( 0 );\\r\\n                            this.morphTargetDictionary[ name ] = m;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var morphTargets = geometry.morphTargets;\\r\\n\\r\\n                if ( morphTargets !== undefined && morphTargets.length > 0 ) {\\r\\n\\r\\n                    this.morphTargetInfluences = [];\\r\\n                    this.morphTargetDictionary = {};\\r\\n\\r\\n                    for ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\\r\\n\\r\\n                        name = morphTargets[ m ].name || String( m );\\r\\n\\r\\n                        this.morphTargetInfluences.push( 0 );\\r\\n                        this.morphTargetDictionary[ name ] = m;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        raycast: ( function () {\\r\\n\\r\\n            var inverseMatrix = new Matrix4();\\r\\n            var ray = new Ray();\\r\\n            var sphere = new Sphere();\\r\\n\\r\\n            var vA = new Vector3();\\r\\n            var vB = new Vector3();\\r\\n            var vC = new Vector3();\\r\\n\\r\\n            var tempA = new Vector3();\\r\\n            var tempB = new Vector3();\\r\\n            var tempC = new Vector3();\\r\\n\\r\\n            var uvA = new Vector2();\\r\\n            var uvB = new Vector2();\\r\\n            var uvC = new Vector2();\\r\\n\\r\\n            var intersectionPoint = new Vector3();\\r\\n            var intersectionPointWorld = new Vector3();\\r\\n\\r\\n            function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\\r\\n\\r\\n                var intersect;\\r\\n\\r\\n                if ( material.side === BackSide ) {\\r\\n\\r\\n                    intersect = ray.intersectTriangle( pC, pB, pA, true, point );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( intersect === null ) return null;\\r\\n\\r\\n                intersectionPointWorld.copy( point );\\r\\n                intersectionPointWorld.applyMatrix4( object.matrixWorld );\\r\\n\\r\\n                var distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\\r\\n\\r\\n                if ( distance < raycaster.near || distance > raycaster.far ) return null;\\r\\n\\r\\n                return {\\r\\n                    distance: distance,\\r\\n                    point: intersectionPointWorld.clone(),\\r\\n                    object: object\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            function checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\\r\\n\\r\\n                vA.fromBufferAttribute( position, a );\\r\\n                vB.fromBufferAttribute( position, b );\\r\\n                vC.fromBufferAttribute( position, c );\\r\\n\\r\\n                var intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\\r\\n\\r\\n                if ( intersection ) {\\r\\n\\r\\n                    if ( uv ) {\\r\\n\\r\\n                        uvA.fromBufferAttribute( uv, a );\\r\\n                        uvB.fromBufferAttribute( uv, b );\\r\\n                        uvC.fromBufferAttribute( uv, c );\\r\\n\\r\\n                        intersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    var face = new Face3( a, b, c );\\r\\n                    Triangle.getNormal( vA, vB, vC, face.normal );\\r\\n\\r\\n                    intersection.face = face;\\r\\n\\r\\n                }\\r\\n\\r\\n                return intersection;\\r\\n\\r\\n            }\\r\\n\\r\\n            return function raycast( raycaster, intersects ) {\\r\\n\\r\\n                var geometry = this.geometry;\\r\\n                var material = this.material;\\r\\n                var matrixWorld = this.matrixWorld;\\r\\n\\r\\n                if ( material === undefined ) return;\\r\\n\\r\\n                // Checking boundingSphere distance to ray\\r\\n\\r\\n                if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n                sphere.copy( geometry.boundingSphere );\\r\\n                sphere.applyMatrix4( matrixWorld );\\r\\n\\r\\n                if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n                //\\r\\n\\r\\n                inverseMatrix.getInverse( matrixWorld );\\r\\n                ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n                // Check boundingBox before continuing\\r\\n\\r\\n                if ( geometry.boundingBox !== null ) {\\r\\n\\r\\n                    if ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\\r\\n\\r\\n                }\\r\\n\\r\\n                var intersection;\\r\\n\\r\\n                if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                    var a, b, c;\\r\\n                    var index = geometry.index;\\r\\n                    var position = geometry.attributes.position;\\r\\n                    var uv = geometry.attributes.uv;\\r\\n                    var groups = geometry.groups;\\r\\n                    var drawRange = geometry.drawRange;\\r\\n                    var i, j, il, jl;\\r\\n                    var group, groupMaterial;\\r\\n                    var start, end;\\r\\n\\r\\n                    if ( index !== null ) {\\r\\n\\r\\n                        // indexed buffer geometry\\r\\n\\r\\n                        if ( Array.isArray( material ) ) {\\r\\n\\r\\n                            for ( i = 0, il = groups.length; i < il; i ++ ) {\\r\\n\\r\\n                                group = groups[ i ];\\r\\n                                groupMaterial = material[ group.materialIndex ];\\r\\n\\r\\n                                start = Math.max( group.start, drawRange.start );\\r\\n                                end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\\r\\n\\r\\n                                for ( j = start, jl = end; j < jl; j += 3 ) {\\r\\n\\r\\n                                    a = index.getX( j );\\r\\n                                    b = index.getX( j + 1 );\\r\\n                                    c = index.getX( j + 2 );\\r\\n\\r\\n                                    intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\\r\\n\\r\\n                                    if ( intersection ) {\\r\\n\\r\\n                                        intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\\r\\n                                        intersects.push( intersection );\\r\\n\\r\\n                                    }\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            start = Math.max( 0, drawRange.start );\\r\\n                            end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\\r\\n\\r\\n                            for ( i = start, il = end; i < il; i += 3 ) {\\r\\n\\r\\n                                a = index.getX( i );\\r\\n                                b = index.getX( i + 1 );\\r\\n                                c = index.getX( i + 2 );\\r\\n\\r\\n                                intersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\\r\\n\\r\\n                                if ( intersection ) {\\r\\n\\r\\n                                    intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\\r\\n                                    intersects.push( intersection );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else if ( position !== undefined ) {\\r\\n\\r\\n                        // non-indexed buffer geometry\\r\\n\\r\\n                        if ( Array.isArray( material ) ) {\\r\\n\\r\\n                            for ( i = 0, il = groups.length; i < il; i ++ ) {\\r\\n\\r\\n                                group = groups[ i ];\\r\\n                                groupMaterial = material[ group.materialIndex ];\\r\\n\\r\\n                                start = Math.max( group.start, drawRange.start );\\r\\n                                end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\\r\\n\\r\\n                                for ( j = start, jl = end; j < jl; j += 3 ) {\\r\\n\\r\\n                                    a = j;\\r\\n                                    b = j + 1;\\r\\n                                    c = j + 2;\\r\\n\\r\\n                                    intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\\r\\n\\r\\n                                    if ( intersection ) {\\r\\n\\r\\n                                        intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\\r\\n                                        intersects.push( intersection );\\r\\n\\r\\n                                    }\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            start = Math.max( 0, drawRange.start );\\r\\n                            end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\\r\\n\\r\\n                            for ( i = start, il = end; i < il; i += 3 ) {\\r\\n\\r\\n                                a = i;\\r\\n                                b = i + 1;\\r\\n                                c = i + 2;\\r\\n\\r\\n                                intersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\\r\\n\\r\\n                                if ( intersection ) {\\r\\n\\r\\n                                    intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\\r\\n                                    intersects.push( intersection );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( geometry.isGeometry ) {\\r\\n\\r\\n                    var fvA, fvB, fvC;\\r\\n                    var isMultiMaterial = Array.isArray( material );\\r\\n\\r\\n                    var vertices = geometry.vertices;\\r\\n                    var faces = geometry.faces;\\r\\n                    var uvs;\\r\\n\\r\\n                    var faceVertexUvs = geometry.faceVertexUvs[ 0 ];\\r\\n                    if ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\\r\\n\\r\\n                    for ( var f = 0, fl = faces.length; f < fl; f ++ ) {\\r\\n\\r\\n                        var face = faces[ f ];\\r\\n                        var faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\\r\\n\\r\\n                        if ( faceMaterial === undefined ) continue;\\r\\n\\r\\n                        fvA = vertices[ face.a ];\\r\\n                        fvB = vertices[ face.b ];\\r\\n                        fvC = vertices[ face.c ];\\r\\n\\r\\n                        if ( faceMaterial.morphTargets === true ) {\\r\\n\\r\\n                            var morphTargets = geometry.morphTargets;\\r\\n                            var morphInfluences = this.morphTargetInfluences;\\r\\n\\r\\n                            vA.set( 0, 0, 0 );\\r\\n                            vB.set( 0, 0, 0 );\\r\\n                            vC.set( 0, 0, 0 );\\r\\n\\r\\n                            for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\\r\\n\\r\\n                                var influence = morphInfluences[ t ];\\r\\n\\r\\n                                if ( influence === 0 ) continue;\\r\\n\\r\\n                                var targets = morphTargets[ t ].vertices;\\r\\n\\r\\n                                vA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\\r\\n                                vB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\\r\\n                                vC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            vA.add( fvA );\\r\\n                            vB.add( fvB );\\r\\n                            vC.add( fvC );\\r\\n\\r\\n                            fvA = vA;\\r\\n                            fvB = vB;\\r\\n                            fvC = vC;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        intersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\\r\\n\\r\\n                        if ( intersection ) {\\r\\n\\r\\n                            if ( uvs && uvs[ f ] ) {\\r\\n\\r\\n                                var uvs_f = uvs[ f ];\\r\\n                                uvA.copy( uvs_f[ 0 ] );\\r\\n                                uvB.copy( uvs_f[ 1 ] );\\r\\n                                uvC.copy( uvs_f[ 2 ] );\\r\\n\\r\\n                                intersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            intersection.face = face;\\r\\n                            intersection.faceIndex = f;\\r\\n                            intersects.push( intersection );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\\r\\n\\r\\n        var clearColor = new Color( 0x000000 );\\r\\n        var clearAlpha = 0;\\r\\n\\r\\n        var planeMesh;\\r\\n        var boxMesh;\\r\\n\\r\\n        function render( renderList, scene, camera, forceClear ) {\\r\\n\\r\\n            var background = scene.background;\\r\\n\\r\\n            if ( background === null ) {\\r\\n\\r\\n                setClear( clearColor, clearAlpha );\\r\\n\\r\\n            } else if ( background && background.isColor ) {\\r\\n\\r\\n                setClear( background, 1 );\\r\\n                forceClear = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( renderer.autoClear || forceClear ) {\\r\\n\\r\\n                renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( background && background.isCubeTexture ) {\\r\\n\\r\\n                if ( boxMesh === undefined ) {\\r\\n\\r\\n                    boxMesh = new Mesh(\\r\\n                        new BoxBufferGeometry( 1, 1, 1 ),\\r\\n                        new ShaderMaterial( {\\r\\n                            uniforms: UniformsUtils.clone( ShaderLib.cube.uniforms ),\\r\\n                            vertexShader: ShaderLib.cube.vertexShader,\\r\\n                            fragmentShader: ShaderLib.cube.fragmentShader,\\r\\n                            side: BackSide,\\r\\n                            depthTest: true,\\r\\n                            depthWrite: false,\\r\\n                            fog: false\\r\\n                        } )\\r\\n                    );\\r\\n\\r\\n                    boxMesh.geometry.removeAttribute( 'normal' );\\r\\n                    boxMesh.geometry.removeAttribute( 'uv' );\\r\\n\\r\\n                    boxMesh.onBeforeRender = function ( renderer, scene, camera ) {\\r\\n\\r\\n                        this.matrixWorld.copyPosition( camera.matrixWorld );\\r\\n\\r\\n                    };\\r\\n\\r\\n                    objects.update( boxMesh );\\r\\n\\r\\n                }\\r\\n\\r\\n                boxMesh.material.uniforms.tCube.value = background;\\r\\n\\r\\n                renderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\\r\\n\\r\\n            } else if ( background && background.isTexture ) {\\r\\n\\r\\n                if ( planeMesh === undefined ) {\\r\\n\\r\\n                    planeMesh = new Mesh(\\r\\n                        new PlaneBufferGeometry( 2, 2 ),\\r\\n                        new ShaderMaterial( {\\r\\n                            uniforms: UniformsUtils.clone( ShaderLib.background.uniforms ),\\r\\n                            vertexShader: ShaderLib.background.vertexShader,\\r\\n                            fragmentShader: ShaderLib.background.fragmentShader,\\r\\n                            side: FrontSide,\\r\\n                            depthTest: true,\\r\\n                            depthWrite: false,\\r\\n                            fog: false\\r\\n                        } )\\r\\n                    );\\r\\n\\r\\n                    planeMesh.geometry.removeAttribute( 'normal' );\\r\\n\\r\\n                    objects.update( planeMesh );\\r\\n\\r\\n                }\\r\\n\\r\\n                planeMesh.material.uniforms.t2D.value = background;\\r\\n\\r\\n                renderList.push( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function setClear( color, alpha ) {\\r\\n\\r\\n            state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            getClearColor: function () {\\r\\n\\r\\n                return clearColor;\\r\\n\\r\\n            },\\r\\n            setClearColor: function ( color, alpha ) {\\r\\n\\r\\n                clearColor.set( color );\\r\\n                clearAlpha = alpha !== undefined ? alpha : 1;\\r\\n                setClear( clearColor, clearAlpha );\\r\\n\\r\\n            },\\r\\n            getClearAlpha: function () {\\r\\n\\r\\n                return clearAlpha;\\r\\n\\r\\n            },\\r\\n            setClearAlpha: function ( alpha ) {\\r\\n\\r\\n                clearAlpha = alpha;\\r\\n                setClear( clearColor, clearAlpha );\\r\\n\\r\\n            },\\r\\n            render: render\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\\r\\n\\r\\n        var mode;\\r\\n\\r\\n        function setMode( value ) {\\r\\n\\r\\n            mode = value;\\r\\n\\r\\n        }\\r\\n\\r\\n        function render( start, count ) {\\r\\n\\r\\n            gl.drawArrays( mode, start, count );\\r\\n\\r\\n            info.update( count, mode );\\r\\n\\r\\n        }\\r\\n\\r\\n        function renderInstances( geometry, start, count ) {\\r\\n\\r\\n            var extension;\\r\\n\\r\\n            if ( capabilities.isWebGL2 ) {\\r\\n\\r\\n                extension = gl;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                extension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n                if ( extension === null ) {\\r\\n\\r\\n                    console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            extension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\\r\\n\\r\\n            info.update( count, mode, geometry.maxInstancedCount );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        this.setMode = setMode;\\r\\n        this.render = render;\\r\\n        this.renderInstances = renderInstances;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLCapabilities( gl, extensions, parameters ) {\\r\\n\\r\\n        var maxAnisotropy;\\r\\n\\r\\n        function getMaxAnisotropy() {\\r\\n\\r\\n            if ( maxAnisotropy !== undefined ) return maxAnisotropy;\\r\\n\\r\\n            var extension = extensions.get( 'EXT_texture_filter_anisotropic' );\\r\\n\\r\\n            if ( extension !== null ) {\\r\\n\\r\\n                maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                maxAnisotropy = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            return maxAnisotropy;\\r\\n\\r\\n        }\\r\\n\\r\\n        function getMaxPrecision( precision ) {\\r\\n\\r\\n            if ( precision === 'highp' ) {\\r\\n\\r\\n                if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\\r\\n                    gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\\r\\n\\r\\n                    return 'highp';\\r\\n\\r\\n                }\\r\\n\\r\\n                precision = 'mediump';\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( precision === 'mediump' ) {\\r\\n\\r\\n                if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\\r\\n                    gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\\r\\n\\r\\n                    return 'mediump';\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return 'lowp';\\r\\n\\r\\n        }\\r\\n\\r\\n        var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\\r\\n\\r\\n        var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\\r\\n        var maxPrecision = getMaxPrecision( precision );\\r\\n\\r\\n        if ( maxPrecision !== precision ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\\r\\n            precision = maxPrecision;\\r\\n\\r\\n        }\\r\\n\\r\\n        var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\\r\\n\\r\\n        var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\r\\n        var maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\\r\\n        var maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\\r\\n        var maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\\r\\n\\r\\n        var maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\r\\n        var maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\\r\\n        var maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\\r\\n        var maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\\r\\n\\r\\n        var vertexTextures = maxVertexTextures > 0;\\r\\n        var floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\\r\\n        var floatVertexTextures = vertexTextures && floatFragmentTextures;\\r\\n\\r\\n        return {\\r\\n\\r\\n            isWebGL2: isWebGL2,\\r\\n\\r\\n            getMaxAnisotropy: getMaxAnisotropy,\\r\\n            getMaxPrecision: getMaxPrecision,\\r\\n\\r\\n            precision: precision,\\r\\n            logarithmicDepthBuffer: logarithmicDepthBuffer,\\r\\n\\r\\n            maxTextures: maxTextures,\\r\\n            maxVertexTextures: maxVertexTextures,\\r\\n            maxTextureSize: maxTextureSize,\\r\\n            maxCubemapSize: maxCubemapSize,\\r\\n\\r\\n            maxAttributes: maxAttributes,\\r\\n            maxVertexUniforms: maxVertexUniforms,\\r\\n            maxVaryings: maxVaryings,\\r\\n            maxFragmentUniforms: maxFragmentUniforms,\\r\\n\\r\\n            vertexTextures: vertexTextures,\\r\\n            floatFragmentTextures: floatFragmentTextures,\\r\\n            floatVertexTextures: floatVertexTextures\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function WebGLClipping() {\\r\\n\\r\\n        var scope = this,\\r\\n\\r\\n            globalState = null,\\r\\n            numGlobalPlanes = 0,\\r\\n            localClippingEnabled = false,\\r\\n            renderingShadows = false,\\r\\n\\r\\n            plane = new Plane(),\\r\\n            viewNormalMatrix = new Matrix3(),\\r\\n\\r\\n            uniform = { value: null, needsUpdate: false };\\r\\n\\r\\n        this.uniform = uniform;\\r\\n        this.numPlanes = 0;\\r\\n        this.numIntersection = 0;\\r\\n\\r\\n        this.init = function ( planes, enableLocalClipping, camera ) {\\r\\n\\r\\n            var enabled =\\r\\n                planes.length !== 0 ||\\r\\n                enableLocalClipping ||\\r\\n                // enable state of previous frame - the clipping code has to\\r\\n                // run another frame in order to reset the state:\\r\\n                numGlobalPlanes !== 0 ||\\r\\n                localClippingEnabled;\\r\\n\\r\\n            localClippingEnabled = enableLocalClipping;\\r\\n\\r\\n            globalState = projectPlanes( planes, camera, 0 );\\r\\n            numGlobalPlanes = planes.length;\\r\\n\\r\\n            return enabled;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.beginShadows = function () {\\r\\n\\r\\n            renderingShadows = true;\\r\\n            projectPlanes( null );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.endShadows = function () {\\r\\n\\r\\n            renderingShadows = false;\\r\\n            resetGlobalState();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\\r\\n\\r\\n            if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\\r\\n\\r\\n                // there's no local clipping\\r\\n\\r\\n                if ( renderingShadows ) {\\r\\n\\r\\n                    // there's no global clipping\\r\\n\\r\\n                    projectPlanes( null );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    resetGlobalState();\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\\r\\n                    lGlobal = nGlobal * 4,\\r\\n\\r\\n                    dstArray = cache.clippingState || null;\\r\\n\\r\\n                uniform.value = dstArray; // ensure unique state\\r\\n\\r\\n                dstArray = projectPlanes( planes, camera, lGlobal, fromCache );\\r\\n\\r\\n                for ( var i = 0; i !== lGlobal; ++ i ) {\\r\\n\\r\\n                    dstArray[ i ] = globalState[ i ];\\r\\n\\r\\n                }\\r\\n\\r\\n                cache.clippingState = dstArray;\\r\\n                this.numIntersection = clipIntersection ? this.numPlanes : 0;\\r\\n                this.numPlanes += nGlobal;\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n        };\\r\\n\\r\\n        function resetGlobalState() {\\r\\n\\r\\n            if ( uniform.value !== globalState ) {\\r\\n\\r\\n                uniform.value = globalState;\\r\\n                uniform.needsUpdate = numGlobalPlanes > 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            scope.numPlanes = numGlobalPlanes;\\r\\n            scope.numIntersection = 0;\\r\\n\\r\\n        }\\r\\n\\r\\n        function projectPlanes( planes, camera, dstOffset, skipTransform ) {\\r\\n\\r\\n            var nPlanes = planes !== null ? planes.length : 0,\\r\\n                dstArray = null;\\r\\n\\r\\n            if ( nPlanes !== 0 ) {\\r\\n\\r\\n                dstArray = uniform.value;\\r\\n\\r\\n                if ( skipTransform !== true || dstArray === null ) {\\r\\n\\r\\n                    var flatSize = dstOffset + nPlanes * 4,\\r\\n                        viewMatrix = camera.matrixWorldInverse;\\r\\n\\r\\n                    viewNormalMatrix.getNormalMatrix( viewMatrix );\\r\\n\\r\\n                    if ( dstArray === null || dstArray.length < flatSize ) {\\r\\n\\r\\n                        dstArray = new Float32Array( flatSize );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    for ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\\r\\n\\r\\n                        plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\\r\\n\\r\\n                        plane.normal.toArray( dstArray, i4 );\\r\\n                        dstArray[ i4 + 3 ] = plane.constant;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                uniform.value = dstArray;\\r\\n                uniform.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            scope.numPlanes = nPlanes;\\r\\n\\r\\n            return dstArray;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLExtensions( gl ) {\\r\\n\\r\\n        var extensions = {};\\r\\n\\r\\n        return {\\r\\n\\r\\n            get: function ( name ) {\\r\\n\\r\\n                if ( extensions[ name ] !== undefined ) {\\r\\n\\r\\n                    return extensions[ name ];\\r\\n\\r\\n                }\\r\\n\\r\\n                var extension;\\r\\n\\r\\n                switch ( name ) {\\r\\n\\r\\n                    case 'WEBGL_depth_texture':\\r\\n                        extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\\r\\n                        break;\\r\\n\\r\\n                    case 'EXT_texture_filter_anisotropic':\\r\\n                        extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\\r\\n                        break;\\r\\n\\r\\n                    case 'WEBGL_compressed_texture_s3tc':\\r\\n                        extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\\r\\n                        break;\\r\\n\\r\\n                    case 'WEBGL_compressed_texture_pvrtc':\\r\\n                        extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\\r\\n                        break;\\r\\n\\r\\n                    default:\\r\\n                        extension = gl.getExtension( name );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( extension === null ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\\r\\n\\r\\n                }\\r\\n\\r\\n                extensions[ name ] = extension;\\r\\n\\r\\n                return extension;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLGeometries( gl, attributes, info ) {\\r\\n\\r\\n        var geometries = {};\\r\\n        var wireframeAttributes = {};\\r\\n\\r\\n        function onGeometryDispose( event ) {\\r\\n\\r\\n            var geometry = event.target;\\r\\n            var buffergeometry = geometries[ geometry.id ];\\r\\n\\r\\n            if ( buffergeometry.index !== null ) {\\r\\n\\r\\n                attributes.remove( buffergeometry.index );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var name in buffergeometry.attributes ) {\\r\\n\\r\\n                attributes.remove( buffergeometry.attributes[ name ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            geometry.removeEventListener( 'dispose', onGeometryDispose );\\r\\n\\r\\n            delete geometries[ geometry.id ];\\r\\n\\r\\n            var attribute = wireframeAttributes[ buffergeometry.id ];\\r\\n\\r\\n            if ( attribute ) {\\r\\n\\r\\n                attributes.remove( attribute );\\r\\n                delete wireframeAttributes[ buffergeometry.id ];\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            info.memory.geometries --;\\r\\n\\r\\n        }\\r\\n\\r\\n        function get( object, geometry ) {\\r\\n\\r\\n            var buffergeometry = geometries[ geometry.id ];\\r\\n\\r\\n            if ( buffergeometry ) return buffergeometry;\\r\\n\\r\\n            geometry.addEventListener( 'dispose', onGeometryDispose );\\r\\n\\r\\n            if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                buffergeometry = geometry;\\r\\n\\r\\n            } else if ( geometry.isGeometry ) {\\r\\n\\r\\n                if ( geometry._bufferGeometry === undefined ) {\\r\\n\\r\\n                    geometry._bufferGeometry = new BufferGeometry().setFromObject( object );\\r\\n\\r\\n                }\\r\\n\\r\\n                buffergeometry = geometry._bufferGeometry;\\r\\n\\r\\n            }\\r\\n\\r\\n            geometries[ geometry.id ] = buffergeometry;\\r\\n\\r\\n            info.memory.geometries ++;\\r\\n\\r\\n            return buffergeometry;\\r\\n\\r\\n        }\\r\\n\\r\\n        function update( geometry ) {\\r\\n\\r\\n            var index = geometry.index;\\r\\n            var geometryAttributes = geometry.attributes;\\r\\n\\r\\n            if ( index !== null ) {\\r\\n\\r\\n                attributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var name in geometryAttributes ) {\\r\\n\\r\\n                attributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\\r\\n\\r\\n            }\\r\\n\\r\\n            // morph targets\\r\\n\\r\\n            var morphAttributes = geometry.morphAttributes;\\r\\n\\r\\n            for ( var name in morphAttributes ) {\\r\\n\\r\\n                var array = morphAttributes[ name ];\\r\\n\\r\\n                for ( var i = 0, l = array.length; i < l; i ++ ) {\\r\\n\\r\\n                    attributes.update( array[ i ], gl.ARRAY_BUFFER );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function getWireframeAttribute( geometry ) {\\r\\n\\r\\n            var attribute = wireframeAttributes[ geometry.id ];\\r\\n\\r\\n            if ( attribute ) return attribute;\\r\\n\\r\\n            var indices = [];\\r\\n\\r\\n            var geometryIndex = geometry.index;\\r\\n            var geometryAttributes = geometry.attributes;\\r\\n\\r\\n            // console.time( 'wireframe' );\\r\\n\\r\\n            if ( geometryIndex !== null ) {\\r\\n\\r\\n                var array = geometryIndex.array;\\r\\n\\r\\n                for ( var i = 0, l = array.length; i < l; i += 3 ) {\\r\\n\\r\\n                    var a = array[ i + 0 ];\\r\\n                    var b = array[ i + 1 ];\\r\\n                    var c = array[ i + 2 ];\\r\\n\\r\\n                    indices.push( a, b, b, c, c, a );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var array = geometryAttributes.position.array;\\r\\n\\r\\n                for ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\\r\\n\\r\\n                    var a = i + 0;\\r\\n                    var b = i + 1;\\r\\n                    var c = i + 2;\\r\\n\\r\\n                    indices.push( a, b, b, c, c, a );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // console.timeEnd( 'wireframe' );\\r\\n\\r\\n            attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\\r\\n\\r\\n            attributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\\r\\n\\r\\n            wireframeAttributes[ geometry.id ] = attribute;\\r\\n\\r\\n            return attribute;\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            get: get,\\r\\n            update: update,\\r\\n\\r\\n            getWireframeAttribute: getWireframeAttribute\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\\r\\n\\r\\n        var mode;\\r\\n\\r\\n        function setMode( value ) {\\r\\n\\r\\n            mode = value;\\r\\n\\r\\n        }\\r\\n\\r\\n        var type, bytesPerElement;\\r\\n\\r\\n        function setIndex( value ) {\\r\\n\\r\\n            type = value.type;\\r\\n            bytesPerElement = value.bytesPerElement;\\r\\n\\r\\n        }\\r\\n\\r\\n        function render( start, count ) {\\r\\n\\r\\n            gl.drawElements( mode, count, type, start * bytesPerElement );\\r\\n\\r\\n            info.update( count, mode );\\r\\n\\r\\n        }\\r\\n\\r\\n        function renderInstances( geometry, start, count ) {\\r\\n\\r\\n            var extension;\\r\\n\\r\\n            if ( capabilities.isWebGL2 ) {\\r\\n\\r\\n                extension = gl;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var extension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n                if ( extension === null ) {\\r\\n\\r\\n                    console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            extension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\\r\\n\\r\\n            info.update( count, mode, geometry.maxInstancedCount );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        this.setMode = setMode;\\r\\n        this.setIndex = setIndex;\\r\\n        this.render = render;\\r\\n        this.renderInstances = renderInstances;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function WebGLInfo( gl ) {\\r\\n\\r\\n        var memory = {\\r\\n            geometries: 0,\\r\\n            textures: 0\\r\\n        };\\r\\n\\r\\n        var render = {\\r\\n            frame: 0,\\r\\n            calls: 0,\\r\\n            triangles: 0,\\r\\n            points: 0,\\r\\n            lines: 0\\r\\n        };\\r\\n\\r\\n        function update( count, mode, instanceCount ) {\\r\\n\\r\\n            instanceCount = instanceCount || 1;\\r\\n\\r\\n            render.calls ++;\\r\\n\\r\\n            switch ( mode ) {\\r\\n\\r\\n                case gl.TRIANGLES:\\r\\n                    render.triangles += instanceCount * ( count / 3 );\\r\\n                    break;\\r\\n\\r\\n                case gl.TRIANGLE_STRIP:\\r\\n                case gl.TRIANGLE_FAN:\\r\\n                    render.triangles += instanceCount * ( count - 2 );\\r\\n                    break;\\r\\n\\r\\n                case gl.LINES:\\r\\n                    render.lines += instanceCount * ( count / 2 );\\r\\n                    break;\\r\\n\\r\\n                case gl.LINE_STRIP:\\r\\n                    render.lines += instanceCount * ( count - 1 );\\r\\n                    break;\\r\\n\\r\\n                case gl.LINE_LOOP:\\r\\n                    render.lines += instanceCount * count;\\r\\n                    break;\\r\\n\\r\\n                case gl.POINTS:\\r\\n                    render.points += instanceCount * count;\\r\\n                    break;\\r\\n\\r\\n                default:\\r\\n                    console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\\r\\n                    break;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function reset() {\\r\\n\\r\\n            render.frame ++;\\r\\n            render.calls = 0;\\r\\n            render.triangles = 0;\\r\\n            render.points = 0;\\r\\n            render.lines = 0;\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            memory: memory,\\r\\n            render: render,\\r\\n            programs: null,\\r\\n            autoReset: true,\\r\\n            reset: reset,\\r\\n            update: update\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function absNumericalSort( a, b ) {\\r\\n\\r\\n        return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\\r\\n\\r\\n    }\\r\\n\\r\\n    function WebGLMorphtargets( gl ) {\\r\\n\\r\\n        var influencesList = {};\\r\\n        var morphInfluences = new Float32Array( 8 );\\r\\n\\r\\n        function update( object, geometry, material, program ) {\\r\\n\\r\\n            var objectInfluences = object.morphTargetInfluences;\\r\\n\\r\\n            var length = objectInfluences.length;\\r\\n\\r\\n            var influences = influencesList[ geometry.id ];\\r\\n\\r\\n            if ( influences === undefined ) {\\r\\n\\r\\n                // initialise list\\r\\n\\r\\n                influences = [];\\r\\n\\r\\n                for ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n                    influences[ i ] = [ i, 0 ];\\r\\n\\r\\n                }\\r\\n\\r\\n                influencesList[ geometry.id ] = influences;\\r\\n\\r\\n            }\\r\\n\\r\\n            var morphTargets = material.morphTargets && geometry.morphAttributes.position;\\r\\n            var morphNormals = material.morphNormals && geometry.morphAttributes.normal;\\r\\n\\r\\n            // Remove current morphAttributes\\r\\n\\r\\n            for ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n                var influence = influences[ i ];\\r\\n\\r\\n                if ( influence[ 1 ] !== 0 ) {\\r\\n\\r\\n                    if ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\\r\\n                    if ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // Collect influences\\r\\n\\r\\n            for ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n                var influence = influences[ i ];\\r\\n\\r\\n                influence[ 0 ] = i;\\r\\n                influence[ 1 ] = objectInfluences[ i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            influences.sort( absNumericalSort );\\r\\n\\r\\n            // Add morphAttributes\\r\\n\\r\\n            for ( var i = 0; i < 8; i ++ ) {\\r\\n\\r\\n                var influence = influences[ i ];\\r\\n\\r\\n                if ( influence ) {\\r\\n\\r\\n                    var index = influence[ 0 ];\\r\\n                    var value = influence[ 1 ];\\r\\n\\r\\n                    if ( value ) {\\r\\n\\r\\n                        if ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\\r\\n                        if ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\\r\\n\\r\\n                        morphInfluences[ i ] = value;\\r\\n                        continue;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                morphInfluences[ i ] = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            update: update\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLObjects( geometries, info ) {\\r\\n\\r\\n        var updateList = {};\\r\\n\\r\\n        function update( object ) {\\r\\n\\r\\n            var frame = info.render.frame;\\r\\n\\r\\n            var geometry = object.geometry;\\r\\n            var buffergeometry = geometries.get( object, geometry );\\r\\n\\r\\n            // Update once per frame\\r\\n\\r\\n            if ( updateList[ buffergeometry.id ] !== frame ) {\\r\\n\\r\\n                if ( geometry.isGeometry ) {\\r\\n\\r\\n                    buffergeometry.updateFromObject( object );\\r\\n\\r\\n                }\\r\\n\\r\\n                geometries.update( buffergeometry );\\r\\n\\r\\n                updateList[ buffergeometry.id ] = frame;\\r\\n\\r\\n            }\\r\\n\\r\\n            return buffergeometry;\\r\\n\\r\\n        }\\r\\n\\r\\n        function dispose() {\\r\\n\\r\\n            updateList = {};\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            update: update,\\r\\n            dispose: dispose\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\r\\n\\r\\n        images = images !== undefined ? images : [];\\r\\n        mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\\r\\n\\r\\n        Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n        this.flipY = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    CubeTexture.prototype = Object.create( Texture.prototype );\\r\\n    CubeTexture.prototype.constructor = CubeTexture;\\r\\n\\r\\n    CubeTexture.prototype.isCubeTexture = true;\\r\\n\\r\\n    Object.defineProperty( CubeTexture.prototype, 'images', {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            return this.image;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            this.image = value;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author Artur Trzesiok\\r\\n     */\\r\\n\\r\\n    function DataTexture3D( data, width, height, depth ) {\\r\\n\\r\\n        // We're going to add .setXXX() methods for setting properties later.\\r\\n        // Users can still set in DataTexture3D directly.\\r\\n        //\\r\\n        //\\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\\r\\n        // \\ttexture.anisotropy = 16;\\r\\n        //\\r\\n        // See #14839\\r\\n\\r\\n        Texture.call( this, null );\\r\\n\\r\\n        this.image = { data: data, width: width, height: height, depth: depth };\\r\\n\\r\\n        this.magFilter = NearestFilter;\\r\\n        this.minFilter = NearestFilter;\\r\\n\\r\\n        this.generateMipmaps = false;\\r\\n        this.flipY = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    DataTexture3D.prototype = Object.create( Texture.prototype );\\r\\n    DataTexture3D.prototype.constructor = DataTexture3D;\\r\\n    DataTexture3D.prototype.isDataTexture3D = true;\\r\\n\\r\\n    /**\\r\\n     * @author tschw\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     *\\r\\n     * Uniforms of a program.\\r\\n     * Those form a tree structure with a special top-level container for the root,\\r\\n     * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\\r\\n     *\\r\\n     *\\r\\n     * Properties of inner nodes including the top-level container:\\r\\n     *\\r\\n     * .seq - array of nested uniforms\\r\\n     * .map - nested uniforms by name\\r\\n     *\\r\\n     *\\r\\n     * Methods of all nodes except the top-level container:\\r\\n     *\\r\\n     * .setValue( gl, value, [renderer] )\\r\\n     *\\r\\n     * \\t\\tuploads a uniform value(s)\\r\\n     *  \\tthe 'renderer' parameter is needed for sampler uniforms\\r\\n     *\\r\\n     *\\r\\n     * Static methods of the top-level container (renderer factorizations):\\r\\n     *\\r\\n     * .upload( gl, seq, values, renderer )\\r\\n     *\\r\\n     * \\t\\tsets uniforms in 'seq' to 'values[id].value'\\r\\n     *\\r\\n     * .seqWithValue( seq, values ) : filteredSeq\\r\\n     *\\r\\n     * \\t\\tfilters 'seq' entries with corresponding entry in values\\r\\n     *\\r\\n     *\\r\\n     * Methods of the top-level container (renderer factorizations):\\r\\n     *\\r\\n     * .setValue( gl, name, value )\\r\\n     *\\r\\n     * \\t\\tsets uniform with  name 'name' to 'value'\\r\\n     *\\r\\n     * .set( gl, obj, prop )\\r\\n     *\\r\\n     * \\t\\tsets uniform from object and property with same name than uniform\\r\\n     *\\r\\n     * .setOptional( gl, obj, prop )\\r\\n     *\\r\\n     * \\t\\tlike .set for an optional property of the object\\r\\n     *\\r\\n     */\\r\\n\\r\\n    var emptyTexture = new Texture();\\r\\n    var emptyTexture3d = new DataTexture3D();\\r\\n    var emptyCubeTexture = new CubeTexture();\\r\\n\\r\\n    // --- Base for inner nodes (including the root) ---\\r\\n\\r\\n    function UniformContainer() {\\r\\n\\r\\n        this.seq = [];\\r\\n        this.map = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    // --- Utilities ---\\r\\n\\r\\n    // Array Caches (provide typed arrays for temporary by size)\\r\\n\\r\\n    var arrayCacheF32 = [];\\r\\n    var arrayCacheI32 = [];\\r\\n\\r\\n    // Float32Array caches used for uploading Matrix uniforms\\r\\n\\r\\n    var mat4array = new Float32Array( 16 );\\r\\n    var mat3array = new Float32Array( 9 );\\r\\n    var mat2array = new Float32Array( 4 );\\r\\n\\r\\n    // Flattening for arrays of vectors and matrices\\r\\n\\r\\n    function flatten( array, nBlocks, blockSize ) {\\r\\n\\r\\n        var firstElem = array[ 0 ];\\r\\n\\r\\n        if ( firstElem <= 0 || firstElem > 0 ) return array;\\r\\n        // unoptimized: ! isNaN( firstElem )\\r\\n        // see http://jacksondunstan.com/articles/983\\r\\n\\r\\n        var n = nBlocks * blockSize,\\r\\n            r = arrayCacheF32[ n ];\\r\\n\\r\\n        if ( r === undefined ) {\\r\\n\\r\\n            r = new Float32Array( n );\\r\\n            arrayCacheF32[ n ] = r;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( nBlocks !== 0 ) {\\r\\n\\r\\n            firstElem.toArray( r, 0 );\\r\\n\\r\\n            for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\\r\\n\\r\\n                offset += blockSize;\\r\\n                array[ i ].toArray( r, offset );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        return r;\\r\\n\\r\\n    }\\r\\n\\r\\n    function arraysEqual( a, b ) {\\r\\n\\r\\n        if ( a.length !== b.length ) return false;\\r\\n\\r\\n        for ( var i = 0, l = a.length; i < l; i ++ ) {\\r\\n\\r\\n            if ( a[ i ] !== b[ i ] ) return false;\\r\\n\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n\\r\\n    }\\r\\n\\r\\n    function copyArray( a, b ) {\\r\\n\\r\\n        for ( var i = 0, l = b.length; i < l; i ++ ) {\\r\\n\\r\\n            a[ i ] = b[ i ];\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Texture unit allocation\\r\\n\\r\\n    function allocTexUnits( renderer, n ) {\\r\\n\\r\\n        var r = arrayCacheI32[ n ];\\r\\n\\r\\n        if ( r === undefined ) {\\r\\n\\r\\n            r = new Int32Array( n );\\r\\n            arrayCacheI32[ n ] = r;\\r\\n\\r\\n        }\\r\\n\\r\\n        for ( var i = 0; i !== n; ++ i )\\r\\n            r[ i ] = renderer.allocTextureUnit();\\r\\n\\r\\n        return r;\\r\\n\\r\\n    }\\r\\n\\r\\n    // --- Setters ---\\r\\n\\r\\n    // Note: Defining these methods externally, because they come in a bunch\\r\\n    // and this way their names minify.\\r\\n\\r\\n    // Single scalar\\r\\n\\r\\n    function setValue1f( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( cache[ 0 ] === v ) return;\\r\\n\\r\\n        gl.uniform1f( this.addr, v );\\r\\n\\r\\n        cache[ 0 ] = v;\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue1i( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( cache[ 0 ] === v ) return;\\r\\n\\r\\n        gl.uniform1i( this.addr, v );\\r\\n\\r\\n        cache[ 0 ] = v;\\r\\n\\r\\n    }\\r\\n\\r\\n    // Single float vector (from flat array or THREE.VectorN)\\r\\n\\r\\n    function setValue2fv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( v.x !== undefined ) {\\r\\n\\r\\n            if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\\r\\n\\r\\n                gl.uniform2f( this.addr, v.x, v.y );\\r\\n\\r\\n                cache[ 0 ] = v.x;\\r\\n                cache[ 1 ] = v.y;\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniform2fv( this.addr, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue3fv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( v.x !== undefined ) {\\r\\n\\r\\n            if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\\r\\n\\r\\n                gl.uniform3f( this.addr, v.x, v.y, v.z );\\r\\n\\r\\n                cache[ 0 ] = v.x;\\r\\n                cache[ 1 ] = v.y;\\r\\n                cache[ 2 ] = v.z;\\r\\n\\r\\n            }\\r\\n\\r\\n        } else if ( v.r !== undefined ) {\\r\\n\\r\\n            if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\\r\\n\\r\\n                gl.uniform3f( this.addr, v.r, v.g, v.b );\\r\\n\\r\\n                cache[ 0 ] = v.r;\\r\\n                cache[ 1 ] = v.g;\\r\\n                cache[ 2 ] = v.b;\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniform3fv( this.addr, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue4fv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( v.x !== undefined ) {\\r\\n\\r\\n            if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\\r\\n\\r\\n                gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\\r\\n\\r\\n                cache[ 0 ] = v.x;\\r\\n                cache[ 1 ] = v.y;\\r\\n                cache[ 2 ] = v.z;\\r\\n                cache[ 3 ] = v.w;\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniform4fv( this.addr, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Single matrix (from flat array or MatrixN)\\r\\n\\r\\n    function setValue2fm( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var elements = v.elements;\\r\\n\\r\\n        if ( elements === undefined ) {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniformMatrix2fv( this.addr, false, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, elements ) ) return;\\r\\n\\r\\n            mat2array.set( elements );\\r\\n\\r\\n            gl.uniformMatrix2fv( this.addr, false, mat2array );\\r\\n\\r\\n            copyArray( cache, elements );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue3fm( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var elements = v.elements;\\r\\n\\r\\n        if ( elements === undefined ) {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniformMatrix3fv( this.addr, false, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, elements ) ) return;\\r\\n\\r\\n            mat3array.set( elements );\\r\\n\\r\\n            gl.uniformMatrix3fv( this.addr, false, mat3array );\\r\\n\\r\\n            copyArray( cache, elements );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue4fm( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var elements = v.elements;\\r\\n\\r\\n        if ( elements === undefined ) {\\r\\n\\r\\n            if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n            gl.uniformMatrix4fv( this.addr, false, v );\\r\\n\\r\\n            copyArray( cache, v );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( arraysEqual( cache, elements ) ) return;\\r\\n\\r\\n            mat4array.set( elements );\\r\\n\\r\\n            gl.uniformMatrix4fv( this.addr, false, mat4array );\\r\\n\\r\\n            copyArray( cache, elements );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Single texture (2D / Cube)\\r\\n\\r\\n    function setValueT1( gl, v, renderer ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var unit = renderer.allocTextureUnit();\\r\\n\\r\\n        if ( cache[ 0 ] !== unit ) {\\r\\n\\r\\n            gl.uniform1i( this.addr, unit );\\r\\n            cache[ 0 ] = unit;\\r\\n\\r\\n        }\\r\\n\\r\\n        renderer.setTexture2D( v || emptyTexture, unit );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueT3D1( gl, v, renderer ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var unit = renderer.allocTextureUnit();\\r\\n\\r\\n        if ( cache[ 0 ] !== unit ) {\\r\\n\\r\\n            gl.uniform1i( this.addr, unit );\\r\\n            cache[ 0 ] = unit;\\r\\n\\r\\n        }\\r\\n\\r\\n        renderer.setTexture3D( v || emptyTexture3d, unit );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueT6( gl, v, renderer ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var unit = renderer.allocTextureUnit();\\r\\n\\r\\n        if ( cache[ 0 ] !== unit ) {\\r\\n\\r\\n            gl.uniform1i( this.addr, unit );\\r\\n            cache[ 0 ] = unit;\\r\\n\\r\\n        }\\r\\n\\r\\n        renderer.setTextureCube( v || emptyCubeTexture, unit );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Integer / Boolean vectors or arrays thereof (always flat arrays)\\r\\n\\r\\n    function setValue2iv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n        gl.uniform2iv( this.addr, v );\\r\\n\\r\\n        copyArray( cache, v );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue3iv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n        gl.uniform3iv( this.addr, v );\\r\\n\\r\\n        copyArray( cache, v );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValue4iv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n        gl.uniform4iv( this.addr, v );\\r\\n\\r\\n        copyArray( cache, v );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Helper to pick the right setter for the singular case\\r\\n\\r\\n    function getSingularSetter( type ) {\\r\\n\\r\\n        switch ( type ) {\\r\\n\\r\\n            case 0x1406: return setValue1f; // FLOAT\\r\\n            case 0x8b50: return setValue2fv; // _VEC2\\r\\n            case 0x8b51: return setValue3fv; // _VEC3\\r\\n            case 0x8b52: return setValue4fv; // _VEC4\\r\\n\\r\\n            case 0x8b5a: return setValue2fm; // _MAT2\\r\\n            case 0x8b5b: return setValue3fm; // _MAT3\\r\\n            case 0x8b5c: return setValue4fm; // _MAT4\\r\\n\\r\\n            case 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\\r\\n            case 0x8B5F: return setValueT3D1; // SAMPLER_3D\\r\\n            case 0x8b60: return setValueT6; // SAMPLER_CUBE\\r\\n\\r\\n            case 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\\r\\n            case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\r\\n            case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\r\\n            case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Array of scalars\\r\\n\\r\\n    function setValue1fv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n        gl.uniform1fv( this.addr, v );\\r\\n\\r\\n        copyArray( cache, v );\\r\\n\\r\\n    }\\r\\n    function setValue1iv( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( arraysEqual( cache, v ) ) return;\\r\\n\\r\\n        gl.uniform1iv( this.addr, v );\\r\\n\\r\\n        copyArray( cache, v );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Array of vectors (flat or from THREE classes)\\r\\n\\r\\n    function setValueV2a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 2 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniform2fv( this.addr, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueV3a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 3 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniform3fv( this.addr, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueV4a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 4 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniform4fv( this.addr, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Array of matrices (flat or from THREE clases)\\r\\n\\r\\n    function setValueM2a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 4 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniformMatrix2fv( this.addr, false, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueM3a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 9 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniformMatrix3fv( this.addr, false, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueM4a( gl, v ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var data = flatten( v, this.size, 16 );\\r\\n\\r\\n        if ( arraysEqual( cache, data ) ) return;\\r\\n\\r\\n        gl.uniformMatrix4fv( this.addr, false, data );\\r\\n\\r\\n        this.updateCache( data );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Array of textures (2D / Cube)\\r\\n\\r\\n    function setValueT1a( gl, v, renderer ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var n = v.length;\\r\\n\\r\\n        var units = allocTexUnits( renderer, n );\\r\\n\\r\\n        if ( arraysEqual( cache, units ) === false ) {\\r\\n\\r\\n            gl.uniform1iv( this.addr, units );\\r\\n            copyArray( cache, units );\\r\\n\\r\\n        }\\r\\n\\r\\n        for ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n            renderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function setValueT6a( gl, v, renderer ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n        var n = v.length;\\r\\n\\r\\n        var units = allocTexUnits( renderer, n );\\r\\n\\r\\n        if ( arraysEqual( cache, units ) === false ) {\\r\\n\\r\\n            gl.uniform1iv( this.addr, units );\\r\\n            copyArray( cache, units );\\r\\n\\r\\n        }\\r\\n\\r\\n        for ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n            renderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Helper to pick the right setter for a pure (bottom-level) array\\r\\n\\r\\n    function getPureArraySetter( type ) {\\r\\n\\r\\n        switch ( type ) {\\r\\n\\r\\n            case 0x1406: return setValue1fv; // FLOAT\\r\\n            case 0x8b50: return setValueV2a; // _VEC2\\r\\n            case 0x8b51: return setValueV3a; // _VEC3\\r\\n            case 0x8b52: return setValueV4a; // _VEC4\\r\\n\\r\\n            case 0x8b5a: return setValueM2a; // _MAT2\\r\\n            case 0x8b5b: return setValueM3a; // _MAT3\\r\\n            case 0x8b5c: return setValueM4a; // _MAT4\\r\\n\\r\\n            case 0x8b5e: return setValueT1a; // SAMPLER_2D\\r\\n            case 0x8b60: return setValueT6a; // SAMPLER_CUBE\\r\\n\\r\\n            case 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\\r\\n            case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\r\\n            case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\r\\n            case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // --- Uniform Classes ---\\r\\n\\r\\n    function SingleUniform( id, activeInfo, addr ) {\\r\\n\\r\\n        this.id = id;\\r\\n        this.addr = addr;\\r\\n        this.cache = [];\\r\\n        this.setValue = getSingularSetter( activeInfo.type );\\r\\n\\r\\n        // this.path = activeInfo.name; // DEBUG\\r\\n\\r\\n    }\\r\\n\\r\\n    function PureArrayUniform( id, activeInfo, addr ) {\\r\\n\\r\\n        this.id = id;\\r\\n        this.addr = addr;\\r\\n        this.cache = [];\\r\\n        this.size = activeInfo.size;\\r\\n        this.setValue = getPureArraySetter( activeInfo.type );\\r\\n\\r\\n        // this.path = activeInfo.name; // DEBUG\\r\\n\\r\\n    }\\r\\n\\r\\n    PureArrayUniform.prototype.updateCache = function ( data ) {\\r\\n\\r\\n        var cache = this.cache;\\r\\n\\r\\n        if ( data instanceof Float32Array && cache.length !== data.length ) {\\r\\n\\r\\n            this.cache = new Float32Array( data.length );\\r\\n\\r\\n        }\\r\\n\\r\\n        copyArray( cache, data );\\r\\n\\r\\n    };\\r\\n\\r\\n    function StructuredUniform( id ) {\\r\\n\\r\\n        this.id = id;\\r\\n\\r\\n        UniformContainer.call( this ); // mix-in\\r\\n\\r\\n    }\\r\\n\\r\\n    StructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\\r\\n\\r\\n        var seq = this.seq;\\r\\n\\r\\n        for ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n            var u = seq[ i ];\\r\\n            u.setValue( gl, value[ u.id ], renderer );\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    // --- Top-level ---\\r\\n\\r\\n    // Parser - builds up the property tree from the path strings\\r\\n\\r\\n    var RePathPart = /([\\\\w\\\\d_]+)(\\\\])?(\\\\[|\\\\.)?/g;\\r\\n\\r\\n    // extracts\\r\\n    // \\t- the identifier (member name or array index)\\r\\n    //  - followed by an optional right bracket (found when array index)\\r\\n    //  - followed by an optional left bracket or dot (type of subscript)\\r\\n    //\\r\\n    // Note: These portions can be read in a non-overlapping fashion and\\r\\n    // allow straightforward parsing of the hierarchy that WebGL encodes\\r\\n    // in the uniform names.\\r\\n\\r\\n    function addUniform( container, uniformObject ) {\\r\\n\\r\\n        container.seq.push( uniformObject );\\r\\n        container.map[ uniformObject.id ] = uniformObject;\\r\\n\\r\\n    }\\r\\n\\r\\n    function parseUniform( activeInfo, addr, container ) {\\r\\n\\r\\n        var path = activeInfo.name,\\r\\n            pathLength = path.length;\\r\\n\\r\\n        // reset RegExp object, because of the early exit of a previous run\\r\\n        RePathPart.lastIndex = 0;\\r\\n\\r\\n        while ( true ) {\\r\\n\\r\\n            var match = RePathPart.exec( path ),\\r\\n                matchEnd = RePathPart.lastIndex,\\r\\n\\r\\n                id = match[ 1 ],\\r\\n                idIsIndex = match[ 2 ] === ']',\\r\\n                subscript = match[ 3 ];\\r\\n\\r\\n            if ( idIsIndex ) id = id | 0; // convert to integer\\r\\n\\r\\n            if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\\r\\n\\r\\n                // bare name or \\\"pure\\\" bottom-level array \\\"[0]\\\" suffix\\r\\n\\r\\n                addUniform( container, subscript === undefined ?\\r\\n                    new SingleUniform( id, activeInfo, addr ) :\\r\\n                    new PureArrayUniform( id, activeInfo, addr ) );\\r\\n\\r\\n                break;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // step into inner node / create it in case it doesn't exist\\r\\n\\r\\n                var map = container.map, next = map[ id ];\\r\\n\\r\\n                if ( next === undefined ) {\\r\\n\\r\\n                    next = new StructuredUniform( id );\\r\\n                    addUniform( container, next );\\r\\n\\r\\n                }\\r\\n\\r\\n                container = next;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // Root Container\\r\\n\\r\\n    function WebGLUniforms( gl, program, renderer ) {\\r\\n\\r\\n        UniformContainer.call( this );\\r\\n\\r\\n        this.renderer = renderer;\\r\\n\\r\\n        var n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\\r\\n\\r\\n        for ( var i = 0; i < n; ++ i ) {\\r\\n\\r\\n            var info = gl.getActiveUniform( program, i ),\\r\\n                addr = gl.getUniformLocation( program, info.name );\\r\\n\\r\\n            parseUniform( info, addr, this );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    WebGLUniforms.prototype.setValue = function ( gl, name, value ) {\\r\\n\\r\\n        var u = this.map[ name ];\\r\\n\\r\\n        if ( u !== undefined ) u.setValue( gl, value, this.renderer );\\r\\n\\r\\n    };\\r\\n\\r\\n    WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\\r\\n\\r\\n        var v = object[ name ];\\r\\n\\r\\n        if ( v !== undefined ) this.setValue( gl, name, v );\\r\\n\\r\\n    };\\r\\n\\r\\n\\r\\n    // Static interface\\r\\n\\r\\n    WebGLUniforms.upload = function ( gl, seq, values, renderer ) {\\r\\n\\r\\n        for ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n            var u = seq[ i ],\\r\\n                v = values[ u.id ];\\r\\n\\r\\n            if ( v.needsUpdate !== false ) {\\r\\n\\r\\n                // note: always updating when .needsUpdate is undefined\\r\\n                u.setValue( gl, v.value, renderer );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    WebGLUniforms.seqWithValue = function ( seq, values ) {\\r\\n\\r\\n        var r = [];\\r\\n\\r\\n        for ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n            var u = seq[ i ];\\r\\n            if ( u.id in values ) r.push( u );\\r\\n\\r\\n        }\\r\\n\\r\\n        return r;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function addLineNumbers( string ) {\\r\\n\\r\\n        var lines = string.split( '\\\\n' );\\r\\n\\r\\n        for ( var i = 0; i < lines.length; i ++ ) {\\r\\n\\r\\n            lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\\r\\n\\r\\n        }\\r\\n\\r\\n        return lines.join( '\\\\n' );\\r\\n\\r\\n    }\\r\\n\\r\\n    function WebGLShader( gl, type, string ) {\\r\\n\\r\\n        var shader = gl.createShader( type );\\r\\n\\r\\n        gl.shaderSource( shader, string );\\r\\n        gl.compileShader( shader );\\r\\n\\r\\n        if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\\r\\n\\r\\n            console.error( 'THREE.WebGLShader: Shader couldn\\\\'t compile.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( gl.getShaderInfoLog( shader ) !== '' ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        // --enable-privileged-webgl-extension\\r\\n        // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\\r\\n\\r\\n        return shader;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var programIdCount = 0;\\r\\n\\r\\n    function getEncodingComponents( encoding ) {\\r\\n\\r\\n        switch ( encoding ) {\\r\\n\\r\\n            case LinearEncoding:\\r\\n                return [ 'Linear', '( value )' ];\\r\\n            case sRGBEncoding:\\r\\n                return [ 'sRGB', '( value )' ];\\r\\n            case RGBEEncoding:\\r\\n                return [ 'RGBE', '( value )' ];\\r\\n            case RGBM7Encoding:\\r\\n                return [ 'RGBM', '( value, 7.0 )' ];\\r\\n            case RGBM16Encoding:\\r\\n                return [ 'RGBM', '( value, 16.0 )' ];\\r\\n            case RGBDEncoding:\\r\\n                return [ 'RGBD', '( value, 256.0 )' ];\\r\\n            case GammaEncoding:\\r\\n                return [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\\r\\n            default:\\r\\n                throw new Error( 'unsupported encoding: ' + encoding );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function getTexelDecodingFunction( functionName, encoding ) {\\r\\n\\r\\n        var components = getEncodingComponents( encoding );\\r\\n        return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\\r\\n\\r\\n    }\\r\\n\\r\\n    function getTexelEncodingFunction( functionName, encoding ) {\\r\\n\\r\\n        var components = getEncodingComponents( encoding );\\r\\n        return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\\r\\n\\r\\n    }\\r\\n\\r\\n    function getToneMappingFunction( functionName, toneMapping ) {\\r\\n\\r\\n        var toneMappingName;\\r\\n\\r\\n        switch ( toneMapping ) {\\r\\n\\r\\n            case LinearToneMapping:\\r\\n                toneMappingName = 'Linear';\\r\\n                break;\\r\\n\\r\\n            case ReinhardToneMapping:\\r\\n                toneMappingName = 'Reinhard';\\r\\n                break;\\r\\n\\r\\n            case Uncharted2ToneMapping:\\r\\n                toneMappingName = 'Uncharted2';\\r\\n                break;\\r\\n\\r\\n            case CineonToneMapping:\\r\\n                toneMappingName = 'OptimizedCineon';\\r\\n                break;\\r\\n\\r\\n            default:\\r\\n                throw new Error( 'unsupported toneMapping: ' + toneMapping );\\r\\n\\r\\n        }\\r\\n\\r\\n        return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\\r\\n\\r\\n    }\\r\\n\\r\\n    function generateExtensions( extensions, parameters, rendererExtensions ) {\\r\\n\\r\\n        extensions = extensions || {};\\r\\n\\r\\n        var chunks = [\\r\\n            ( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\\r\\n            ( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\\r\\n            ( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\\r\\n            ( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\\r\\n        ];\\r\\n\\r\\n        return chunks.filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n    }\\r\\n\\r\\n    function generateDefines( defines ) {\\r\\n\\r\\n        var chunks = [];\\r\\n\\r\\n        for ( var name in defines ) {\\r\\n\\r\\n            var value = defines[ name ];\\r\\n\\r\\n            if ( value === false ) continue;\\r\\n\\r\\n            chunks.push( '#define ' + name + ' ' + value );\\r\\n\\r\\n        }\\r\\n\\r\\n        return chunks.join( '\\\\n' );\\r\\n\\r\\n    }\\r\\n\\r\\n    function fetchAttributeLocations( gl, program ) {\\r\\n\\r\\n        var attributes = {};\\r\\n\\r\\n        var n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\\r\\n\\r\\n        for ( var i = 0; i < n; i ++ ) {\\r\\n\\r\\n            var info = gl.getActiveAttrib( program, i );\\r\\n            var name = info.name;\\r\\n\\r\\n            // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\\r\\n\\r\\n            attributes[ name ] = gl.getAttribLocation( program, name );\\r\\n\\r\\n        }\\r\\n\\r\\n        return attributes;\\r\\n\\r\\n    }\\r\\n\\r\\n    function filterEmptyLine( string ) {\\r\\n\\r\\n        return string !== '';\\r\\n\\r\\n    }\\r\\n\\r\\n    function replaceLightNums( string, parameters ) {\\r\\n\\r\\n        return string\\r\\n            .replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\\r\\n            .replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\\r\\n            .replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\\r\\n            .replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\\r\\n            .replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\\r\\n\\r\\n    }\\r\\n\\r\\n    function replaceClippingPlaneNums( string, parameters ) {\\r\\n\\r\\n        return string\\r\\n            .replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\\r\\n            .replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    function parseIncludes( string ) {\\r\\n\\r\\n        var pattern = /^[ \\\\t]*#include +<([\\\\w\\\\d./]+)>/gm;\\r\\n\\r\\n        function replace( match, include ) {\\r\\n\\r\\n            var replace = ShaderChunk[ include ];\\r\\n\\r\\n            if ( replace === undefined ) {\\r\\n\\r\\n                throw new Error( 'Can not resolve #include <' + include + '>' );\\r\\n\\r\\n            }\\r\\n\\r\\n            return parseIncludes( replace );\\r\\n\\r\\n        }\\r\\n\\r\\n        return string.replace( pattern, replace );\\r\\n\\r\\n    }\\r\\n\\r\\n    function unrollLoops( string ) {\\r\\n\\r\\n        var pattern = /#pragma unroll_loop[\\\\s]+?for \\\\( int i \\\\= (\\\\d+)\\\\; i < (\\\\d+)\\\\; i \\\\+\\\\+ \\\\) \\\\{([\\\\s\\\\S]+?)(?=\\\\})\\\\}/g;\\r\\n\\r\\n        function replace( match, start, end, snippet ) {\\r\\n\\r\\n            var unroll = '';\\r\\n\\r\\n            for ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\\r\\n\\r\\n                unroll += snippet.replace( /\\\\[ i \\\\]/g, '[ ' + i + ' ]' );\\r\\n\\r\\n            }\\r\\n\\r\\n            return unroll;\\r\\n\\r\\n        }\\r\\n\\r\\n        return string.replace( pattern, replace );\\r\\n\\r\\n    }\\r\\n\\r\\n    function WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\\r\\n\\r\\n        var gl = renderer.context;\\r\\n\\r\\n        var defines = material.defines;\\r\\n\\r\\n        var vertexShader = shader.vertexShader;\\r\\n        var fragmentShader = shader.fragmentShader;\\r\\n\\r\\n        var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\\r\\n\\r\\n        if ( parameters.shadowMapType === PCFShadowMap ) {\\r\\n\\r\\n            shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\\r\\n\\r\\n        } else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\\r\\n\\r\\n            shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\\r\\n\\r\\n        }\\r\\n\\r\\n        var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\r\\n        var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\\r\\n        var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\r\\n\\r\\n        if ( parameters.envMap ) {\\r\\n\\r\\n            switch ( material.envMap.mapping ) {\\r\\n\\r\\n                case CubeReflectionMapping:\\r\\n                case CubeRefractionMapping:\\r\\n                    envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\r\\n                    break;\\r\\n\\r\\n                case CubeUVReflectionMapping:\\r\\n                case CubeUVRefractionMapping:\\r\\n                    envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\\r\\n                    break;\\r\\n\\r\\n                case EquirectangularReflectionMapping:\\r\\n                case EquirectangularRefractionMapping:\\r\\n                    envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\\r\\n                    break;\\r\\n\\r\\n                case SphericalReflectionMapping:\\r\\n                    envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\\r\\n                    break;\\r\\n\\r\\n            }\\r\\n\\r\\n            switch ( material.envMap.mapping ) {\\r\\n\\r\\n                case CubeRefractionMapping:\\r\\n                case EquirectangularRefractionMapping:\\r\\n                    envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\\r\\n                    break;\\r\\n\\r\\n            }\\r\\n\\r\\n            switch ( material.combine ) {\\r\\n\\r\\n                case MultiplyOperation:\\r\\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\r\\n                    break;\\r\\n\\r\\n                case MixOperation:\\r\\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\\r\\n                    break;\\r\\n\\r\\n                case AddOperation:\\r\\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\\r\\n                    break;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\\r\\n\\r\\n        // console.log( 'building new program ' );\\r\\n\\r\\n        //\\r\\n\\r\\n        var customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\\r\\n\\r\\n        var customDefines = generateDefines( defines );\\r\\n\\r\\n        //\\r\\n\\r\\n        var program = gl.createProgram();\\r\\n\\r\\n        var prefixVertex, prefixFragment;\\r\\n\\r\\n        if ( material.isRawShaderMaterial ) {\\r\\n\\r\\n            prefixVertex = [\\r\\n\\r\\n                customDefines\\r\\n\\r\\n            ].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n            if ( prefixVertex.length > 0 ) {\\r\\n\\r\\n                prefixVertex += '\\\\n';\\r\\n\\r\\n            }\\r\\n\\r\\n            prefixFragment = [\\r\\n\\r\\n                customExtensions,\\r\\n                customDefines\\r\\n\\r\\n            ].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n            if ( prefixFragment.length > 0 ) {\\r\\n\\r\\n                prefixFragment += '\\\\n';\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            prefixVertex = [\\r\\n\\r\\n                'precision ' + parameters.precision + ' float;',\\r\\n                'precision ' + parameters.precision + ' int;',\\r\\n\\r\\n                '#define SHADER_NAME ' + shader.name,\\r\\n\\r\\n                customDefines,\\r\\n\\r\\n                parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\\r\\n\\r\\n                '#define GAMMA_FACTOR ' + gammaFactorDefine,\\r\\n\\r\\n                '#define MAX_BONES ' + parameters.maxBones,\\r\\n                ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\\r\\n                ( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\\r\\n\\r\\n                parameters.map ? '#define USE_MAP' : '',\\r\\n                parameters.envMap ? '#define USE_ENVMAP' : '',\\r\\n                parameters.envMap ? '#define ' + envMapModeDefine : '',\\r\\n                parameters.lightMap ? '#define USE_LIGHTMAP' : '',\\r\\n                parameters.aoMap ? '#define USE_AOMAP' : '',\\r\\n                parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\r\\n                parameters.bumpMap ? '#define USE_BUMPMAP' : '',\\r\\n                parameters.normalMap ? '#define USE_NORMALMAP' : '',\\r\\n                ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\\r\\n                parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\\r\\n                parameters.specularMap ? '#define USE_SPECULARMAP' : '',\\r\\n                parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\r\\n                parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\r\\n                parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\r\\n                parameters.vertexColors ? '#define USE_COLOR' : '',\\r\\n\\r\\n                parameters.flatShading ? '#define FLAT_SHADED' : '',\\r\\n\\r\\n                parameters.skinning ? '#define USE_SKINNING' : '',\\r\\n                parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\\r\\n\\r\\n                parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\\r\\n                parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\\r\\n                parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\r\\n                parameters.flipSided ? '#define FLIP_SIDED' : '',\\r\\n\\r\\n                parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\r\\n                parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\r\\n\\r\\n                parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\\r\\n\\r\\n                parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\r\\n                parameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\r\\n\\r\\n                'uniform mat4 modelMatrix;',\\r\\n                'uniform mat4 modelViewMatrix;',\\r\\n                'uniform mat4 projectionMatrix;',\\r\\n                'uniform mat4 viewMatrix;',\\r\\n                'uniform mat3 normalMatrix;',\\r\\n                'uniform vec3 cameraPosition;',\\r\\n\\r\\n                'attribute vec3 position;',\\r\\n                'attribute vec3 normal;',\\r\\n                'attribute vec2 uv;',\\r\\n\\r\\n                '#ifdef USE_COLOR',\\r\\n\\r\\n                '\\tattribute vec3 color;',\\r\\n\\r\\n                '#endif',\\r\\n\\r\\n                '#ifdef USE_MORPHTARGETS',\\r\\n\\r\\n                '\\tattribute vec3 morphTarget0;',\\r\\n                '\\tattribute vec3 morphTarget1;',\\r\\n                '\\tattribute vec3 morphTarget2;',\\r\\n                '\\tattribute vec3 morphTarget3;',\\r\\n\\r\\n                '\\t#ifdef USE_MORPHNORMALS',\\r\\n\\r\\n                '\\t\\tattribute vec3 morphNormal0;',\\r\\n                '\\t\\tattribute vec3 morphNormal1;',\\r\\n                '\\t\\tattribute vec3 morphNormal2;',\\r\\n                '\\t\\tattribute vec3 morphNormal3;',\\r\\n\\r\\n                '\\t#else',\\r\\n\\r\\n                '\\t\\tattribute vec3 morphTarget4;',\\r\\n                '\\t\\tattribute vec3 morphTarget5;',\\r\\n                '\\t\\tattribute vec3 morphTarget6;',\\r\\n                '\\t\\tattribute vec3 morphTarget7;',\\r\\n\\r\\n                '\\t#endif',\\r\\n\\r\\n                '#endif',\\r\\n\\r\\n                '#ifdef USE_SKINNING',\\r\\n\\r\\n                '\\tattribute vec4 skinIndex;',\\r\\n                '\\tattribute vec4 skinWeight;',\\r\\n\\r\\n                '#endif',\\r\\n\\r\\n                '\\\\n'\\r\\n\\r\\n            ].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n            prefixFragment = [\\r\\n\\r\\n                customExtensions,\\r\\n\\r\\n                'precision ' + parameters.precision + ' float;',\\r\\n                'precision ' + parameters.precision + ' int;',\\r\\n\\r\\n                '#define SHADER_NAME ' + shader.name,\\r\\n\\r\\n                customDefines,\\r\\n\\r\\n                parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\\r\\n\\r\\n                '#define GAMMA_FACTOR ' + gammaFactorDefine,\\r\\n\\r\\n                ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\\r\\n                ( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\\r\\n\\r\\n                parameters.map ? '#define USE_MAP' : '',\\r\\n                parameters.envMap ? '#define USE_ENVMAP' : '',\\r\\n                parameters.envMap ? '#define ' + envMapTypeDefine : '',\\r\\n                parameters.envMap ? '#define ' + envMapModeDefine : '',\\r\\n                parameters.envMap ? '#define ' + envMapBlendingDefine : '',\\r\\n                parameters.lightMap ? '#define USE_LIGHTMAP' : '',\\r\\n                parameters.aoMap ? '#define USE_AOMAP' : '',\\r\\n                parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\r\\n                parameters.bumpMap ? '#define USE_BUMPMAP' : '',\\r\\n                parameters.normalMap ? '#define USE_NORMALMAP' : '',\\r\\n                ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\\r\\n                parameters.specularMap ? '#define USE_SPECULARMAP' : '',\\r\\n                parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\r\\n                parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\r\\n                parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\r\\n                parameters.vertexColors ? '#define USE_COLOR' : '',\\r\\n\\r\\n                parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\\r\\n\\r\\n                parameters.flatShading ? '#define FLAT_SHADED' : '',\\r\\n\\r\\n                parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\r\\n                parameters.flipSided ? '#define FLIP_SIDED' : '',\\r\\n\\r\\n                parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\r\\n                parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\r\\n\\r\\n                parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\\r\\n\\r\\n                parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\\r\\n\\r\\n                parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\r\\n                parameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\r\\n\\r\\n                parameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\\r\\n\\r\\n                'uniform mat4 viewMatrix;',\\r\\n                'uniform vec3 cameraPosition;',\\r\\n\\r\\n                ( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\\r\\n                ( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\\r\\n                ( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\\r\\n\\r\\n                parameters.dithering ? '#define DITHERING' : '',\\r\\n\\r\\n                ( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\\r\\n                    ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\\r\\n                parameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\\r\\n                parameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\\r\\n                parameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\\r\\n                parameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\\r\\n                parameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\\r\\n\\r\\n                parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\\r\\n\\r\\n                '\\\\n'\\r\\n\\r\\n            ].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n        }\\r\\n\\r\\n        vertexShader = parseIncludes( vertexShader );\\r\\n        vertexShader = replaceLightNums( vertexShader, parameters );\\r\\n        vertexShader = replaceClippingPlaneNums( vertexShader, parameters );\\r\\n\\r\\n        fragmentShader = parseIncludes( fragmentShader );\\r\\n        fragmentShader = replaceLightNums( fragmentShader, parameters );\\r\\n        fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\\r\\n\\r\\n        vertexShader = unrollLoops( vertexShader );\\r\\n        fragmentShader = unrollLoops( fragmentShader );\\r\\n\\r\\n        if ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\\r\\n\\r\\n            var isGLSL3ShaderMaterial = false;\\r\\n\\r\\n            var versionRegex = /^\\\\s*#version\\\\s+300\\\\s+es\\\\s*\\\\n/;\\r\\n\\r\\n            if ( material.isShaderMaterial &&\\r\\n                vertexShader.match( versionRegex ) !== null &&\\r\\n                fragmentShader.match( versionRegex ) !== null ) {\\r\\n\\r\\n                isGLSL3ShaderMaterial = true;\\r\\n\\r\\n                vertexShader = vertexShader.replace( versionRegex, '' );\\r\\n                fragmentShader = fragmentShader.replace( versionRegex, '' );\\r\\n\\r\\n            }\\r\\n\\r\\n            // GLSL 3.0 conversion\\r\\n            prefixVertex = [\\r\\n                '#version 300 es\\\\n',\\r\\n                '#define attribute in',\\r\\n                '#define varying out',\\r\\n                '#define texture2D texture'\\r\\n            ].join( '\\\\n' ) + '\\\\n' + prefixVertex;\\r\\n\\r\\n            prefixFragment = [\\r\\n                '#version 300 es\\\\n',\\r\\n                '#define varying in',\\r\\n                isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\\r\\n                isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\\r\\n                '#define gl_FragDepthEXT gl_FragDepth',\\r\\n                '#define texture2D texture',\\r\\n                '#define textureCube texture',\\r\\n                '#define texture2DProj textureProj',\\r\\n                '#define texture2DLodEXT textureLod',\\r\\n                '#define texture2DProjLodEXT textureProjLod',\\r\\n                '#define textureCubeLodEXT textureLod',\\r\\n                '#define texture2DGradEXT textureGrad',\\r\\n                '#define texture2DProjGradEXT textureProjGrad',\\r\\n                '#define textureCubeGradEXT textureGrad'\\r\\n            ].join( '\\\\n' ) + '\\\\n' + prefixFragment;\\r\\n\\r\\n        }\\r\\n\\r\\n        var vertexGlsl = prefixVertex + vertexShader;\\r\\n        var fragmentGlsl = prefixFragment + fragmentShader;\\r\\n\\r\\n        // console.log( '*VERTEX*', vertexGlsl );\\r\\n        // console.log( '*FRAGMENT*', fragmentGlsl );\\r\\n\\r\\n        var glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\\r\\n        var glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\\r\\n\\r\\n        gl.attachShader( program, glVertexShader );\\r\\n        gl.attachShader( program, glFragmentShader );\\r\\n\\r\\n        // Force a particular attribute to index 0.\\r\\n\\r\\n        if ( material.index0AttributeName !== undefined ) {\\r\\n\\r\\n            gl.bindAttribLocation( program, 0, material.index0AttributeName );\\r\\n\\r\\n        } else if ( parameters.morphTargets === true ) {\\r\\n\\r\\n            // programs with morphTargets displace position out of attribute 0\\r\\n            gl.bindAttribLocation( program, 0, 'position' );\\r\\n\\r\\n        }\\r\\n\\r\\n        gl.linkProgram( program );\\r\\n\\r\\n        var programLog = gl.getProgramInfoLog( program ).trim();\\r\\n        var vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\\r\\n        var fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\\r\\n\\r\\n        var runnable = true;\\r\\n        var haveDiagnostics = true;\\r\\n\\r\\n        // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\\r\\n        // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\\r\\n\\r\\n        if ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\\r\\n\\r\\n            runnable = false;\\r\\n\\r\\n            console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\\r\\n\\r\\n        } else if ( programLog !== '' ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\\r\\n\\r\\n        } else if ( vertexLog === '' || fragmentLog === '' ) {\\r\\n\\r\\n            haveDiagnostics = false;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( haveDiagnostics ) {\\r\\n\\r\\n            this.diagnostics = {\\r\\n\\r\\n                runnable: runnable,\\r\\n                material: material,\\r\\n\\r\\n                programLog: programLog,\\r\\n\\r\\n                vertexShader: {\\r\\n\\r\\n                    log: vertexLog,\\r\\n                    prefix: prefixVertex\\r\\n\\r\\n                },\\r\\n\\r\\n                fragmentShader: {\\r\\n\\r\\n                    log: fragmentLog,\\r\\n                    prefix: prefixFragment\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }\\r\\n\\r\\n        // clean up\\r\\n\\r\\n        gl.deleteShader( glVertexShader );\\r\\n        gl.deleteShader( glFragmentShader );\\r\\n\\r\\n        // set up caching for uniform locations\\r\\n\\r\\n        var cachedUniforms;\\r\\n\\r\\n        this.getUniforms = function () {\\r\\n\\r\\n            if ( cachedUniforms === undefined ) {\\r\\n\\r\\n                cachedUniforms = new WebGLUniforms( gl, program, renderer );\\r\\n\\r\\n            }\\r\\n\\r\\n            return cachedUniforms;\\r\\n\\r\\n        };\\r\\n\\r\\n        // set up caching for attribute locations\\r\\n\\r\\n        var cachedAttributes;\\r\\n\\r\\n        this.getAttributes = function () {\\r\\n\\r\\n            if ( cachedAttributes === undefined ) {\\r\\n\\r\\n                cachedAttributes = fetchAttributeLocations( gl, program );\\r\\n\\r\\n            }\\r\\n\\r\\n            return cachedAttributes;\\r\\n\\r\\n        };\\r\\n\\r\\n        // free resource\\r\\n\\r\\n        this.destroy = function () {\\r\\n\\r\\n            gl.deleteProgram( program );\\r\\n            this.program = undefined;\\r\\n\\r\\n        };\\r\\n\\r\\n        // DEPRECATED\\r\\n\\r\\n        Object.defineProperties( this, {\\r\\n\\r\\n            uniforms: {\\r\\n                get: function () {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\\r\\n                    return this.getUniforms();\\r\\n\\r\\n                }\\r\\n            },\\r\\n\\r\\n            attributes: {\\r\\n                get: function () {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\\r\\n                    return this.getAttributes();\\r\\n\\r\\n                }\\r\\n            }\\r\\n\\r\\n        } );\\r\\n\\r\\n\\r\\n        //\\r\\n\\r\\n        this.name = shader.name;\\r\\n        this.id = programIdCount ++;\\r\\n        this.code = code;\\r\\n        this.usedTimes = 1;\\r\\n        this.program = program;\\r\\n        this.vertexShader = glVertexShader;\\r\\n        this.fragmentShader = glFragmentShader;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLPrograms( renderer, extensions, capabilities ) {\\r\\n\\r\\n        var programs = [];\\r\\n\\r\\n        var shaderIDs = {\\r\\n            MeshDepthMaterial: 'depth',\\r\\n            MeshDistanceMaterial: 'distanceRGBA',\\r\\n            MeshNormalMaterial: 'normal',\\r\\n            MeshBasicMaterial: 'basic',\\r\\n            MeshLambertMaterial: 'lambert',\\r\\n            MeshPhongMaterial: 'phong',\\r\\n            MeshToonMaterial: 'phong',\\r\\n            MeshStandardMaterial: 'physical',\\r\\n            MeshPhysicalMaterial: 'physical',\\r\\n            MeshMatcapMaterial: 'matcap',\\r\\n            LineBasicMaterial: 'basic',\\r\\n            LineDashedMaterial: 'dashed',\\r\\n            PointsMaterial: 'points',\\r\\n            ShadowMaterial: 'shadow',\\r\\n            SpriteMaterial: 'sprite'\\r\\n        };\\r\\n\\r\\n        var parameterNames = [\\r\\n            \\\"precision\\\", \\\"supportsVertexTextures\\\", \\\"map\\\", \\\"mapEncoding\\\", \\\"matcapEncoding\\\", \\\"envMap\\\", \\\"envMapMode\\\", \\\"envMapEncoding\\\",\\r\\n            \\\"lightMap\\\", \\\"aoMap\\\", \\\"emissiveMap\\\", \\\"emissiveMapEncoding\\\", \\\"bumpMap\\\", \\\"normalMap\\\", \\\"objectSpaceNormalMap\\\", \\\"displacementMap\\\", \\\"specularMap\\\",\\r\\n            \\\"roughnessMap\\\", \\\"metalnessMap\\\", \\\"gradientMap\\\",\\r\\n            \\\"alphaMap\\\", \\\"combine\\\", \\\"vertexColors\\\", \\\"fog\\\", \\\"useFog\\\", \\\"fogExp\\\",\\r\\n            \\\"flatShading\\\", \\\"sizeAttenuation\\\", \\\"logarithmicDepthBuffer\\\", \\\"skinning\\\",\\r\\n            \\\"maxBones\\\", \\\"useVertexTexture\\\", \\\"morphTargets\\\", \\\"morphNormals\\\",\\r\\n            \\\"maxMorphTargets\\\", \\\"maxMorphNormals\\\", \\\"premultipliedAlpha\\\",\\r\\n            \\\"numDirLights\\\", \\\"numPointLights\\\", \\\"numSpotLights\\\", \\\"numHemiLights\\\", \\\"numRectAreaLights\\\",\\r\\n            \\\"shadowMapEnabled\\\", \\\"shadowMapType\\\", \\\"toneMapping\\\", 'physicallyCorrectLights',\\r\\n            \\\"alphaTest\\\", \\\"doubleSided\\\", \\\"flipSided\\\", \\\"numClippingPlanes\\\", \\\"numClipIntersection\\\", \\\"depthPacking\\\", \\\"dithering\\\"\\r\\n        ];\\r\\n\\r\\n\\r\\n        function allocateBones( object ) {\\r\\n\\r\\n            var skeleton = object.skeleton;\\r\\n            var bones = skeleton.bones;\\r\\n\\r\\n            if ( capabilities.floatVertexTextures ) {\\r\\n\\r\\n                return 1024;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // default for when object is not specified\\r\\n                // ( for example when prebuilding shader to be used with multiple objects )\\r\\n                //\\r\\n                //  - leave some extra space for other uniforms\\r\\n                //  - limit here is ANGLE's 254 max uniform vectors\\r\\n                //    (up to 54 should be safe)\\r\\n\\r\\n                var nVertexUniforms = capabilities.maxVertexUniforms;\\r\\n                var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\\r\\n\\r\\n                var maxBones = Math.min( nVertexMatrices, bones.length );\\r\\n\\r\\n                if ( maxBones < bones.length ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\\r\\n                    return 0;\\r\\n\\r\\n                }\\r\\n\\r\\n                return maxBones;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function getTextureEncodingFromMap( map, gammaOverrideLinear ) {\\r\\n\\r\\n            var encoding;\\r\\n\\r\\n            if ( ! map ) {\\r\\n\\r\\n                encoding = LinearEncoding;\\r\\n\\r\\n            } else if ( map.isTexture ) {\\r\\n\\r\\n                encoding = map.encoding;\\r\\n\\r\\n            } else if ( map.isWebGLRenderTarget ) {\\r\\n\\r\\n                console.warn( \\\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\\\" );\\r\\n                encoding = map.texture.encoding;\\r\\n\\r\\n            }\\r\\n\\r\\n            // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\\r\\n            if ( encoding === LinearEncoding && gammaOverrideLinear ) {\\r\\n\\r\\n                encoding = GammaEncoding;\\r\\n\\r\\n            }\\r\\n\\r\\n            return encoding;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\\r\\n\\r\\n            var shaderID = shaderIDs[ material.type ];\\r\\n\\r\\n            // heuristics to create shader parameters according to lights in the scene\\r\\n            // (not to blow over maxLights budget)\\r\\n\\r\\n            var maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\\r\\n            var precision = capabilities.precision;\\r\\n\\r\\n            if ( material.precision !== null ) {\\r\\n\\r\\n                precision = capabilities.getMaxPrecision( material.precision );\\r\\n\\r\\n                if ( precision !== material.precision ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var currentRenderTarget = renderer.getRenderTarget();\\r\\n\\r\\n            var parameters = {\\r\\n\\r\\n                shaderID: shaderID,\\r\\n\\r\\n                precision: precision,\\r\\n                supportsVertexTextures: capabilities.vertexTextures,\\r\\n                outputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\\r\\n                map: !! material.map,\\r\\n                mapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\\r\\n                matcap: !! material.matcap,\\r\\n                matcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\\r\\n                envMap: !! material.envMap,\\r\\n                envMapMode: material.envMap && material.envMap.mapping,\\r\\n                envMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\\r\\n                envMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\\r\\n                lightMap: !! material.lightMap,\\r\\n                aoMap: !! material.aoMap,\\r\\n                emissiveMap: !! material.emissiveMap,\\r\\n                emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\\r\\n                bumpMap: !! material.bumpMap,\\r\\n                normalMap: !! material.normalMap,\\r\\n                objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\\r\\n                displacementMap: !! material.displacementMap,\\r\\n                roughnessMap: !! material.roughnessMap,\\r\\n                metalnessMap: !! material.metalnessMap,\\r\\n                specularMap: !! material.specularMap,\\r\\n                alphaMap: !! material.alphaMap,\\r\\n\\r\\n                gradientMap: !! material.gradientMap,\\r\\n\\r\\n                combine: material.combine,\\r\\n\\r\\n                vertexColors: material.vertexColors,\\r\\n\\r\\n                fog: !! fog,\\r\\n                useFog: material.fog,\\r\\n                fogExp: ( fog && fog.isFogExp2 ),\\r\\n\\r\\n                flatShading: material.flatShading,\\r\\n\\r\\n                sizeAttenuation: material.sizeAttenuation,\\r\\n                logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\\r\\n\\r\\n                skinning: material.skinning && maxBones > 0,\\r\\n                maxBones: maxBones,\\r\\n                useVertexTexture: capabilities.floatVertexTextures,\\r\\n\\r\\n                morphTargets: material.morphTargets,\\r\\n                morphNormals: material.morphNormals,\\r\\n                maxMorphTargets: renderer.maxMorphTargets,\\r\\n                maxMorphNormals: renderer.maxMorphNormals,\\r\\n\\r\\n                numDirLights: lights.directional.length,\\r\\n                numPointLights: lights.point.length,\\r\\n                numSpotLights: lights.spot.length,\\r\\n                numRectAreaLights: lights.rectArea.length,\\r\\n                numHemiLights: lights.hemi.length,\\r\\n\\r\\n                numClippingPlanes: nClipPlanes,\\r\\n                numClipIntersection: nClipIntersection,\\r\\n\\r\\n                dithering: material.dithering,\\r\\n\\r\\n                shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\\r\\n                shadowMapType: renderer.shadowMap.type,\\r\\n\\r\\n                toneMapping: renderer.toneMapping,\\r\\n                physicallyCorrectLights: renderer.physicallyCorrectLights,\\r\\n\\r\\n                premultipliedAlpha: material.premultipliedAlpha,\\r\\n\\r\\n                alphaTest: material.alphaTest,\\r\\n                doubleSided: material.side === DoubleSide,\\r\\n                flipSided: material.side === BackSide,\\r\\n\\r\\n                depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\\r\\n\\r\\n            };\\r\\n\\r\\n            return parameters;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getProgramCode = function ( material, parameters ) {\\r\\n\\r\\n            var array = [];\\r\\n\\r\\n            if ( parameters.shaderID ) {\\r\\n\\r\\n                array.push( parameters.shaderID );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                array.push( material.fragmentShader );\\r\\n                array.push( material.vertexShader );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.defines !== undefined ) {\\r\\n\\r\\n                for ( var name in material.defines ) {\\r\\n\\r\\n                    array.push( name );\\r\\n                    array.push( material.defines[ name ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i < parameterNames.length; i ++ ) {\\r\\n\\r\\n                array.push( parameters[ parameterNames[ i ] ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            array.push( material.onBeforeCompile.toString() );\\r\\n\\r\\n            array.push( renderer.gammaOutput );\\r\\n\\r\\n            return array.join();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.acquireProgram = function ( material, shader, parameters, code ) {\\r\\n\\r\\n            var program;\\r\\n\\r\\n            // Check if code has been already compiled\\r\\n            for ( var p = 0, pl = programs.length; p < pl; p ++ ) {\\r\\n\\r\\n                var programInfo = programs[ p ];\\r\\n\\r\\n                if ( programInfo.code === code ) {\\r\\n\\r\\n                    program = programInfo;\\r\\n                    ++ program.usedTimes;\\r\\n\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( program === undefined ) {\\r\\n\\r\\n                program = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\\r\\n                programs.push( program );\\r\\n\\r\\n            }\\r\\n\\r\\n            return program;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.releaseProgram = function ( program ) {\\r\\n\\r\\n            if ( -- program.usedTimes === 0 ) {\\r\\n\\r\\n                // Remove from unordered set\\r\\n                var i = programs.indexOf( program );\\r\\n                programs[ i ] = programs[ programs.length - 1 ];\\r\\n                programs.pop();\\r\\n\\r\\n                // Free WebGL resources\\r\\n                program.destroy();\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        // Exposed for resource monitoring & error feedback via renderer.info:\\r\\n        this.programs = programs;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author fordacious / fordacious.github.io\\r\\n     */\\r\\n\\r\\n    function WebGLProperties() {\\r\\n\\r\\n        var properties = new WeakMap();\\r\\n\\r\\n        function get( object ) {\\r\\n\\r\\n            var map = properties.get( object );\\r\\n\\r\\n            if ( map === undefined ) {\\r\\n\\r\\n                map = {};\\r\\n                properties.set( object, map );\\r\\n\\r\\n            }\\r\\n\\r\\n            return map;\\r\\n\\r\\n        }\\r\\n\\r\\n        function remove( object ) {\\r\\n\\r\\n            properties.delete( object );\\r\\n\\r\\n        }\\r\\n\\r\\n        function update( object, key, value ) {\\r\\n\\r\\n            properties.get( object )[ key ] = value;\\r\\n\\r\\n        }\\r\\n\\r\\n        function dispose() {\\r\\n\\r\\n            properties = new WeakMap();\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            get: get,\\r\\n            remove: remove,\\r\\n            update: update,\\r\\n            dispose: dispose\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function painterSortStable( a, b ) {\\r\\n\\r\\n        if ( a.renderOrder !== b.renderOrder ) {\\r\\n\\r\\n            return a.renderOrder - b.renderOrder;\\r\\n\\r\\n        } else if ( a.program && b.program && a.program !== b.program ) {\\r\\n\\r\\n            return a.program.id - b.program.id;\\r\\n\\r\\n        } else if ( a.material.id !== b.material.id ) {\\r\\n\\r\\n            return a.material.id - b.material.id;\\r\\n\\r\\n        } else if ( a.z !== b.z ) {\\r\\n\\r\\n            return a.z - b.z;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            return a.id - b.id;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function reversePainterSortStable( a, b ) {\\r\\n\\r\\n        if ( a.renderOrder !== b.renderOrder ) {\\r\\n\\r\\n            return a.renderOrder - b.renderOrder;\\r\\n\\r\\n        } if ( a.z !== b.z ) {\\r\\n\\r\\n            return b.z - a.z;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            return a.id - b.id;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    function WebGLRenderList() {\\r\\n\\r\\n        var renderItems = [];\\r\\n        var renderItemsIndex = 0;\\r\\n\\r\\n        var opaque = [];\\r\\n        var transparent = [];\\r\\n\\r\\n        function init() {\\r\\n\\r\\n            renderItemsIndex = 0;\\r\\n\\r\\n            opaque.length = 0;\\r\\n            transparent.length = 0;\\r\\n\\r\\n        }\\r\\n\\r\\n        function push( object, geometry, material, z, group ) {\\r\\n\\r\\n            var renderItem = renderItems[ renderItemsIndex ];\\r\\n\\r\\n            if ( renderItem === undefined ) {\\r\\n\\r\\n                renderItem = {\\r\\n                    id: object.id,\\r\\n                    object: object,\\r\\n                    geometry: geometry,\\r\\n                    material: material,\\r\\n                    program: material.program,\\r\\n                    renderOrder: object.renderOrder,\\r\\n                    z: z,\\r\\n                    group: group\\r\\n                };\\r\\n\\r\\n                renderItems[ renderItemsIndex ] = renderItem;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                renderItem.id = object.id;\\r\\n                renderItem.object = object;\\r\\n                renderItem.geometry = geometry;\\r\\n                renderItem.material = material;\\r\\n                renderItem.program = material.program;\\r\\n                renderItem.renderOrder = object.renderOrder;\\r\\n                renderItem.z = z;\\r\\n                renderItem.group = group;\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            ( material.transparent === true ? transparent : opaque ).push( renderItem );\\r\\n\\r\\n            renderItemsIndex ++;\\r\\n\\r\\n        }\\r\\n\\r\\n        function sort() {\\r\\n\\r\\n            if ( opaque.length > 1 ) opaque.sort( painterSortStable );\\r\\n            if ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            opaque: opaque,\\r\\n            transparent: transparent,\\r\\n\\r\\n            init: init,\\r\\n            push: push,\\r\\n\\r\\n            sort: sort\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    function WebGLRenderLists() {\\r\\n\\r\\n        var lists = {};\\r\\n\\r\\n        function get( scene, camera ) {\\r\\n\\r\\n            var hash = scene.id + ',' + camera.id;\\r\\n            var list = lists[ hash ];\\r\\n\\r\\n            if ( list === undefined ) {\\r\\n\\r\\n                // console.log( 'THREE.WebGLRenderLists:', hash );\\r\\n\\r\\n                list = new WebGLRenderList();\\r\\n                lists[ hash ] = list;\\r\\n\\r\\n            }\\r\\n\\r\\n            return list;\\r\\n\\r\\n        }\\r\\n\\r\\n        function dispose() {\\r\\n\\r\\n            lists = {};\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            get: get,\\r\\n            dispose: dispose\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function UniformsCache() {\\r\\n\\r\\n        var lights = {};\\r\\n\\r\\n        return {\\r\\n\\r\\n            get: function ( light ) {\\r\\n\\r\\n                if ( lights[ light.id ] !== undefined ) {\\r\\n\\r\\n                    return lights[ light.id ];\\r\\n\\r\\n                }\\r\\n\\r\\n                var uniforms;\\r\\n\\r\\n                switch ( light.type ) {\\r\\n\\r\\n                    case 'DirectionalLight':\\r\\n                        uniforms = {\\r\\n                            direction: new Vector3(),\\r\\n                            color: new Color(),\\r\\n\\r\\n                            shadow: false,\\r\\n                            shadowBias: 0,\\r\\n                            shadowRadius: 1,\\r\\n                            shadowMapSize: new Vector2()\\r\\n                        };\\r\\n                        break;\\r\\n\\r\\n                    case 'SpotLight':\\r\\n                        uniforms = {\\r\\n                            position: new Vector3(),\\r\\n                            direction: new Vector3(),\\r\\n                            color: new Color(),\\r\\n                            distance: 0,\\r\\n                            coneCos: 0,\\r\\n                            penumbraCos: 0,\\r\\n                            decay: 0,\\r\\n\\r\\n                            shadow: false,\\r\\n                            shadowBias: 0,\\r\\n                            shadowRadius: 1,\\r\\n                            shadowMapSize: new Vector2()\\r\\n                        };\\r\\n                        break;\\r\\n\\r\\n                    case 'PointLight':\\r\\n                        uniforms = {\\r\\n                            position: new Vector3(),\\r\\n                            color: new Color(),\\r\\n                            distance: 0,\\r\\n                            decay: 0,\\r\\n\\r\\n                            shadow: false,\\r\\n                            shadowBias: 0,\\r\\n                            shadowRadius: 1,\\r\\n                            shadowMapSize: new Vector2(),\\r\\n                            shadowCameraNear: 1,\\r\\n                            shadowCameraFar: 1000\\r\\n                        };\\r\\n                        break;\\r\\n\\r\\n                    case 'HemisphereLight':\\r\\n                        uniforms = {\\r\\n                            direction: new Vector3(),\\r\\n                            skyColor: new Color(),\\r\\n                            groundColor: new Color()\\r\\n                        };\\r\\n                        break;\\r\\n\\r\\n                    case 'RectAreaLight':\\r\\n                        uniforms = {\\r\\n                            color: new Color(),\\r\\n                            position: new Vector3(),\\r\\n                            halfWidth: new Vector3(),\\r\\n                            halfHeight: new Vector3()\\r\\n                            // TODO (abelnation): set RectAreaLight shadow uniforms\\r\\n                        };\\r\\n                        break;\\r\\n\\r\\n                }\\r\\n\\r\\n                lights[ light.id ] = uniforms;\\r\\n\\r\\n                return uniforms;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    var count = 0;\\r\\n\\r\\n    function WebGLLights() {\\r\\n\\r\\n        var cache = new UniformsCache();\\r\\n\\r\\n        var state = {\\r\\n\\r\\n            id: count ++,\\r\\n\\r\\n            hash: {\\r\\n                stateID: - 1,\\r\\n                directionalLength: - 1,\\r\\n                pointLength: - 1,\\r\\n                spotLength: - 1,\\r\\n                rectAreaLength: - 1,\\r\\n                hemiLength: - 1,\\r\\n                shadowsLength: - 1\\r\\n            },\\r\\n\\r\\n            ambient: [ 0, 0, 0 ],\\r\\n            directional: [],\\r\\n            directionalShadowMap: [],\\r\\n            directionalShadowMatrix: [],\\r\\n            spot: [],\\r\\n            spotShadowMap: [],\\r\\n            spotShadowMatrix: [],\\r\\n            rectArea: [],\\r\\n            point: [],\\r\\n            pointShadowMap: [],\\r\\n            pointShadowMatrix: [],\\r\\n            hemi: []\\r\\n\\r\\n        };\\r\\n\\r\\n        var vector3 = new Vector3();\\r\\n        var matrix4 = new Matrix4();\\r\\n        var matrix42 = new Matrix4();\\r\\n\\r\\n        function setup( lights, shadows, camera ) {\\r\\n\\r\\n            var r = 0, g = 0, b = 0;\\r\\n\\r\\n            var directionalLength = 0;\\r\\n            var pointLength = 0;\\r\\n            var spotLength = 0;\\r\\n            var rectAreaLength = 0;\\r\\n            var hemiLength = 0;\\r\\n\\r\\n            var viewMatrix = camera.matrixWorldInverse;\\r\\n\\r\\n            for ( var i = 0, l = lights.length; i < l; i ++ ) {\\r\\n\\r\\n                var light = lights[ i ];\\r\\n\\r\\n                var color = light.color;\\r\\n                var intensity = light.intensity;\\r\\n                var distance = light.distance;\\r\\n\\r\\n                var shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\\r\\n\\r\\n                if ( light.isAmbientLight ) {\\r\\n\\r\\n                    r += color.r * intensity;\\r\\n                    g += color.g * intensity;\\r\\n                    b += color.b * intensity;\\r\\n\\r\\n                } else if ( light.isDirectionalLight ) {\\r\\n\\r\\n                    var uniforms = cache.get( light );\\r\\n\\r\\n                    uniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\r\\n                    uniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n                    vector3.setFromMatrixPosition( light.target.matrixWorld );\\r\\n                    uniforms.direction.sub( vector3 );\\r\\n                    uniforms.direction.transformDirection( viewMatrix );\\r\\n\\r\\n                    uniforms.shadow = light.castShadow;\\r\\n\\r\\n                    if ( light.castShadow ) {\\r\\n\\r\\n                        var shadow = light.shadow;\\r\\n\\r\\n                        uniforms.shadowBias = shadow.bias;\\r\\n                        uniforms.shadowRadius = shadow.radius;\\r\\n                        uniforms.shadowMapSize = shadow.mapSize;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    state.directionalShadowMap[ directionalLength ] = shadowMap;\\r\\n                    state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\\r\\n                    state.directional[ directionalLength ] = uniforms;\\r\\n\\r\\n                    directionalLength ++;\\r\\n\\r\\n                } else if ( light.isSpotLight ) {\\r\\n\\r\\n                    var uniforms = cache.get( light );\\r\\n\\r\\n                    uniforms.position.setFromMatrixPosition( light.matrixWorld );\\r\\n                    uniforms.position.applyMatrix4( viewMatrix );\\r\\n\\r\\n                    uniforms.color.copy( color ).multiplyScalar( intensity );\\r\\n                    uniforms.distance = distance;\\r\\n\\r\\n                    uniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n                    vector3.setFromMatrixPosition( light.target.matrixWorld );\\r\\n                    uniforms.direction.sub( vector3 );\\r\\n                    uniforms.direction.transformDirection( viewMatrix );\\r\\n\\r\\n                    uniforms.coneCos = Math.cos( light.angle );\\r\\n                    uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\\r\\n                    uniforms.decay = light.decay;\\r\\n\\r\\n                    uniforms.shadow = light.castShadow;\\r\\n\\r\\n                    if ( light.castShadow ) {\\r\\n\\r\\n                        var shadow = light.shadow;\\r\\n\\r\\n                        uniforms.shadowBias = shadow.bias;\\r\\n                        uniforms.shadowRadius = shadow.radius;\\r\\n                        uniforms.shadowMapSize = shadow.mapSize;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    state.spotShadowMap[ spotLength ] = shadowMap;\\r\\n                    state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\\r\\n                    state.spot[ spotLength ] = uniforms;\\r\\n\\r\\n                    spotLength ++;\\r\\n\\r\\n                } else if ( light.isRectAreaLight ) {\\r\\n\\r\\n                    var uniforms = cache.get( light );\\r\\n\\r\\n                    // (a) intensity is the total visible light emitted\\r\\n                    //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\\r\\n\\r\\n                    // (b) intensity is the brightness of the light\\r\\n                    uniforms.color.copy( color ).multiplyScalar( intensity );\\r\\n\\r\\n                    uniforms.position.setFromMatrixPosition( light.matrixWorld );\\r\\n                    uniforms.position.applyMatrix4( viewMatrix );\\r\\n\\r\\n                    // extract local rotation of light to derive width/height half vectors\\r\\n                    matrix42.identity();\\r\\n                    matrix4.copy( light.matrixWorld );\\r\\n                    matrix4.premultiply( viewMatrix );\\r\\n                    matrix42.extractRotation( matrix4 );\\r\\n\\r\\n                    uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\\r\\n                    uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\\r\\n\\r\\n                    uniforms.halfWidth.applyMatrix4( matrix42 );\\r\\n                    uniforms.halfHeight.applyMatrix4( matrix42 );\\r\\n\\r\\n                    // TODO (abelnation): RectAreaLight distance?\\r\\n                    // uniforms.distance = distance;\\r\\n\\r\\n                    state.rectArea[ rectAreaLength ] = uniforms;\\r\\n\\r\\n                    rectAreaLength ++;\\r\\n\\r\\n                } else if ( light.isPointLight ) {\\r\\n\\r\\n                    var uniforms = cache.get( light );\\r\\n\\r\\n                    uniforms.position.setFromMatrixPosition( light.matrixWorld );\\r\\n                    uniforms.position.applyMatrix4( viewMatrix );\\r\\n\\r\\n                    uniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\r\\n                    uniforms.distance = light.distance;\\r\\n                    uniforms.decay = light.decay;\\r\\n\\r\\n                    uniforms.shadow = light.castShadow;\\r\\n\\r\\n                    if ( light.castShadow ) {\\r\\n\\r\\n                        var shadow = light.shadow;\\r\\n\\r\\n                        uniforms.shadowBias = shadow.bias;\\r\\n                        uniforms.shadowRadius = shadow.radius;\\r\\n                        uniforms.shadowMapSize = shadow.mapSize;\\r\\n                        uniforms.shadowCameraNear = shadow.camera.near;\\r\\n                        uniforms.shadowCameraFar = shadow.camera.far;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    state.pointShadowMap[ pointLength ] = shadowMap;\\r\\n                    state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\\r\\n                    state.point[ pointLength ] = uniforms;\\r\\n\\r\\n                    pointLength ++;\\r\\n\\r\\n                } else if ( light.isHemisphereLight ) {\\r\\n\\r\\n                    var uniforms = cache.get( light );\\r\\n\\r\\n                    uniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n                    uniforms.direction.transformDirection( viewMatrix );\\r\\n                    uniforms.direction.normalize();\\r\\n\\r\\n                    uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\\r\\n                    uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\\r\\n\\r\\n                    state.hemi[ hemiLength ] = uniforms;\\r\\n\\r\\n                    hemiLength ++;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            state.ambient[ 0 ] = r;\\r\\n            state.ambient[ 1 ] = g;\\r\\n            state.ambient[ 2 ] = b;\\r\\n\\r\\n            state.directional.length = directionalLength;\\r\\n            state.spot.length = spotLength;\\r\\n            state.rectArea.length = rectAreaLength;\\r\\n            state.point.length = pointLength;\\r\\n            state.hemi.length = hemiLength;\\r\\n\\r\\n            state.hash.stateID = state.id;\\r\\n            state.hash.directionalLength = directionalLength;\\r\\n            state.hash.pointLength = pointLength;\\r\\n            state.hash.spotLength = spotLength;\\r\\n            state.hash.rectAreaLength = rectAreaLength;\\r\\n            state.hash.hemiLength = hemiLength;\\r\\n            state.hash.shadowsLength = shadows.length;\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            setup: setup,\\r\\n            state: state\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function WebGLRenderState() {\\r\\n\\r\\n        var lights = new WebGLLights();\\r\\n\\r\\n        var lightsArray = [];\\r\\n        var shadowsArray = [];\\r\\n\\r\\n        function init() {\\r\\n\\r\\n            lightsArray.length = 0;\\r\\n            shadowsArray.length = 0;\\r\\n\\r\\n        }\\r\\n\\r\\n        function pushLight( light ) {\\r\\n\\r\\n            lightsArray.push( light );\\r\\n\\r\\n        }\\r\\n\\r\\n        function pushShadow( shadowLight ) {\\r\\n\\r\\n            shadowsArray.push( shadowLight );\\r\\n\\r\\n        }\\r\\n\\r\\n        function setupLights( camera ) {\\r\\n\\r\\n            lights.setup( lightsArray, shadowsArray, camera );\\r\\n\\r\\n        }\\r\\n\\r\\n        var state = {\\r\\n            lightsArray: lightsArray,\\r\\n            shadowsArray: shadowsArray,\\r\\n\\r\\n            lights: lights\\r\\n        };\\r\\n\\r\\n        return {\\r\\n            init: init,\\r\\n            state: state,\\r\\n            setupLights: setupLights,\\r\\n\\r\\n            pushLight: pushLight,\\r\\n            pushShadow: pushShadow\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    function WebGLRenderStates() {\\r\\n\\r\\n        var renderStates = {};\\r\\n\\r\\n        function get( scene, camera ) {\\r\\n\\r\\n            var renderState;\\r\\n\\r\\n            if ( renderStates[ scene.id ] === undefined ) {\\r\\n\\r\\n                renderState = new WebGLRenderState();\\r\\n                renderStates[ scene.id ] = {};\\r\\n                renderStates[ scene.id ][ camera.id ] = renderState;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                if ( renderStates[ scene.id ][ camera.id ] === undefined ) {\\r\\n\\r\\n                    renderState = new WebGLRenderState();\\r\\n                    renderStates[ scene.id ][ camera.id ] = renderState;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    renderState = renderStates[ scene.id ][ camera.id ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return renderState;\\r\\n\\r\\n        }\\r\\n\\r\\n        function dispose() {\\r\\n\\r\\n            renderStates = {};\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n            get: get,\\r\\n            dispose: dispose\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author bhouston / https://clara.io\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshDepthMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshDepthMaterial';\\r\\n\\r\\n        this.depthPacking = BasicDepthPacking;\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n\\r\\n        this.fog = false;\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshDepthMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\\r\\n\\r\\n    MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\\r\\n\\r\\n    MeshDepthMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.depthPacking = source.depthPacking;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *\\r\\n\\t *  referencePosition: <float>,\\r\\n\\t *  nearDistance: <float>,\\r\\n\\t *  farDistance: <float>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>\\r\\n\\t *\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshDistanceMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshDistanceMaterial';\\r\\n\\r\\n        this.referencePosition = new Vector3();\\r\\n        this.nearDistance = 1;\\r\\n        this.farDistance = 1000;\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.fog = false;\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshDistanceMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\\r\\n\\r\\n    MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\\r\\n\\r\\n    MeshDistanceMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.referencePosition.copy( source.referencePosition );\\r\\n        this.nearDistance = source.nearDistance;\\r\\n        this.farDistance = source.farDistance;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\\r\\n\\r\\n        var _frustum = new Frustum(),\\r\\n            _projScreenMatrix = new Matrix4(),\\r\\n\\r\\n            _shadowMapSize = new Vector2(),\\r\\n            _maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\\r\\n\\r\\n            _lookTarget = new Vector3(),\\r\\n            _lightPositionWorld = new Vector3(),\\r\\n\\r\\n            _MorphingFlag = 1,\\r\\n            _SkinningFlag = 2,\\r\\n\\r\\n            _NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\\r\\n\\r\\n            _depthMaterials = new Array( _NumberOfMaterialVariants ),\\r\\n            _distanceMaterials = new Array( _NumberOfMaterialVariants ),\\r\\n\\r\\n            _materialCache = {};\\r\\n\\r\\n        var shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\\r\\n\\r\\n        var cubeDirections = [\\r\\n            new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\\r\\n            new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\\r\\n        ];\\r\\n\\r\\n        var cubeUps = [\\r\\n            new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\\r\\n            new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\\tnew Vector3( 0, 0, - 1 )\\r\\n        ];\\r\\n\\r\\n        var cube2DViewPorts = [\\r\\n            new Vector4(), new Vector4(), new Vector4(),\\r\\n            new Vector4(), new Vector4(), new Vector4()\\r\\n        ];\\r\\n\\r\\n        // init\\r\\n\\r\\n        for ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\\r\\n\\r\\n            var useMorphing = ( i & _MorphingFlag ) !== 0;\\r\\n            var useSkinning = ( i & _SkinningFlag ) !== 0;\\r\\n\\r\\n            var depthMaterial = new MeshDepthMaterial( {\\r\\n\\r\\n                depthPacking: RGBADepthPacking,\\r\\n\\r\\n                morphTargets: useMorphing,\\r\\n                skinning: useSkinning\\r\\n\\r\\n            } );\\r\\n\\r\\n            _depthMaterials[ i ] = depthMaterial;\\r\\n\\r\\n            //\\r\\n\\r\\n            var distanceMaterial = new MeshDistanceMaterial( {\\r\\n\\r\\n                morphTargets: useMorphing,\\r\\n                skinning: useSkinning\\r\\n\\r\\n            } );\\r\\n\\r\\n            _distanceMaterials[ i ] = distanceMaterial;\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        this.enabled = false;\\r\\n\\r\\n        this.autoUpdate = true;\\r\\n        this.needsUpdate = false;\\r\\n\\r\\n        this.type = PCFShadowMap;\\r\\n\\r\\n        this.render = function ( lights, scene, camera ) {\\r\\n\\r\\n            if ( scope.enabled === false ) return;\\r\\n            if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\\r\\n\\r\\n            if ( lights.length === 0 ) return;\\r\\n\\r\\n            // TODO Clean up (needed in case of contextlost)\\r\\n            var _gl = _renderer.context;\\r\\n            var _state = _renderer.state;\\r\\n\\r\\n            // Set GL state for depth map.\\r\\n            _state.disable( _gl.BLEND );\\r\\n            _state.buffers.color.setClear( 1, 1, 1, 1 );\\r\\n            _state.buffers.depth.setTest( true );\\r\\n            _state.setScissorTest( false );\\r\\n\\r\\n            // render depth map\\r\\n\\r\\n            var faceCount;\\r\\n\\r\\n            for ( var i = 0, il = lights.length; i < il; i ++ ) {\\r\\n\\r\\n                var light = lights[ i ];\\r\\n                var shadow = light.shadow;\\r\\n                var isPointLight = light && light.isPointLight;\\r\\n\\r\\n                if ( shadow === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\\r\\n                    continue;\\r\\n\\r\\n                }\\r\\n\\r\\n                var shadowCamera = shadow.camera;\\r\\n\\r\\n                _shadowMapSize.copy( shadow.mapSize );\\r\\n                _shadowMapSize.min( _maxShadowMapSize );\\r\\n\\r\\n                if ( isPointLight ) {\\r\\n\\r\\n                    var vpWidth = _shadowMapSize.x;\\r\\n                    var vpHeight = _shadowMapSize.y;\\r\\n\\r\\n                    // These viewports map a cube-map onto a 2D texture with the\\r\\n                    // following orientation:\\r\\n                    //\\r\\n                    //  xzXZ\\r\\n                    //   y Y\\r\\n                    //\\r\\n                    // X - Positive x direction\\r\\n                    // x - Negative x direction\\r\\n                    // Y - Positive y direction\\r\\n                    // y - Negative y direction\\r\\n                    // Z - Positive z direction\\r\\n                    // z - Negative z direction\\r\\n\\r\\n                    // positive X\\r\\n                    cube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\\r\\n                    // negative X\\r\\n                    cube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\\r\\n                    // positive Z\\r\\n                    cube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\\r\\n                    // negative Z\\r\\n                    cube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\\r\\n                    // positive Y\\r\\n                    cube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\\r\\n                    // negative Y\\r\\n                    cube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\\r\\n\\r\\n                    _shadowMapSize.x *= 4.0;\\r\\n                    _shadowMapSize.y *= 2.0;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( shadow.map === null ) {\\r\\n\\r\\n                    var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\\r\\n\\r\\n                    shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\\r\\n                    shadow.map.texture.name = light.name + \\\".shadowMap\\\";\\r\\n\\r\\n                    shadowCamera.updateProjectionMatrix();\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( shadow.isSpotLightShadow ) {\\r\\n\\r\\n                    shadow.update( light );\\r\\n\\r\\n                }\\r\\n\\r\\n                var shadowMap = shadow.map;\\r\\n                var shadowMatrix = shadow.matrix;\\r\\n\\r\\n                _lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\\r\\n                shadowCamera.position.copy( _lightPositionWorld );\\r\\n\\r\\n                if ( isPointLight ) {\\r\\n\\r\\n                    faceCount = 6;\\r\\n\\r\\n                    // for point lights we set the shadow matrix to be a translation-only matrix\\r\\n                    // equal to inverse of the light's position\\r\\n\\r\\n                    shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    faceCount = 1;\\r\\n\\r\\n                    _lookTarget.setFromMatrixPosition( light.target.matrixWorld );\\r\\n                    shadowCamera.lookAt( _lookTarget );\\r\\n                    shadowCamera.updateMatrixWorld();\\r\\n\\r\\n                    // compute shadow matrix\\r\\n\\r\\n                    shadowMatrix.set(\\r\\n                        0.5, 0.0, 0.0, 0.5,\\r\\n                        0.0, 0.5, 0.0, 0.5,\\r\\n                        0.0, 0.0, 0.5, 0.5,\\r\\n                        0.0, 0.0, 0.0, 1.0\\r\\n                    );\\r\\n\\r\\n                    shadowMatrix.multiply( shadowCamera.projectionMatrix );\\r\\n                    shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\\r\\n\\r\\n                }\\r\\n\\r\\n                _renderer.setRenderTarget( shadowMap );\\r\\n                _renderer.clear();\\r\\n\\r\\n                // render shadow map for each cube face (if omni-directional) or\\r\\n                // run a single pass if not\\r\\n\\r\\n                for ( var face = 0; face < faceCount; face ++ ) {\\r\\n\\r\\n                    if ( isPointLight ) {\\r\\n\\r\\n                        _lookTarget.copy( shadowCamera.position );\\r\\n                        _lookTarget.add( cubeDirections[ face ] );\\r\\n                        shadowCamera.up.copy( cubeUps[ face ] );\\r\\n                        shadowCamera.lookAt( _lookTarget );\\r\\n                        shadowCamera.updateMatrixWorld();\\r\\n\\r\\n                        var vpDimensions = cube2DViewPorts[ face ];\\r\\n                        _state.viewport( vpDimensions );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    // update camera matrices and frustum\\r\\n\\r\\n                    _projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\\r\\n                    _frustum.setFromMatrix( _projScreenMatrix );\\r\\n\\r\\n                    // set object matrices & frustum culling\\r\\n\\r\\n                    renderObject( scene, camera, shadowCamera, isPointLight );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            scope.needsUpdate = false;\\r\\n\\r\\n        };\\r\\n\\r\\n        function getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\\r\\n\\r\\n            var geometry = object.geometry;\\r\\n\\r\\n            var result = null;\\r\\n\\r\\n            var materialVariants = _depthMaterials;\\r\\n            var customMaterial = object.customDepthMaterial;\\r\\n\\r\\n            if ( isPointLight ) {\\r\\n\\r\\n                materialVariants = _distanceMaterials;\\r\\n                customMaterial = object.customDistanceMaterial;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ! customMaterial ) {\\r\\n\\r\\n                var useMorphing = false;\\r\\n\\r\\n                if ( material.morphTargets ) {\\r\\n\\r\\n                    if ( geometry && geometry.isBufferGeometry ) {\\r\\n\\r\\n                        useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\\r\\n\\r\\n                    } else if ( geometry && geometry.isGeometry ) {\\r\\n\\r\\n                        useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( object.isSkinnedMesh && material.skinning === false ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\\r\\n\\r\\n                }\\r\\n\\r\\n                var useSkinning = object.isSkinnedMesh && material.skinning;\\r\\n\\r\\n                var variantIndex = 0;\\r\\n\\r\\n                if ( useMorphing ) variantIndex |= _MorphingFlag;\\r\\n                if ( useSkinning ) variantIndex |= _SkinningFlag;\\r\\n\\r\\n                result = materialVariants[ variantIndex ];\\r\\n\\r\\n            } else {\\r\\n\\r\\n                result = customMaterial;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( _renderer.localClippingEnabled &&\\r\\n                material.clipShadows === true &&\\r\\n                material.clippingPlanes.length !== 0 ) {\\r\\n\\r\\n                // in this case we need a unique material instance reflecting the\\r\\n                // appropriate state\\r\\n\\r\\n                var keyA = result.uuid, keyB = material.uuid;\\r\\n\\r\\n                var materialsForVariant = _materialCache[ keyA ];\\r\\n\\r\\n                if ( materialsForVariant === undefined ) {\\r\\n\\r\\n                    materialsForVariant = {};\\r\\n                    _materialCache[ keyA ] = materialsForVariant;\\r\\n\\r\\n                }\\r\\n\\r\\n                var cachedMaterial = materialsForVariant[ keyB ];\\r\\n\\r\\n                if ( cachedMaterial === undefined ) {\\r\\n\\r\\n                    cachedMaterial = result.clone();\\r\\n                    materialsForVariant[ keyB ] = cachedMaterial;\\r\\n\\r\\n                }\\r\\n\\r\\n                result = cachedMaterial;\\r\\n\\r\\n            }\\r\\n\\r\\n            result.visible = material.visible;\\r\\n            result.wireframe = material.wireframe;\\r\\n\\r\\n            result.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\\r\\n\\r\\n            result.clipShadows = material.clipShadows;\\r\\n            result.clippingPlanes = material.clippingPlanes;\\r\\n            result.clipIntersection = material.clipIntersection;\\r\\n\\r\\n            result.wireframeLinewidth = material.wireframeLinewidth;\\r\\n            result.linewidth = material.linewidth;\\r\\n\\r\\n            if ( isPointLight && result.isMeshDistanceMaterial ) {\\r\\n\\r\\n                result.referencePosition.copy( lightPositionWorld );\\r\\n                result.nearDistance = shadowCameraNear;\\r\\n                result.farDistance = shadowCameraFar;\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        }\\r\\n\\r\\n        function renderObject( object, camera, shadowCamera, isPointLight ) {\\r\\n\\r\\n            if ( object.visible === false ) return;\\r\\n\\r\\n            var visible = object.layers.test( camera.layers );\\r\\n\\r\\n            if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\\r\\n\\r\\n                if ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\\r\\n\\r\\n                    object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\\r\\n\\r\\n                    var geometry = _objects.update( object );\\r\\n                    var material = object.material;\\r\\n\\r\\n                    if ( Array.isArray( material ) ) {\\r\\n\\r\\n                        var groups = geometry.groups;\\r\\n\\r\\n                        for ( var k = 0, kl = groups.length; k < kl; k ++ ) {\\r\\n\\r\\n                            var group = groups[ k ];\\r\\n                            var groupMaterial = material[ group.materialIndex ];\\r\\n\\r\\n                            if ( groupMaterial && groupMaterial.visible ) {\\r\\n\\r\\n                                var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\\r\\n                                _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else if ( material.visible ) {\\r\\n\\r\\n                        var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\\r\\n                        _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var children = object.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                renderObject( children[ i ], camera, shadowCamera, isPointLight );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLState( gl, extensions, utils, capabilities ) {\\r\\n\\r\\n        function ColorBuffer() {\\r\\n\\r\\n            var locked = false;\\r\\n\\r\\n            var color = new Vector4();\\r\\n            var currentColorMask = null;\\r\\n            var currentColorClear = new Vector4( 0, 0, 0, 0 );\\r\\n\\r\\n            return {\\r\\n\\r\\n                setMask: function ( colorMask ) {\\r\\n\\r\\n                    if ( currentColorMask !== colorMask && ! locked ) {\\r\\n\\r\\n                        gl.colorMask( colorMask, colorMask, colorMask, colorMask );\\r\\n                        currentColorMask = colorMask;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setLocked: function ( lock ) {\\r\\n\\r\\n                    locked = lock;\\r\\n\\r\\n                },\\r\\n\\r\\n                setClear: function ( r, g, b, a, premultipliedAlpha ) {\\r\\n\\r\\n                    if ( premultipliedAlpha === true ) {\\r\\n\\r\\n                        r *= a; g *= a; b *= a;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    color.set( r, g, b, a );\\r\\n\\r\\n                    if ( currentColorClear.equals( color ) === false ) {\\r\\n\\r\\n                        gl.clearColor( r, g, b, a );\\r\\n                        currentColorClear.copy( color );\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                reset: function () {\\r\\n\\r\\n                    locked = false;\\r\\n\\r\\n                    currentColorMask = null;\\r\\n                    currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }\\r\\n\\r\\n        function DepthBuffer() {\\r\\n\\r\\n            var locked = false;\\r\\n\\r\\n            var currentDepthMask = null;\\r\\n            var currentDepthFunc = null;\\r\\n            var currentDepthClear = null;\\r\\n\\r\\n            return {\\r\\n\\r\\n                setTest: function ( depthTest ) {\\r\\n\\r\\n                    if ( depthTest ) {\\r\\n\\r\\n                        enable( gl.DEPTH_TEST );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        disable( gl.DEPTH_TEST );\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setMask: function ( depthMask ) {\\r\\n\\r\\n                    if ( currentDepthMask !== depthMask && ! locked ) {\\r\\n\\r\\n                        gl.depthMask( depthMask );\\r\\n                        currentDepthMask = depthMask;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setFunc: function ( depthFunc ) {\\r\\n\\r\\n                    if ( currentDepthFunc !== depthFunc ) {\\r\\n\\r\\n                        if ( depthFunc ) {\\r\\n\\r\\n                            switch ( depthFunc ) {\\r\\n\\r\\n                                case NeverDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.NEVER );\\r\\n                                    break;\\r\\n\\r\\n                                case AlwaysDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.ALWAYS );\\r\\n                                    break;\\r\\n\\r\\n                                case LessDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.LESS );\\r\\n                                    break;\\r\\n\\r\\n                                case LessEqualDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.LEQUAL );\\r\\n                                    break;\\r\\n\\r\\n                                case EqualDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.EQUAL );\\r\\n                                    break;\\r\\n\\r\\n                                case GreaterEqualDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.GEQUAL );\\r\\n                                    break;\\r\\n\\r\\n                                case GreaterDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.GREATER );\\r\\n                                    break;\\r\\n\\r\\n                                case NotEqualDepth:\\r\\n\\r\\n                                    gl.depthFunc( gl.NOTEQUAL );\\r\\n                                    break;\\r\\n\\r\\n                                default:\\r\\n\\r\\n                                    gl.depthFunc( gl.LEQUAL );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            gl.depthFunc( gl.LEQUAL );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        currentDepthFunc = depthFunc;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setLocked: function ( lock ) {\\r\\n\\r\\n                    locked = lock;\\r\\n\\r\\n                },\\r\\n\\r\\n                setClear: function ( depth ) {\\r\\n\\r\\n                    if ( currentDepthClear !== depth ) {\\r\\n\\r\\n                        gl.clearDepth( depth );\\r\\n                        currentDepthClear = depth;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                reset: function () {\\r\\n\\r\\n                    locked = false;\\r\\n\\r\\n                    currentDepthMask = null;\\r\\n                    currentDepthFunc = null;\\r\\n                    currentDepthClear = null;\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }\\r\\n\\r\\n        function StencilBuffer() {\\r\\n\\r\\n            var locked = false;\\r\\n\\r\\n            var currentStencilMask = null;\\r\\n            var currentStencilFunc = null;\\r\\n            var currentStencilRef = null;\\r\\n            var currentStencilFuncMask = null;\\r\\n            var currentStencilFail = null;\\r\\n            var currentStencilZFail = null;\\r\\n            var currentStencilZPass = null;\\r\\n            var currentStencilClear = null;\\r\\n\\r\\n            return {\\r\\n\\r\\n                setTest: function ( stencilTest ) {\\r\\n\\r\\n                    if ( stencilTest ) {\\r\\n\\r\\n                        enable( gl.STENCIL_TEST );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        disable( gl.STENCIL_TEST );\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setMask: function ( stencilMask ) {\\r\\n\\r\\n                    if ( currentStencilMask !== stencilMask && ! locked ) {\\r\\n\\r\\n                        gl.stencilMask( stencilMask );\\r\\n                        currentStencilMask = stencilMask;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setFunc: function ( stencilFunc, stencilRef, stencilMask ) {\\r\\n\\r\\n                    if ( currentStencilFunc !== stencilFunc ||\\r\\n                        currentStencilRef \\t!== stencilRef \\t||\\r\\n                        currentStencilFuncMask !== stencilMask ) {\\r\\n\\r\\n                        gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\\r\\n\\r\\n                        currentStencilFunc = stencilFunc;\\r\\n                        currentStencilRef = stencilRef;\\r\\n                        currentStencilFuncMask = stencilMask;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setOp: function ( stencilFail, stencilZFail, stencilZPass ) {\\r\\n\\r\\n                    if ( currentStencilFail\\t !== stencilFail \\t||\\r\\n                        currentStencilZFail !== stencilZFail ||\\r\\n                        currentStencilZPass !== stencilZPass ) {\\r\\n\\r\\n                        gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\\r\\n\\r\\n                        currentStencilFail = stencilFail;\\r\\n                        currentStencilZFail = stencilZFail;\\r\\n                        currentStencilZPass = stencilZPass;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                setLocked: function ( lock ) {\\r\\n\\r\\n                    locked = lock;\\r\\n\\r\\n                },\\r\\n\\r\\n                setClear: function ( stencil ) {\\r\\n\\r\\n                    if ( currentStencilClear !== stencil ) {\\r\\n\\r\\n                        gl.clearStencil( stencil );\\r\\n                        currentStencilClear = stencil;\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                reset: function () {\\r\\n\\r\\n                    locked = false;\\r\\n\\r\\n                    currentStencilMask = null;\\r\\n                    currentStencilFunc = null;\\r\\n                    currentStencilRef = null;\\r\\n                    currentStencilFuncMask = null;\\r\\n                    currentStencilFail = null;\\r\\n                    currentStencilZFail = null;\\r\\n                    currentStencilZPass = null;\\r\\n                    currentStencilClear = null;\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var colorBuffer = new ColorBuffer();\\r\\n        var depthBuffer = new DepthBuffer();\\r\\n        var stencilBuffer = new StencilBuffer();\\r\\n\\r\\n        var maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\r\\n        var newAttributes = new Uint8Array( maxVertexAttributes );\\r\\n        var enabledAttributes = new Uint8Array( maxVertexAttributes );\\r\\n        var attributeDivisors = new Uint8Array( maxVertexAttributes );\\r\\n\\r\\n        var enabledCapabilities = {};\\r\\n\\r\\n        var compressedTextureFormats = null;\\r\\n\\r\\n        var currentProgram = null;\\r\\n\\r\\n        var currentBlendingEnabled = null;\\r\\n        var currentBlending = null;\\r\\n        var currentBlendEquation = null;\\r\\n        var currentBlendSrc = null;\\r\\n        var currentBlendDst = null;\\r\\n        var currentBlendEquationAlpha = null;\\r\\n        var currentBlendSrcAlpha = null;\\r\\n        var currentBlendDstAlpha = null;\\r\\n        var currentPremultipledAlpha = false;\\r\\n\\r\\n        var currentFlipSided = null;\\r\\n        var currentCullFace = null;\\r\\n\\r\\n        var currentLineWidth = null;\\r\\n\\r\\n        var currentPolygonOffsetFactor = null;\\r\\n        var currentPolygonOffsetUnits = null;\\r\\n\\r\\n        var maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\\r\\n\\r\\n        var lineWidthAvailable = false;\\r\\n        var version = 0;\\r\\n        var glVersion = gl.getParameter( gl.VERSION );\\r\\n\\r\\n        if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\\r\\n\\r\\n            version = parseFloat( /^WebGL\\\\ ([0-9])/.exec( glVersion )[ 1 ] );\\r\\n            lineWidthAvailable = ( version >= 1.0 );\\r\\n\\r\\n        } else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\\r\\n\\r\\n            version = parseFloat( /^OpenGL\\\\ ES\\\\ ([0-9])/.exec( glVersion )[ 1 ] );\\r\\n            lineWidthAvailable = ( version >= 2.0 );\\r\\n\\r\\n        }\\r\\n\\r\\n        var currentTextureSlot = null;\\r\\n        var currentBoundTextures = {};\\r\\n\\r\\n        var currentScissor = new Vector4();\\r\\n        var currentViewport = new Vector4();\\r\\n\\r\\n        function createTexture( type, target, count ) {\\r\\n\\r\\n            var data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\\r\\n            var texture = gl.createTexture();\\r\\n\\r\\n            gl.bindTexture( type, texture );\\r\\n            gl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\r\\n            gl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\r\\n\\r\\n            for ( var i = 0; i < count; i ++ ) {\\r\\n\\r\\n                gl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\\r\\n\\r\\n            }\\r\\n\\r\\n            return texture;\\r\\n\\r\\n        }\\r\\n\\r\\n        var emptyTextures = {};\\r\\n        emptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\\r\\n        emptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\\r\\n\\r\\n        // init\\r\\n\\r\\n        colorBuffer.setClear( 0, 0, 0, 1 );\\r\\n        depthBuffer.setClear( 1 );\\r\\n        stencilBuffer.setClear( 0 );\\r\\n\\r\\n        enable( gl.DEPTH_TEST );\\r\\n        depthBuffer.setFunc( LessEqualDepth );\\r\\n\\r\\n        setFlipSided( false );\\r\\n        setCullFace( CullFaceBack );\\r\\n        enable( gl.CULL_FACE );\\r\\n\\r\\n        setBlending( NoBlending );\\r\\n\\r\\n        //\\r\\n\\r\\n        function initAttributes() {\\r\\n\\r\\n            for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\\r\\n\\r\\n                newAttributes[ i ] = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function enableAttribute( attribute ) {\\r\\n\\r\\n            enableAttributeAndDivisor( attribute, 0 );\\r\\n\\r\\n        }\\r\\n\\r\\n        function enableAttributeAndDivisor( attribute, meshPerAttribute ) {\\r\\n\\r\\n            newAttributes[ attribute ] = 1;\\r\\n\\r\\n            if ( enabledAttributes[ attribute ] === 0 ) {\\r\\n\\r\\n                gl.enableVertexAttribArray( attribute );\\r\\n                enabledAttributes[ attribute ] = 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\\r\\n\\r\\n                var extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n                extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\\r\\n                attributeDivisors[ attribute ] = meshPerAttribute;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function disableUnusedAttributes() {\\r\\n\\r\\n            for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\\r\\n\\r\\n                if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\\r\\n\\r\\n                    gl.disableVertexAttribArray( i );\\r\\n                    enabledAttributes[ i ] = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function enable( id ) {\\r\\n\\r\\n            if ( enabledCapabilities[ id ] !== true ) {\\r\\n\\r\\n                gl.enable( id );\\r\\n                enabledCapabilities[ id ] = true;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function disable( id ) {\\r\\n\\r\\n            if ( enabledCapabilities[ id ] !== false ) {\\r\\n\\r\\n                gl.disable( id );\\r\\n                enabledCapabilities[ id ] = false;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function getCompressedTextureFormats() {\\r\\n\\r\\n            if ( compressedTextureFormats === null ) {\\r\\n\\r\\n                compressedTextureFormats = [];\\r\\n\\r\\n                if ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\\r\\n                    extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\\r\\n                    extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\\r\\n                    extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\\r\\n\\r\\n                    var formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\\r\\n\\r\\n                    for ( var i = 0; i < formats.length; i ++ ) {\\r\\n\\r\\n                        compressedTextureFormats.push( formats[ i ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return compressedTextureFormats;\\r\\n\\r\\n        }\\r\\n\\r\\n        function useProgram( program ) {\\r\\n\\r\\n            if ( currentProgram !== program ) {\\r\\n\\r\\n                gl.useProgram( program );\\r\\n\\r\\n                currentProgram = program;\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            return false;\\r\\n\\r\\n        }\\r\\n\\r\\n        function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\\r\\n\\r\\n            if ( blending === NoBlending ) {\\r\\n\\r\\n                if ( currentBlendingEnabled ) {\\r\\n\\r\\n                    disable( gl.BLEND );\\r\\n                    currentBlendingEnabled = false;\\r\\n\\r\\n                }\\r\\n\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ! currentBlendingEnabled ) {\\r\\n\\r\\n                enable( gl.BLEND );\\r\\n                currentBlendingEnabled = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( blending !== CustomBlending ) {\\r\\n\\r\\n                if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\\r\\n\\r\\n                    if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\\r\\n\\r\\n                        gl.blendEquation( gl.FUNC_ADD );\\r\\n\\r\\n                        currentBlendEquation = AddEquation;\\r\\n                        currentBlendEquationAlpha = AddEquation;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( premultipliedAlpha ) {\\r\\n\\r\\n                        switch ( blending ) {\\r\\n\\r\\n                            case NormalBlending:\\r\\n                                gl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\r\\n                                break;\\r\\n\\r\\n                            case AdditiveBlending:\\r\\n                                gl.blendFunc( gl.ONE, gl.ONE );\\r\\n                                break;\\r\\n\\r\\n                            case SubtractiveBlending:\\r\\n                                gl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\\r\\n                                break;\\r\\n\\r\\n                            case MultiplyBlending:\\r\\n                                gl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\\r\\n                                break;\\r\\n\\r\\n                            default:\\r\\n                                console.error( 'THREE.WebGLState: Invalid blending: ', blending );\\r\\n                                break;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        switch ( blending ) {\\r\\n\\r\\n                            case NormalBlending:\\r\\n                                gl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\r\\n                                break;\\r\\n\\r\\n                            case AdditiveBlending:\\r\\n                                gl.blendFunc( gl.SRC_ALPHA, gl.ONE );\\r\\n                                break;\\r\\n\\r\\n                            case SubtractiveBlending:\\r\\n                                gl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\\r\\n                                break;\\r\\n\\r\\n                            case MultiplyBlending:\\r\\n                                gl.blendFunc( gl.ZERO, gl.SRC_COLOR );\\r\\n                                break;\\r\\n\\r\\n                            default:\\r\\n                                console.error( 'THREE.WebGLState: Invalid blending: ', blending );\\r\\n                                break;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    currentBlendSrc = null;\\r\\n                    currentBlendDst = null;\\r\\n                    currentBlendSrcAlpha = null;\\r\\n                    currentBlendDstAlpha = null;\\r\\n\\r\\n                    currentBlending = blending;\\r\\n                    currentPremultipledAlpha = premultipliedAlpha;\\r\\n\\r\\n                }\\r\\n\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            // custom blending\\r\\n\\r\\n            blendEquationAlpha = blendEquationAlpha || blendEquation;\\r\\n            blendSrcAlpha = blendSrcAlpha || blendSrc;\\r\\n            blendDstAlpha = blendDstAlpha || blendDst;\\r\\n\\r\\n            if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\\r\\n\\r\\n                gl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\\r\\n\\r\\n                currentBlendEquation = blendEquation;\\r\\n                currentBlendEquationAlpha = blendEquationAlpha;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\\r\\n\\r\\n                gl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\\r\\n\\r\\n                currentBlendSrc = blendSrc;\\r\\n                currentBlendDst = blendDst;\\r\\n                currentBlendSrcAlpha = blendSrcAlpha;\\r\\n                currentBlendDstAlpha = blendDstAlpha;\\r\\n\\r\\n            }\\r\\n\\r\\n            currentBlending = blending;\\r\\n            currentPremultipledAlpha = null;\\r\\n\\r\\n        }\\r\\n\\r\\n        function setMaterial( material, frontFaceCW ) {\\r\\n\\r\\n            material.side === DoubleSide\\r\\n                ? disable( gl.CULL_FACE )\\r\\n                : enable( gl.CULL_FACE );\\r\\n\\r\\n            var flipSided = ( material.side === BackSide );\\r\\n            if ( frontFaceCW ) flipSided = ! flipSided;\\r\\n\\r\\n            setFlipSided( flipSided );\\r\\n\\r\\n            ( material.blending === NormalBlending && material.transparent === false )\\r\\n                ? setBlending( NoBlending )\\r\\n                : setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\\r\\n\\r\\n            depthBuffer.setFunc( material.depthFunc );\\r\\n            depthBuffer.setTest( material.depthTest );\\r\\n            depthBuffer.setMask( material.depthWrite );\\r\\n            colorBuffer.setMask( material.colorWrite );\\r\\n\\r\\n            setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function setFlipSided( flipSided ) {\\r\\n\\r\\n            if ( currentFlipSided !== flipSided ) {\\r\\n\\r\\n                if ( flipSided ) {\\r\\n\\r\\n                    gl.frontFace( gl.CW );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    gl.frontFace( gl.CCW );\\r\\n\\r\\n                }\\r\\n\\r\\n                currentFlipSided = flipSided;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function setCullFace( cullFace ) {\\r\\n\\r\\n            if ( cullFace !== CullFaceNone ) {\\r\\n\\r\\n                enable( gl.CULL_FACE );\\r\\n\\r\\n                if ( cullFace !== currentCullFace ) {\\r\\n\\r\\n                    if ( cullFace === CullFaceBack ) {\\r\\n\\r\\n                        gl.cullFace( gl.BACK );\\r\\n\\r\\n                    } else if ( cullFace === CullFaceFront ) {\\r\\n\\r\\n                        gl.cullFace( gl.FRONT );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        gl.cullFace( gl.FRONT_AND_BACK );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                disable( gl.CULL_FACE );\\r\\n\\r\\n            }\\r\\n\\r\\n            currentCullFace = cullFace;\\r\\n\\r\\n        }\\r\\n\\r\\n        function setLineWidth( width ) {\\r\\n\\r\\n            if ( width !== currentLineWidth ) {\\r\\n\\r\\n                if ( lineWidthAvailable ) gl.lineWidth( width );\\r\\n\\r\\n                currentLineWidth = width;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function setPolygonOffset( polygonOffset, factor, units ) {\\r\\n\\r\\n            if ( polygonOffset ) {\\r\\n\\r\\n                enable( gl.POLYGON_OFFSET_FILL );\\r\\n\\r\\n                if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\\r\\n\\r\\n                    gl.polygonOffset( factor, units );\\r\\n\\r\\n                    currentPolygonOffsetFactor = factor;\\r\\n                    currentPolygonOffsetUnits = units;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                disable( gl.POLYGON_OFFSET_FILL );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function setScissorTest( scissorTest ) {\\r\\n\\r\\n            if ( scissorTest ) {\\r\\n\\r\\n                enable( gl.SCISSOR_TEST );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                disable( gl.SCISSOR_TEST );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // texture\\r\\n\\r\\n        function activeTexture( webglSlot ) {\\r\\n\\r\\n            if ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\\r\\n\\r\\n            if ( currentTextureSlot !== webglSlot ) {\\r\\n\\r\\n                gl.activeTexture( webglSlot );\\r\\n                currentTextureSlot = webglSlot;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function bindTexture( webglType, webglTexture ) {\\r\\n\\r\\n            if ( currentTextureSlot === null ) {\\r\\n\\r\\n                activeTexture();\\r\\n\\r\\n            }\\r\\n\\r\\n            var boundTexture = currentBoundTextures[ currentTextureSlot ];\\r\\n\\r\\n            if ( boundTexture === undefined ) {\\r\\n\\r\\n                boundTexture = { type: undefined, texture: undefined };\\r\\n                currentBoundTextures[ currentTextureSlot ] = boundTexture;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\\r\\n\\r\\n                gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\\r\\n\\r\\n                boundTexture.type = webglType;\\r\\n                boundTexture.texture = webglTexture;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function compressedTexImage2D() {\\r\\n\\r\\n            try {\\r\\n\\r\\n                gl.compressedTexImage2D.apply( gl, arguments );\\r\\n\\r\\n            } catch ( error ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLState:', error );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function texImage2D() {\\r\\n\\r\\n            try {\\r\\n\\r\\n                gl.texImage2D.apply( gl, arguments );\\r\\n\\r\\n            } catch ( error ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLState:', error );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function texImage3D() {\\r\\n\\r\\n            try {\\r\\n\\r\\n                gl.texImage3D.apply( gl, arguments );\\r\\n\\r\\n            } catch ( error ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLState:', error );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function scissor( scissor ) {\\r\\n\\r\\n            if ( currentScissor.equals( scissor ) === false ) {\\r\\n\\r\\n                gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\\r\\n                currentScissor.copy( scissor );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function viewport( viewport ) {\\r\\n\\r\\n            if ( currentViewport.equals( viewport ) === false ) {\\r\\n\\r\\n                gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\\r\\n                currentViewport.copy( viewport );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function reset() {\\r\\n\\r\\n            for ( var i = 0; i < enabledAttributes.length; i ++ ) {\\r\\n\\r\\n                if ( enabledAttributes[ i ] === 1 ) {\\r\\n\\r\\n                    gl.disableVertexAttribArray( i );\\r\\n                    enabledAttributes[ i ] = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            enabledCapabilities = {};\\r\\n\\r\\n            compressedTextureFormats = null;\\r\\n\\r\\n            currentTextureSlot = null;\\r\\n            currentBoundTextures = {};\\r\\n\\r\\n            currentProgram = null;\\r\\n\\r\\n            currentBlending = null;\\r\\n\\r\\n            currentFlipSided = null;\\r\\n            currentCullFace = null;\\r\\n\\r\\n            colorBuffer.reset();\\r\\n            depthBuffer.reset();\\r\\n            stencilBuffer.reset();\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            buffers: {\\r\\n                color: colorBuffer,\\r\\n                depth: depthBuffer,\\r\\n                stencil: stencilBuffer\\r\\n            },\\r\\n\\r\\n            initAttributes: initAttributes,\\r\\n            enableAttribute: enableAttribute,\\r\\n            enableAttributeAndDivisor: enableAttributeAndDivisor,\\r\\n            disableUnusedAttributes: disableUnusedAttributes,\\r\\n            enable: enable,\\r\\n            disable: disable,\\r\\n            getCompressedTextureFormats: getCompressedTextureFormats,\\r\\n\\r\\n            useProgram: useProgram,\\r\\n\\r\\n            setBlending: setBlending,\\r\\n            setMaterial: setMaterial,\\r\\n\\r\\n            setFlipSided: setFlipSided,\\r\\n            setCullFace: setCullFace,\\r\\n\\r\\n            setLineWidth: setLineWidth,\\r\\n            setPolygonOffset: setPolygonOffset,\\r\\n\\r\\n            setScissorTest: setScissorTest,\\r\\n\\r\\n            activeTexture: activeTexture,\\r\\n            bindTexture: bindTexture,\\r\\n            compressedTexImage2D: compressedTexImage2D,\\r\\n            texImage2D: texImage2D,\\r\\n            texImage3D: texImage3D,\\r\\n\\r\\n            scissor: scissor,\\r\\n            viewport: viewport,\\r\\n\\r\\n            reset: reset\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\\r\\n\\r\\n        var _videoTextures = {};\\r\\n        var _canvas;\\r\\n\\r\\n        //\\r\\n\\r\\n        function clampToMaxSize( image, maxSize ) {\\r\\n\\r\\n            if ( image.width > maxSize || image.height > maxSize ) {\\r\\n\\r\\n                if ( 'data' in image ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n                // Warning: Scaling through the canvas will only work with images that use\\r\\n                // premultiplied alpha.\\r\\n\\r\\n                var scale = maxSize / Math.max( image.width, image.height );\\r\\n\\r\\n                var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n                canvas.width = Math.floor( image.width * scale );\\r\\n                canvas.height = Math.floor( image.height * scale );\\r\\n\\r\\n                var context = canvas.getContext( '2d' );\\r\\n                context.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\\r\\n\\r\\n                return canvas;\\r\\n\\r\\n            }\\r\\n\\r\\n            return image;\\r\\n\\r\\n        }\\r\\n\\r\\n        function isPowerOfTwo( image ) {\\r\\n\\r\\n            return _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\\r\\n\\r\\n        }\\r\\n\\r\\n        function makePowerOfTwo( image ) {\\r\\n\\r\\n            if ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\\r\\n\\r\\n                if ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\r\\n                _canvas.width = _Math.floorPowerOfTwo( image.width );\\r\\n                _canvas.height = _Math.floorPowerOfTwo( image.height );\\r\\n\\r\\n                var context = _canvas.getContext( '2d' );\\r\\n                context.drawImage( image, 0, 0, _canvas.width, _canvas.height );\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\\r\\n\\r\\n                return _canvas;\\r\\n\\r\\n            }\\r\\n\\r\\n            return image;\\r\\n\\r\\n        }\\r\\n\\r\\n        function textureNeedsPowerOfTwo( texture ) {\\r\\n\\r\\n            if ( capabilities.isWebGL2 ) return false;\\r\\n\\r\\n            return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\\r\\n                ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\\r\\n\\r\\n        }\\r\\n\\r\\n        function textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\\r\\n\\r\\n            return texture.generateMipmaps && isPowerOfTwo &&\\r\\n                texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateMipmap( target, texture, width, height ) {\\r\\n\\r\\n            _gl.generateMipmap( target );\\r\\n\\r\\n            var textureProperties = properties.get( texture );\\r\\n\\r\\n            // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\\r\\n            textureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\\r\\n\\r\\n        }\\r\\n\\r\\n        function getInternalFormat( glFormat, glType ) {\\r\\n\\r\\n            if ( ! capabilities.isWebGL2 ) return glFormat;\\r\\n\\r\\n            if ( glFormat === _gl.RED ) {\\r\\n\\r\\n                if ( glType === _gl.FLOAT ) return _gl.R32F;\\r\\n                if ( glType === _gl.HALF_FLOAT ) return _gl.R16F;\\r\\n                if ( glType === _gl.UNSIGNED_BYTE ) return _gl.R8;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( glFormat === _gl.RGB ) {\\r\\n\\r\\n                if ( glType === _gl.FLOAT ) return _gl.RGB32F;\\r\\n                if ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\\r\\n                if ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( glFormat === _gl.RGBA ) {\\r\\n\\r\\n                if ( glType === _gl.FLOAT ) return _gl.RGBA32F;\\r\\n                if ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\\r\\n                if ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\\r\\n\\r\\n            }\\r\\n\\r\\n            return glFormat;\\r\\n\\r\\n        }\\r\\n\\r\\n        // Fallback filters for non-power-of-2 textures\\r\\n\\r\\n        function filterFallback( f ) {\\r\\n\\r\\n            if ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\\r\\n\\r\\n                return _gl.NEAREST;\\r\\n\\r\\n            }\\r\\n\\r\\n            return _gl.LINEAR;\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function onTextureDispose( event ) {\\r\\n\\r\\n            var texture = event.target;\\r\\n\\r\\n            texture.removeEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n            deallocateTexture( texture );\\r\\n\\r\\n            if ( texture.isVideoTexture ) {\\r\\n\\r\\n                delete _videoTextures[ texture.id ];\\r\\n\\r\\n            }\\r\\n\\r\\n            info.memory.textures --;\\r\\n\\r\\n        }\\r\\n\\r\\n        function onRenderTargetDispose( event ) {\\r\\n\\r\\n            var renderTarget = event.target;\\r\\n\\r\\n            renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\\r\\n\\r\\n            deallocateRenderTarget( renderTarget );\\r\\n\\r\\n            info.memory.textures --;\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        function deallocateTexture( texture ) {\\r\\n\\r\\n            var textureProperties = properties.get( texture );\\r\\n\\r\\n            if ( texture.image && textureProperties.__image__webglTextureCube ) {\\r\\n\\r\\n                // cube texture\\r\\n\\r\\n                _gl.deleteTexture( textureProperties.__image__webglTextureCube );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // 2D texture\\r\\n\\r\\n                if ( textureProperties.__webglInit === undefined ) return;\\r\\n\\r\\n                _gl.deleteTexture( textureProperties.__webglTexture );\\r\\n\\r\\n            }\\r\\n\\r\\n            // remove all webgl properties\\r\\n            properties.remove( texture );\\r\\n\\r\\n        }\\r\\n\\r\\n        function deallocateRenderTarget( renderTarget ) {\\r\\n\\r\\n            var renderTargetProperties = properties.get( renderTarget );\\r\\n            var textureProperties = properties.get( renderTarget.texture );\\r\\n\\r\\n            if ( ! renderTarget ) return;\\r\\n\\r\\n            if ( textureProperties.__webglTexture !== undefined ) {\\r\\n\\r\\n                _gl.deleteTexture( textureProperties.__webglTexture );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( renderTarget.depthTexture ) {\\r\\n\\r\\n                renderTarget.depthTexture.dispose();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( renderTarget.isWebGLRenderTargetCube ) {\\r\\n\\r\\n                for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                    _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\\r\\n                    if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\\r\\n                if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\\r\\n\\r\\n            }\\r\\n\\r\\n            properties.remove( renderTarget.texture );\\r\\n            properties.remove( renderTarget );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n\\r\\n\\r\\n        function setTexture2D( texture, slot ) {\\r\\n\\r\\n            var textureProperties = properties.get( texture );\\r\\n\\r\\n            if ( texture.isVideoTexture ) updateVideoTexture( texture );\\r\\n\\r\\n            if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\r\\n\\r\\n                var image = texture.image;\\r\\n\\r\\n                if ( image === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\\r\\n\\r\\n                } else if ( image.complete === false ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    uploadTexture( textureProperties, texture, slot );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n            state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\r\\n\\r\\n        }\\r\\n\\r\\n        function setTexture3D( texture, slot ) {\\r\\n\\r\\n            var textureProperties = properties.get( texture );\\r\\n\\r\\n            if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\r\\n\\r\\n                uploadTexture( textureProperties, texture, slot );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n            state.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n        function setTextureCube( texture, slot ) {\\r\\n\\r\\n            var textureProperties = properties.get( texture );\\r\\n\\r\\n            if ( texture.image.length === 6 ) {\\r\\n\\r\\n                if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\r\\n\\r\\n                    if ( ! textureProperties.__image__webglTextureCube ) {\\r\\n\\r\\n                        texture.addEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n                        textureProperties.__image__webglTextureCube = _gl.createTexture();\\r\\n\\r\\n                        info.memory.textures ++;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n                    state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\r\\n\\r\\n                    _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\r\\n\\r\\n                    var isCompressed = ( texture && texture.isCompressedTexture );\\r\\n                    var isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\\r\\n\\r\\n                    var cubeImage = [];\\r\\n\\r\\n                    for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                        if ( ! isCompressed && ! isDataTexture ) {\\r\\n\\r\\n                            cubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    var image = cubeImage[ 0 ],\\r\\n                        isPowerOfTwoImage = isPowerOfTwo( image ),\\r\\n                        glFormat = utils.convert( texture.format ),\\r\\n                        glType = utils.convert( texture.type ),\\r\\n                        glInternalFormat = getInternalFormat( glFormat, glType );\\r\\n\\r\\n                    setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\\r\\n\\r\\n                    for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                        if ( ! isCompressed ) {\\r\\n\\r\\n                            if ( isDataTexture ) {\\r\\n\\r\\n                                state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            var mipmap, mipmaps = cubeImage[ i ].mipmaps;\\r\\n\\r\\n                            for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\\r\\n\\r\\n                                mipmap = mipmaps[ j ];\\r\\n\\r\\n                                if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\\r\\n\\r\\n                                    if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\r\\n\\r\\n                                        state.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\r\\n\\r\\n                                    } else {\\r\\n\\r\\n                                        console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\\r\\n\\r\\n                                    }\\r\\n\\r\\n                                } else {\\r\\n\\r\\n                                    state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( ! isCompressed ) {\\r\\n\\r\\n                        textureProperties.__maxMipLevel = 0;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        textureProperties.__maxMipLevel = mipmaps.length - 1;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\\r\\n\\r\\n                        // We assume images for cube map have the same size.\\r\\n                        generateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    textureProperties.__version = texture.version;\\r\\n\\r\\n                    if ( texture.onUpdate ) texture.onUpdate( texture );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n                    state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function setTextureCubeDynamic( texture, slot ) {\\r\\n\\r\\n            state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n            state.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\\r\\n\\r\\n        }\\r\\n\\r\\n        function setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\\r\\n\\r\\n            var extension;\\r\\n\\r\\n            if ( isPowerOfTwoImage ) {\\r\\n\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\\r\\n\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\\r\\n\\r\\n                if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\\r\\n\\r\\n                }\\r\\n\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\\r\\n                _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\\r\\n\\r\\n                if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\\r\\n\\r\\n                    console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            extension = extensions.get( 'EXT_texture_filter_anisotropic' );\\r\\n\\r\\n            if ( extension ) {\\r\\n\\r\\n                if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\\r\\n                if ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\\r\\n\\r\\n                if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\\r\\n\\r\\n                    _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\\r\\n                    properties.get( texture ).__currentAnisotropy = texture.anisotropy;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function uploadTexture( textureProperties, texture, slot ) {\\r\\n\\r\\n            var textureType;\\r\\n\\r\\n            if ( texture.isDataTexture3D ) {\\r\\n\\r\\n                textureType = _gl.TEXTURE_3D;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                textureType = _gl.TEXTURE_2D;\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            if ( textureProperties.__webglInit === undefined ) {\\r\\n\\r\\n                textureProperties.__webglInit = true;\\r\\n\\r\\n                texture.addEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n                textureProperties.__webglTexture = _gl.createTexture();\\r\\n\\r\\n                info.memory.textures ++;\\r\\n\\r\\n            }\\r\\n            state.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\r\\n\\r\\n            state.bindTexture( textureType, textureProperties.__webglTexture );\\r\\n\\r\\n\\r\\n\\r\\n            _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\r\\n            _gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\\r\\n            _gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\\r\\n\\r\\n            var image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\\r\\n\\r\\n            if ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\\r\\n\\r\\n                image = makePowerOfTwo( image );\\r\\n\\r\\n            }\\r\\n\\r\\n            var isPowerOfTwoImage = isPowerOfTwo( image ),\\r\\n                glFormat = utils.convert( texture.format ),\\r\\n                glType = utils.convert( texture.type ),\\r\\n                glInternalFormat = getInternalFormat( glFormat, glType );\\r\\n\\r\\n            setTextureParameters( textureType, texture, isPowerOfTwoImage );\\r\\n\\r\\n            var mipmap, mipmaps = texture.mipmaps;\\r\\n\\r\\n            if ( texture.isDepthTexture ) {\\r\\n\\r\\n                // populate depth texture with dummy data\\r\\n\\r\\n                glInternalFormat = _gl.DEPTH_COMPONENT;\\r\\n\\r\\n                if ( texture.type === FloatType ) {\\r\\n\\r\\n                    if ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\\r\\n                    glInternalFormat = _gl.DEPTH_COMPONENT32F;\\r\\n\\r\\n                } else if ( capabilities.isWebGL2 ) {\\r\\n\\r\\n                    // WebGL 2.0 requires signed internalformat for glTexImage2D\\r\\n                    glInternalFormat = _gl.DEPTH_COMPONENT16;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\\r\\n\\r\\n                    // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\\r\\n                    // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\\r\\n                    // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\\r\\n                    if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\\r\\n\\r\\n                        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\\r\\n\\r\\n                        texture.type = UnsignedShortType;\\r\\n                        glType = utils.convert( texture.type );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // Depth stencil textures need the DEPTH_STENCIL internal format\\r\\n                // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\\r\\n                if ( texture.format === DepthStencilFormat ) {\\r\\n\\r\\n                    glInternalFormat = _gl.DEPTH_STENCIL;\\r\\n\\r\\n                    // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\\r\\n                    // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\\r\\n                    // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\\r\\n                    if ( texture.type !== UnsignedInt248Type ) {\\r\\n\\r\\n                        console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\\r\\n\\r\\n                        texture.type = UnsignedInt248Type;\\r\\n                        glType = utils.convert( texture.type );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\\r\\n\\r\\n            } else if ( texture.isDataTexture ) {\\r\\n\\r\\n                // use manually created mipmaps if available\\r\\n                // if there are no manual mipmaps\\r\\n                // set 0 level mipmap and then use GL to generate other mipmap levels\\r\\n\\r\\n                if ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\r\\n\\r\\n                    for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n                        mipmap = mipmaps[ i ];\\r\\n                        state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture.generateMipmaps = false;\\r\\n                    textureProperties.__maxMipLevel = mipmaps.length - 1;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\\r\\n                    textureProperties.__maxMipLevel = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( texture.isCompressedTexture ) {\\r\\n\\r\\n                for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n                    mipmap = mipmaps[ i ];\\r\\n\\r\\n                    if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\\r\\n\\r\\n                        if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\r\\n\\r\\n                            state.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                textureProperties.__maxMipLevel = mipmaps.length - 1;\\r\\n\\r\\n            } else if ( texture.isDataTexture3D ) {\\r\\n\\r\\n                state.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\\r\\n                textureProperties.__maxMipLevel = 0;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // regular Texture (image, video, canvas)\\r\\n\\r\\n                // use manually created mipmaps if available\\r\\n                // if there are no manual mipmaps\\r\\n                // set 0 level mipmap and then use GL to generate other mipmap levels\\r\\n\\r\\n                if ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\r\\n\\r\\n                    for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n                        mipmap = mipmaps[ i ];\\r\\n                        state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture.generateMipmaps = false;\\r\\n                    textureProperties.__maxMipLevel = mipmaps.length - 1;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\\r\\n                    textureProperties.__maxMipLevel = 0;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\\r\\n\\r\\n                generateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\\r\\n\\r\\n            }\\r\\n\\r\\n            textureProperties.__version = texture.version;\\r\\n\\r\\n            if ( texture.onUpdate ) texture.onUpdate( texture );\\r\\n\\r\\n        }\\r\\n\\r\\n        // Render targets\\r\\n\\r\\n        // Setup storage for target texture and bind it to correct framebuffer\\r\\n        function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\\r\\n\\r\\n            var glFormat = utils.convert( renderTarget.texture.format );\\r\\n            var glType = utils.convert( renderTarget.texture.type );\\r\\n            var glInternalFormat = getInternalFormat( glFormat, glType );\\r\\n            state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\\r\\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n            _gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\\r\\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\r\\n\\r\\n        }\\r\\n\\r\\n        // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\\r\\n        function setupRenderBufferStorage( renderbuffer, renderTarget ) {\\r\\n\\r\\n            _gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n            if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\\r\\n\\r\\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\\r\\n                _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n            } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\\r\\n\\r\\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\\r\\n                _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // FIXME: We don't support !depth !stencil\\r\\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\\r\\n\\r\\n            }\\r\\n\\r\\n            _gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\\r\\n\\r\\n        }\\r\\n\\r\\n        // Setup resources for a Depth Texture for a FBO (needs an extension)\\r\\n        function setupDepthTexture( framebuffer, renderTarget ) {\\r\\n\\r\\n            var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\\r\\n            if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\\r\\n\\r\\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\r\\n            if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\\r\\n\\r\\n                throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\\r\\n\\r\\n            }\\r\\n\\r\\n            // upload an empty depth texture with framebuffer size\\r\\n            if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\\r\\n                renderTarget.depthTexture.image.width !== renderTarget.width ||\\r\\n                renderTarget.depthTexture.image.height !== renderTarget.height ) {\\r\\n\\r\\n                renderTarget.depthTexture.image.width = renderTarget.width;\\r\\n                renderTarget.depthTexture.image.height = renderTarget.height;\\r\\n                renderTarget.depthTexture.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            setTexture2D( renderTarget.depthTexture, 0 );\\r\\n\\r\\n            var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\\r\\n\\r\\n            if ( renderTarget.depthTexture.format === DepthFormat ) {\\r\\n\\r\\n                _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\r\\n\\r\\n            } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\\r\\n\\r\\n                _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                throw new Error( 'Unknown depthTexture format' );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // Setup GL resources for a non-texture depth buffer\\r\\n        function setupDepthRenderbuffer( renderTarget ) {\\r\\n\\r\\n            var renderTargetProperties = properties.get( renderTarget );\\r\\n\\r\\n            var isCube = ( renderTarget.isWebGLRenderTargetCube === true );\\r\\n\\r\\n            if ( renderTarget.depthTexture ) {\\r\\n\\r\\n                if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\\r\\n\\r\\n                setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                if ( isCube ) {\\r\\n\\r\\n                    renderTargetProperties.__webglDepthbuffer = [];\\r\\n\\r\\n                    for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                        _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\\r\\n                        renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\\r\\n                        setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\\r\\n                    renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\\r\\n                    setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\r\\n\\r\\n        }\\r\\n\\r\\n        // Set up GL resources for the render target\\r\\n        function setupRenderTarget( renderTarget ) {\\r\\n\\r\\n            var renderTargetProperties = properties.get( renderTarget );\\r\\n            var textureProperties = properties.get( renderTarget.texture );\\r\\n\\r\\n            renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\\r\\n\\r\\n            textureProperties.__webglTexture = _gl.createTexture();\\r\\n\\r\\n            info.memory.textures ++;\\r\\n\\r\\n            var isCube = ( renderTarget.isWebGLRenderTargetCube === true );\\r\\n            var isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\\r\\n\\r\\n            // Setup framebuffer\\r\\n\\r\\n            if ( isCube ) {\\r\\n\\r\\n                renderTargetProperties.__webglFramebuffer = [];\\r\\n\\r\\n                for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                    renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\\r\\n\\r\\n            }\\r\\n\\r\\n            // Setup color buffer\\r\\n\\r\\n            if ( isCube ) {\\r\\n\\r\\n                state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\\r\\n                setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\\r\\n\\r\\n                for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                    setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\\r\\n\\r\\n                    generateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\\r\\n\\r\\n                }\\r\\n\\r\\n                state.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\r\\n                setTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\\r\\n                setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\\r\\n\\r\\n                if ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\\r\\n\\r\\n                    generateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\\r\\n\\r\\n                }\\r\\n\\r\\n                state.bindTexture( _gl.TEXTURE_2D, null );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Setup depth and stencil buffers\\r\\n\\r\\n            if ( renderTarget.depthBuffer ) {\\r\\n\\r\\n                setupDepthRenderbuffer( renderTarget );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function updateRenderTargetMipmap( renderTarget ) {\\r\\n\\r\\n            var texture = renderTarget.texture;\\r\\n            var isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\\r\\n\\r\\n            if ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\\r\\n\\r\\n                var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\\r\\n                var webglTexture = properties.get( texture ).__webglTexture;\\r\\n\\r\\n                state.bindTexture( target, webglTexture );\\r\\n                generateMipmap( target, texture, renderTarget.width, renderTarget.height );\\r\\n                state.bindTexture( target, null );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function updateVideoTexture( texture ) {\\r\\n\\r\\n            var id = texture.id;\\r\\n            var frame = info.render.frame;\\r\\n\\r\\n            // Check the last frame we updated the VideoTexture\\r\\n\\r\\n            if ( _videoTextures[ id ] !== frame ) {\\r\\n\\r\\n                _videoTextures[ id ] = frame;\\r\\n                texture.update();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        this.setTexture2D = setTexture2D;\\r\\n        this.setTexture3D = setTexture3D;\\r\\n        this.setTextureCube = setTextureCube;\\r\\n        this.setTextureCubeDynamic = setTextureCubeDynamic;\\r\\n        this.setupRenderTarget = setupRenderTarget;\\r\\n        this.updateRenderTargetMipmap = updateRenderTargetMipmap;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author thespite / http://www.twitter.com/thespite\\r\\n     */\\r\\n\\r\\n    function WebGLUtils( gl, extensions, capabilities ) {\\r\\n\\r\\n        function convert( p ) {\\r\\n\\r\\n            var extension;\\r\\n\\r\\n            if ( p === RepeatWrapping ) return gl.REPEAT;\\r\\n            if ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\\r\\n            if ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\\r\\n\\r\\n            if ( p === NearestFilter ) return gl.NEAREST;\\r\\n            if ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\\r\\n            if ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\\r\\n\\r\\n            if ( p === LinearFilter ) return gl.LINEAR;\\r\\n            if ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\\r\\n            if ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\\r\\n\\r\\n            if ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\\r\\n            if ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\\r\\n            if ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\\r\\n            if ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\\r\\n\\r\\n            if ( p === ByteType ) return gl.BYTE;\\r\\n            if ( p === ShortType ) return gl.SHORT;\\r\\n            if ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\\r\\n            if ( p === IntType ) return gl.INT;\\r\\n            if ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\\r\\n            if ( p === FloatType ) return gl.FLOAT;\\r\\n\\r\\n            if ( p === HalfFloatType ) {\\r\\n\\r\\n                if ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\\r\\n\\r\\n                extension = extensions.get( 'OES_texture_half_float' );\\r\\n\\r\\n                if ( extension !== null ) return extension.HALF_FLOAT_OES;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === AlphaFormat ) return gl.ALPHA;\\r\\n            if ( p === RGBFormat ) return gl.RGB;\\r\\n            if ( p === RGBAFormat ) return gl.RGBA;\\r\\n            if ( p === LuminanceFormat ) return gl.LUMINANCE;\\r\\n            if ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\\r\\n            if ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\\r\\n            if ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\\r\\n            if ( p === RedFormat ) return gl.RED;\\r\\n\\r\\n            if ( p === AddEquation ) return gl.FUNC_ADD;\\r\\n            if ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\\r\\n            if ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\\r\\n\\r\\n            if ( p === ZeroFactor ) return gl.ZERO;\\r\\n            if ( p === OneFactor ) return gl.ONE;\\r\\n            if ( p === SrcColorFactor ) return gl.SRC_COLOR;\\r\\n            if ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\\r\\n            if ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\\r\\n            if ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\\r\\n            if ( p === DstAlphaFactor ) return gl.DST_ALPHA;\\r\\n            if ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\\r\\n\\r\\n            if ( p === DstColorFactor ) return gl.DST_COLOR;\\r\\n            if ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\\r\\n            if ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\\r\\n\\r\\n            if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\\r\\n                p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\\r\\n\\r\\n                extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\\r\\n\\r\\n                if ( extension !== null ) {\\r\\n\\r\\n                    if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\\r\\n                    if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\\r\\n                    if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\\r\\n                    if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\\r\\n                p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\\r\\n\\r\\n                extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\r\\n\\r\\n                if ( extension !== null ) {\\r\\n\\r\\n                    if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\\r\\n                    if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\\r\\n                    if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\\r\\n                    if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === RGB_ETC1_Format ) {\\r\\n\\r\\n                extension = extensions.get( 'WEBGL_compressed_texture_etc1' );\\r\\n\\r\\n                if ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\\r\\n                p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\\r\\n                p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\\r\\n                p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\\r\\n                p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\\r\\n\\r\\n                extension = extensions.get( 'WEBGL_compressed_texture_astc' );\\r\\n\\r\\n                if ( extension !== null ) {\\r\\n\\r\\n                    return p;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === MinEquation || p === MaxEquation ) {\\r\\n\\r\\n                if ( capabilities.isWebGL2 ) {\\r\\n\\r\\n                    if ( p === MinEquation ) return gl.MIN;\\r\\n                    if ( p === MaxEquation ) return gl.MAX;\\r\\n\\r\\n                }\\r\\n\\r\\n                extension = extensions.get( 'EXT_blend_minmax' );\\r\\n\\r\\n                if ( extension !== null ) {\\r\\n\\r\\n                    if ( p === MinEquation ) return extension.MIN_EXT;\\r\\n                    if ( p === MaxEquation ) return extension.MAX_EXT;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( p === UnsignedInt248Type ) {\\r\\n\\r\\n                if ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\\r\\n\\r\\n                extension = extensions.get( 'WEBGL_depth_texture' );\\r\\n\\r\\n                if ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\\r\\n\\r\\n            }\\r\\n\\r\\n            return 0;\\r\\n\\r\\n        }\\r\\n\\r\\n        return { convert: convert };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Group() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Group';\\r\\n\\r\\n    }\\r\\n\\r\\n    Group.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Group,\\r\\n\\r\\n        isGroup: true\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Camera() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Camera';\\r\\n\\r\\n        this.matrixWorldInverse = new Matrix4();\\r\\n\\r\\n        this.projectionMatrix = new Matrix4();\\r\\n        this.projectionMatrixInverse = new Matrix4();\\r\\n\\r\\n    }\\r\\n\\r\\n    Camera.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Camera,\\r\\n\\r\\n        isCamera: true,\\r\\n\\r\\n        copy: function ( source, recursive ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source, recursive );\\r\\n\\r\\n            this.matrixWorldInverse.copy( source.matrixWorldInverse );\\r\\n\\r\\n            this.projectionMatrix.copy( source.projectionMatrix );\\r\\n            this.projectionMatrixInverse.copy( source.projectionMatrixInverse );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getWorldDirection: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            this.updateMatrixWorld( true );\\r\\n\\r\\n            var e = this.matrixWorld.elements;\\r\\n\\r\\n            return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrixWorld: function ( force ) {\\r\\n\\r\\n            Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n            this.matrixWorldInverse.getInverse( this.matrixWorld );\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author greggman / http://games.greggman.com/\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function PerspectiveCamera( fov, aspect, near, far ) {\\r\\n\\r\\n        Camera.call( this );\\r\\n\\r\\n        this.type = 'PerspectiveCamera';\\r\\n\\r\\n        this.fov = fov !== undefined ? fov : 50;\\r\\n        this.zoom = 1;\\r\\n\\r\\n        this.near = near !== undefined ? near : 0.1;\\r\\n        this.far = far !== undefined ? far : 2000;\\r\\n        this.focus = 10;\\r\\n\\r\\n        this.aspect = aspect !== undefined ? aspect : 1;\\r\\n        this.view = null;\\r\\n\\r\\n        this.filmGauge = 35;\\t// width of the film (default in millimeters)\\r\\n        this.filmOffset = 0;\\t// horizontal film offset (same unit as gauge)\\r\\n\\r\\n        this.updateProjectionMatrix();\\r\\n\\r\\n    }\\r\\n\\r\\n    PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\\r\\n\\r\\n        constructor: PerspectiveCamera,\\r\\n\\r\\n        isPerspectiveCamera: true,\\r\\n\\r\\n        copy: function ( source, recursive ) {\\r\\n\\r\\n            Camera.prototype.copy.call( this, source, recursive );\\r\\n\\r\\n            this.fov = source.fov;\\r\\n            this.zoom = source.zoom;\\r\\n\\r\\n            this.near = source.near;\\r\\n            this.far = source.far;\\r\\n            this.focus = source.focus;\\r\\n\\r\\n            this.aspect = source.aspect;\\r\\n            this.view = source.view === null ? null : Object.assign( {}, source.view );\\r\\n\\r\\n            this.filmGauge = source.filmGauge;\\r\\n            this.filmOffset = source.filmOffset;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Sets the FOV by focal length in respect to the current .filmGauge.\\r\\n         *\\r\\n         * The default film gauge is 35, so that the focal length can be specified for\\r\\n         * a 35mm (full frame) camera.\\r\\n         *\\r\\n         * Values for focal length and film gauge must have the same unit.\\r\\n         */\\r\\n        setFocalLength: function ( focalLength ) {\\r\\n\\r\\n            // see http://www.bobatkins.com/photography/technical/field_of_view.html\\r\\n            var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\\r\\n\\r\\n            this.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\\r\\n            this.updateProjectionMatrix();\\r\\n\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Calculates the focal length from the current .fov and .filmGauge.\\r\\n         */\\r\\n        getFocalLength: function () {\\r\\n\\r\\n            var vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\\r\\n\\r\\n            return 0.5 * this.getFilmHeight() / vExtentSlope;\\r\\n\\r\\n        },\\r\\n\\r\\n        getEffectiveFOV: function () {\\r\\n\\r\\n            return _Math.RAD2DEG * 2 * Math.atan(\\r\\n                Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\\r\\n\\r\\n        },\\r\\n\\r\\n        getFilmWidth: function () {\\r\\n\\r\\n            // film not completely covered in portrait format (aspect < 1)\\r\\n            return this.filmGauge * Math.min( this.aspect, 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        getFilmHeight: function () {\\r\\n\\r\\n            // film not completely covered in landscape format (aspect > 1)\\r\\n            return this.filmGauge / Math.max( this.aspect, 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Sets an offset in a larger frustum. This is useful for multi-window or\\r\\n         * multi-monitor/multi-machine setups.\\r\\n         *\\r\\n         * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\\r\\n         * the monitors are in grid like this\\r\\n         *\\r\\n         *   +---+---+---+\\r\\n         *   | A | B | C |\\r\\n         *   +---+---+---+\\r\\n         *   | D | E | F |\\r\\n         *   +---+---+---+\\r\\n         *\\r\\n         * then for each monitor you would call it like this\\r\\n         *\\r\\n         *   var w = 1920;\\r\\n         *   var h = 1080;\\r\\n         *   var fullWidth = w * 3;\\r\\n         *   var fullHeight = h * 2;\\r\\n         *\\r\\n         *   --A--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\\r\\n         *   --B--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\\r\\n         *   --C--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\\r\\n         *   --D--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\\r\\n         *   --E--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\\r\\n         *   --F--\\r\\n         *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\\r\\n         *\\r\\n         *   Note there is no reason monitors have to be the same size or in a grid.\\r\\n         */\\r\\n        setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\\r\\n\\r\\n            this.aspect = fullWidth / fullHeight;\\r\\n\\r\\n            if ( this.view === null ) {\\r\\n\\r\\n                this.view = {\\r\\n                    enabled: true,\\r\\n                    fullWidth: 1,\\r\\n                    fullHeight: 1,\\r\\n                    offsetX: 0,\\r\\n                    offsetY: 0,\\r\\n                    width: 1,\\r\\n                    height: 1\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            this.view.enabled = true;\\r\\n            this.view.fullWidth = fullWidth;\\r\\n            this.view.fullHeight = fullHeight;\\r\\n            this.view.offsetX = x;\\r\\n            this.view.offsetY = y;\\r\\n            this.view.width = width;\\r\\n            this.view.height = height;\\r\\n\\r\\n            this.updateProjectionMatrix();\\r\\n\\r\\n        },\\r\\n\\r\\n        clearViewOffset: function () {\\r\\n\\r\\n            if ( this.view !== null ) {\\r\\n\\r\\n                this.view.enabled = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.updateProjectionMatrix();\\r\\n\\r\\n        },\\r\\n\\r\\n        updateProjectionMatrix: function () {\\r\\n\\r\\n            var near = this.near,\\r\\n                top = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\\r\\n                height = 2 * top,\\r\\n                width = this.aspect * height,\\r\\n                left = - 0.5 * width,\\r\\n                view = this.view;\\r\\n\\r\\n            if ( this.view !== null && this.view.enabled ) {\\r\\n\\r\\n                var fullWidth = view.fullWidth,\\r\\n                    fullHeight = view.fullHeight;\\r\\n\\r\\n                left += view.offsetX * width / fullWidth;\\r\\n                top -= view.offsetY * height / fullHeight;\\r\\n                width *= view.width / fullWidth;\\r\\n                height *= view.height / fullHeight;\\r\\n\\r\\n            }\\r\\n\\r\\n            var skew = this.filmOffset;\\r\\n            if ( skew !== 0 ) left += near * skew / this.getFilmWidth();\\r\\n\\r\\n            this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\\r\\n\\r\\n            this.projectionMatrixInverse.getInverse( this.projectionMatrix );\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            data.object.fov = this.fov;\\r\\n            data.object.zoom = this.zoom;\\r\\n\\r\\n            data.object.near = this.near;\\r\\n            data.object.far = this.far;\\r\\n            data.object.focus = this.focus;\\r\\n\\r\\n            data.object.aspect = this.aspect;\\r\\n\\r\\n            if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\r\\n\\r\\n            data.object.filmGauge = this.filmGauge;\\r\\n            data.object.filmOffset = this.filmOffset;\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function ArrayCamera( array ) {\\r\\n\\r\\n        PerspectiveCamera.call( this );\\r\\n\\r\\n        this.cameras = array || [];\\r\\n\\r\\n    }\\r\\n\\r\\n    ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\\r\\n\\r\\n        constructor: ArrayCamera,\\r\\n\\r\\n        isArrayCamera: true\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebVRManager( renderer ) {\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        var device = null;\\r\\n        var frameData = null;\\r\\n\\r\\n        var poseTarget = null;\\r\\n\\r\\n        var controllers = [];\\r\\n        var standingMatrix = new Matrix4();\\r\\n        var standingMatrixInverse = new Matrix4();\\r\\n\\r\\n        var frameOfReferenceType = 'stage';\\r\\n\\r\\n        if ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\\r\\n\\r\\n            frameData = new window.VRFrameData();\\r\\n            window.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\\r\\n\\r\\n        }\\r\\n\\r\\n        var matrixWorldInverse = new Matrix4();\\r\\n        var tempQuaternion = new Quaternion();\\r\\n        var tempPosition = new Vector3();\\r\\n\\r\\n        var cameraL = new PerspectiveCamera();\\r\\n        cameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\\r\\n        cameraL.layers.enable( 1 );\\r\\n\\r\\n        var cameraR = new PerspectiveCamera();\\r\\n        cameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\\r\\n        cameraR.layers.enable( 2 );\\r\\n\\r\\n        var cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\\r\\n        cameraVR.layers.enable( 1 );\\r\\n        cameraVR.layers.enable( 2 );\\r\\n\\r\\n        //\\r\\n\\r\\n        function isPresenting() {\\r\\n\\r\\n            return device !== null && device.isPresenting === true;\\r\\n\\r\\n        }\\r\\n\\r\\n        var currentSize, currentPixelRatio;\\r\\n\\r\\n        function onVRDisplayPresentChange() {\\r\\n\\r\\n            if ( isPresenting() ) {\\r\\n\\r\\n                var eyeParameters = device.getEyeParameters( 'left' );\\r\\n                var renderWidth = eyeParameters.renderWidth;\\r\\n                var renderHeight = eyeParameters.renderHeight;\\r\\n\\r\\n                currentPixelRatio = renderer.getPixelRatio();\\r\\n                currentSize = renderer.getSize();\\r\\n\\r\\n                renderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\\r\\n\\r\\n                animation.start();\\r\\n\\r\\n            } else {\\r\\n\\r\\n                if ( scope.enabled ) {\\r\\n\\r\\n                    renderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\\r\\n\\r\\n                }\\r\\n\\r\\n                animation.stop();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var triggers = [];\\r\\n\\r\\n        function findGamepad( id ) {\\r\\n\\r\\n            var gamepads = navigator.getGamepads && navigator.getGamepads();\\r\\n\\r\\n            for ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\\r\\n\\r\\n                var gamepad = gamepads[ i ];\\r\\n\\r\\n                if ( gamepad && ( gamepad.id === 'Daydream Controller' ||\\r\\n                        gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\\r\\n                        gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\\r\\n                        gamepad.id.startsWith( 'Spatial Controller' ) ) ) {\\r\\n\\r\\n                    if ( j === id ) return gamepad;\\r\\n\\r\\n                    j ++;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function updateControllers() {\\r\\n\\r\\n            for ( var i = 0; i < controllers.length; i ++ ) {\\r\\n\\r\\n                var controller = controllers[ i ];\\r\\n\\r\\n                var gamepad = findGamepad( i );\\r\\n\\r\\n                if ( gamepad !== undefined && gamepad.pose !== undefined ) {\\r\\n\\r\\n                    if ( gamepad.pose === null ) return;\\r\\n\\r\\n                    //  Pose\\r\\n\\r\\n                    var pose = gamepad.pose;\\r\\n\\r\\n                    if ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\\r\\n\\r\\n                    if ( pose.position !== null ) controller.position.fromArray( pose.position );\\r\\n                    if ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\\r\\n                    controller.matrix.compose( controller.position, controller.quaternion, controller.scale );\\r\\n                    controller.matrix.premultiply( standingMatrix );\\r\\n                    controller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\\r\\n                    controller.matrixWorldNeedsUpdate = true;\\r\\n                    controller.visible = true;\\r\\n\\r\\n                    //  Trigger\\r\\n\\r\\n                    var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\\r\\n\\r\\n                    if ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\\r\\n\\r\\n                        triggers[ i ] = gamepad.buttons[ buttonId ].pressed;\\r\\n\\r\\n                        if ( triggers[ i ] === true ) {\\r\\n\\r\\n                            controller.dispatchEvent( { type: 'selectstart' } );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            controller.dispatchEvent( { type: 'selectend' } );\\r\\n                            controller.dispatchEvent( { type: 'select' } );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    controller.visible = false;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        this.enabled = false;\\r\\n\\r\\n        this.getController = function ( id ) {\\r\\n\\r\\n            var controller = controllers[ id ];\\r\\n\\r\\n            if ( controller === undefined ) {\\r\\n\\r\\n                controller = new Group();\\r\\n                controller.matrixAutoUpdate = false;\\r\\n                controller.visible = false;\\r\\n\\r\\n                controllers[ id ] = controller;\\r\\n\\r\\n            }\\r\\n\\r\\n            return controller;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getDevice = function () {\\r\\n\\r\\n            return device;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setDevice = function ( value ) {\\r\\n\\r\\n            if ( value !== undefined ) device = value;\\r\\n\\r\\n            animation.setContext( value );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setFrameOfReferenceType = function ( value ) {\\r\\n\\r\\n            frameOfReferenceType = value;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setPoseTarget = function ( object ) {\\r\\n\\r\\n            if ( object !== undefined ) poseTarget = object;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getCamera = function ( camera ) {\\r\\n\\r\\n            var userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\\r\\n\\r\\n            if ( device === null ) {\\r\\n\\r\\n                camera.position.set( 0, userHeight, 0 );\\r\\n                return camera;\\r\\n\\r\\n            }\\r\\n\\r\\n            device.depthNear = camera.near;\\r\\n            device.depthFar = camera.far;\\r\\n\\r\\n            device.getFrameData( frameData );\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( frameOfReferenceType === 'stage' ) {\\r\\n\\r\\n                var stageParameters = device.stageParameters;\\r\\n\\r\\n                if ( stageParameters ) {\\r\\n\\r\\n                    standingMatrix.fromArray( stageParameters.sittingToStandingTransform );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    standingMatrix.makeTranslation( 0, userHeight, 0 );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            var pose = frameData.pose;\\r\\n            var poseObject = poseTarget !== null ? poseTarget : camera;\\r\\n\\r\\n            // We want to manipulate poseObject by its position and quaternion components since users may rely on them.\\r\\n            poseObject.matrix.copy( standingMatrix );\\r\\n            poseObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\\r\\n\\r\\n            if ( pose.orientation !== null ) {\\r\\n\\r\\n                tempQuaternion.fromArray( pose.orientation );\\r\\n                poseObject.quaternion.multiply( tempQuaternion );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( pose.position !== null ) {\\r\\n\\r\\n                tempQuaternion.setFromRotationMatrix( standingMatrix );\\r\\n                tempPosition.fromArray( pose.position );\\r\\n                tempPosition.applyQuaternion( tempQuaternion );\\r\\n                poseObject.position.add( tempPosition );\\r\\n\\r\\n            }\\r\\n\\r\\n            poseObject.updateMatrixWorld();\\r\\n\\r\\n            if ( device.isPresenting === false ) return camera;\\r\\n\\r\\n            //\\r\\n\\r\\n            cameraL.near = camera.near;\\r\\n            cameraR.near = camera.near;\\r\\n\\r\\n            cameraL.far = camera.far;\\r\\n            cameraR.far = camera.far;\\r\\n\\r\\n            cameraVR.matrixWorld.copy( camera.matrixWorld );\\r\\n            cameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\\r\\n\\r\\n            cameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\\r\\n            cameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\\r\\n\\r\\n            // TODO (mrdoob) Double check this code\\r\\n\\r\\n            standingMatrixInverse.getInverse( standingMatrix );\\r\\n\\r\\n            if ( frameOfReferenceType === 'stage' ) {\\r\\n\\r\\n                cameraL.matrixWorldInverse.multiply( standingMatrixInverse );\\r\\n                cameraR.matrixWorldInverse.multiply( standingMatrixInverse );\\r\\n\\r\\n            }\\r\\n\\r\\n            var parent = poseObject.parent;\\r\\n\\r\\n            if ( parent !== null ) {\\r\\n\\r\\n                matrixWorldInverse.getInverse( parent.matrixWorld );\\r\\n\\r\\n                cameraL.matrixWorldInverse.multiply( matrixWorldInverse );\\r\\n                cameraR.matrixWorldInverse.multiply( matrixWorldInverse );\\r\\n\\r\\n            }\\r\\n\\r\\n            // envMap and Mirror needs camera.matrixWorld\\r\\n\\r\\n            cameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\\r\\n            cameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\\r\\n\\r\\n            cameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\\r\\n            cameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\\r\\n\\r\\n            // HACK (mrdoob)\\r\\n            // https://github.com/w3c/webvr/issues/203\\r\\n\\r\\n            cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\\r\\n\\r\\n            //\\r\\n\\r\\n            var layers = device.getLayers();\\r\\n\\r\\n            if ( layers.length ) {\\r\\n\\r\\n                var layer = layers[ 0 ];\\r\\n\\r\\n                if ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\\r\\n\\r\\n                    cameraL.bounds.fromArray( layer.leftBounds );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\\r\\n\\r\\n                    cameraR.bounds.fromArray( layer.rightBounds );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            updateControllers();\\r\\n\\r\\n            return cameraVR;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getStandingMatrix = function () {\\r\\n\\r\\n            return standingMatrix;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.isPresenting = isPresenting;\\r\\n\\r\\n        // Animation Loop\\r\\n\\r\\n        var animation = new WebGLAnimation();\\r\\n\\r\\n        this.setAnimationLoop = function ( callback ) {\\r\\n\\r\\n            animation.setAnimationLoop( callback );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.submitFrame = function () {\\r\\n\\r\\n            if ( isPresenting() ) device.submitFrame();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.dispose = function () {\\r\\n\\r\\n            if ( typeof window !== 'undefined' ) {\\r\\n\\r\\n                window.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function WebXRManager( renderer ) {\\r\\n\\r\\n        var gl = renderer.context;\\r\\n\\r\\n        var device = null;\\r\\n        var session = null;\\r\\n\\r\\n        var frameOfReference = null;\\r\\n        var frameOfReferenceType = 'stage';\\r\\n\\r\\n        var pose = null;\\r\\n\\r\\n        var controllers = [];\\r\\n        var inputSources = [];\\r\\n\\r\\n        function isPresenting() {\\r\\n\\r\\n            return session !== null && frameOfReference !== null;\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var cameraL = new PerspectiveCamera();\\r\\n        cameraL.layers.enable( 1 );\\r\\n        cameraL.viewport = new Vector4();\\r\\n\\r\\n        var cameraR = new PerspectiveCamera();\\r\\n        cameraR.layers.enable( 2 );\\r\\n        cameraR.viewport = new Vector4();\\r\\n\\r\\n        var cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\\r\\n        cameraVR.layers.enable( 1 );\\r\\n        cameraVR.layers.enable( 2 );\\r\\n\\r\\n        //\\r\\n\\r\\n        this.enabled = false;\\r\\n\\r\\n        this.getController = function ( id ) {\\r\\n\\r\\n            var controller = controllers[ id ];\\r\\n\\r\\n            if ( controller === undefined ) {\\r\\n\\r\\n                controller = new Group();\\r\\n                controller.matrixAutoUpdate = false;\\r\\n                controller.visible = false;\\r\\n\\r\\n                controllers[ id ] = controller;\\r\\n\\r\\n            }\\r\\n\\r\\n            return controller;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getDevice = function () {\\r\\n\\r\\n            return device;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setDevice = function ( value ) {\\r\\n\\r\\n            if ( value !== undefined ) device = value;\\r\\n            if ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\\r\\n\\r\\n        };\\r\\n\\r\\n        //\\r\\n\\r\\n        function onSessionEvent( event ) {\\r\\n\\r\\n            var controller = controllers[ inputSources.indexOf( event.inputSource ) ];\\r\\n            if ( controller ) controller.dispatchEvent( { type: event.type } );\\r\\n\\r\\n        }\\r\\n\\r\\n        function onSessionEnd() {\\r\\n\\r\\n            renderer.setFramebuffer( null );\\r\\n            animation.stop();\\r\\n\\r\\n        }\\r\\n\\r\\n        this.setFrameOfReferenceType = function ( value ) {\\r\\n\\r\\n            frameOfReferenceType = value;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setSession = function ( value ) {\\r\\n\\r\\n            session = value;\\r\\n\\r\\n            if ( session !== null ) {\\r\\n\\r\\n                session.addEventListener( 'select', onSessionEvent );\\r\\n                session.addEventListener( 'selectstart', onSessionEvent );\\r\\n                session.addEventListener( 'selectend', onSessionEvent );\\r\\n                session.addEventListener( 'end', onSessionEnd );\\r\\n\\r\\n                session.baseLayer = new XRWebGLLayer( session, gl );\\r\\n                session.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\\r\\n\\r\\n                    frameOfReference = value;\\r\\n\\r\\n                    renderer.setFramebuffer( session.baseLayer.framebuffer );\\r\\n\\r\\n                    animation.setContext( session );\\r\\n                    animation.start();\\r\\n\\r\\n                } );\\r\\n\\r\\n                //\\r\\n\\r\\n                inputSources = session.getInputSources();\\r\\n\\r\\n                session.addEventListener( 'inputsourceschange', function () {\\r\\n\\r\\n                    inputSources = session.getInputSources();\\r\\n                    console.log( inputSources );\\r\\n\\r\\n                } );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        function updateCamera( camera, parent ) {\\r\\n\\r\\n            if ( parent === null ) {\\r\\n\\r\\n                camera.matrixWorld.copy( camera.matrix );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n            camera.matrixWorldInverse.getInverse( camera.matrixWorld );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.getCamera = function ( camera ) {\\r\\n\\r\\n            if ( isPresenting() ) {\\r\\n\\r\\n                var parent = camera.parent;\\r\\n                var cameras = cameraVR.cameras;\\r\\n\\r\\n                // apply camera.parent to cameraVR\\r\\n\\r\\n                updateCamera( cameraVR, parent );\\r\\n\\r\\n                for ( var i = 0; i < cameras.length; i ++ ) {\\r\\n\\r\\n                    updateCamera( cameras[ i ], parent );\\r\\n\\r\\n                }\\r\\n\\r\\n                // update camera and its children\\r\\n\\r\\n                camera.matrixWorld.copy( cameraVR.matrixWorld );\\r\\n\\r\\n                var children = camera.children;\\r\\n\\r\\n                for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                    children[ i ].updateMatrixWorld( true );\\r\\n\\r\\n                }\\r\\n\\r\\n                return cameraVR;\\r\\n\\r\\n            }\\r\\n\\r\\n            return camera;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.isPresenting = isPresenting;\\r\\n\\r\\n        // Animation Loop\\r\\n\\r\\n        var onAnimationFrameCallback = null;\\r\\n\\r\\n        function onAnimationFrame( time, frame ) {\\r\\n\\r\\n            pose = frame.getDevicePose( frameOfReference );\\r\\n\\r\\n            if ( pose !== null ) {\\r\\n\\r\\n                var layer = session.baseLayer;\\r\\n                var views = frame.views;\\r\\n\\r\\n                for ( var i = 0; i < views.length; i ++ ) {\\r\\n\\r\\n                    var view = views[ i ];\\r\\n                    var viewport = layer.getViewport( view );\\r\\n                    var viewMatrix = pose.getViewMatrix( view );\\r\\n\\r\\n                    var camera = cameraVR.cameras[ i ];\\r\\n                    camera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\\r\\n                    camera.projectionMatrix.fromArray( view.projectionMatrix );\\r\\n                    camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\\r\\n\\r\\n                    if ( i === 0 ) {\\r\\n\\r\\n                        cameraVR.matrix.copy( camera.matrix );\\r\\n\\r\\n                        // HACK (mrdoob)\\r\\n                        // https://github.com/w3c/webvr/issues/203\\r\\n\\r\\n                        cameraVR.projectionMatrix.copy( camera.projectionMatrix );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            for ( var i = 0; i < controllers.length; i ++ ) {\\r\\n\\r\\n                var controller = controllers[ i ];\\r\\n\\r\\n                var inputSource = inputSources[ i ];\\r\\n\\r\\n                if ( inputSource ) {\\r\\n\\r\\n                    var inputPose = frame.getInputPose( inputSource, frameOfReference );\\r\\n\\r\\n                    if ( inputPose !== null ) {\\r\\n\\r\\n                        if ( 'targetRay' in inputPose ) {\\r\\n\\r\\n                            controller.matrix.elements = inputPose.targetRay.transformMatrix;\\r\\n\\r\\n                        } else if ( 'pointerMatrix' in inputPose ) {\\r\\n\\r\\n                            // DEPRECATED\\r\\n\\r\\n                            controller.matrix.elements = inputPose.pointerMatrix;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        controller.matrix.decompose( controller.position, controller.rotation, controller.scale );\\r\\n                        controller.visible = true;\\r\\n\\r\\n                        continue;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                controller.visible = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\\r\\n\\r\\n        }\\r\\n\\r\\n        var animation = new WebGLAnimation();\\r\\n        animation.setAnimationLoop( onAnimationFrame );\\r\\n\\r\\n        this.setAnimationLoop = function ( callback ) {\\r\\n\\r\\n            onAnimationFrameCallback = callback;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.dispose = function () {};\\r\\n\\r\\n        // DEPRECATED\\r\\n\\r\\n        this.getStandingMatrix = function () {\\r\\n\\r\\n            console.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\\r\\n            return new THREE.Matrix4();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.submitFrame = function () {};\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author szimek / https://github.com/szimek/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function WebGLRenderer( parameters ) {\\r\\n\\r\\n        console.log( 'THREE.WebGLRenderer', REVISION );\\r\\n\\r\\n        parameters = parameters || {};\\r\\n\\r\\n        var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\\r\\n            _context = parameters.context !== undefined ? parameters.context : null,\\r\\n\\r\\n            _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\\r\\n            _depth = parameters.depth !== undefined ? parameters.depth : true,\\r\\n            _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\\r\\n            _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\\r\\n            _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\\r\\n            _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\\r\\n            _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\\r\\n\\r\\n        var currentRenderList = null;\\r\\n        var currentRenderState = null;\\r\\n\\r\\n        // public properties\\r\\n\\r\\n        this.domElement = _canvas;\\r\\n        this.context = null;\\r\\n\\r\\n        // clearing\\r\\n\\r\\n        this.autoClear = true;\\r\\n        this.autoClearColor = true;\\r\\n        this.autoClearDepth = true;\\r\\n        this.autoClearStencil = true;\\r\\n\\r\\n        // scene graph\\r\\n\\r\\n        this.sortObjects = true;\\r\\n\\r\\n        // user-defined clipping\\r\\n\\r\\n        this.clippingPlanes = [];\\r\\n        this.localClippingEnabled = false;\\r\\n\\r\\n        // physically based shading\\r\\n\\r\\n        this.gammaFactor = 2.0;\\t// for backwards compatibility\\r\\n        this.gammaInput = false;\\r\\n        this.gammaOutput = false;\\r\\n\\r\\n        // physical lights\\r\\n\\r\\n        this.physicallyCorrectLights = false;\\r\\n\\r\\n        // tone mapping\\r\\n\\r\\n        this.toneMapping = LinearToneMapping;\\r\\n        this.toneMappingExposure = 1.0;\\r\\n        this.toneMappingWhitePoint = 1.0;\\r\\n\\r\\n        // morphs\\r\\n\\r\\n        this.maxMorphTargets = 8;\\r\\n        this.maxMorphNormals = 4;\\r\\n\\r\\n        // internal properties\\r\\n\\r\\n        var _this = this,\\r\\n\\r\\n            _isContextLost = false,\\r\\n\\r\\n            // internal state cache\\r\\n\\r\\n            _framebuffer = null,\\r\\n\\r\\n            _currentRenderTarget = null,\\r\\n            _currentFramebuffer = null,\\r\\n            _currentMaterialId = - 1,\\r\\n\\r\\n            // geometry and program caching\\r\\n\\r\\n            _currentGeometryProgram = {\\r\\n                geometry: null,\\r\\n                program: null,\\r\\n                wireframe: false\\r\\n            },\\r\\n\\r\\n            _currentCamera = null,\\r\\n            _currentArrayCamera = null,\\r\\n\\r\\n            _currentViewport = new Vector4(),\\r\\n            _currentScissor = new Vector4(),\\r\\n            _currentScissorTest = null,\\r\\n\\r\\n            //\\r\\n\\r\\n            _usedTextureUnits = 0,\\r\\n\\r\\n            //\\r\\n\\r\\n            _width = _canvas.width,\\r\\n            _height = _canvas.height,\\r\\n\\r\\n            _pixelRatio = 1,\\r\\n\\r\\n            _viewport = new Vector4( 0, 0, _width, _height ),\\r\\n            _scissor = new Vector4( 0, 0, _width, _height ),\\r\\n            _scissorTest = false,\\r\\n\\r\\n            // frustum\\r\\n\\r\\n            _frustum = new Frustum(),\\r\\n\\r\\n            // clipping\\r\\n\\r\\n            _clipping = new WebGLClipping(),\\r\\n            _clippingEnabled = false,\\r\\n            _localClippingEnabled = false,\\r\\n\\r\\n            // camera matrices cache\\r\\n\\r\\n            _projScreenMatrix = new Matrix4(),\\r\\n\\r\\n            _vector3 = new Vector3();\\r\\n\\r\\n        function getTargetPixelRatio() {\\r\\n\\r\\n            return _currentRenderTarget === null ? _pixelRatio : 1;\\r\\n\\r\\n        }\\r\\n\\r\\n        // initialize\\r\\n\\r\\n        var _gl;\\r\\n\\r\\n        try {\\r\\n\\r\\n            var contextAttributes = {\\r\\n                alpha: _alpha,\\r\\n                depth: _depth,\\r\\n                stencil: _stencil,\\r\\n                antialias: _antialias,\\r\\n                premultipliedAlpha: _premultipliedAlpha,\\r\\n                preserveDrawingBuffer: _preserveDrawingBuffer,\\r\\n                powerPreference: _powerPreference\\r\\n            };\\r\\n\\r\\n            // event listeners must be registered before WebGL context is created, see #12753\\r\\n\\r\\n            _canvas.addEventListener( 'webglcontextlost', onContextLost, false );\\r\\n            _canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\\r\\n\\r\\n            _gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\\r\\n\\r\\n            if ( _gl === null ) {\\r\\n\\r\\n                if ( _canvas.getContext( 'webgl' ) !== null ) {\\r\\n\\r\\n                    throw new Error( 'Error creating WebGL context with your selected attributes.' );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    throw new Error( 'Error creating WebGL context.' );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // Some experimental-webgl implementations do not have getShaderPrecisionFormat\\r\\n\\r\\n            if ( _gl.getShaderPrecisionFormat === undefined ) {\\r\\n\\r\\n                _gl.getShaderPrecisionFormat = function () {\\r\\n\\r\\n                    return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\\r\\n\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n        } catch ( error ) {\\r\\n\\r\\n            console.error( 'THREE.WebGLRenderer: ' + error.message );\\r\\n\\r\\n        }\\r\\n\\r\\n        var extensions, capabilities, state, info;\\r\\n        var properties, textures, attributes, geometries, objects;\\r\\n        var programCache, renderLists, renderStates;\\r\\n\\r\\n        var background, morphtargets, bufferRenderer, indexedBufferRenderer;\\r\\n\\r\\n        var utils;\\r\\n\\r\\n        function initGLContext() {\\r\\n\\r\\n            extensions = new WebGLExtensions( _gl );\\r\\n\\r\\n            capabilities = new WebGLCapabilities( _gl, extensions, parameters );\\r\\n\\r\\n            if ( ! capabilities.isWebGL2 ) {\\r\\n\\r\\n                extensions.get( 'WEBGL_depth_texture' );\\r\\n                extensions.get( 'OES_texture_float' );\\r\\n                extensions.get( 'OES_texture_half_float' );\\r\\n                extensions.get( 'OES_texture_half_float_linear' );\\r\\n                extensions.get( 'OES_standard_derivatives' );\\r\\n                extensions.get( 'OES_element_index_uint' );\\r\\n                extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n            }\\r\\n\\r\\n            extensions.get( 'OES_texture_float_linear' );\\r\\n\\r\\n            utils = new WebGLUtils( _gl, extensions, capabilities );\\r\\n\\r\\n            state = new WebGLState( _gl, extensions, utils, capabilities );\\r\\n            state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\\r\\n            state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\\r\\n\\r\\n            info = new WebGLInfo( _gl );\\r\\n            properties = new WebGLProperties();\\r\\n            textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\\r\\n            attributes = new WebGLAttributes( _gl );\\r\\n            geometries = new WebGLGeometries( _gl, attributes, info );\\r\\n            objects = new WebGLObjects( geometries, info );\\r\\n            morphtargets = new WebGLMorphtargets( _gl );\\r\\n            programCache = new WebGLPrograms( _this, extensions, capabilities );\\r\\n            renderLists = new WebGLRenderLists();\\r\\n            renderStates = new WebGLRenderStates();\\r\\n\\r\\n            background = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\\r\\n\\r\\n            bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\\r\\n            indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\\r\\n\\r\\n            info.programs = programCache.programs;\\r\\n\\r\\n            _this.context = _gl;\\r\\n            _this.capabilities = capabilities;\\r\\n            _this.extensions = extensions;\\r\\n            _this.properties = properties;\\r\\n            _this.renderLists = renderLists;\\r\\n            _this.state = state;\\r\\n            _this.info = info;\\r\\n\\r\\n        }\\r\\n\\r\\n        initGLContext();\\r\\n\\r\\n        // vr\\r\\n\\r\\n        var vr = null;\\r\\n\\r\\n        if ( typeof navigator !== 'undefined' ) {\\r\\n\\r\\n            vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.vr = vr;\\r\\n\\r\\n        // shadow map\\r\\n\\r\\n        var shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\\r\\n\\r\\n        this.shadowMap = shadowMap;\\r\\n\\r\\n        // API\\r\\n\\r\\n        this.getContext = function () {\\r\\n\\r\\n            return _gl;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getContextAttributes = function () {\\r\\n\\r\\n            return _gl.getContextAttributes();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.forceContextLoss = function () {\\r\\n\\r\\n            var extension = extensions.get( 'WEBGL_lose_context' );\\r\\n            if ( extension ) extension.loseContext();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.forceContextRestore = function () {\\r\\n\\r\\n            var extension = extensions.get( 'WEBGL_lose_context' );\\r\\n            if ( extension ) extension.restoreContext();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getPixelRatio = function () {\\r\\n\\r\\n            return _pixelRatio;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setPixelRatio = function ( value ) {\\r\\n\\r\\n            if ( value === undefined ) return;\\r\\n\\r\\n            _pixelRatio = value;\\r\\n\\r\\n            this.setSize( _width, _height, false );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getSize = function () {\\r\\n\\r\\n            return {\\r\\n                width: _width,\\r\\n                height: _height\\r\\n            };\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setSize = function ( width, height, updateStyle ) {\\r\\n\\r\\n            if ( vr.isPresenting() ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: Can\\\\'t change size while VR device is presenting.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            _width = width;\\r\\n            _height = height;\\r\\n\\r\\n            _canvas.width = width * _pixelRatio;\\r\\n            _canvas.height = height * _pixelRatio;\\r\\n\\r\\n            if ( updateStyle !== false ) {\\r\\n\\r\\n                _canvas.style.width = width + 'px';\\r\\n                _canvas.style.height = height + 'px';\\r\\n\\r\\n            }\\r\\n\\r\\n            this.setViewport( 0, 0, width, height );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getDrawingBufferSize = function () {\\r\\n\\r\\n            return {\\r\\n                width: _width * _pixelRatio,\\r\\n                height: _height * _pixelRatio\\r\\n            };\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setDrawingBufferSize = function ( width, height, pixelRatio ) {\\r\\n\\r\\n            _width = width;\\r\\n            _height = height;\\r\\n\\r\\n            _pixelRatio = pixelRatio;\\r\\n\\r\\n            _canvas.width = width * pixelRatio;\\r\\n            _canvas.height = height * pixelRatio;\\r\\n\\r\\n            this.setViewport( 0, 0, width, height );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getCurrentViewport = function () {\\r\\n\\r\\n            return _currentViewport;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setViewport = function ( x, y, width, height ) {\\r\\n\\r\\n            _viewport.set( x, _height - y - height, width, height );\\r\\n            state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setScissor = function ( x, y, width, height ) {\\r\\n\\r\\n            _scissor.set( x, _height - y - height, width, height );\\r\\n            state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setScissorTest = function ( boolean ) {\\r\\n\\r\\n            state.setScissorTest( _scissorTest = boolean );\\r\\n\\r\\n        };\\r\\n\\r\\n        // Clearing\\r\\n\\r\\n        this.getClearColor = function () {\\r\\n\\r\\n            return background.getClearColor();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setClearColor = function () {\\r\\n\\r\\n            background.setClearColor.apply( background, arguments );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getClearAlpha = function () {\\r\\n\\r\\n            return background.getClearAlpha();\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setClearAlpha = function () {\\r\\n\\r\\n            background.setClearAlpha.apply( background, arguments );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.clear = function ( color, depth, stencil ) {\\r\\n\\r\\n            var bits = 0;\\r\\n\\r\\n            if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\\r\\n            if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\\r\\n            if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\\r\\n\\r\\n            _gl.clear( bits );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.clearColor = function () {\\r\\n\\r\\n            this.clear( true, false, false );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.clearDepth = function () {\\r\\n\\r\\n            this.clear( false, true, false );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.clearStencil = function () {\\r\\n\\r\\n            this.clear( false, false, true );\\r\\n\\r\\n        };\\r\\n\\r\\n        //\\r\\n\\r\\n        this.dispose = function () {\\r\\n\\r\\n            _canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\\r\\n            _canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\\r\\n\\r\\n            renderLists.dispose();\\r\\n            renderStates.dispose();\\r\\n            properties.dispose();\\r\\n            objects.dispose();\\r\\n\\r\\n            vr.dispose();\\r\\n\\r\\n            animation.stop();\\r\\n\\r\\n        };\\r\\n\\r\\n        // Events\\r\\n\\r\\n        function onContextLost( event ) {\\r\\n\\r\\n            event.preventDefault();\\r\\n\\r\\n            console.log( 'THREE.WebGLRenderer: Context Lost.' );\\r\\n\\r\\n            _isContextLost = true;\\r\\n\\r\\n        }\\r\\n\\r\\n        function onContextRestore( /* event */ ) {\\r\\n\\r\\n            console.log( 'THREE.WebGLRenderer: Context Restored.' );\\r\\n\\r\\n            _isContextLost = false;\\r\\n\\r\\n            initGLContext();\\r\\n\\r\\n        }\\r\\n\\r\\n        function onMaterialDispose( event ) {\\r\\n\\r\\n            var material = event.target;\\r\\n\\r\\n            material.removeEventListener( 'dispose', onMaterialDispose );\\r\\n\\r\\n            deallocateMaterial( material );\\r\\n\\r\\n        }\\r\\n\\r\\n        // Buffer deallocation\\r\\n\\r\\n        function deallocateMaterial( material ) {\\r\\n\\r\\n            releaseMaterialProgramReference( material );\\r\\n\\r\\n            properties.remove( material );\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n        function releaseMaterialProgramReference( material ) {\\r\\n\\r\\n            var programInfo = properties.get( material ).program;\\r\\n\\r\\n            material.program = undefined;\\r\\n\\r\\n            if ( programInfo !== undefined ) {\\r\\n\\r\\n                programCache.releaseProgram( programInfo );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // Buffer rendering\\r\\n\\r\\n        function renderObjectImmediate( object, program ) {\\r\\n\\r\\n            object.render( function ( object ) {\\r\\n\\r\\n                _this.renderBufferImmediate( object, program );\\r\\n\\r\\n            } );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.renderBufferImmediate = function ( object, program ) {\\r\\n\\r\\n            state.initAttributes();\\r\\n\\r\\n            var buffers = properties.get( object );\\r\\n\\r\\n            if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\\r\\n            if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\\r\\n            if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\\r\\n            if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\\r\\n\\r\\n            var programAttributes = program.getAttributes();\\r\\n\\r\\n            if ( object.hasPositions ) {\\r\\n\\r\\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\\r\\n                _gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n                state.enableAttribute( programAttributes.position );\\r\\n                _gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( object.hasNormals ) {\\r\\n\\r\\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\\r\\n                _gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n                state.enableAttribute( programAttributes.normal );\\r\\n                _gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( object.hasUvs ) {\\r\\n\\r\\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\\r\\n                _gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n                state.enableAttribute( programAttributes.uv );\\r\\n                _gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( object.hasColors ) {\\r\\n\\r\\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\\r\\n                _gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n                state.enableAttribute( programAttributes.color );\\r\\n                _gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            state.disableUnusedAttributes();\\r\\n\\r\\n            _gl.drawArrays( _gl.TRIANGLES, 0, object.count );\\r\\n\\r\\n            object.count = 0;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\\r\\n\\r\\n            var frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\\r\\n\\r\\n            state.setMaterial( material, frontFaceCW );\\r\\n\\r\\n            var program = setProgram( camera, fog, material, object );\\r\\n\\r\\n            var updateBuffers = false;\\r\\n\\r\\n            if ( _currentGeometryProgram.geometry !== geometry.id ||\\r\\n                _currentGeometryProgram.program !== program.id ||\\r\\n                _currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\\r\\n\\r\\n                _currentGeometryProgram.geometry = geometry.id;\\r\\n                _currentGeometryProgram.program = program.id;\\r\\n                _currentGeometryProgram.wireframe = material.wireframe === true;\\r\\n                updateBuffers = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( object.morphTargetInfluences ) {\\r\\n\\r\\n                morphtargets.update( object, geometry, material, program );\\r\\n\\r\\n                updateBuffers = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            var index = geometry.index;\\r\\n            var position = geometry.attributes.position;\\r\\n            var rangeFactor = 1;\\r\\n\\r\\n            if ( material.wireframe === true ) {\\r\\n\\r\\n                index = geometries.getWireframeAttribute( geometry );\\r\\n                rangeFactor = 2;\\r\\n\\r\\n            }\\r\\n\\r\\n            var attribute;\\r\\n            var renderer = bufferRenderer;\\r\\n\\r\\n            if ( index !== null ) {\\r\\n\\r\\n                attribute = attributes.get( index );\\r\\n\\r\\n                renderer = indexedBufferRenderer;\\r\\n                renderer.setIndex( attribute );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( updateBuffers ) {\\r\\n\\r\\n                setupVertexAttributes( material, program, geometry );\\r\\n\\r\\n                if ( index !== null ) {\\r\\n\\r\\n                    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            var dataCount = Infinity;\\r\\n\\r\\n            if ( index !== null ) {\\r\\n\\r\\n                dataCount = index.count;\\r\\n\\r\\n            } else if ( position !== undefined ) {\\r\\n\\r\\n                dataCount = position.count;\\r\\n\\r\\n            }\\r\\n\\r\\n            var rangeStart = geometry.drawRange.start * rangeFactor;\\r\\n            var rangeCount = geometry.drawRange.count * rangeFactor;\\r\\n\\r\\n            var groupStart = group !== null ? group.start * rangeFactor : 0;\\r\\n            var groupCount = group !== null ? group.count * rangeFactor : Infinity;\\r\\n\\r\\n            var drawStart = Math.max( rangeStart, groupStart );\\r\\n            var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\\r\\n\\r\\n            var drawCount = Math.max( 0, drawEnd - drawStart + 1 );\\r\\n\\r\\n            if ( drawCount === 0 ) return;\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( object.isMesh ) {\\r\\n\\r\\n                if ( material.wireframe === true ) {\\r\\n\\r\\n                    state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\\r\\n                    renderer.setMode( _gl.LINES );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    switch ( object.drawMode ) {\\r\\n\\r\\n                        case TrianglesDrawMode:\\r\\n                            renderer.setMode( _gl.TRIANGLES );\\r\\n                            break;\\r\\n\\r\\n                        case TriangleStripDrawMode:\\r\\n                            renderer.setMode( _gl.TRIANGLE_STRIP );\\r\\n                            break;\\r\\n\\r\\n                        case TriangleFanDrawMode:\\r\\n                            renderer.setMode( _gl.TRIANGLE_FAN );\\r\\n                            break;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n\\r\\n            } else if ( object.isLine ) {\\r\\n\\r\\n                var lineWidth = material.linewidth;\\r\\n\\r\\n                if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\\r\\n\\r\\n                state.setLineWidth( lineWidth * getTargetPixelRatio() );\\r\\n\\r\\n                if ( object.isLineSegments ) {\\r\\n\\r\\n                    renderer.setMode( _gl.LINES );\\r\\n\\r\\n                } else if ( object.isLineLoop ) {\\r\\n\\r\\n                    renderer.setMode( _gl.LINE_LOOP );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    renderer.setMode( _gl.LINE_STRIP );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( object.isPoints ) {\\r\\n\\r\\n                renderer.setMode( _gl.POINTS );\\r\\n\\r\\n            } else if ( object.isSprite ) {\\r\\n\\r\\n                renderer.setMode( _gl.TRIANGLES );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( geometry && geometry.isInstancedBufferGeometry ) {\\r\\n\\r\\n                if ( geometry.maxInstancedCount > 0 ) {\\r\\n\\r\\n                    renderer.renderInstances( geometry, drawStart, drawCount );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                renderer.render( drawStart, drawCount );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        function setupVertexAttributes( material, program, geometry ) {\\r\\n\\r\\n            if ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\\r\\n\\r\\n                if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\\r\\n\\r\\n                    console.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            state.initAttributes();\\r\\n\\r\\n            var geometryAttributes = geometry.attributes;\\r\\n\\r\\n            var programAttributes = program.getAttributes();\\r\\n\\r\\n            var materialDefaultAttributeValues = material.defaultAttributeValues;\\r\\n\\r\\n            for ( var name in programAttributes ) {\\r\\n\\r\\n                var programAttribute = programAttributes[ name ];\\r\\n\\r\\n                if ( programAttribute >= 0 ) {\\r\\n\\r\\n                    var geometryAttribute = geometryAttributes[ name ];\\r\\n\\r\\n                    if ( geometryAttribute !== undefined ) {\\r\\n\\r\\n                        var normalized = geometryAttribute.normalized;\\r\\n                        var size = geometryAttribute.itemSize;\\r\\n\\r\\n                        var attribute = attributes.get( geometryAttribute );\\r\\n\\r\\n                        // TODO Attribute may not be available on context restore\\r\\n\\r\\n                        if ( attribute === undefined ) continue;\\r\\n\\r\\n                        var buffer = attribute.buffer;\\r\\n                        var type = attribute.type;\\r\\n                        var bytesPerElement = attribute.bytesPerElement;\\r\\n\\r\\n                        if ( geometryAttribute.isInterleavedBufferAttribute ) {\\r\\n\\r\\n                            var data = geometryAttribute.data;\\r\\n                            var stride = data.stride;\\r\\n                            var offset = geometryAttribute.offset;\\r\\n\\r\\n                            if ( data && data.isInstancedInterleavedBuffer ) {\\r\\n\\r\\n                                state.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\\r\\n\\r\\n                                if ( geometry.maxInstancedCount === undefined ) {\\r\\n\\r\\n                                    geometry.maxInstancedCount = data.meshPerAttribute * data.count;\\r\\n\\r\\n                                }\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                state.enableAttribute( programAttribute );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            _gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\r\\n                            _gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            if ( geometryAttribute.isInstancedBufferAttribute ) {\\r\\n\\r\\n                                state.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\\r\\n\\r\\n                                if ( geometry.maxInstancedCount === undefined ) {\\r\\n\\r\\n                                    geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\\r\\n\\r\\n                                }\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                state.enableAttribute( programAttribute );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            _gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\r\\n                            _gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else if ( materialDefaultAttributeValues !== undefined ) {\\r\\n\\r\\n                        var value = materialDefaultAttributeValues[ name ];\\r\\n\\r\\n                        if ( value !== undefined ) {\\r\\n\\r\\n                            switch ( value.length ) {\\r\\n\\r\\n                                case 2:\\r\\n                                    _gl.vertexAttrib2fv( programAttribute, value );\\r\\n                                    break;\\r\\n\\r\\n                                case 3:\\r\\n                                    _gl.vertexAttrib3fv( programAttribute, value );\\r\\n                                    break;\\r\\n\\r\\n                                case 4:\\r\\n                                    _gl.vertexAttrib4fv( programAttribute, value );\\r\\n                                    break;\\r\\n\\r\\n                                default:\\r\\n                                    _gl.vertexAttrib1fv( programAttribute, value );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            state.disableUnusedAttributes();\\r\\n\\r\\n        }\\r\\n\\r\\n        // Compile\\r\\n\\r\\n        this.compile = function ( scene, camera ) {\\r\\n\\r\\n            currentRenderState = renderStates.get( scene, camera );\\r\\n            currentRenderState.init();\\r\\n\\r\\n            scene.traverse( function ( object ) {\\r\\n\\r\\n                if ( object.isLight ) {\\r\\n\\r\\n                    currentRenderState.pushLight( object );\\r\\n\\r\\n                    if ( object.castShadow ) {\\r\\n\\r\\n                        currentRenderState.pushShadow( object );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } );\\r\\n\\r\\n            currentRenderState.setupLights( camera );\\r\\n\\r\\n            scene.traverse( function ( object ) {\\r\\n\\r\\n                if ( object.material ) {\\r\\n\\r\\n                    if ( Array.isArray( object.material ) ) {\\r\\n\\r\\n                        for ( var i = 0; i < object.material.length; i ++ ) {\\r\\n\\r\\n                            initMaterial( object.material[ i ], scene.fog, object );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        initMaterial( object.material, scene.fog, object );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } );\\r\\n\\r\\n        };\\r\\n\\r\\n        // Animation Loop\\r\\n\\r\\n        var onAnimationFrameCallback = null;\\r\\n\\r\\n        function onAnimationFrame( time ) {\\r\\n\\r\\n            if ( vr.isPresenting() ) return;\\r\\n            if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\\r\\n\\r\\n        }\\r\\n\\r\\n        var animation = new WebGLAnimation();\\r\\n        animation.setAnimationLoop( onAnimationFrame );\\r\\n\\r\\n        if ( typeof window !== 'undefined' ) animation.setContext( window );\\r\\n\\r\\n        this.setAnimationLoop = function ( callback ) {\\r\\n\\r\\n            onAnimationFrameCallback = callback;\\r\\n            vr.setAnimationLoop( callback );\\r\\n\\r\\n            animation.start();\\r\\n\\r\\n        };\\r\\n\\r\\n        // Rendering\\r\\n\\r\\n        this.render = function ( scene, camera, renderTarget, forceClear ) {\\r\\n\\r\\n            if ( ! ( camera && camera.isCamera ) ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( _isContextLost ) return;\\r\\n\\r\\n            // reset caching for this frame\\r\\n\\r\\n            _currentGeometryProgram.geometry = null;\\r\\n            _currentGeometryProgram.program = null;\\r\\n            _currentGeometryProgram.wireframe = false;\\r\\n            _currentMaterialId = - 1;\\r\\n            _currentCamera = null;\\r\\n\\r\\n            // update scene graph\\r\\n\\r\\n            if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\\r\\n\\r\\n            // update camera matrices and frustum\\r\\n\\r\\n            if ( camera.parent === null ) camera.updateMatrixWorld();\\r\\n\\r\\n            if ( vr.enabled ) {\\r\\n\\r\\n                camera = vr.getCamera( camera );\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            currentRenderState = renderStates.get( scene, camera );\\r\\n            currentRenderState.init();\\r\\n\\r\\n            scene.onBeforeRender( _this, scene, camera, renderTarget );\\r\\n\\r\\n            _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\\r\\n            _frustum.setFromMatrix( _projScreenMatrix );\\r\\n\\r\\n            _localClippingEnabled = this.localClippingEnabled;\\r\\n            _clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\\r\\n\\r\\n            currentRenderList = renderLists.get( scene, camera );\\r\\n            currentRenderList.init();\\r\\n\\r\\n            projectObject( scene, camera, _this.sortObjects );\\r\\n\\r\\n            if ( _this.sortObjects === true ) {\\r\\n\\r\\n                currentRenderList.sort();\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( _clippingEnabled ) _clipping.beginShadows();\\r\\n\\r\\n            var shadowsArray = currentRenderState.state.shadowsArray;\\r\\n\\r\\n            shadowMap.render( shadowsArray, scene, camera );\\r\\n\\r\\n            currentRenderState.setupLights( camera );\\r\\n\\r\\n            if ( _clippingEnabled ) _clipping.endShadows();\\r\\n\\r\\n            //\\r\\n\\r\\n            if ( this.info.autoReset ) this.info.reset();\\r\\n\\r\\n            if ( renderTarget === undefined ) {\\r\\n\\r\\n                renderTarget = null;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.setRenderTarget( renderTarget );\\r\\n\\r\\n            //\\r\\n\\r\\n            background.render( currentRenderList, scene, camera, forceClear );\\r\\n\\r\\n            // render scene\\r\\n\\r\\n            var opaqueObjects = currentRenderList.opaque;\\r\\n            var transparentObjects = currentRenderList.transparent;\\r\\n\\r\\n            if ( scene.overrideMaterial ) {\\r\\n\\r\\n                var overrideMaterial = scene.overrideMaterial;\\r\\n\\r\\n                if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\\r\\n                if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // opaque pass (front-to-back order)\\r\\n\\r\\n                if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\\r\\n\\r\\n                // transparent pass (back-to-front order)\\r\\n\\r\\n                if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Generate mipmap if we're using any kind of mipmap filtering\\r\\n\\r\\n            if ( renderTarget ) {\\r\\n\\r\\n                textures.updateRenderTargetMipmap( renderTarget );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Ensure depth buffer writing is enabled so it can be cleared on next render\\r\\n\\r\\n            state.buffers.depth.setTest( true );\\r\\n            state.buffers.depth.setMask( true );\\r\\n            state.buffers.color.setMask( true );\\r\\n\\r\\n            state.setPolygonOffset( false );\\r\\n\\r\\n            scene.onAfterRender( _this, scene, camera );\\r\\n\\r\\n            if ( vr.enabled ) {\\r\\n\\r\\n                vr.submitFrame();\\r\\n\\r\\n            }\\r\\n\\r\\n            // _gl.finish();\\r\\n\\r\\n            currentRenderList = null;\\r\\n            currentRenderState = null;\\r\\n\\r\\n        };\\r\\n\\r\\n        /*\\r\\n\\t\\t// TODO Duplicated code (Frustum)\\r\\n\\r\\n\\t\\tvar _sphere = new Sphere();\\r\\n\\r\\n\\t\\tfunction isObjectViewable( object ) {\\r\\n\\r\\n\\t\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere === null )\\r\\n\\t\\t\\t\\tgeometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t\\t_sphere.copy( geometry.boundingSphere ).\\r\\n\\t\\t\\tapplyMatrix4( object.matrixWorld );\\r\\n\\r\\n\\t\\t\\treturn isSphereViewable( _sphere );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction isSpriteViewable( sprite ) {\\r\\n\\r\\n\\t\\t\\t_sphere.center.set( 0, 0, 0 );\\r\\n\\t\\t\\t_sphere.radius = 0.7071067811865476;\\r\\n\\t\\t\\t_sphere.applyMatrix4( sprite.matrixWorld );\\r\\n\\r\\n\\t\\t\\treturn isSphereViewable( _sphere );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction isSphereViewable( sphere ) {\\r\\n\\r\\n\\t\\t\\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\\r\\n\\r\\n\\t\\t\\tvar numPlanes = _clipping.numPlanes;\\r\\n\\r\\n\\t\\t\\tif ( numPlanes === 0 ) return true;\\r\\n\\r\\n\\t\\t\\tvar planes = _this.clippingPlanes,\\r\\n\\r\\n\\t\\t\\t\\tcenter = sphere.center,\\r\\n\\t\\t\\t\\tnegRad = - sphere.radius,\\r\\n\\t\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\t\\tdo {\\r\\n\\r\\n\\t\\t\\t\\t// out when deeper than radius in the negative halfspace\\r\\n\\t\\t\\t\\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\\r\\n\\r\\n\\t\\t\\t} while ( ++ i !== numPlanes );\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\t*/\\r\\n\\r\\n        function projectObject( object, camera, sortObjects ) {\\r\\n\\r\\n            if ( object.visible === false ) return;\\r\\n\\r\\n            var visible = object.layers.test( camera.layers );\\r\\n\\r\\n            if ( visible ) {\\r\\n\\r\\n                if ( object.isLight ) {\\r\\n\\r\\n                    currentRenderState.pushLight( object );\\r\\n\\r\\n                    if ( object.castShadow ) {\\r\\n\\r\\n                        currentRenderState.pushShadow( object );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( object.isSprite ) {\\r\\n\\r\\n                    if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\\r\\n\\r\\n                        if ( sortObjects ) {\\r\\n\\r\\n                            _vector3.setFromMatrixPosition( object.matrixWorld )\\r\\n                                .applyMatrix4( _projScreenMatrix );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        var geometry = objects.update( object );\\r\\n                        var material = object.material;\\r\\n\\r\\n                        currentRenderList.push( object, geometry, material, _vector3.z, null );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( object.isImmediateRenderObject ) {\\r\\n\\r\\n                    if ( sortObjects ) {\\r\\n\\r\\n                        _vector3.setFromMatrixPosition( object.matrixWorld )\\r\\n                            .applyMatrix4( _projScreenMatrix );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    currentRenderList.push( object, null, object.material, _vector3.z, null );\\r\\n\\r\\n                } else if ( object.isMesh || object.isLine || object.isPoints ) {\\r\\n\\r\\n                    if ( object.isSkinnedMesh ) {\\r\\n\\r\\n                        object.skeleton.update();\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\\r\\n\\r\\n                        if ( sortObjects ) {\\r\\n\\r\\n                            _vector3.setFromMatrixPosition( object.matrixWorld )\\r\\n                                .applyMatrix4( _projScreenMatrix );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        var geometry = objects.update( object );\\r\\n                        var material = object.material;\\r\\n\\r\\n                        if ( Array.isArray( material ) ) {\\r\\n\\r\\n                            var groups = geometry.groups;\\r\\n\\r\\n                            for ( var i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n                                var group = groups[ i ];\\r\\n                                var groupMaterial = material[ group.materialIndex ];\\r\\n\\r\\n                                if ( groupMaterial && groupMaterial.visible ) {\\r\\n\\r\\n                                    currentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else if ( material.visible ) {\\r\\n\\r\\n                            currentRenderList.push( object, geometry, material, _vector3.z, null );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var children = object.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                projectObject( children[ i ], camera, sortObjects );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function renderObjects( renderList, scene, camera, overrideMaterial ) {\\r\\n\\r\\n            for ( var i = 0, l = renderList.length; i < l; i ++ ) {\\r\\n\\r\\n                var renderItem = renderList[ i ];\\r\\n\\r\\n                var object = renderItem.object;\\r\\n                var geometry = renderItem.geometry;\\r\\n                var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\\r\\n                var group = renderItem.group;\\r\\n\\r\\n                if ( camera.isArrayCamera ) {\\r\\n\\r\\n                    _currentArrayCamera = camera;\\r\\n\\r\\n                    var cameras = camera.cameras;\\r\\n\\r\\n                    for ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\\r\\n\\r\\n                        var camera2 = cameras[ j ];\\r\\n\\r\\n                        if ( object.layers.test( camera2.layers ) ) {\\r\\n\\r\\n                            if ( 'viewport' in camera2 ) { // XR\\r\\n\\r\\n                                state.viewport( _currentViewport.copy( camera2.viewport ) );\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                var bounds = camera2.bounds;\\r\\n\\r\\n                                var x = bounds.x * _width;\\r\\n                                var y = bounds.y * _height;\\r\\n                                var width = bounds.z * _width;\\r\\n                                var height = bounds.w * _height;\\r\\n\\r\\n                                state.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            currentRenderState.setupLights( camera2 );\\r\\n\\r\\n                            renderObject( object, scene, camera2, geometry, material, group );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    _currentArrayCamera = null;\\r\\n\\r\\n                    renderObject( object, scene, camera, geometry, material, group );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function renderObject( object, scene, camera, geometry, material, group ) {\\r\\n\\r\\n            object.onBeforeRender( _this, scene, camera, geometry, material, group );\\r\\n            currentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\\r\\n\\r\\n            object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\\r\\n            object.normalMatrix.getNormalMatrix( object.modelViewMatrix );\\r\\n\\r\\n            if ( object.isImmediateRenderObject ) {\\r\\n\\r\\n                state.setMaterial( material );\\r\\n\\r\\n                var program = setProgram( camera, scene.fog, material, object );\\r\\n\\r\\n                _currentGeometryProgram.geometry = null;\\r\\n                _currentGeometryProgram.program = null;\\r\\n                _currentGeometryProgram.wireframe = false;\\r\\n\\r\\n                renderObjectImmediate( object, program );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                _this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\\r\\n\\r\\n            }\\r\\n\\r\\n            object.onAfterRender( _this, scene, camera, geometry, material, group );\\r\\n            currentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\\r\\n\\r\\n        }\\r\\n\\r\\n        function initMaterial( material, fog, object ) {\\r\\n\\r\\n            var materialProperties = properties.get( material );\\r\\n\\r\\n            var lights = currentRenderState.state.lights;\\r\\n            var shadowsArray = currentRenderState.state.shadowsArray;\\r\\n\\r\\n            var lightsHash = materialProperties.lightsHash;\\r\\n            var lightsStateHash = lights.state.hash;\\r\\n\\r\\n            var parameters = programCache.getParameters(\\r\\n                material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\\r\\n\\r\\n            var code = programCache.getProgramCode( material, parameters );\\r\\n\\r\\n            var program = materialProperties.program;\\r\\n            var programChange = true;\\r\\n\\r\\n            if ( program === undefined ) {\\r\\n\\r\\n                // new material\\r\\n                material.addEventListener( 'dispose', onMaterialDispose );\\r\\n\\r\\n            } else if ( program.code !== code ) {\\r\\n\\r\\n                // changed glsl or parameters\\r\\n                releaseMaterialProgramReference( material );\\r\\n\\r\\n            } else if ( lightsHash.stateID !== lightsStateHash.stateID ||\\r\\n                lightsHash.directionalLength !== lightsStateHash.directionalLength ||\\r\\n                lightsHash.pointLength !== lightsStateHash.pointLength ||\\r\\n                lightsHash.spotLength !== lightsStateHash.spotLength ||\\r\\n                lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\\r\\n                lightsHash.hemiLength !== lightsStateHash.hemiLength ||\\r\\n                lightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\\r\\n\\r\\n                lightsHash.stateID = lightsStateHash.stateID;\\r\\n                lightsHash.directionalLength = lightsStateHash.directionalLength;\\r\\n                lightsHash.pointLength = lightsStateHash.pointLength;\\r\\n                lightsHash.spotLength = lightsStateHash.spotLength;\\r\\n                lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\\r\\n                lightsHash.hemiLength = lightsStateHash.hemiLength;\\r\\n                lightsHash.shadowsLength = lightsStateHash.shadowsLength;\\r\\n\\r\\n                programChange = false;\\r\\n\\r\\n            } else if ( parameters.shaderID !== undefined ) {\\r\\n\\r\\n                // same glsl and uniform list\\r\\n                return;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // only rebuild uniform list\\r\\n                programChange = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( programChange ) {\\r\\n\\r\\n                if ( parameters.shaderID ) {\\r\\n\\r\\n                    var shader = ShaderLib[ parameters.shaderID ];\\r\\n\\r\\n                    materialProperties.shader = {\\r\\n                        name: material.type,\\r\\n                        uniforms: UniformsUtils.clone( shader.uniforms ),\\r\\n                        vertexShader: shader.vertexShader,\\r\\n                        fragmentShader: shader.fragmentShader\\r\\n                    };\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    materialProperties.shader = {\\r\\n                        name: material.type,\\r\\n                        uniforms: material.uniforms,\\r\\n                        vertexShader: material.vertexShader,\\r\\n                        fragmentShader: material.fragmentShader\\r\\n                    };\\r\\n\\r\\n                }\\r\\n\\r\\n                material.onBeforeCompile( materialProperties.shader, _this );\\r\\n\\r\\n                // Computing code again as onBeforeCompile may have changed the shaders\\r\\n                code = programCache.getProgramCode( material, parameters );\\r\\n\\r\\n                program = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\\r\\n\\r\\n                materialProperties.program = program;\\r\\n                material.program = program;\\r\\n\\r\\n            }\\r\\n\\r\\n            var programAttributes = program.getAttributes();\\r\\n\\r\\n            if ( material.morphTargets ) {\\r\\n\\r\\n                material.numSupportedMorphTargets = 0;\\r\\n\\r\\n                for ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\\r\\n\\r\\n                    if ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\\r\\n\\r\\n                        material.numSupportedMorphTargets ++;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.morphNormals ) {\\r\\n\\r\\n                material.numSupportedMorphNormals = 0;\\r\\n\\r\\n                for ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\\r\\n\\r\\n                    if ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\\r\\n\\r\\n                        material.numSupportedMorphNormals ++;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var uniforms = materialProperties.shader.uniforms;\\r\\n\\r\\n            if ( ! material.isShaderMaterial &&\\r\\n                ! material.isRawShaderMaterial ||\\r\\n                material.clipping === true ) {\\r\\n\\r\\n                materialProperties.numClippingPlanes = _clipping.numPlanes;\\r\\n                materialProperties.numIntersection = _clipping.numIntersection;\\r\\n                uniforms.clippingPlanes = _clipping.uniform;\\r\\n\\r\\n            }\\r\\n\\r\\n            materialProperties.fog = fog;\\r\\n\\r\\n            // store the light setup it was created for\\r\\n            if ( lightsHash === undefined ) {\\r\\n\\r\\n                materialProperties.lightsHash = lightsHash = {};\\r\\n\\r\\n            }\\r\\n\\r\\n            lightsHash.stateID = lightsStateHash.stateID;\\r\\n            lightsHash.directionalLength = lightsStateHash.directionalLength;\\r\\n            lightsHash.pointLength = lightsStateHash.pointLength;\\r\\n            lightsHash.spotLength = lightsStateHash.spotLength;\\r\\n            lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\\r\\n            lightsHash.hemiLength = lightsStateHash.hemiLength;\\r\\n            lightsHash.shadowsLength = lightsStateHash.shadowsLength;\\r\\n\\r\\n            if ( material.lights ) {\\r\\n\\r\\n                // wire up the material to this renderer's lighting state\\r\\n\\r\\n                uniforms.ambientLightColor.value = lights.state.ambient;\\r\\n                uniforms.directionalLights.value = lights.state.directional;\\r\\n                uniforms.spotLights.value = lights.state.spot;\\r\\n                uniforms.rectAreaLights.value = lights.state.rectArea;\\r\\n                uniforms.pointLights.value = lights.state.point;\\r\\n                uniforms.hemisphereLights.value = lights.state.hemi;\\r\\n\\r\\n                uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\\r\\n                uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\\r\\n                uniforms.spotShadowMap.value = lights.state.spotShadowMap;\\r\\n                uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\\r\\n                uniforms.pointShadowMap.value = lights.state.pointShadowMap;\\r\\n                uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\\r\\n                // TODO (abelnation): add area lights shadow info to uniforms\\r\\n\\r\\n            }\\r\\n\\r\\n            var progUniforms = materialProperties.program.getUniforms(),\\r\\n                uniformsList =\\r\\n                    WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\\r\\n\\r\\n            materialProperties.uniformsList = uniformsList;\\r\\n\\r\\n        }\\r\\n\\r\\n        function setProgram( camera, fog, material, object ) {\\r\\n\\r\\n            _usedTextureUnits = 0;\\r\\n\\r\\n            var materialProperties = properties.get( material );\\r\\n            var lights = currentRenderState.state.lights;\\r\\n\\r\\n            var lightsHash = materialProperties.lightsHash;\\r\\n            var lightsStateHash = lights.state.hash;\\r\\n\\r\\n            if ( _clippingEnabled ) {\\r\\n\\r\\n                if ( _localClippingEnabled || camera !== _currentCamera ) {\\r\\n\\r\\n                    var useCache =\\r\\n                        camera === _currentCamera &&\\r\\n                        material.id === _currentMaterialId;\\r\\n\\r\\n                    // we might want to call this function with some ClippingGroup\\r\\n                    // object instead of the material, once it becomes feasible\\r\\n                    // (#8465, #8379)\\r\\n                    _clipping.setState(\\r\\n                        material.clippingPlanes, material.clipIntersection, material.clipShadows,\\r\\n                        camera, materialProperties, useCache );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.needsUpdate === false ) {\\r\\n\\r\\n                if ( materialProperties.program === undefined ) {\\r\\n\\r\\n                    material.needsUpdate = true;\\r\\n\\r\\n                } else if ( material.fog && materialProperties.fog !== fog ) {\\r\\n\\r\\n                    material.needsUpdate = true;\\r\\n\\r\\n                } else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\\r\\n                        lightsHash.directionalLength !== lightsStateHash.directionalLength ||\\r\\n                        lightsHash.pointLength !== lightsStateHash.pointLength ||\\r\\n                        lightsHash.spotLength !== lightsStateHash.spotLength ||\\r\\n                        lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\\r\\n                        lightsHash.hemiLength !== lightsStateHash.hemiLength ||\\r\\n                        lightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\\r\\n\\r\\n                    material.needsUpdate = true;\\r\\n\\r\\n                } else if ( materialProperties.numClippingPlanes !== undefined &&\\r\\n                    ( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\\r\\n                        materialProperties.numIntersection !== _clipping.numIntersection ) ) {\\r\\n\\r\\n                    material.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.needsUpdate ) {\\r\\n\\r\\n                initMaterial( material, fog, object );\\r\\n                material.needsUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            var refreshProgram = false;\\r\\n            var refreshMaterial = false;\\r\\n            var refreshLights = false;\\r\\n\\r\\n            var program = materialProperties.program,\\r\\n                p_uniforms = program.getUniforms(),\\r\\n                m_uniforms = materialProperties.shader.uniforms;\\r\\n\\r\\n            if ( state.useProgram( program.program ) ) {\\r\\n\\r\\n                refreshProgram = true;\\r\\n                refreshMaterial = true;\\r\\n                refreshLights = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.id !== _currentMaterialId ) {\\r\\n\\r\\n                _currentMaterialId = material.id;\\r\\n\\r\\n                refreshMaterial = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( refreshProgram || _currentCamera !== camera ) {\\r\\n\\r\\n                p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\\r\\n\\r\\n                if ( capabilities.logarithmicDepthBuffer ) {\\r\\n\\r\\n                    p_uniforms.setValue( _gl, 'logDepthBufFC',\\r\\n                        2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( _currentCamera !== camera ) {\\r\\n\\r\\n                    _currentCamera = camera;\\r\\n\\r\\n                    // lighting uniforms depend on the camera so enforce an update\\r\\n                    // now, in case this material supports lights - or later, when\\r\\n                    // the next material that does gets activated:\\r\\n\\r\\n                    refreshMaterial = true;\\t\\t// set to true on material change\\r\\n                    refreshLights = true;\\t\\t// remains set until update done\\r\\n\\r\\n                }\\r\\n\\r\\n                // load material specific uniforms\\r\\n                // (shader material also gets them for the sake of genericity)\\r\\n\\r\\n                if ( material.isShaderMaterial ||\\r\\n                    material.isMeshPhongMaterial ||\\r\\n                    material.isMeshStandardMaterial ||\\r\\n                    material.envMap ) {\\r\\n\\r\\n                    var uCamPos = p_uniforms.map.cameraPosition;\\r\\n\\r\\n                    if ( uCamPos !== undefined ) {\\r\\n\\r\\n                        uCamPos.setValue( _gl,\\r\\n                            _vector3.setFromMatrixPosition( camera.matrixWorld ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( material.isMeshPhongMaterial ||\\r\\n                    material.isMeshLambertMaterial ||\\r\\n                    material.isMeshBasicMaterial ||\\r\\n                    material.isMeshStandardMaterial ||\\r\\n                    material.isShaderMaterial ||\\r\\n                    material.skinning ) {\\r\\n\\r\\n                    p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // skinning uniforms must be set even if material didn't change\\r\\n            // auto-setting of texture unit for bone texture must go before other textures\\r\\n            // not sure why, but otherwise weird things happen\\r\\n\\r\\n            if ( material.skinning ) {\\r\\n\\r\\n                p_uniforms.setOptional( _gl, object, 'bindMatrix' );\\r\\n                p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\\r\\n\\r\\n                var skeleton = object.skeleton;\\r\\n\\r\\n                if ( skeleton ) {\\r\\n\\r\\n                    var bones = skeleton.bones;\\r\\n\\r\\n                    if ( capabilities.floatVertexTextures ) {\\r\\n\\r\\n                        if ( skeleton.boneTexture === undefined ) {\\r\\n\\r\\n                            // layout (1 matrix = 4 pixels)\\r\\n                            //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\\r\\n                            //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\\r\\n                            //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\\r\\n                            //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\\r\\n                            //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\\r\\n\\r\\n\\r\\n                            var size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\\r\\n                            size = _Math.ceilPowerOfTwo( size );\\r\\n                            size = Math.max( size, 4 );\\r\\n\\r\\n                            var boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\\r\\n                            boneMatrices.set( skeleton.boneMatrices ); // copy current values\\r\\n\\r\\n                            var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\\r\\n                            boneTexture.needsUpdate = true;\\r\\n\\r\\n                            skeleton.boneMatrices = boneMatrices;\\r\\n                            skeleton.boneTexture = boneTexture;\\r\\n                            skeleton.boneTextureSize = size;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\\r\\n                        p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( refreshMaterial ) {\\r\\n\\r\\n                p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\\r\\n                p_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\\r\\n\\r\\n                if ( material.lights ) {\\r\\n\\r\\n                    // the current material requires lighting info\\r\\n\\r\\n                    // note: all lighting uniforms are always set correctly\\r\\n                    // they simply reference the renderer's state for their\\r\\n                    // values\\r\\n                    //\\r\\n                    // use the current material's .needsUpdate flags to set\\r\\n                    // the GL state when required\\r\\n\\r\\n                    markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\\r\\n\\r\\n                }\\r\\n\\r\\n                // refresh uniforms common to several materials\\r\\n\\r\\n                if ( fog && material.fog ) {\\r\\n\\r\\n                    refreshUniformsFog( m_uniforms, fog );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( material.isMeshBasicMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isMeshLambertMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n                    refreshUniformsLambert( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isMeshPhongMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n\\r\\n                    if ( material.isMeshToonMaterial ) {\\r\\n\\r\\n                        refreshUniformsToon( m_uniforms, material );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        refreshUniformsPhong( m_uniforms, material );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( material.isMeshStandardMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n\\r\\n                    if ( material.isMeshPhysicalMaterial ) {\\r\\n\\r\\n                        refreshUniformsPhysical( m_uniforms, material );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        refreshUniformsStandard( m_uniforms, material );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( material.isMeshMatcapMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n\\r\\n                    refreshUniformsMatcap( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isMeshDepthMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n                    refreshUniformsDepth( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isMeshDistanceMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n                    refreshUniformsDistance( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isMeshNormalMaterial ) {\\r\\n\\r\\n                    refreshUniformsCommon( m_uniforms, material );\\r\\n                    refreshUniformsNormal( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isLineBasicMaterial ) {\\r\\n\\r\\n                    refreshUniformsLine( m_uniforms, material );\\r\\n\\r\\n                    if ( material.isLineDashedMaterial ) {\\r\\n\\r\\n                        refreshUniformsDash( m_uniforms, material );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( material.isPointsMaterial ) {\\r\\n\\r\\n                    refreshUniformsPoints( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isSpriteMaterial ) {\\r\\n\\r\\n                    refreshUniformsSprites( m_uniforms, material );\\r\\n\\r\\n                } else if ( material.isShadowMaterial ) {\\r\\n\\r\\n                    m_uniforms.color.value = material.color;\\r\\n                    m_uniforms.opacity.value = material.opacity;\\r\\n\\r\\n                }\\r\\n\\r\\n                // RectAreaLight Texture\\r\\n                // TODO (mrdoob): Find a nicer implementation\\r\\n\\r\\n                if ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\\r\\n                if ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\\r\\n\\r\\n                WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\\r\\n\\r\\n                WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\\r\\n                material.uniformsNeedUpdate = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.isSpriteMaterial ) {\\r\\n\\r\\n                p_uniforms.setValue( _gl, 'center', object.center );\\r\\n\\r\\n            }\\r\\n\\r\\n            // common matrices\\r\\n\\r\\n            p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\\r\\n            p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\\r\\n            p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\\r\\n\\r\\n            return program;\\r\\n\\r\\n        }\\r\\n\\r\\n        // Uniforms (refresh uniforms objects)\\r\\n\\r\\n        function refreshUniformsCommon( uniforms, material ) {\\r\\n\\r\\n            uniforms.opacity.value = material.opacity;\\r\\n\\r\\n            if ( material.color ) {\\r\\n\\r\\n                uniforms.diffuse.value = material.color;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.emissive ) {\\r\\n\\r\\n                uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.map ) {\\r\\n\\r\\n                uniforms.map.value = material.map;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.alphaMap ) {\\r\\n\\r\\n                uniforms.alphaMap.value = material.alphaMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.specularMap ) {\\r\\n\\r\\n                uniforms.specularMap.value = material.specularMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.envMap ) {\\r\\n\\r\\n                uniforms.envMap.value = material.envMap;\\r\\n\\r\\n                // don't flip CubeTexture envMaps, flip everything else:\\r\\n                //  WebGLRenderTargetCube will be flipped for backwards compatibility\\r\\n                //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\\r\\n                // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\\r\\n                uniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\\r\\n\\r\\n                uniforms.reflectivity.value = material.reflectivity;\\r\\n                uniforms.refractionRatio.value = material.refractionRatio;\\r\\n\\r\\n                uniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.lightMap ) {\\r\\n\\r\\n                uniforms.lightMap.value = material.lightMap;\\r\\n                uniforms.lightMapIntensity.value = material.lightMapIntensity;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.aoMap ) {\\r\\n\\r\\n                uniforms.aoMap.value = material.aoMap;\\r\\n                uniforms.aoMapIntensity.value = material.aoMapIntensity;\\r\\n\\r\\n            }\\r\\n\\r\\n            // uv repeat and offset setting priorities\\r\\n            // 1. color map\\r\\n            // 2. specular map\\r\\n            // 3. normal map\\r\\n            // 4. bump map\\r\\n            // 5. alpha map\\r\\n            // 6. emissive map\\r\\n\\r\\n            var uvScaleMap;\\r\\n\\r\\n            if ( material.map ) {\\r\\n\\r\\n                uvScaleMap = material.map;\\r\\n\\r\\n            } else if ( material.specularMap ) {\\r\\n\\r\\n                uvScaleMap = material.specularMap;\\r\\n\\r\\n            } else if ( material.displacementMap ) {\\r\\n\\r\\n                uvScaleMap = material.displacementMap;\\r\\n\\r\\n            } else if ( material.normalMap ) {\\r\\n\\r\\n                uvScaleMap = material.normalMap;\\r\\n\\r\\n            } else if ( material.bumpMap ) {\\r\\n\\r\\n                uvScaleMap = material.bumpMap;\\r\\n\\r\\n            } else if ( material.roughnessMap ) {\\r\\n\\r\\n                uvScaleMap = material.roughnessMap;\\r\\n\\r\\n            } else if ( material.metalnessMap ) {\\r\\n\\r\\n                uvScaleMap = material.metalnessMap;\\r\\n\\r\\n            } else if ( material.alphaMap ) {\\r\\n\\r\\n                uvScaleMap = material.alphaMap;\\r\\n\\r\\n            } else if ( material.emissiveMap ) {\\r\\n\\r\\n                uvScaleMap = material.emissiveMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( uvScaleMap !== undefined ) {\\r\\n\\r\\n                // backwards compatibility\\r\\n                if ( uvScaleMap.isWebGLRenderTarget ) {\\r\\n\\r\\n                    uvScaleMap = uvScaleMap.texture;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( uvScaleMap.matrixAutoUpdate === true ) {\\r\\n\\r\\n                    uvScaleMap.updateMatrix();\\r\\n\\r\\n                }\\r\\n\\r\\n                uniforms.uvTransform.value.copy( uvScaleMap.matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsLine( uniforms, material ) {\\r\\n\\r\\n            uniforms.diffuse.value = material.color;\\r\\n            uniforms.opacity.value = material.opacity;\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsDash( uniforms, material ) {\\r\\n\\r\\n            uniforms.dashSize.value = material.dashSize;\\r\\n            uniforms.totalSize.value = material.dashSize + material.gapSize;\\r\\n            uniforms.scale.value = material.scale;\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsPoints( uniforms, material ) {\\r\\n\\r\\n            uniforms.diffuse.value = material.color;\\r\\n            uniforms.opacity.value = material.opacity;\\r\\n            uniforms.size.value = material.size * _pixelRatio;\\r\\n            uniforms.scale.value = _height * 0.5;\\r\\n\\r\\n            uniforms.map.value = material.map;\\r\\n\\r\\n            if ( material.map !== null ) {\\r\\n\\r\\n                if ( material.map.matrixAutoUpdate === true ) {\\r\\n\\r\\n                    material.map.updateMatrix();\\r\\n\\r\\n                }\\r\\n\\r\\n                uniforms.uvTransform.value.copy( material.map.matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsSprites( uniforms, material ) {\\r\\n\\r\\n            uniforms.diffuse.value = material.color;\\r\\n            uniforms.opacity.value = material.opacity;\\r\\n            uniforms.rotation.value = material.rotation;\\r\\n            uniforms.map.value = material.map;\\r\\n\\r\\n            if ( material.map !== null ) {\\r\\n\\r\\n                if ( material.map.matrixAutoUpdate === true ) {\\r\\n\\r\\n                    material.map.updateMatrix();\\r\\n\\r\\n                }\\r\\n\\r\\n                uniforms.uvTransform.value.copy( material.map.matrix );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsFog( uniforms, fog ) {\\r\\n\\r\\n            uniforms.fogColor.value = fog.color;\\r\\n\\r\\n            if ( fog.isFog ) {\\r\\n\\r\\n                uniforms.fogNear.value = fog.near;\\r\\n                uniforms.fogFar.value = fog.far;\\r\\n\\r\\n            } else if ( fog.isFogExp2 ) {\\r\\n\\r\\n                uniforms.fogDensity.value = fog.density;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsLambert( uniforms, material ) {\\r\\n\\r\\n            if ( material.emissiveMap ) {\\r\\n\\r\\n                uniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsPhong( uniforms, material ) {\\r\\n\\r\\n            uniforms.specular.value = material.specular;\\r\\n            uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\\r\\n\\r\\n            if ( material.emissiveMap ) {\\r\\n\\r\\n                uniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.bumpMap ) {\\r\\n\\r\\n                uniforms.bumpMap.value = material.bumpMap;\\r\\n                uniforms.bumpScale.value = material.bumpScale;\\r\\n                if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.normalMap ) {\\r\\n\\r\\n                uniforms.normalMap.value = material.normalMap;\\r\\n                uniforms.normalScale.value.copy( material.normalScale );\\r\\n                if ( material.side === BackSide ) uniforms.normalScale.value.negate();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsToon( uniforms, material ) {\\r\\n\\r\\n            refreshUniformsPhong( uniforms, material );\\r\\n\\r\\n            if ( material.gradientMap ) {\\r\\n\\r\\n                uniforms.gradientMap.value = material.gradientMap;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsStandard( uniforms, material ) {\\r\\n\\r\\n            uniforms.roughness.value = material.roughness;\\r\\n            uniforms.metalness.value = material.metalness;\\r\\n\\r\\n            if ( material.roughnessMap ) {\\r\\n\\r\\n                uniforms.roughnessMap.value = material.roughnessMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.metalnessMap ) {\\r\\n\\r\\n                uniforms.metalnessMap.value = material.metalnessMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.emissiveMap ) {\\r\\n\\r\\n                uniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.bumpMap ) {\\r\\n\\r\\n                uniforms.bumpMap.value = material.bumpMap;\\r\\n                uniforms.bumpScale.value = material.bumpScale;\\r\\n                if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.normalMap ) {\\r\\n\\r\\n                uniforms.normalMap.value = material.normalMap;\\r\\n                uniforms.normalScale.value.copy( material.normalScale );\\r\\n                if ( material.side === BackSide ) uniforms.normalScale.value.negate();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.envMap ) {\\r\\n\\r\\n                //uniforms.envMap.value = material.envMap; // part of uniforms common\\r\\n                uniforms.envMapIntensity.value = material.envMapIntensity;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsPhysical( uniforms, material ) {\\r\\n\\r\\n            refreshUniformsStandard( uniforms, material );\\r\\n\\r\\n            uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\\r\\n\\r\\n            uniforms.clearCoat.value = material.clearCoat;\\r\\n            uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsMatcap( uniforms, material ) {\\r\\n\\r\\n            if ( material.matcap ) {\\r\\n\\r\\n                uniforms.matcap.value = material.matcap;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.bumpMap ) {\\r\\n\\r\\n                uniforms.bumpMap.value = material.bumpMap;\\r\\n                uniforms.bumpScale.value = material.bumpScale;\\r\\n                if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.normalMap ) {\\r\\n\\r\\n                uniforms.normalMap.value = material.normalMap;\\r\\n                uniforms.normalScale.value.copy( material.normalScale );\\r\\n                if ( material.side === BackSide ) uniforms.normalScale.value.negate();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsDepth( uniforms, material ) {\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsDistance( uniforms, material ) {\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n            uniforms.referencePosition.value.copy( material.referencePosition );\\r\\n            uniforms.nearDistance.value = material.nearDistance;\\r\\n            uniforms.farDistance.value = material.farDistance;\\r\\n\\r\\n        }\\r\\n\\r\\n        function refreshUniformsNormal( uniforms, material ) {\\r\\n\\r\\n            if ( material.bumpMap ) {\\r\\n\\r\\n                uniforms.bumpMap.value = material.bumpMap;\\r\\n                uniforms.bumpScale.value = material.bumpScale;\\r\\n                if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.normalMap ) {\\r\\n\\r\\n                uniforms.normalMap.value = material.normalMap;\\r\\n                uniforms.normalScale.value.copy( material.normalScale );\\r\\n                if ( material.side === BackSide ) uniforms.normalScale.value.negate();\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( material.displacementMap ) {\\r\\n\\r\\n                uniforms.displacementMap.value = material.displacementMap;\\r\\n                uniforms.displacementScale.value = material.displacementScale;\\r\\n                uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // If uniforms are marked as clean, they don't need to be loaded to the GPU.\\r\\n\\r\\n        function markUniformsLightsNeedsUpdate( uniforms, value ) {\\r\\n\\r\\n            uniforms.ambientLightColor.needsUpdate = value;\\r\\n\\r\\n            uniforms.directionalLights.needsUpdate = value;\\r\\n            uniforms.pointLights.needsUpdate = value;\\r\\n            uniforms.spotLights.needsUpdate = value;\\r\\n            uniforms.rectAreaLights.needsUpdate = value;\\r\\n            uniforms.hemisphereLights.needsUpdate = value;\\r\\n\\r\\n        }\\r\\n\\r\\n        // Textures\\r\\n\\r\\n        function allocTextureUnit() {\\r\\n\\r\\n            var textureUnit = _usedTextureUnits;\\r\\n\\r\\n            if ( textureUnit >= capabilities.maxTextures ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\\r\\n\\r\\n            }\\r\\n\\r\\n            _usedTextureUnits += 1;\\r\\n\\r\\n            return textureUnit;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.allocTextureUnit = allocTextureUnit;\\r\\n\\r\\n        // this.setTexture2D = setTexture2D;\\r\\n        this.setTexture2D = ( function () {\\r\\n\\r\\n            var warned = false;\\r\\n\\r\\n            // backwards compatibility: peel texture.texture\\r\\n            return function setTexture2D( texture, slot ) {\\r\\n\\r\\n                if ( texture && texture.isWebGLRenderTarget ) {\\r\\n\\r\\n                    if ( ! warned ) {\\r\\n\\r\\n                        console.warn( \\\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\\\" );\\r\\n                        warned = true;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture = texture.texture;\\r\\n\\r\\n                }\\r\\n\\r\\n                textures.setTexture2D( texture, slot );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() );\\r\\n\\r\\n        this.setTexture3D = ( function () {\\r\\n\\r\\n            // backwards compatibility: peel texture.texture\\r\\n            return function setTexture3D( texture, slot ) {\\r\\n\\r\\n                textures.setTexture3D( texture, slot );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() );\\r\\n\\r\\n        this.setTexture = ( function () {\\r\\n\\r\\n            var warned = false;\\r\\n\\r\\n            return function setTexture( texture, slot ) {\\r\\n\\r\\n                if ( ! warned ) {\\r\\n\\r\\n                    console.warn( \\\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\\\" );\\r\\n                    warned = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                textures.setTexture2D( texture, slot );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() );\\r\\n\\r\\n        this.setTextureCube = ( function () {\\r\\n\\r\\n            var warned = false;\\r\\n\\r\\n            return function setTextureCube( texture, slot ) {\\r\\n\\r\\n                // backwards compatibility: peel texture.texture\\r\\n                if ( texture && texture.isWebGLRenderTargetCube ) {\\r\\n\\r\\n                    if ( ! warned ) {\\r\\n\\r\\n                        console.warn( \\\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\\\" );\\r\\n                        warned = true;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture = texture.texture;\\r\\n\\r\\n                }\\r\\n\\r\\n                // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\\r\\n                // TODO: unify these code paths\\r\\n                if ( ( texture && texture.isCubeTexture ) ||\\r\\n                    ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\\r\\n\\r\\n                    // CompressedTexture can have Array in image :/\\r\\n\\r\\n                    // this function alone should take care of cube textures\\r\\n                    textures.setTextureCube( texture, slot );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // assumed: texture property of THREE.WebGLRenderTargetCube\\r\\n\\r\\n                    textures.setTextureCubeDynamic( texture, slot );\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }() );\\r\\n\\r\\n        //\\r\\n\\r\\n        this.setFramebuffer = function ( value ) {\\r\\n\\r\\n            _framebuffer = value;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.getRenderTarget = function () {\\r\\n\\r\\n            return _currentRenderTarget;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setRenderTarget = function ( renderTarget ) {\\r\\n\\r\\n            _currentRenderTarget = renderTarget;\\r\\n\\r\\n            if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\\r\\n\\r\\n                textures.setupRenderTarget( renderTarget );\\r\\n\\r\\n            }\\r\\n\\r\\n            var framebuffer = _framebuffer;\\r\\n            var isCube = false;\\r\\n\\r\\n            if ( renderTarget ) {\\r\\n\\r\\n                var __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\\r\\n\\r\\n                if ( renderTarget.isWebGLRenderTargetCube ) {\\r\\n\\r\\n                    framebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\\r\\n                    isCube = true;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    framebuffer = __webglFramebuffer;\\r\\n\\r\\n                }\\r\\n\\r\\n                _currentViewport.copy( renderTarget.viewport );\\r\\n                _currentScissor.copy( renderTarget.scissor );\\r\\n                _currentScissorTest = renderTarget.scissorTest;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\\r\\n                _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\\r\\n                _currentScissorTest = _scissorTest;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( _currentFramebuffer !== framebuffer ) {\\r\\n\\r\\n                _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n                _currentFramebuffer = framebuffer;\\r\\n\\r\\n            }\\r\\n\\r\\n            state.viewport( _currentViewport );\\r\\n            state.scissor( _currentScissor );\\r\\n            state.setScissorTest( _currentScissorTest );\\r\\n\\r\\n            if ( isCube ) {\\r\\n\\r\\n                var textureProperties = properties.get( renderTarget.texture );\\r\\n                _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\\r\\n\\r\\n            if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\\r\\n\\r\\n                console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            var framebuffer = properties.get( renderTarget ).__webglFramebuffer;\\r\\n\\r\\n            if ( framebuffer ) {\\r\\n\\r\\n                var restore = false;\\r\\n\\r\\n                if ( framebuffer !== _currentFramebuffer ) {\\r\\n\\r\\n                    _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\r\\n                    restore = true;\\r\\n\\r\\n                }\\r\\n\\r\\n                try {\\r\\n\\r\\n                    var texture = renderTarget.texture;\\r\\n                    var textureFormat = texture.format;\\r\\n                    var textureType = texture.type;\\r\\n\\r\\n                    if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\\r\\n\\r\\n                        console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\\r\\n                        return;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\\r\\n                        ! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\\r\\n                        ! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\\r\\n\\r\\n                        console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\\r\\n                        return;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\\r\\n\\r\\n                        // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\\r\\n\\r\\n                        if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\\r\\n\\r\\n                            _gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } finally {\\r\\n\\r\\n                    if ( restore ) {\\r\\n\\r\\n                        _gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        this.copyFramebufferToTexture = function ( position, texture, level ) {\\r\\n\\r\\n            var width = texture.image.width;\\r\\n            var height = texture.image.height;\\r\\n            var glFormat = utils.convert( texture.format );\\r\\n\\r\\n            this.setTexture2D( texture, 0 );\\r\\n\\r\\n            _gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\\r\\n\\r\\n            var width = srcTexture.image.width;\\r\\n            var height = srcTexture.image.height;\\r\\n            var glFormat = utils.convert( dstTexture.format );\\r\\n            var glType = utils.convert( dstTexture.type );\\r\\n\\r\\n            this.setTexture2D( dstTexture, 0 );\\r\\n\\r\\n            if ( srcTexture.isDataTexture ) {\\r\\n\\r\\n                _gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                _gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function FogExp2( color, density ) {\\r\\n\\r\\n        this.name = '';\\r\\n\\r\\n        this.color = new Color( color );\\r\\n        this.density = ( density !== undefined ) ? density : 0.00025;\\r\\n\\r\\n    }\\r\\n\\r\\n    FogExp2.prototype.isFogExp2 = true;\\r\\n\\r\\n    FogExp2.prototype.clone = function () {\\r\\n\\r\\n        return new FogExp2( this.color, this.density );\\r\\n\\r\\n    };\\r\\n\\r\\n    FogExp2.prototype.toJSON = function ( /* meta */ ) {\\r\\n\\r\\n        return {\\r\\n            type: 'FogExp2',\\r\\n            color: this.color.getHex(),\\r\\n            density: this.density\\r\\n        };\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Fog( color, near, far ) {\\r\\n\\r\\n        this.name = '';\\r\\n\\r\\n        this.color = new Color( color );\\r\\n\\r\\n        this.near = ( near !== undefined ) ? near : 1;\\r\\n        this.far = ( far !== undefined ) ? far : 1000;\\r\\n\\r\\n    }\\r\\n\\r\\n    Fog.prototype.isFog = true;\\r\\n\\r\\n    Fog.prototype.clone = function () {\\r\\n\\r\\n        return new Fog( this.color, this.near, this.far );\\r\\n\\r\\n    };\\r\\n\\r\\n    Fog.prototype.toJSON = function ( /* meta */ ) {\\r\\n\\r\\n        return {\\r\\n            type: 'Fog',\\r\\n            color: this.color.getHex(),\\r\\n            near: this.near,\\r\\n            far: this.far\\r\\n        };\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Scene() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Scene';\\r\\n\\r\\n        this.background = null;\\r\\n        this.fog = null;\\r\\n        this.overrideMaterial = null;\\r\\n\\r\\n        this.autoUpdate = true; // checked by the renderer\\r\\n\\r\\n    }\\r\\n\\r\\n    Scene.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Scene,\\r\\n\\r\\n        copy: function ( source, recursive ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source, recursive );\\r\\n\\r\\n            if ( source.background !== null ) this.background = source.background.clone();\\r\\n            if ( source.fog !== null ) this.fog = source.fog.clone();\\r\\n            if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\\r\\n\\r\\n            this.autoUpdate = source.autoUpdate;\\r\\n            this.matrixAutoUpdate = source.matrixAutoUpdate;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            if ( this.background !== null ) data.object.background = this.background.toJSON( meta );\\r\\n            if ( this.fog !== null ) data.object.fog = this.fog.toJSON();\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     */\\r\\n\\r\\n    function InterleavedBuffer( array, stride ) {\\r\\n\\r\\n        this.array = array;\\r\\n        this.stride = stride;\\r\\n        this.count = array !== undefined ? array.length / stride : 0;\\r\\n\\r\\n        this.dynamic = false;\\r\\n        this.updateRange = { offset: 0, count: - 1 };\\r\\n\\r\\n        this.version = 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            if ( value === true ) this.version ++;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( InterleavedBuffer.prototype, {\\r\\n\\r\\n        isInterleavedBuffer: true,\\r\\n\\r\\n        onUploadCallback: function () {},\\r\\n\\r\\n        setArray: function ( array ) {\\r\\n\\r\\n            if ( Array.isArray( array ) ) {\\r\\n\\r\\n                throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.count = array !== undefined ? array.length / this.stride : 0;\\r\\n            this.array = array;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setDynamic: function ( value ) {\\r\\n\\r\\n            this.dynamic = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.array = new source.array.constructor( source.array );\\r\\n            this.count = source.count;\\r\\n            this.stride = source.stride;\\r\\n            this.dynamic = source.dynamic;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        copyAt: function ( index1, attribute, index2 ) {\\r\\n\\r\\n            index1 *= this.stride;\\r\\n            index2 *= attribute.stride;\\r\\n\\r\\n            for ( var i = 0, l = this.stride; i < l; i ++ ) {\\r\\n\\r\\n                this.array[ index1 + i ] = attribute.array[ index2 + i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value, offset ) {\\r\\n\\r\\n            if ( offset === undefined ) offset = 0;\\r\\n\\r\\n            this.array.set( value, offset );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        onUpload: function ( callback ) {\\r\\n\\r\\n            this.onUploadCallback = callback;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     */\\r\\n\\r\\n    function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\\r\\n\\r\\n        this.data = interleavedBuffer;\\r\\n        this.itemSize = itemSize;\\r\\n        this.offset = offset;\\r\\n\\r\\n        this.normalized = normalized === true;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.defineProperties( InterleavedBufferAttribute.prototype, {\\r\\n\\r\\n        count: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this.data.count;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        array: {\\r\\n\\r\\n            get: function () {\\r\\n\\r\\n                return this.data.array;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( InterleavedBufferAttribute.prototype, {\\r\\n\\r\\n        isInterleavedBufferAttribute: true,\\r\\n\\r\\n        setX: function ( index, x ) {\\r\\n\\r\\n            this.data.array[ index * this.data.stride + this.offset ] = x;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setY: function ( index, y ) {\\r\\n\\r\\n            this.data.array[ index * this.data.stride + this.offset + 1 ] = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setZ: function ( index, z ) {\\r\\n\\r\\n            this.data.array[ index * this.data.stride + this.offset + 2 ] = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setW: function ( index, w ) {\\r\\n\\r\\n            this.data.array[ index * this.data.stride + this.offset + 3 ] = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getX: function ( index ) {\\r\\n\\r\\n            return this.data.array[ index * this.data.stride + this.offset ];\\r\\n\\r\\n        },\\r\\n\\r\\n        getY: function ( index ) {\\r\\n\\r\\n            return this.data.array[ index * this.data.stride + this.offset + 1 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        getZ: function ( index ) {\\r\\n\\r\\n            return this.data.array[ index * this.data.stride + this.offset + 2 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        getW: function ( index ) {\\r\\n\\r\\n            return this.data.array[ index * this.data.stride + this.offset + 3 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setXY: function ( index, x, y ) {\\r\\n\\r\\n            index = index * this.data.stride + this.offset;\\r\\n\\r\\n            this.data.array[ index + 0 ] = x;\\r\\n            this.data.array[ index + 1 ] = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setXYZ: function ( index, x, y, z ) {\\r\\n\\r\\n            index = index * this.data.stride + this.offset;\\r\\n\\r\\n            this.data.array[ index + 0 ] = x;\\r\\n            this.data.array[ index + 1 ] = y;\\r\\n            this.data.array[ index + 2 ] = z;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setXYZW: function ( index, x, y, z, w ) {\\r\\n\\r\\n            index = index * this.data.stride + this.offset;\\r\\n\\r\\n            this.data.array[ index + 0 ] = x;\\r\\n            this.data.array[ index + 1 ] = y;\\r\\n            this.data.array[ index + 2 ] = z;\\r\\n            this.data.array[ index + 3 ] = w;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *  rotation: <float>,\\r\\n\\t *  sizeAttenuation: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function SpriteMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'SpriteMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff );\\r\\n        this.map = null;\\r\\n\\r\\n        this.rotation = 0;\\r\\n\\r\\n        this.sizeAttenuation = true;\\r\\n\\r\\n        this.lights = false;\\r\\n        this.transparent = true;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    SpriteMaterial.prototype = Object.create( Material.prototype );\\r\\n    SpriteMaterial.prototype.constructor = SpriteMaterial;\\r\\n    SpriteMaterial.prototype.isSpriteMaterial = true;\\r\\n\\r\\n    SpriteMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.rotation = source.rotation;\\r\\n\\r\\n        this.sizeAttenuation = source.sizeAttenuation;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    var geometry;\\r\\n\\r\\n    function Sprite( material ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Sprite';\\r\\n\\r\\n        if ( geometry === undefined ) {\\r\\n\\r\\n            geometry = new BufferGeometry();\\r\\n\\r\\n            var float32Array = new Float32Array( [\\r\\n                - 0.5, - 0.5, 0, 0, 0,\\r\\n                0.5, - 0.5, 0, 1, 0,\\r\\n                0.5, 0.5, 0, 1, 1,\\r\\n                - 0.5, 0.5, 0, 0, 1\\r\\n            ] );\\r\\n\\r\\n            var interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\\r\\n\\r\\n            geometry.setIndex( [ 0, 1, 2,\\t0, 2, 3 ] );\\r\\n            geometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\\r\\n            geometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.geometry = geometry;\\r\\n        this.material = ( material !== undefined ) ? material : new SpriteMaterial();\\r\\n\\r\\n        this.center = new Vector2( 0.5, 0.5 );\\r\\n\\r\\n    }\\r\\n\\r\\n    Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Sprite,\\r\\n\\r\\n        isSprite: true,\\r\\n\\r\\n        raycast: ( function () {\\r\\n\\r\\n            var intersectPoint = new Vector3();\\r\\n            var worldScale = new Vector3();\\r\\n            var mvPosition = new Vector3();\\r\\n\\r\\n            var alignedPosition = new Vector2();\\r\\n            var rotatedPosition = new Vector2();\\r\\n            var viewWorldMatrix = new Matrix4();\\r\\n\\r\\n            var vA = new Vector3();\\r\\n            var vB = new Vector3();\\r\\n            var vC = new Vector3();\\r\\n\\r\\n            var uvA = new Vector2();\\r\\n            var uvB = new Vector2();\\r\\n            var uvC = new Vector2();\\r\\n\\r\\n            function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\\r\\n\\r\\n                // compute position in camera space\\r\\n                alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\\r\\n\\r\\n                // to check if rotation is not zero\\r\\n                if ( sin !== undefined ) {\\r\\n\\r\\n                    rotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\\r\\n                    rotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    rotatedPosition.copy( alignedPosition );\\r\\n\\r\\n                }\\r\\n\\r\\n\\r\\n                vertexPosition.copy( mvPosition );\\r\\n                vertexPosition.x += rotatedPosition.x;\\r\\n                vertexPosition.y += rotatedPosition.y;\\r\\n\\r\\n                // transform to world space\\r\\n                vertexPosition.applyMatrix4( viewWorldMatrix );\\r\\n\\r\\n            }\\r\\n\\r\\n            return function raycast( raycaster, intersects ) {\\r\\n\\r\\n                worldScale.setFromMatrixScale( this.matrixWorld );\\r\\n                viewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\\r\\n                mvPosition.setFromMatrixPosition( this.modelViewMatrix );\\r\\n\\r\\n                var rotation = this.material.rotation;\\r\\n                var sin, cos;\\r\\n                if ( rotation !== 0 ) {\\r\\n\\r\\n                    cos = Math.cos( rotation );\\r\\n                    sin = Math.sin( rotation );\\r\\n\\r\\n                }\\r\\n\\r\\n                var center = this.center;\\r\\n\\r\\n                transformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\\r\\n                transformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\\r\\n                transformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\\r\\n\\r\\n                uvA.set( 0, 0 );\\r\\n                uvB.set( 1, 0 );\\r\\n                uvC.set( 1, 1 );\\r\\n\\r\\n                // check first triangle\\r\\n                var intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\\r\\n\\r\\n                if ( intersect === null ) {\\r\\n\\r\\n                    // check second triangle\\r\\n                    transformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\\r\\n                    uvB.set( 0, 1 );\\r\\n\\r\\n                    intersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\\r\\n                    if ( intersect === null ) {\\r\\n\\r\\n                        return;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                var distance = raycaster.ray.origin.distanceTo( intersectPoint );\\r\\n\\r\\n                if ( distance < raycaster.near || distance > raycaster.far ) return;\\r\\n\\r\\n                intersects.push( {\\r\\n\\r\\n                    distance: distance,\\r\\n                    point: intersectPoint.clone(),\\r\\n                    uv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\\r\\n                    face: null,\\r\\n                    object: this\\r\\n\\r\\n                } );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.material ).copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n            if ( source.center !== undefined ) this.center.copy( source.center );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function LOD() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'LOD';\\r\\n\\r\\n        Object.defineProperties( this, {\\r\\n            levels: {\\r\\n                enumerable: true,\\r\\n                value: []\\r\\n            }\\r\\n        } );\\r\\n\\r\\n    }\\r\\n\\r\\n    LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: LOD,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source, false );\\r\\n\\r\\n            var levels = source.levels;\\r\\n\\r\\n            for ( var i = 0, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n                var level = levels[ i ];\\r\\n\\r\\n                this.addLevel( level.object.clone(), level.distance );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        addLevel: function ( object, distance ) {\\r\\n\\r\\n            if ( distance === undefined ) distance = 0;\\r\\n\\r\\n            distance = Math.abs( distance );\\r\\n\\r\\n            var levels = this.levels;\\r\\n\\r\\n            for ( var l = 0; l < levels.length; l ++ ) {\\r\\n\\r\\n                if ( distance < levels[ l ].distance ) {\\r\\n\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            levels.splice( l, 0, { distance: distance, object: object } );\\r\\n\\r\\n            this.add( object );\\r\\n\\r\\n        },\\r\\n\\r\\n        getObjectForDistance: function ( distance ) {\\r\\n\\r\\n            var levels = this.levels;\\r\\n\\r\\n            for ( var i = 1, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n                if ( distance < levels[ i ].distance ) {\\r\\n\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return levels[ i - 1 ].object;\\r\\n\\r\\n        },\\r\\n\\r\\n        raycast: ( function () {\\r\\n\\r\\n            var matrixPosition = new Vector3();\\r\\n\\r\\n            return function raycast( raycaster, intersects ) {\\r\\n\\r\\n                matrixPosition.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n                var distance = raycaster.ray.origin.distanceTo( matrixPosition );\\r\\n\\r\\n                this.getObjectForDistance( distance ).raycast( raycaster, intersects );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        update: function () {\\r\\n\\r\\n            var v1 = new Vector3();\\r\\n            var v2 = new Vector3();\\r\\n\\r\\n            return function update( camera ) {\\r\\n\\r\\n                var levels = this.levels;\\r\\n\\r\\n                if ( levels.length > 1 ) {\\r\\n\\r\\n                    v1.setFromMatrixPosition( camera.matrixWorld );\\r\\n                    v2.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n                    var distance = v1.distanceTo( v2 );\\r\\n\\r\\n                    levels[ 0 ].object.visible = true;\\r\\n\\r\\n                    for ( var i = 1, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n                        if ( distance >= levels[ i ].distance ) {\\r\\n\\r\\n                            levels[ i - 1 ].object.visible = false;\\r\\n                            levels[ i ].object.visible = true;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    for ( ; i < l; i ++ ) {\\r\\n\\r\\n                        levels[ i ].object.visible = false;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            data.object.levels = [];\\r\\n\\r\\n            var levels = this.levels;\\r\\n\\r\\n            for ( var i = 0, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n                var level = levels[ i ];\\r\\n\\r\\n                data.object.levels.push( {\\r\\n                    object: level.object.uuid,\\r\\n                    distance: level.distance\\r\\n                } );\\r\\n\\r\\n            }\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author michael guerrero / http://realitymeltdown.com\\r\\n     * @author ikerr / http://verold.com\\r\\n     */\\r\\n\\r\\n    function Skeleton( bones, boneInverses ) {\\r\\n\\r\\n        // copy the bone array\\r\\n\\r\\n        bones = bones || [];\\r\\n\\r\\n        this.bones = bones.slice( 0 );\\r\\n        this.boneMatrices = new Float32Array( this.bones.length * 16 );\\r\\n\\r\\n        // use the supplied bone inverses or calculate the inverses\\r\\n\\r\\n        if ( boneInverses === undefined ) {\\r\\n\\r\\n            this.calculateInverses();\\r\\n\\r\\n        } else {\\r\\n\\r\\n            if ( this.bones.length === boneInverses.length ) {\\r\\n\\r\\n                this.boneInverses = boneInverses.slice( 0 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                console.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\\r\\n\\r\\n                this.boneInverses = [];\\r\\n\\r\\n                for ( var i = 0, il = this.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                    this.boneInverses.push( new Matrix4() );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Skeleton.prototype, {\\r\\n\\r\\n        calculateInverses: function () {\\r\\n\\r\\n            this.boneInverses = [];\\r\\n\\r\\n            for ( var i = 0, il = this.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                var inverse = new Matrix4();\\r\\n\\r\\n                if ( this.bones[ i ] ) {\\r\\n\\r\\n                    inverse.getInverse( this.bones[ i ].matrixWorld );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.boneInverses.push( inverse );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        pose: function () {\\r\\n\\r\\n            var bone, i, il;\\r\\n\\r\\n            // recover the bind-time world matrices\\r\\n\\r\\n            for ( i = 0, il = this.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                bone = this.bones[ i ];\\r\\n\\r\\n                if ( bone ) {\\r\\n\\r\\n                    bone.matrixWorld.getInverse( this.boneInverses[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // compute the local matrices, positions, rotations and scales\\r\\n\\r\\n            for ( i = 0, il = this.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                bone = this.bones[ i ];\\r\\n\\r\\n                if ( bone ) {\\r\\n\\r\\n                    if ( bone.parent && bone.parent.isBone ) {\\r\\n\\r\\n                        bone.matrix.getInverse( bone.parent.matrixWorld );\\r\\n                        bone.matrix.multiply( bone.matrixWorld );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        bone.matrix.copy( bone.matrixWorld );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        update: ( function () {\\r\\n\\r\\n            var offsetMatrix = new Matrix4();\\r\\n            var identityMatrix = new Matrix4();\\r\\n\\r\\n            return function update() {\\r\\n\\r\\n                var bones = this.bones;\\r\\n                var boneInverses = this.boneInverses;\\r\\n                var boneMatrices = this.boneMatrices;\\r\\n                var boneTexture = this.boneTexture;\\r\\n\\r\\n                // flatten bone matrices to array\\r\\n\\r\\n                for ( var i = 0, il = bones.length; i < il; i ++ ) {\\r\\n\\r\\n                    // compute the offset between the current and the original transform\\r\\n\\r\\n                    var matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\\r\\n\\r\\n                    offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\\r\\n                    offsetMatrix.toArray( boneMatrices, i * 16 );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( boneTexture !== undefined ) {\\r\\n\\r\\n                    boneTexture.needsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        } )(),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new Skeleton( this.bones, this.boneInverses );\\r\\n\\r\\n        },\\r\\n\\r\\n        getBoneByName: function ( name ) {\\r\\n\\r\\n            for ( var i = 0, il = this.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                var bone = this.bones[ i ];\\r\\n\\r\\n                if ( bone.name === name ) {\\r\\n\\r\\n                    return bone;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return undefined;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author ikerr / http://verold.com\\r\\n     */\\r\\n\\r\\n    function Bone() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Bone';\\r\\n\\r\\n    }\\r\\n\\r\\n    Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Bone,\\r\\n\\r\\n        isBone: true\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mikael emtinger / http://gomo.se/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author ikerr / http://verold.com\\r\\n     */\\r\\n\\r\\n    function SkinnedMesh( geometry, material ) {\\r\\n\\r\\n        Mesh.call( this, geometry, material );\\r\\n\\r\\n        this.type = 'SkinnedMesh';\\r\\n\\r\\n        this.bindMode = 'attached';\\r\\n        this.bindMatrix = new Matrix4();\\r\\n        this.bindMatrixInverse = new Matrix4();\\r\\n\\r\\n        var bones = this.initBones();\\r\\n        var skeleton = new Skeleton( bones );\\r\\n\\r\\n        this.bind( skeleton, this.matrixWorld );\\r\\n\\r\\n        this.normalizeSkinWeights();\\r\\n\\r\\n    }\\r\\n\\r\\n    SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\\r\\n\\r\\n        constructor: SkinnedMesh,\\r\\n\\r\\n        isSkinnedMesh: true,\\r\\n\\r\\n        initBones: function () {\\r\\n\\r\\n            var bones = [], bone, gbone;\\r\\n            var i, il;\\r\\n\\r\\n            if ( this.geometry && this.geometry.bones !== undefined ) {\\r\\n\\r\\n                // first, create array of 'Bone' objects from geometry data\\r\\n\\r\\n                for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                    gbone = this.geometry.bones[ i ];\\r\\n\\r\\n                    // create new 'Bone' object\\r\\n\\r\\n                    bone = new Bone();\\r\\n                    bones.push( bone );\\r\\n\\r\\n                    // apply values\\r\\n\\r\\n                    bone.name = gbone.name;\\r\\n                    bone.position.fromArray( gbone.pos );\\r\\n                    bone.quaternion.fromArray( gbone.rotq );\\r\\n                    if ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\\r\\n\\r\\n                }\\r\\n\\r\\n                // second, create bone hierarchy\\r\\n\\r\\n                for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\\r\\n\\r\\n                    gbone = this.geometry.bones[ i ];\\r\\n\\r\\n                    if ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\\r\\n\\r\\n                        // subsequent bones in the hierarchy\\r\\n\\r\\n                        bones[ gbone.parent ].add( bones[ i ] );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // topmost bone, immediate child of the skinned mesh\\r\\n\\r\\n                        this.add( bones[ i ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // now the bones are part of the scene graph and children of the skinned mesh.\\r\\n            // let's update the corresponding matrices\\r\\n\\r\\n            this.updateMatrixWorld( true );\\r\\n\\r\\n            return bones;\\r\\n\\r\\n        },\\r\\n\\r\\n        bind: function ( skeleton, bindMatrix ) {\\r\\n\\r\\n            this.skeleton = skeleton;\\r\\n\\r\\n            if ( bindMatrix === undefined ) {\\r\\n\\r\\n                this.updateMatrixWorld( true );\\r\\n\\r\\n                this.skeleton.calculateInverses();\\r\\n\\r\\n                bindMatrix = this.matrixWorld;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.bindMatrix.copy( bindMatrix );\\r\\n            this.bindMatrixInverse.getInverse( bindMatrix );\\r\\n\\r\\n        },\\r\\n\\r\\n        pose: function () {\\r\\n\\r\\n            this.skeleton.pose();\\r\\n\\r\\n        },\\r\\n\\r\\n        normalizeSkinWeights: function () {\\r\\n\\r\\n            var scale, i;\\r\\n\\r\\n            if ( this.geometry && this.geometry.isGeometry ) {\\r\\n\\r\\n                for ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\\r\\n\\r\\n                    var sw = this.geometry.skinWeights[ i ];\\r\\n\\r\\n                    scale = 1.0 / sw.manhattanLength();\\r\\n\\r\\n                    if ( scale !== Infinity ) {\\r\\n\\r\\n                        sw.multiplyScalar( scale );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        sw.set( 1, 0, 0, 0 ); // do something reasonable\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( this.geometry && this.geometry.isBufferGeometry ) {\\r\\n\\r\\n                var vec = new Vector4();\\r\\n\\r\\n                var skinWeight = this.geometry.attributes.skinWeight;\\r\\n\\r\\n                for ( i = 0; i < skinWeight.count; i ++ ) {\\r\\n\\r\\n                    vec.x = skinWeight.getX( i );\\r\\n                    vec.y = skinWeight.getY( i );\\r\\n                    vec.z = skinWeight.getZ( i );\\r\\n                    vec.w = skinWeight.getW( i );\\r\\n\\r\\n                    scale = 1.0 / vec.manhattanLength();\\r\\n\\r\\n                    if ( scale !== Infinity ) {\\r\\n\\r\\n                        vec.multiplyScalar( scale );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        vec.set( 1, 0, 0, 0 ); // do something reasonable\\r\\n\\r\\n                    }\\r\\n\\r\\n                    skinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrixWorld: function ( force ) {\\r\\n\\r\\n            Mesh.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n            if ( this.bindMode === 'attached' ) {\\r\\n\\r\\n                this.bindMatrixInverse.getInverse( this.matrixWorld );\\r\\n\\r\\n            } else if ( this.bindMode === 'detached' ) {\\r\\n\\r\\n                this.bindMatrixInverse.getInverse( this.bindMatrix );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  linewidth: <float>,\\r\\n\\t *  linecap: \\\"round\\\",\\r\\n\\t *  linejoin: \\\"round\\\"\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function LineBasicMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'LineBasicMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff );\\r\\n\\r\\n        this.linewidth = 1;\\r\\n        this.linecap = 'round';\\r\\n        this.linejoin = 'round';\\r\\n\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    LineBasicMaterial.prototype = Object.create( Material.prototype );\\r\\n    LineBasicMaterial.prototype.constructor = LineBasicMaterial;\\r\\n\\r\\n    LineBasicMaterial.prototype.isLineBasicMaterial = true;\\r\\n\\r\\n    LineBasicMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        this.linewidth = source.linewidth;\\r\\n        this.linecap = source.linecap;\\r\\n        this.linejoin = source.linejoin;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Line( geometry, material, mode ) {\\r\\n\\r\\n        if ( mode === 1 ) {\\r\\n\\r\\n            console.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Line';\\r\\n\\r\\n        this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\r\\n        this.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n    }\\r\\n\\r\\n    Line.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Line,\\r\\n\\r\\n        isLine: true,\\r\\n\\r\\n        computeLineDistances: ( function () {\\r\\n\\r\\n            var start = new Vector3();\\r\\n            var end = new Vector3();\\r\\n\\r\\n            return function computeLineDistances() {\\r\\n\\r\\n                var geometry = this.geometry;\\r\\n\\r\\n                if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                    // we assume non-indexed geometry\\r\\n\\r\\n                    if ( geometry.index === null ) {\\r\\n\\r\\n                        var positionAttribute = geometry.attributes.position;\\r\\n                        var lineDistances = [ 0 ];\\r\\n\\r\\n                        for ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\\r\\n\\r\\n                            start.fromBufferAttribute( positionAttribute, i - 1 );\\r\\n                            end.fromBufferAttribute( positionAttribute, i );\\r\\n\\r\\n                            lineDistances[ i ] = lineDistances[ i - 1 ];\\r\\n                            lineDistances[ i ] += start.distanceTo( end );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        geometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( geometry.isGeometry ) {\\r\\n\\r\\n                    var vertices = geometry.vertices;\\r\\n                    var lineDistances = geometry.lineDistances;\\r\\n\\r\\n                    lineDistances[ 0 ] = 0;\\r\\n\\r\\n                    for ( var i = 1, l = vertices.length; i < l; i ++ ) {\\r\\n\\r\\n                        lineDistances[ i ] = lineDistances[ i - 1 ];\\r\\n                        lineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        raycast: ( function () {\\r\\n\\r\\n            var inverseMatrix = new Matrix4();\\r\\n            var ray = new Ray();\\r\\n            var sphere = new Sphere();\\r\\n\\r\\n            return function raycast( raycaster, intersects ) {\\r\\n\\r\\n                var precision = raycaster.linePrecision;\\r\\n\\r\\n                var geometry = this.geometry;\\r\\n                var matrixWorld = this.matrixWorld;\\r\\n\\r\\n                // Checking boundingSphere distance to ray\\r\\n\\r\\n                if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n                sphere.copy( geometry.boundingSphere );\\r\\n                sphere.applyMatrix4( matrixWorld );\\r\\n                sphere.radius += precision;\\r\\n\\r\\n                if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n                //\\r\\n\\r\\n                inverseMatrix.getInverse( matrixWorld );\\r\\n                ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n                var localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\\r\\n                var localPrecisionSq = localPrecision * localPrecision;\\r\\n\\r\\n                var vStart = new Vector3();\\r\\n                var vEnd = new Vector3();\\r\\n                var interSegment = new Vector3();\\r\\n                var interRay = new Vector3();\\r\\n                var step = ( this && this.isLineSegments ) ? 2 : 1;\\r\\n\\r\\n                if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                    var index = geometry.index;\\r\\n                    var attributes = geometry.attributes;\\r\\n                    var positions = attributes.position.array;\\r\\n\\r\\n                    if ( index !== null ) {\\r\\n\\r\\n                        var indices = index.array;\\r\\n\\r\\n                        for ( var i = 0, l = indices.length - 1; i < l; i += step ) {\\r\\n\\r\\n                            var a = indices[ i ];\\r\\n                            var b = indices[ i + 1 ];\\r\\n\\r\\n                            vStart.fromArray( positions, a * 3 );\\r\\n                            vEnd.fromArray( positions, b * 3 );\\r\\n\\r\\n                            var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\r\\n\\r\\n                            if ( distSq > localPrecisionSq ) continue;\\r\\n\\r\\n                            interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n                            var distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n                            if ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n                            intersects.push( {\\r\\n\\r\\n                                distance: distance,\\r\\n                                // What do we want? intersection point on the ray or on the segment??\\r\\n                                // point: raycaster.ray.at( distance ),\\r\\n                                point: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n                                index: i,\\r\\n                                face: null,\\r\\n                                faceIndex: null,\\r\\n                                object: this\\r\\n\\r\\n                            } );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        for ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\\r\\n\\r\\n                            vStart.fromArray( positions, 3 * i );\\r\\n                            vEnd.fromArray( positions, 3 * i + 3 );\\r\\n\\r\\n                            var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\r\\n\\r\\n                            if ( distSq > localPrecisionSq ) continue;\\r\\n\\r\\n                            interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n                            var distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n                            if ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n                            intersects.push( {\\r\\n\\r\\n                                distance: distance,\\r\\n                                // What do we want? intersection point on the ray or on the segment??\\r\\n                                // point: raycaster.ray.at( distance ),\\r\\n                                point: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n                                index: i,\\r\\n                                face: null,\\r\\n                                faceIndex: null,\\r\\n                                object: this\\r\\n\\r\\n                            } );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( geometry.isGeometry ) {\\r\\n\\r\\n                    var vertices = geometry.vertices;\\r\\n                    var nbVertices = vertices.length;\\r\\n\\r\\n                    for ( var i = 0; i < nbVertices - 1; i += step ) {\\r\\n\\r\\n                        var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\\r\\n\\r\\n                        if ( distSq > localPrecisionSq ) continue;\\r\\n\\r\\n                        interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n                        var distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n                        if ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n                        intersects.push( {\\r\\n\\r\\n                            distance: distance,\\r\\n                            // What do we want? intersection point on the ray or on the segment??\\r\\n                            // point: raycaster.ray.at( distance ),\\r\\n                            point: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n                            index: i,\\r\\n                            face: null,\\r\\n                            faceIndex: null,\\r\\n                            object: this\\r\\n\\r\\n                        } );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function LineSegments( geometry, material ) {\\r\\n\\r\\n        Line.call( this, geometry, material );\\r\\n\\r\\n        this.type = 'LineSegments';\\r\\n\\r\\n    }\\r\\n\\r\\n    LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\\r\\n\\r\\n        constructor: LineSegments,\\r\\n\\r\\n        isLineSegments: true,\\r\\n\\r\\n        computeLineDistances: ( function () {\\r\\n\\r\\n            var start = new Vector3();\\r\\n            var end = new Vector3();\\r\\n\\r\\n            return function computeLineDistances() {\\r\\n\\r\\n                var geometry = this.geometry;\\r\\n\\r\\n                if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                    // we assume non-indexed geometry\\r\\n\\r\\n                    if ( geometry.index === null ) {\\r\\n\\r\\n                        var positionAttribute = geometry.attributes.position;\\r\\n                        var lineDistances = [];\\r\\n\\r\\n                        for ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\\r\\n\\r\\n                            start.fromBufferAttribute( positionAttribute, i );\\r\\n                            end.fromBufferAttribute( positionAttribute, i + 1 );\\r\\n\\r\\n                            lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\\r\\n                            lineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        geometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( geometry.isGeometry ) {\\r\\n\\r\\n                    var vertices = geometry.vertices;\\r\\n                    var lineDistances = geometry.lineDistances;\\r\\n\\r\\n                    for ( var i = 0, l = vertices.length; i < l; i += 2 ) {\\r\\n\\r\\n                        start.copy( vertices[ i ] );\\r\\n                        end.copy( vertices[ i + 1 ] );\\r\\n\\r\\n                        lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\\r\\n                        lineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }() )\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mgreter / http://github.com/mgreter\\r\\n     */\\r\\n\\r\\n    function LineLoop( geometry, material ) {\\r\\n\\r\\n        Line.call( this, geometry, material );\\r\\n\\r\\n        this.type = 'LineLoop';\\r\\n\\r\\n    }\\r\\n\\r\\n    LineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\\r\\n\\r\\n        constructor: LineLoop,\\r\\n\\r\\n        isLineLoop: true,\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  size: <float>,\\r\\n\\t *  sizeAttenuation: <bool>\\r\\n\\t *\\r\\n\\t *  morphTargets: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function PointsMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'PointsMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff );\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.size = 1;\\r\\n        this.sizeAttenuation = true;\\r\\n\\r\\n        this.morphTargets = false;\\r\\n\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    PointsMaterial.prototype = Object.create( Material.prototype );\\r\\n    PointsMaterial.prototype.constructor = PointsMaterial;\\r\\n\\r\\n    PointsMaterial.prototype.isPointsMaterial = true;\\r\\n\\r\\n    PointsMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.size = source.size;\\r\\n        this.sizeAttenuation = source.sizeAttenuation;\\r\\n\\r\\n        this.morphTargets = source.morphTargets;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Points( geometry, material ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Points';\\r\\n\\r\\n        this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\r\\n        this.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n    }\\r\\n\\r\\n    Points.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Points,\\r\\n\\r\\n        isPoints: true,\\r\\n\\r\\n        raycast: ( function () {\\r\\n\\r\\n            var inverseMatrix = new Matrix4();\\r\\n            var ray = new Ray();\\r\\n            var sphere = new Sphere();\\r\\n\\r\\n            return function raycast( raycaster, intersects ) {\\r\\n\\r\\n                var object = this;\\r\\n                var geometry = this.geometry;\\r\\n                var matrixWorld = this.matrixWorld;\\r\\n                var threshold = raycaster.params.Points.threshold;\\r\\n\\r\\n                // Checking boundingSphere distance to ray\\r\\n\\r\\n                if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n                sphere.copy( geometry.boundingSphere );\\r\\n                sphere.applyMatrix4( matrixWorld );\\r\\n                sphere.radius += threshold;\\r\\n\\r\\n                if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n                //\\r\\n\\r\\n                inverseMatrix.getInverse( matrixWorld );\\r\\n                ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n                var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\\r\\n                var localThresholdSq = localThreshold * localThreshold;\\r\\n                var position = new Vector3();\\r\\n                var intersectPoint = new Vector3();\\r\\n\\r\\n                function testPoint( point, index ) {\\r\\n\\r\\n                    var rayPointDistanceSq = ray.distanceSqToPoint( point );\\r\\n\\r\\n                    if ( rayPointDistanceSq < localThresholdSq ) {\\r\\n\\r\\n                        ray.closestPointToPoint( point, intersectPoint );\\r\\n                        intersectPoint.applyMatrix4( matrixWorld );\\r\\n\\r\\n                        var distance = raycaster.ray.origin.distanceTo( intersectPoint );\\r\\n\\r\\n                        if ( distance < raycaster.near || distance > raycaster.far ) return;\\r\\n\\r\\n                        intersects.push( {\\r\\n\\r\\n                            distance: distance,\\r\\n                            distanceToRay: Math.sqrt( rayPointDistanceSq ),\\r\\n                            point: intersectPoint.clone(),\\r\\n                            index: index,\\r\\n                            face: null,\\r\\n                            object: object\\r\\n\\r\\n                        } );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n                    var index = geometry.index;\\r\\n                    var attributes = geometry.attributes;\\r\\n                    var positions = attributes.position.array;\\r\\n\\r\\n                    if ( index !== null ) {\\r\\n\\r\\n                        var indices = index.array;\\r\\n\\r\\n                        for ( var i = 0, il = indices.length; i < il; i ++ ) {\\r\\n\\r\\n                            var a = indices[ i ];\\r\\n\\r\\n                            position.fromArray( positions, a * 3 );\\r\\n\\r\\n                            testPoint( position, a );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        for ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\\r\\n\\r\\n                            position.fromArray( positions, i * 3 );\\r\\n\\r\\n                            testPoint( position, i );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    var vertices = geometry.vertices;\\r\\n\\r\\n                    for ( var i = 0, l = vertices.length; i < l; i ++ ) {\\r\\n\\r\\n                        testPoint( vertices[ i ], i );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\r\\n\\r\\n        Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\r\\n\\r\\n        this.generateMipmaps = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    VideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\\r\\n\\r\\n        constructor: VideoTexture,\\r\\n\\r\\n        isVideoTexture: true,\\r\\n\\r\\n        update: function () {\\r\\n\\r\\n            var video = this.image;\\r\\n\\r\\n            if ( video.readyState >= video.HAVE_CURRENT_DATA ) {\\r\\n\\r\\n                this.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\r\\n\\r\\n        Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n        this.image = { width: width, height: height };\\r\\n        this.mipmaps = mipmaps;\\r\\n\\r\\n        // no flipping for cube textures\\r\\n        // (also flipping doesn't work for compressed textures )\\r\\n\\r\\n        this.flipY = false;\\r\\n\\r\\n        // can't generate mipmaps for compressed textures\\r\\n        // mips must be embedded in DDS files\\r\\n\\r\\n        this.generateMipmaps = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    CompressedTexture.prototype = Object.create( Texture.prototype );\\r\\n    CompressedTexture.prototype.constructor = CompressedTexture;\\r\\n\\r\\n    CompressedTexture.prototype.isCompressedTexture = true;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\r\\n\\r\\n        Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\r\\n\\r\\n        this.needsUpdate = true;\\r\\n\\r\\n    }\\r\\n\\r\\n    CanvasTexture.prototype = Object.create( Texture.prototype );\\r\\n    CanvasTexture.prototype.constructor = CanvasTexture;\\r\\n    CanvasTexture.prototype.isCanvasTexture = true;\\r\\n\\r\\n    /**\\r\\n     * @author Matt DesLauriers / @mattdesl\\r\\n     * @author atix / arthursilber.de\\r\\n     */\\r\\n\\r\\n    function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\\r\\n\\r\\n        format = format !== undefined ? format : DepthFormat;\\r\\n\\r\\n        if ( format !== DepthFormat && format !== DepthStencilFormat ) {\\r\\n\\r\\n            throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\\r\\n        if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\\r\\n\\r\\n        Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\r\\n\\r\\n        this.image = { width: width, height: height };\\r\\n\\r\\n        this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\\r\\n        this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\\r\\n\\r\\n        this.flipY = false;\\r\\n        this.generateMipmaps\\t= false;\\r\\n\\r\\n    }\\r\\n\\r\\n    DepthTexture.prototype = Object.create( Texture.prototype );\\r\\n    DepthTexture.prototype.constructor = DepthTexture;\\r\\n    DepthTexture.prototype.isDepthTexture = true;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function WireframeGeometry( geometry ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'WireframeGeometry';\\r\\n\\r\\n        // buffer\\r\\n\\r\\n        var vertices = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var i, j, l, o, ol;\\r\\n        var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\\r\\n        var key, keys = [ 'a', 'b', 'c' ];\\r\\n        var vertex;\\r\\n\\r\\n        // different logic for Geometry and BufferGeometry\\r\\n\\r\\n        if ( geometry && geometry.isGeometry ) {\\r\\n\\r\\n            // create a data structure that contains all edges without duplicates\\r\\n\\r\\n            var faces = geometry.faces;\\r\\n\\r\\n            for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n                var face = faces[ i ];\\r\\n\\r\\n                for ( j = 0; j < 3; j ++ ) {\\r\\n\\r\\n                    edge1 = face[ keys[ j ] ];\\r\\n                    edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\\r\\n                    edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\\r\\n                    edge[ 1 ] = Math.max( edge1, edge2 );\\r\\n\\r\\n                    key = edge[ 0 ] + ',' + edge[ 1 ];\\r\\n\\r\\n                    if ( edges[ key ] === undefined ) {\\r\\n\\r\\n                        edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // generate vertices\\r\\n\\r\\n            for ( key in edges ) {\\r\\n\\r\\n                e = edges[ key ];\\r\\n\\r\\n                vertex = geometry.vertices[ e.index1 ];\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                vertex = geometry.vertices[ e.index2 ];\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n            }\\r\\n\\r\\n        } else if ( geometry && geometry.isBufferGeometry ) {\\r\\n\\r\\n            var position, indices, groups;\\r\\n            var group, start, count;\\r\\n            var index1, index2;\\r\\n\\r\\n            vertex = new Vector3();\\r\\n\\r\\n            if ( geometry.index !== null ) {\\r\\n\\r\\n                // indexed BufferGeometry\\r\\n\\r\\n                position = geometry.attributes.position;\\r\\n                indices = geometry.index;\\r\\n                groups = geometry.groups;\\r\\n\\r\\n                if ( groups.length === 0 ) {\\r\\n\\r\\n                    groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\\r\\n\\r\\n                }\\r\\n\\r\\n                // create a data structure that contains all eges without duplicates\\r\\n\\r\\n                for ( o = 0, ol = groups.length; o < ol; ++ o ) {\\r\\n\\r\\n                    group = groups[ o ];\\r\\n\\r\\n                    start = group.start;\\r\\n                    count = group.count;\\r\\n\\r\\n                    for ( i = start, l = ( start + count ); i < l; i += 3 ) {\\r\\n\\r\\n                        for ( j = 0; j < 3; j ++ ) {\\r\\n\\r\\n                            edge1 = indices.getX( i + j );\\r\\n                            edge2 = indices.getX( i + ( j + 1 ) % 3 );\\r\\n                            edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\\r\\n                            edge[ 1 ] = Math.max( edge1, edge2 );\\r\\n\\r\\n                            key = edge[ 0 ] + ',' + edge[ 1 ];\\r\\n\\r\\n                            if ( edges[ key ] === undefined ) {\\r\\n\\r\\n                                edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // generate vertices\\r\\n\\r\\n                for ( key in edges ) {\\r\\n\\r\\n                    e = edges[ key ];\\r\\n\\r\\n                    vertex.fromBufferAttribute( position, e.index1 );\\r\\n                    vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                    vertex.fromBufferAttribute( position, e.index2 );\\r\\n                    vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // non-indexed BufferGeometry\\r\\n\\r\\n                position = geometry.attributes.position;\\r\\n\\r\\n                for ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\\r\\n\\r\\n                    for ( j = 0; j < 3; j ++ ) {\\r\\n\\r\\n                        // three edges per triangle, an edge is represented as (index1, index2)\\r\\n                        // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\\r\\n\\r\\n                        index1 = 3 * i + j;\\r\\n                        vertex.fromBufferAttribute( position, index1 );\\r\\n                        vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                        index2 = 3 * i + ( ( j + 1 ) % 3 );\\r\\n                        vertex.fromBufferAttribute( position, index2 );\\r\\n                        vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    WireframeGeometry.prototype.constructor = WireframeGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / https://github.com/zz85\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     *\\r\\n     * Parametric Surfaces Geometry\\r\\n     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\\r\\n     */\\r\\n\\r\\n    // ParametricGeometry\\r\\n\\r\\n    function ParametricGeometry( func, slices, stacks ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'ParametricGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            func: func,\\r\\n            slices: slices,\\r\\n            stacks: stacks\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    ParametricGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    ParametricGeometry.prototype.constructor = ParametricGeometry;\\r\\n\\r\\n    // ParametricBufferGeometry\\r\\n\\r\\n    function ParametricBufferGeometry( func, slices, stacks ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'ParametricBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            func: func,\\r\\n            slices: slices,\\r\\n            stacks: stacks\\r\\n        };\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        var EPS = 0.00001;\\r\\n\\r\\n        var normal = new Vector3();\\r\\n\\r\\n        var p0 = new Vector3(), p1 = new Vector3();\\r\\n        var pu = new Vector3(), pv = new Vector3();\\r\\n\\r\\n        var i, j;\\r\\n\\r\\n        if ( func.length < 3 ) {\\r\\n\\r\\n            console.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        var sliceCount = slices + 1;\\r\\n\\r\\n        for ( i = 0; i <= stacks; i ++ ) {\\r\\n\\r\\n            var v = i / stacks;\\r\\n\\r\\n            for ( j = 0; j <= slices; j ++ ) {\\r\\n\\r\\n                var u = j / slices;\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                func( u, v, p0 );\\r\\n                vertices.push( p0.x, p0.y, p0.z );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                // approximate tangent vectors via finite differences\\r\\n\\r\\n                if ( u - EPS >= 0 ) {\\r\\n\\r\\n                    func( u - EPS, v, p1 );\\r\\n                    pu.subVectors( p0, p1 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    func( u + EPS, v, p1 );\\r\\n                    pu.subVectors( p1, p0 );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( v - EPS >= 0 ) {\\r\\n\\r\\n                    func( u, v - EPS, p1 );\\r\\n                    pv.subVectors( p0, p1 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    func( u, v + EPS, p1 );\\r\\n                    pv.subVectors( p1, p0 );\\r\\n\\r\\n                }\\r\\n\\r\\n                // cross product of tangent vectors returns surface normal\\r\\n\\r\\n                normal.crossVectors( pu, pv ).normalize();\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uvs.push( u, v );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // generate indices\\r\\n\\r\\n        for ( i = 0; i < stacks; i ++ ) {\\r\\n\\r\\n            for ( j = 0; j < slices; j ++ ) {\\r\\n\\r\\n                var a = i * sliceCount + j;\\r\\n                var b = i * sliceCount + j + 1;\\r\\n                var c = ( i + 1 ) * sliceCount + j + 1;\\r\\n                var d = ( i + 1 ) * sliceCount + j;\\r\\n\\r\\n                // faces one and two\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    ParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author clockworkgeek / https://github.com/clockworkgeek\\r\\n     * @author timothypratley / https://github.com/timothypratley\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // PolyhedronGeometry\\r\\n\\r\\n    function PolyhedronGeometry( vertices, indices, radius, detail ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'PolyhedronGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            vertices: vertices,\\r\\n            indices: indices,\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    PolyhedronGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\\r\\n\\r\\n    // PolyhedronBufferGeometry\\r\\n\\r\\n    function PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'PolyhedronBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            vertices: vertices,\\r\\n            indices: indices,\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        radius = radius || 1;\\r\\n        detail = detail || 0;\\r\\n\\r\\n        // default buffer data\\r\\n\\r\\n        var vertexBuffer = [];\\r\\n        var uvBuffer = [];\\r\\n\\r\\n        // the subdivision creates the vertex buffer data\\r\\n\\r\\n        subdivide( detail );\\r\\n\\r\\n        // all vertices should lie on a conceptual sphere with a given radius\\r\\n\\r\\n        appplyRadius( radius );\\r\\n\\r\\n        // finally, create the uv data\\r\\n\\r\\n        generateUVs();\\r\\n\\r\\n        // build non-indexed geometry\\r\\n\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\\r\\n\\r\\n        if ( detail === 0 ) {\\r\\n\\r\\n            this.computeVertexNormals(); // flat normals\\r\\n\\r\\n        } else {\\r\\n\\r\\n            this.normalizeNormals(); // smooth normals\\r\\n\\r\\n        }\\r\\n\\r\\n        // helper functions\\r\\n\\r\\n        function subdivide( detail ) {\\r\\n\\r\\n            var a = new Vector3();\\r\\n            var b = new Vector3();\\r\\n            var c = new Vector3();\\r\\n\\r\\n            // iterate over all faces and apply a subdivison with the given detail value\\r\\n\\r\\n            for ( var i = 0; i < indices.length; i += 3 ) {\\r\\n\\r\\n                // get the vertices of the face\\r\\n\\r\\n                getVertexByIndex( indices[ i + 0 ], a );\\r\\n                getVertexByIndex( indices[ i + 1 ], b );\\r\\n                getVertexByIndex( indices[ i + 2 ], c );\\r\\n\\r\\n                // perform subdivision\\r\\n\\r\\n                subdivideFace( a, b, c, detail );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function subdivideFace( a, b, c, detail ) {\\r\\n\\r\\n            var cols = Math.pow( 2, detail );\\r\\n\\r\\n            // we use this multidimensional array as a data structure for creating the subdivision\\r\\n\\r\\n            var v = [];\\r\\n\\r\\n            var i, j;\\r\\n\\r\\n            // construct all of the vertices for this subdivision\\r\\n\\r\\n            for ( i = 0; i <= cols; i ++ ) {\\r\\n\\r\\n                v[ i ] = [];\\r\\n\\r\\n                var aj = a.clone().lerp( c, i / cols );\\r\\n                var bj = b.clone().lerp( c, i / cols );\\r\\n\\r\\n                var rows = cols - i;\\r\\n\\r\\n                for ( j = 0; j <= rows; j ++ ) {\\r\\n\\r\\n                    if ( j === 0 && i === cols ) {\\r\\n\\r\\n                        v[ i ][ j ] = aj;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        v[ i ][ j ] = aj.clone().lerp( bj, j / rows );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // construct all of the faces\\r\\n\\r\\n            for ( i = 0; i < cols; i ++ ) {\\r\\n\\r\\n                for ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\\r\\n\\r\\n                    var k = Math.floor( j / 2 );\\r\\n\\r\\n                    if ( j % 2 === 0 ) {\\r\\n\\r\\n                        pushVertex( v[ i ][ k + 1 ] );\\r\\n                        pushVertex( v[ i + 1 ][ k ] );\\r\\n                        pushVertex( v[ i ][ k ] );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        pushVertex( v[ i ][ k + 1 ] );\\r\\n                        pushVertex( v[ i + 1 ][ k + 1 ] );\\r\\n                        pushVertex( v[ i + 1 ][ k ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function appplyRadius( radius ) {\\r\\n\\r\\n            var vertex = new Vector3();\\r\\n\\r\\n            // iterate over the entire buffer and apply the radius to each vertex\\r\\n\\r\\n            for ( var i = 0; i < vertexBuffer.length; i += 3 ) {\\r\\n\\r\\n                vertex.x = vertexBuffer[ i + 0 ];\\r\\n                vertex.y = vertexBuffer[ i + 1 ];\\r\\n                vertex.z = vertexBuffer[ i + 2 ];\\r\\n\\r\\n                vertex.normalize().multiplyScalar( radius );\\r\\n\\r\\n                vertexBuffer[ i + 0 ] = vertex.x;\\r\\n                vertexBuffer[ i + 1 ] = vertex.y;\\r\\n                vertexBuffer[ i + 2 ] = vertex.z;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateUVs() {\\r\\n\\r\\n            var vertex = new Vector3();\\r\\n\\r\\n            for ( var i = 0; i < vertexBuffer.length; i += 3 ) {\\r\\n\\r\\n                vertex.x = vertexBuffer[ i + 0 ];\\r\\n                vertex.y = vertexBuffer[ i + 1 ];\\r\\n                vertex.z = vertexBuffer[ i + 2 ];\\r\\n\\r\\n                var u = azimuth( vertex ) / 2 / Math.PI + 0.5;\\r\\n                var v = inclination( vertex ) / Math.PI + 0.5;\\r\\n                uvBuffer.push( u, 1 - v );\\r\\n\\r\\n            }\\r\\n\\r\\n            correctUVs();\\r\\n\\r\\n            correctSeam();\\r\\n\\r\\n        }\\r\\n\\r\\n        function correctSeam() {\\r\\n\\r\\n            // handle case when face straddles the seam, see #3269\\r\\n\\r\\n            for ( var i = 0; i < uvBuffer.length; i += 6 ) {\\r\\n\\r\\n                // uv data of a single face\\r\\n\\r\\n                var x0 = uvBuffer[ i + 0 ];\\r\\n                var x1 = uvBuffer[ i + 2 ];\\r\\n                var x2 = uvBuffer[ i + 4 ];\\r\\n\\r\\n                var max = Math.max( x0, x1, x2 );\\r\\n                var min = Math.min( x0, x1, x2 );\\r\\n\\r\\n                // 0.9 is somewhat arbitrary\\r\\n\\r\\n                if ( max > 0.9 && min < 0.1 ) {\\r\\n\\r\\n                    if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\\r\\n                    if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\\r\\n                    if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function pushVertex( vertex ) {\\r\\n\\r\\n            vertexBuffer.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n        }\\r\\n\\r\\n        function getVertexByIndex( index, vertex ) {\\r\\n\\r\\n            var stride = index * 3;\\r\\n\\r\\n            vertex.x = vertices[ stride + 0 ];\\r\\n            vertex.y = vertices[ stride + 1 ];\\r\\n            vertex.z = vertices[ stride + 2 ];\\r\\n\\r\\n        }\\r\\n\\r\\n        function correctUVs() {\\r\\n\\r\\n            var a = new Vector3();\\r\\n            var b = new Vector3();\\r\\n            var c = new Vector3();\\r\\n\\r\\n            var centroid = new Vector3();\\r\\n\\r\\n            var uvA = new Vector2();\\r\\n            var uvB = new Vector2();\\r\\n            var uvC = new Vector2();\\r\\n\\r\\n            for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\\r\\n\\r\\n                a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\\r\\n                b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\\r\\n                c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\\r\\n\\r\\n                uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\\r\\n                uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\\r\\n                uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\\r\\n\\r\\n                centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\\r\\n\\r\\n                var azi = azimuth( centroid );\\r\\n\\r\\n                correctUV( uvA, j + 0, a, azi );\\r\\n                correctUV( uvB, j + 2, b, azi );\\r\\n                correctUV( uvC, j + 4, c, azi );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function correctUV( uv, stride, vector, azimuth ) {\\r\\n\\r\\n            if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\\r\\n\\r\\n                uvBuffer[ stride ] = uv.x - 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\\r\\n\\r\\n                uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // Angle around the Y axis, counter-clockwise when looking from above.\\r\\n\\r\\n        function azimuth( vector ) {\\r\\n\\r\\n            return Math.atan2( vector.z, - vector.x );\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n        // Angle above the XZ plane.\\r\\n\\r\\n        function inclination( vector ) {\\r\\n\\r\\n            return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    PolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author timothypratley / https://github.com/timothypratley\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // TetrahedronGeometry\\r\\n\\r\\n    function TetrahedronGeometry( radius, detail ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'TetrahedronGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    TetrahedronGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\\r\\n\\r\\n    // TetrahedronBufferGeometry\\r\\n\\r\\n    function TetrahedronBufferGeometry( radius, detail ) {\\r\\n\\r\\n        var vertices = [\\r\\n            1, 1, 1, \\t- 1, - 1, 1, \\t- 1, 1, - 1, \\t1, - 1, - 1\\r\\n        ];\\r\\n\\r\\n        var indices = [\\r\\n            2, 1, 0, \\t0, 3, 2,\\t1, 3, 0,\\t2, 3, 1\\r\\n        ];\\r\\n\\r\\n        PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n        this.type = 'TetrahedronBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    TetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\\r\\n    TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author timothypratley / https://github.com/timothypratley\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // OctahedronGeometry\\r\\n\\r\\n    function OctahedronGeometry( radius, detail ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'OctahedronGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    OctahedronGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    OctahedronGeometry.prototype.constructor = OctahedronGeometry;\\r\\n\\r\\n    // OctahedronBufferGeometry\\r\\n\\r\\n    function OctahedronBufferGeometry( radius, detail ) {\\r\\n\\r\\n        var vertices = [\\r\\n            1, 0, 0, \\t- 1, 0, 0,\\t0, 1, 0,\\r\\n            0, - 1, 0, \\t0, 0, 1,\\t0, 0, - 1\\r\\n        ];\\r\\n\\r\\n        var indices = [\\r\\n            0, 2, 4,\\t0, 4, 3,\\t0, 3, 5,\\r\\n            0, 5, 2,\\t1, 2, 5,\\t1, 5, 3,\\r\\n            1, 3, 4,\\t1, 4, 2\\r\\n        ];\\r\\n\\r\\n        PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n        this.type = 'OctahedronBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    OctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\\r\\n    OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author timothypratley / https://github.com/timothypratley\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // IcosahedronGeometry\\r\\n\\r\\n    function IcosahedronGeometry( radius, detail ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'IcosahedronGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    IcosahedronGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\\r\\n\\r\\n    // IcosahedronBufferGeometry\\r\\n\\r\\n    function IcosahedronBufferGeometry( radius, detail ) {\\r\\n\\r\\n        var t = ( 1 + Math.sqrt( 5 ) ) / 2;\\r\\n\\r\\n        var vertices = [\\r\\n            - 1, t, 0, \\t1, t, 0, \\t- 1, - t, 0, \\t1, - t, 0,\\r\\n            0, - 1, t, \\t0, 1, t,\\t0, - 1, - t, \\t0, 1, - t,\\r\\n            t, 0, - 1, \\tt, 0, 1, \\t- t, 0, - 1, \\t- t, 0, 1\\r\\n        ];\\r\\n\\r\\n        var indices = [\\r\\n            0, 11, 5, \\t0, 5, 1, \\t0, 1, 7, \\t0, 7, 10, \\t0, 10, 11,\\r\\n            1, 5, 9, \\t5, 11, 4,\\t11, 10, 2,\\t10, 7, 6,\\t7, 1, 8,\\r\\n            3, 9, 4, \\t3, 4, 2,\\t3, 2, 6,\\t3, 6, 8,\\t3, 8, 9,\\r\\n            4, 9, 5, \\t2, 4, 11,\\t6, 2, 10,\\t8, 6, 7,\\t9, 8, 1\\r\\n        ];\\r\\n\\r\\n        PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n        this.type = 'IcosahedronBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    IcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\\r\\n    IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author Abe Pazos / https://hamoid.com\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // DodecahedronGeometry\\r\\n\\r\\n    function DodecahedronGeometry( radius, detail ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'DodecahedronGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    DodecahedronGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\\r\\n\\r\\n    // DodecahedronBufferGeometry\\r\\n\\r\\n    function DodecahedronBufferGeometry( radius, detail ) {\\r\\n\\r\\n        var t = ( 1 + Math.sqrt( 5 ) ) / 2;\\r\\n        var r = 1 / t;\\r\\n\\r\\n        var vertices = [\\r\\n\\r\\n            // (±1, ±1, ±1)\\r\\n            - 1, - 1, - 1,\\t- 1, - 1, 1,\\r\\n            - 1, 1, - 1, - 1, 1, 1,\\r\\n            1, - 1, - 1, 1, - 1, 1,\\r\\n            1, 1, - 1, 1, 1, 1,\\r\\n\\r\\n            // (0, ±1/φ, ±φ)\\r\\n            0, - r, - t, 0, - r, t,\\r\\n            0, r, - t, 0, r, t,\\r\\n\\r\\n            // (±1/φ, ±φ, 0)\\r\\n            - r, - t, 0, - r, t, 0,\\r\\n            r, - t, 0, r, t, 0,\\r\\n\\r\\n            // (±φ, 0, ±1/φ)\\r\\n            - t, 0, - r, t, 0, - r,\\r\\n            - t, 0, r, t, 0, r\\r\\n        ];\\r\\n\\r\\n        var indices = [\\r\\n            3, 11, 7, \\t3, 7, 15, \\t3, 15, 13,\\r\\n            7, 19, 17, \\t7, 17, 6, \\t7, 6, 15,\\r\\n            17, 4, 8, \\t17, 8, 10, \\t17, 10, 6,\\r\\n            8, 0, 16, \\t8, 16, 2, \\t8, 2, 10,\\r\\n            0, 12, 1, \\t0, 1, 18, \\t0, 18, 16,\\r\\n            6, 10, 2, \\t6, 2, 13, \\t6, 13, 15,\\r\\n            2, 16, 18, \\t2, 18, 3, \\t2, 3, 13,\\r\\n            18, 1, 9, \\t18, 9, 11, \\t18, 11, 3,\\r\\n            4, 14, 12, \\t4, 12, 0, \\t4, 0, 8,\\r\\n            11, 9, 5, \\t11, 5, 19, \\t11, 19, 7,\\r\\n            19, 5, 14, \\t19, 14, 4, \\t19, 4, 17,\\r\\n            1, 12, 14, \\t1, 14, 5, \\t1, 5, 9\\r\\n        ];\\r\\n\\r\\n        PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n        this.type = 'DodecahedronBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            detail: detail\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    DodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\\r\\n    DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author oosmoxiecode / https://github.com/oosmoxiecode\\r\\n     * @author WestLangley / https://github.com/WestLangley\\r\\n     * @author zz85 / https://github.com/zz85\\r\\n     * @author miningold / https://github.com/miningold\\r\\n     * @author jonobr1 / https://github.com/jonobr1\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     *\\r\\n     */\\r\\n\\r\\n    // TubeGeometry\\r\\n\\r\\n    function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'TubeGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            path: path,\\r\\n            tubularSegments: tubularSegments,\\r\\n            radius: radius,\\r\\n            radialSegments: radialSegments,\\r\\n            closed: closed\\r\\n        };\\r\\n\\r\\n        if ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\\r\\n\\r\\n        var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\\r\\n\\r\\n        // expose internals\\r\\n\\r\\n        this.tangents = bufferGeometry.tangents;\\r\\n        this.normals = bufferGeometry.normals;\\r\\n        this.binormals = bufferGeometry.binormals;\\r\\n\\r\\n        // create geometry\\r\\n\\r\\n        this.fromBufferGeometry( bufferGeometry );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    TubeGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    TubeGeometry.prototype.constructor = TubeGeometry;\\r\\n\\r\\n    // TubeBufferGeometry\\r\\n\\r\\n    function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'TubeBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            path: path,\\r\\n            tubularSegments: tubularSegments,\\r\\n            radius: radius,\\r\\n            radialSegments: radialSegments,\\r\\n            closed: closed\\r\\n        };\\r\\n\\r\\n        tubularSegments = tubularSegments || 64;\\r\\n        radius = radius || 1;\\r\\n        radialSegments = radialSegments || 8;\\r\\n        closed = closed || false;\\r\\n\\r\\n        var frames = path.computeFrenetFrames( tubularSegments, closed );\\r\\n\\r\\n        // expose internals\\r\\n\\r\\n        this.tangents = frames.tangents;\\r\\n        this.normals = frames.normals;\\r\\n        this.binormals = frames.binormals;\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var vertex = new Vector3();\\r\\n        var normal = new Vector3();\\r\\n        var uv = new Vector2();\\r\\n        var P = new Vector3();\\r\\n\\r\\n        var i, j;\\r\\n\\r\\n        // buffer\\r\\n\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n        var indices = [];\\r\\n\\r\\n        // create buffer data\\r\\n\\r\\n        generateBufferData();\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n        // functions\\r\\n\\r\\n        function generateBufferData() {\\r\\n\\r\\n            for ( i = 0; i < tubularSegments; i ++ ) {\\r\\n\\r\\n                generateSegment( i );\\r\\n\\r\\n            }\\r\\n\\r\\n            // if the geometry is not closed, generate the last row of vertices and normals\\r\\n            // at the regular position on the given path\\r\\n            //\\r\\n            // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\\r\\n\\r\\n            generateSegment( ( closed === false ) ? tubularSegments : 0 );\\r\\n\\r\\n            // uvs are generated in a separate function.\\r\\n            // this makes it easy compute correct values for closed geometries\\r\\n\\r\\n            generateUVs();\\r\\n\\r\\n            // finally create faces\\r\\n\\r\\n            generateIndices();\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateSegment( i ) {\\r\\n\\r\\n            // we use getPointAt to sample evenly distributed points from the given path\\r\\n\\r\\n            P = path.getPointAt( i / tubularSegments, P );\\r\\n\\r\\n            // retrieve corresponding normal and binormal\\r\\n\\r\\n            var N = frames.normals[ i ];\\r\\n            var B = frames.binormals[ i ];\\r\\n\\r\\n            // generate normals and vertices for the current segment\\r\\n\\r\\n            for ( j = 0; j <= radialSegments; j ++ ) {\\r\\n\\r\\n                var v = j / radialSegments * Math.PI * 2;\\r\\n\\r\\n                var sin = Math.sin( v );\\r\\n                var cos = - Math.cos( v );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                normal.x = ( cos * N.x + sin * B.x );\\r\\n                normal.y = ( cos * N.y + sin * B.y );\\r\\n                normal.z = ( cos * N.z + sin * B.z );\\r\\n                normal.normalize();\\r\\n\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = P.x + radius * normal.x;\\r\\n                vertex.y = P.y + radius * normal.y;\\r\\n                vertex.z = P.z + radius * normal.z;\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateIndices() {\\r\\n\\r\\n            for ( j = 1; j <= tubularSegments; j ++ ) {\\r\\n\\r\\n                for ( i = 1; i <= radialSegments; i ++ ) {\\r\\n\\r\\n                    var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\\r\\n                    var b = ( radialSegments + 1 ) * j + ( i - 1 );\\r\\n                    var c = ( radialSegments + 1 ) * j + i;\\r\\n                    var d = ( radialSegments + 1 ) * ( j - 1 ) + i;\\r\\n\\r\\n                    // faces\\r\\n\\r\\n                    indices.push( a, b, d );\\r\\n                    indices.push( b, c, d );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateUVs() {\\r\\n\\r\\n            for ( i = 0; i <= tubularSegments; i ++ ) {\\r\\n\\r\\n                for ( j = 0; j <= radialSegments; j ++ ) {\\r\\n\\r\\n                    uv.x = i / tubularSegments;\\r\\n                    uv.y = j / radialSegments;\\r\\n\\r\\n                    uvs.push( uv.x, uv.y );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    TubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author oosmoxiecode\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     *\\r\\n     * based on http://www.blackpawn.com/texts/pqtorus/\\r\\n     */\\r\\n\\r\\n    // TorusKnotGeometry\\r\\n\\r\\n    function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'TorusKnotGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            tube: tube,\\r\\n            tubularSegments: tubularSegments,\\r\\n            radialSegments: radialSegments,\\r\\n            p: p,\\r\\n            q: q\\r\\n        };\\r\\n\\r\\n        if ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\\r\\n\\r\\n        this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    TorusKnotGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\\r\\n\\r\\n    // TorusKnotBufferGeometry\\r\\n\\r\\n    function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'TorusKnotBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            tube: tube,\\r\\n            tubularSegments: tubularSegments,\\r\\n            radialSegments: radialSegments,\\r\\n            p: p,\\r\\n            q: q\\r\\n        };\\r\\n\\r\\n        radius = radius || 1;\\r\\n        tube = tube || 0.4;\\r\\n        tubularSegments = Math.floor( tubularSegments ) || 64;\\r\\n        radialSegments = Math.floor( radialSegments ) || 8;\\r\\n        p = p || 2;\\r\\n        q = q || 3;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var i, j;\\r\\n\\r\\n        var vertex = new Vector3();\\r\\n        var normal = new Vector3();\\r\\n\\r\\n        var P1 = new Vector3();\\r\\n        var P2 = new Vector3();\\r\\n\\r\\n        var B = new Vector3();\\r\\n        var T = new Vector3();\\r\\n        var N = new Vector3();\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        for ( i = 0; i <= tubularSegments; ++ i ) {\\r\\n\\r\\n            // the radian \\\"u\\\" is used to calculate the position on the torus curve of the current tubular segement\\r\\n\\r\\n            var u = i / tubularSegments * p * Math.PI * 2;\\r\\n\\r\\n            // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\\r\\n            // these points are used to create a special \\\"coordinate space\\\", which is necessary to calculate the correct vertex positions\\r\\n\\r\\n            calculatePositionOnCurve( u, p, q, radius, P1 );\\r\\n            calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\\r\\n\\r\\n            // calculate orthonormal basis\\r\\n\\r\\n            T.subVectors( P2, P1 );\\r\\n            N.addVectors( P2, P1 );\\r\\n            B.crossVectors( T, N );\\r\\n            N.crossVectors( B, T );\\r\\n\\r\\n            // normalize B, N. T can be ignored, we don't use it\\r\\n\\r\\n            B.normalize();\\r\\n            N.normalize();\\r\\n\\r\\n            for ( j = 0; j <= radialSegments; ++ j ) {\\r\\n\\r\\n                // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\\r\\n                // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\\r\\n\\r\\n                var v = j / radialSegments * Math.PI * 2;\\r\\n                var cx = - tube * Math.cos( v );\\r\\n                var cy = tube * Math.sin( v );\\r\\n\\r\\n                // now calculate the final vertex position.\\r\\n                // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\\r\\n\\r\\n                vertex.x = P1.x + ( cx * N.x + cy * B.x );\\r\\n                vertex.y = P1.y + ( cx * N.y + cy * B.y );\\r\\n                vertex.z = P1.z + ( cx * N.z + cy * B.z );\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\\r\\n\\r\\n                normal.subVectors( vertex, P1 ).normalize();\\r\\n\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uvs.push( i / tubularSegments );\\r\\n                uvs.push( j / radialSegments );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // generate indices\\r\\n\\r\\n        for ( j = 1; j <= tubularSegments; j ++ ) {\\r\\n\\r\\n            for ( i = 1; i <= radialSegments; i ++ ) {\\r\\n\\r\\n                // indices\\r\\n\\r\\n                var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\\r\\n                var b = ( radialSegments + 1 ) * j + ( i - 1 );\\r\\n                var c = ( radialSegments + 1 ) * j + i;\\r\\n                var d = ( radialSegments + 1 ) * ( j - 1 ) + i;\\r\\n\\r\\n                // faces\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n        // this function calculates the current position on the torus curve\\r\\n\\r\\n        function calculatePositionOnCurve( u, p, q, radius, position ) {\\r\\n\\r\\n            var cu = Math.cos( u );\\r\\n            var su = Math.sin( u );\\r\\n            var quOverP = q / p * u;\\r\\n            var cs = Math.cos( quOverP );\\r\\n\\r\\n            position.x = radius * ( 2 + cs ) * 0.5 * cu;\\r\\n            position.y = radius * ( 2 + cs ) * su * 0.5;\\r\\n            position.z = radius * Math.sin( quOverP ) * 0.5;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author oosmoxiecode\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // TorusGeometry\\r\\n\\r\\n    function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'TorusGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            tube: tube,\\r\\n            radialSegments: radialSegments,\\r\\n            tubularSegments: tubularSegments,\\r\\n            arc: arc\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    TorusGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    TorusGeometry.prototype.constructor = TorusGeometry;\\r\\n\\r\\n    // TorusBufferGeometry\\r\\n\\r\\n    function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'TorusBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            tube: tube,\\r\\n            radialSegments: radialSegments,\\r\\n            tubularSegments: tubularSegments,\\r\\n            arc: arc\\r\\n        };\\r\\n\\r\\n        radius = radius || 1;\\r\\n        tube = tube || 0.4;\\r\\n        radialSegments = Math.floor( radialSegments ) || 8;\\r\\n        tubularSegments = Math.floor( tubularSegments ) || 6;\\r\\n        arc = arc || Math.PI * 2;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var center = new Vector3();\\r\\n        var vertex = new Vector3();\\r\\n        var normal = new Vector3();\\r\\n\\r\\n        var j, i;\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        for ( j = 0; j <= radialSegments; j ++ ) {\\r\\n\\r\\n            for ( i = 0; i <= tubularSegments; i ++ ) {\\r\\n\\r\\n                var u = i / tubularSegments * arc;\\r\\n                var v = j / radialSegments * Math.PI * 2;\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\\r\\n                vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\\r\\n                vertex.z = tube * Math.sin( v );\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                center.x = radius * Math.cos( u );\\r\\n                center.y = radius * Math.sin( u );\\r\\n                normal.subVectors( vertex, center ).normalize();\\r\\n\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uvs.push( i / tubularSegments );\\r\\n                uvs.push( j / radialSegments );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // generate indices\\r\\n\\r\\n        for ( j = 1; j <= radialSegments; j ++ ) {\\r\\n\\r\\n            for ( i = 1; i <= tubularSegments; i ++ ) {\\r\\n\\r\\n                // indices\\r\\n\\r\\n                var a = ( tubularSegments + 1 ) * j + i - 1;\\r\\n                var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\\r\\n                var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\\r\\n                var d = ( tubularSegments + 1 ) * j + i;\\r\\n\\r\\n                // faces\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     * Port from https://github.com/mapbox/earcut (v2.1.2)\\r\\n     */\\r\\n\\r\\n    var Earcut = {\\r\\n\\r\\n        triangulate: function ( data, holeIndices, dim ) {\\r\\n\\r\\n            dim = dim || 2;\\r\\n\\r\\n            var hasHoles = holeIndices && holeIndices.length,\\r\\n                outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\\r\\n                outerNode = linkedList( data, 0, outerLen, dim, true ),\\r\\n                triangles = [];\\r\\n\\r\\n            if ( ! outerNode ) return triangles;\\r\\n\\r\\n            var minX, minY, maxX, maxY, x, y, invSize;\\r\\n\\r\\n            if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\\r\\n\\r\\n            // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\\r\\n\\r\\n            if ( data.length > 80 * dim ) {\\r\\n\\r\\n                minX = maxX = data[ 0 ];\\r\\n                minY = maxY = data[ 1 ];\\r\\n\\r\\n                for ( var i = dim; i < outerLen; i += dim ) {\\r\\n\\r\\n                    x = data[ i ];\\r\\n                    y = data[ i + 1 ];\\r\\n                    if ( x < minX ) minX = x;\\r\\n                    if ( y < minY ) minY = y;\\r\\n                    if ( x > maxX ) maxX = x;\\r\\n                    if ( y > maxY ) maxY = y;\\r\\n\\r\\n                }\\r\\n\\r\\n                // minX, minY and invSize are later used to transform coords into integers for z-order calculation\\r\\n\\r\\n                invSize = Math.max( maxX - minX, maxY - minY );\\r\\n                invSize = invSize !== 0 ? 1 / invSize : 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\\r\\n\\r\\n            return triangles;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    // create a circular doubly linked list from polygon points in the specified winding order\\r\\n\\r\\n    function linkedList( data, start, end, dim, clockwise ) {\\r\\n\\r\\n        var i, last;\\r\\n\\r\\n        if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\\r\\n\\r\\n            for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( last && equals( last, last.next ) ) {\\r\\n\\r\\n            removeNode( last );\\r\\n            last = last.next;\\r\\n\\r\\n        }\\r\\n\\r\\n        return last;\\r\\n\\r\\n    }\\r\\n\\r\\n    // eliminate colinear or duplicate points\\r\\n\\r\\n    function filterPoints( start, end ) {\\r\\n\\r\\n        if ( ! start ) return start;\\r\\n        if ( ! end ) end = start;\\r\\n\\r\\n        var p = start, again;\\r\\n\\r\\n        do {\\r\\n\\r\\n            again = false;\\r\\n\\r\\n            if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\\r\\n\\r\\n                removeNode( p );\\r\\n                p = end = p.prev;\\r\\n                if ( p === p.next ) break;\\r\\n                again = true;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                p = p.next;\\r\\n\\r\\n            }\\r\\n\\r\\n        } while ( again || p !== end );\\r\\n\\r\\n        return end;\\r\\n\\r\\n    }\\r\\n\\r\\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\\r\\n\\r\\n    function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\\r\\n\\r\\n        if ( ! ear ) return;\\r\\n\\r\\n        // interlink polygon nodes in z-order\\r\\n\\r\\n        if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\\r\\n\\r\\n        var stop = ear, prev, next;\\r\\n\\r\\n        // iterate through ears, slicing them one by one\\r\\n\\r\\n        while ( ear.prev !== ear.next ) {\\r\\n\\r\\n            prev = ear.prev;\\r\\n            next = ear.next;\\r\\n\\r\\n            if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\\r\\n\\r\\n                // cut off the triangle\\r\\n                triangles.push( prev.i / dim );\\r\\n                triangles.push( ear.i / dim );\\r\\n                triangles.push( next.i / dim );\\r\\n\\r\\n                removeNode( ear );\\r\\n\\r\\n                // skipping the next vertice leads to less sliver triangles\\r\\n                ear = next.next;\\r\\n                stop = next.next;\\r\\n\\r\\n                continue;\\r\\n\\r\\n            }\\r\\n\\r\\n            ear = next;\\r\\n\\r\\n            // if we looped through the whole remaining polygon and can't find any more ears\\r\\n\\r\\n            if ( ear === stop ) {\\r\\n\\r\\n                // try filtering points and slicing again\\r\\n\\r\\n                if ( ! pass ) {\\r\\n\\r\\n                    earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\\r\\n\\r\\n                    // if this didn't work, try curing all small self-intersections locally\\r\\n\\r\\n                } else if ( pass === 1 ) {\\r\\n\\r\\n                    ear = cureLocalIntersections( ear, triangles, dim );\\r\\n                    earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\\r\\n\\r\\n                    // as a last resort, try splitting the remaining polygon into two\\r\\n\\r\\n                } else if ( pass === 2 ) {\\r\\n\\r\\n                    splitEarcut( ear, triangles, dim, minX, minY, invSize );\\r\\n\\r\\n                }\\r\\n\\r\\n                break;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // check whether a polygon node forms a valid ear with adjacent nodes\\r\\n\\r\\n    function isEar( ear ) {\\r\\n\\r\\n        var a = ear.prev,\\r\\n            b = ear,\\r\\n            c = ear.next;\\r\\n\\r\\n        if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\\r\\n\\r\\n        // now make sure we don't have other points inside the potential ear\\r\\n        var p = ear.next.next;\\r\\n\\r\\n        while ( p !== ear.prev ) {\\r\\n\\r\\n            if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\\r\\n\\r\\n                return false;\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n\\r\\n    }\\r\\n\\r\\n    function isEarHashed( ear, minX, minY, invSize ) {\\r\\n\\r\\n        var a = ear.prev,\\r\\n            b = ear,\\r\\n            c = ear.next;\\r\\n\\r\\n        if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\\r\\n\\r\\n        // triangle bbox; min & max are calculated like this for speed\\r\\n\\r\\n        var minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\\r\\n            minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\\r\\n            maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\\r\\n            maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\\r\\n\\r\\n        // z-order range for the current triangle bbox;\\r\\n\\r\\n        var minZ = zOrder( minTX, minTY, minX, minY, invSize ),\\r\\n            maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\\r\\n\\r\\n        // first look for points inside the triangle in increasing z-order\\r\\n\\r\\n        var p = ear.nextZ;\\r\\n\\r\\n        while ( p && p.z <= maxZ ) {\\r\\n\\r\\n            if ( p !== ear.prev && p !== ear.next &&\\r\\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\\r\\n                area( p.prev, p, p.next ) >= 0 ) return false;\\r\\n            p = p.nextZ;\\r\\n\\r\\n        }\\r\\n\\r\\n        // then look for points in decreasing z-order\\r\\n\\r\\n        p = ear.prevZ;\\r\\n\\r\\n        while ( p && p.z >= minZ ) {\\r\\n\\r\\n            if ( p !== ear.prev && p !== ear.next &&\\r\\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\\r\\n                area( p.prev, p, p.next ) >= 0 ) return false;\\r\\n\\r\\n            p = p.prevZ;\\r\\n\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n\\r\\n    }\\r\\n\\r\\n    // go through all polygon nodes and cure small local self-intersections\\r\\n\\r\\n    function cureLocalIntersections( start, triangles, dim ) {\\r\\n\\r\\n        var p = start;\\r\\n\\r\\n        do {\\r\\n\\r\\n            var a = p.prev, b = p.next.next;\\r\\n\\r\\n            if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\\r\\n\\r\\n                triangles.push( a.i / dim );\\r\\n                triangles.push( p.i / dim );\\r\\n                triangles.push( b.i / dim );\\r\\n\\r\\n                // remove two nodes involved\\r\\n\\r\\n                removeNode( p );\\r\\n                removeNode( p.next );\\r\\n\\r\\n                p = start = b;\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== start );\\r\\n\\r\\n        return p;\\r\\n\\r\\n    }\\r\\n\\r\\n    // try splitting polygon into two and triangulate them independently\\r\\n\\r\\n    function splitEarcut( start, triangles, dim, minX, minY, invSize ) {\\r\\n\\r\\n        // look for a valid diagonal that divides the polygon into two\\r\\n\\r\\n        var a = start;\\r\\n\\r\\n        do {\\r\\n\\r\\n            var b = a.next.next;\\r\\n\\r\\n            while ( b !== a.prev ) {\\r\\n\\r\\n                if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\\r\\n\\r\\n                    // split the polygon in two by the diagonal\\r\\n\\r\\n                    var c = splitPolygon( a, b );\\r\\n\\r\\n                    // filter colinear points around the cuts\\r\\n\\r\\n                    a = filterPoints( a, a.next );\\r\\n                    c = filterPoints( c, c.next );\\r\\n\\r\\n                    // run earcut on each half\\r\\n\\r\\n                    earcutLinked( a, triangles, dim, minX, minY, invSize );\\r\\n                    earcutLinked( c, triangles, dim, minX, minY, invSize );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n                b = b.next;\\r\\n\\r\\n            }\\r\\n\\r\\n            a = a.next;\\r\\n\\r\\n        } while ( a !== start );\\r\\n\\r\\n    }\\r\\n\\r\\n    // link every hole into the outer loop, producing a single-ring polygon without holes\\r\\n\\r\\n    function eliminateHoles( data, holeIndices, outerNode, dim ) {\\r\\n\\r\\n        var queue = [], i, len, start, end, list;\\r\\n\\r\\n        for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\\r\\n\\r\\n            start = holeIndices[ i ] * dim;\\r\\n            end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\\r\\n            list = linkedList( data, start, end, dim, false );\\r\\n            if ( list === list.next ) list.steiner = true;\\r\\n            queue.push( getLeftmost( list ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        queue.sort( compareX );\\r\\n\\r\\n        // process holes from left to right\\r\\n\\r\\n        for ( i = 0; i < queue.length; i ++ ) {\\r\\n\\r\\n            eliminateHole( queue[ i ], outerNode );\\r\\n            outerNode = filterPoints( outerNode, outerNode.next );\\r\\n\\r\\n        }\\r\\n\\r\\n        return outerNode;\\r\\n\\r\\n    }\\r\\n\\r\\n    function compareX( a, b ) {\\r\\n\\r\\n        return a.x - b.x;\\r\\n\\r\\n    }\\r\\n\\r\\n    // find a bridge between vertices that connects hole with an outer ring and and link it\\r\\n\\r\\n    function eliminateHole( hole, outerNode ) {\\r\\n\\r\\n        outerNode = findHoleBridge( hole, outerNode );\\r\\n\\r\\n        if ( outerNode ) {\\r\\n\\r\\n            var b = splitPolygon( outerNode, hole );\\r\\n\\r\\n            filterPoints( b, b.next );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\\r\\n\\r\\n    function findHoleBridge( hole, outerNode ) {\\r\\n\\r\\n        var p = outerNode,\\r\\n            hx = hole.x,\\r\\n            hy = hole.y,\\r\\n            qx = - Infinity,\\r\\n            m;\\r\\n\\r\\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\\r\\n        // segment's endpoint with lesser x will be potential connection point\\r\\n\\r\\n        do {\\r\\n\\r\\n            if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\\r\\n\\r\\n                var x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\\r\\n\\r\\n                if ( x <= hx && x > qx ) {\\r\\n\\r\\n                    qx = x;\\r\\n\\r\\n                    if ( x === hx ) {\\r\\n\\r\\n                        if ( hy === p.y ) return p;\\r\\n                        if ( hy === p.next.y ) return p.next;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    m = p.x < p.next.x ? p : p.next;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== outerNode );\\r\\n\\r\\n        if ( ! m ) return null;\\r\\n\\r\\n        if ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\\r\\n\\r\\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\\r\\n        // if there are no points found, we have a valid connection;\\r\\n        // otherwise choose the point of the minimum angle with the ray as connection point\\r\\n\\r\\n        var stop = m,\\r\\n            mx = m.x,\\r\\n            my = m.y,\\r\\n            tanMin = Infinity,\\r\\n            tan;\\r\\n\\r\\n        p = m.next;\\r\\n\\r\\n        while ( p !== stop ) {\\r\\n\\r\\n            if ( hx >= p.x && p.x >= mx && hx !== p.x &&\\r\\n                pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\\r\\n\\r\\n                tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\\r\\n\\r\\n                if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\\r\\n\\r\\n                    m = p;\\r\\n                    tanMin = tan;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        }\\r\\n\\r\\n        return m;\\r\\n\\r\\n    }\\r\\n\\r\\n    // interlink polygon nodes in z-order\\r\\n\\r\\n    function indexCurve( start, minX, minY, invSize ) {\\r\\n\\r\\n        var p = start;\\r\\n\\r\\n        do {\\r\\n\\r\\n            if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\\r\\n            p.prevZ = p.prev;\\r\\n            p.nextZ = p.next;\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== start );\\r\\n\\r\\n        p.prevZ.nextZ = null;\\r\\n        p.prevZ = null;\\r\\n\\r\\n        sortLinked( p );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Simon Tatham's linked list merge sort algorithm\\r\\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\\r\\n\\r\\n    function sortLinked( list ) {\\r\\n\\r\\n        var i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\\r\\n\\r\\n        do {\\r\\n\\r\\n            p = list;\\r\\n            list = null;\\r\\n            tail = null;\\r\\n            numMerges = 0;\\r\\n\\r\\n            while ( p ) {\\r\\n\\r\\n                numMerges ++;\\r\\n                q = p;\\r\\n                pSize = 0;\\r\\n\\r\\n                for ( i = 0; i < inSize; i ++ ) {\\r\\n\\r\\n                    pSize ++;\\r\\n                    q = q.nextZ;\\r\\n                    if ( ! q ) break;\\r\\n\\r\\n                }\\r\\n\\r\\n                qSize = inSize;\\r\\n\\r\\n                while ( pSize > 0 || ( qSize > 0 && q ) ) {\\r\\n\\r\\n                    if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\\r\\n\\r\\n                        e = p;\\r\\n                        p = p.nextZ;\\r\\n                        pSize --;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        e = q;\\r\\n                        q = q.nextZ;\\r\\n                        qSize --;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( tail ) tail.nextZ = e;\\r\\n                    else list = e;\\r\\n\\r\\n                    e.prevZ = tail;\\r\\n                    tail = e;\\r\\n\\r\\n                }\\r\\n\\r\\n                p = q;\\r\\n\\r\\n            }\\r\\n\\r\\n            tail.nextZ = null;\\r\\n            inSize *= 2;\\r\\n\\r\\n        } while ( numMerges > 1 );\\r\\n\\r\\n        return list;\\r\\n\\r\\n    }\\r\\n\\r\\n    // z-order of a point given coords and inverse of the longer side of data bbox\\r\\n\\r\\n    function zOrder( x, y, minX, minY, invSize ) {\\r\\n\\r\\n        // coords are transformed into non-negative 15-bit integer range\\r\\n\\r\\n        x = 32767 * ( x - minX ) * invSize;\\r\\n        y = 32767 * ( y - minY ) * invSize;\\r\\n\\r\\n        x = ( x | ( x << 8 ) ) & 0x00FF00FF;\\r\\n        x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\\r\\n        x = ( x | ( x << 2 ) ) & 0x33333333;\\r\\n        x = ( x | ( x << 1 ) ) & 0x55555555;\\r\\n\\r\\n        y = ( y | ( y << 8 ) ) & 0x00FF00FF;\\r\\n        y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\\r\\n        y = ( y | ( y << 2 ) ) & 0x33333333;\\r\\n        y = ( y | ( y << 1 ) ) & 0x55555555;\\r\\n\\r\\n        return x | ( y << 1 );\\r\\n\\r\\n    }\\r\\n\\r\\n    // find the leftmost node of a polygon ring\\r\\n\\r\\n    function getLeftmost( start ) {\\r\\n\\r\\n        var p = start, leftmost = start;\\r\\n\\r\\n        do {\\r\\n\\r\\n            if ( p.x < leftmost.x ) leftmost = p;\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== start );\\r\\n\\r\\n        return leftmost;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if a point lies within a convex triangle\\r\\n\\r\\n    function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\\r\\n\\r\\n        return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\\r\\n            ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\\r\\n            ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\\r\\n\\r\\n    function isValidDiagonal( a, b ) {\\r\\n\\r\\n        return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\\r\\n            locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\\r\\n\\r\\n    }\\r\\n\\r\\n    // signed area of a triangle\\r\\n\\r\\n    function area( p, q, r ) {\\r\\n\\r\\n        return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if two points are equal\\r\\n\\r\\n    function equals( p1, p2 ) {\\r\\n\\r\\n        return p1.x === p2.x && p1.y === p2.y;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if two segments intersect\\r\\n\\r\\n    function intersects( p1, q1, p2, q2 ) {\\r\\n\\r\\n        if ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\\r\\n            ( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\\r\\n\\r\\n        return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\\r\\n            area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if a polygon diagonal intersects any polygon segments\\r\\n\\r\\n    function intersectsPolygon( a, b ) {\\r\\n\\r\\n        var p = a;\\r\\n\\r\\n        do {\\r\\n\\r\\n            if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\\r\\n                intersects( p, p.next, a, b ) ) {\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== a );\\r\\n\\r\\n        return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if a polygon diagonal is locally inside the polygon\\r\\n\\r\\n    function locallyInside( a, b ) {\\r\\n\\r\\n        return area( a.prev, a, a.next ) < 0 ?\\r\\n            area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\\r\\n            area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    // check if the middle point of a polygon diagonal is inside the polygon\\r\\n\\r\\n    function middleInside( a, b ) {\\r\\n\\r\\n        var p = a,\\r\\n            inside = false,\\r\\n            px = ( a.x + b.x ) / 2,\\r\\n            py = ( a.y + b.y ) / 2;\\r\\n\\r\\n        do {\\r\\n\\r\\n            if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\\r\\n                ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\\r\\n\\r\\n                inside = ! inside;\\r\\n\\r\\n            }\\r\\n\\r\\n            p = p.next;\\r\\n\\r\\n        } while ( p !== a );\\r\\n\\r\\n        return inside;\\r\\n\\r\\n    }\\r\\n\\r\\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\\r\\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\\r\\n\\r\\n    function splitPolygon( a, b ) {\\r\\n\\r\\n        var a2 = new Node( a.i, a.x, a.y ),\\r\\n            b2 = new Node( b.i, b.x, b.y ),\\r\\n            an = a.next,\\r\\n            bp = b.prev;\\r\\n\\r\\n        a.next = b;\\r\\n        b.prev = a;\\r\\n\\r\\n        a2.next = an;\\r\\n        an.prev = a2;\\r\\n\\r\\n        b2.next = a2;\\r\\n        a2.prev = b2;\\r\\n\\r\\n        bp.next = b2;\\r\\n        b2.prev = bp;\\r\\n\\r\\n        return b2;\\r\\n\\r\\n    }\\r\\n\\r\\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\\r\\n\\r\\n    function insertNode( i, x, y, last ) {\\r\\n\\r\\n        var p = new Node( i, x, y );\\r\\n\\r\\n        if ( ! last ) {\\r\\n\\r\\n            p.prev = p;\\r\\n            p.next = p;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            p.next = last.next;\\r\\n            p.prev = last;\\r\\n            last.next.prev = p;\\r\\n            last.next = p;\\r\\n\\r\\n        }\\r\\n\\r\\n        return p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function removeNode( p ) {\\r\\n\\r\\n        p.next.prev = p.prev;\\r\\n        p.prev.next = p.next;\\r\\n\\r\\n        if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\\r\\n        if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\\r\\n\\r\\n    }\\r\\n\\r\\n    function Node( i, x, y ) {\\r\\n\\r\\n        // vertice index in coordinates array\\r\\n        this.i = i;\\r\\n\\r\\n        // vertex coordinates\\r\\n        this.x = x;\\r\\n        this.y = y;\\r\\n\\r\\n        // previous and next vertice nodes in a polygon ring\\r\\n        this.prev = null;\\r\\n        this.next = null;\\r\\n\\r\\n        // z-order curve value\\r\\n        this.z = null;\\r\\n\\r\\n        // previous and next nodes in z-order\\r\\n        this.prevZ = null;\\r\\n        this.nextZ = null;\\r\\n\\r\\n        // indicates whether this is a steiner point\\r\\n        this.steiner = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    function signedArea( data, start, end, dim ) {\\r\\n\\r\\n        var sum = 0;\\r\\n\\r\\n        for ( var i = start, j = end - dim; i < end; i += dim ) {\\r\\n\\r\\n            sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\\r\\n            j = i;\\r\\n\\r\\n        }\\r\\n\\r\\n        return sum;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     */\\r\\n\\r\\n    var ShapeUtils = {\\r\\n\\r\\n        // calculate area of the contour polygon\\r\\n\\r\\n        area: function ( contour ) {\\r\\n\\r\\n            var n = contour.length;\\r\\n            var a = 0.0;\\r\\n\\r\\n            for ( var p = n - 1, q = 0; q < n; p = q ++ ) {\\r\\n\\r\\n                a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\\r\\n\\r\\n            }\\r\\n\\r\\n            return a * 0.5;\\r\\n\\r\\n        },\\r\\n\\r\\n        isClockWise: function ( pts ) {\\r\\n\\r\\n            return ShapeUtils.area( pts ) < 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        triangulateShape: function ( contour, holes ) {\\r\\n\\r\\n            var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\\r\\n            var holeIndices = []; // array of hole indices\\r\\n            var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\\r\\n\\r\\n            removeDupEndPts( contour );\\r\\n            addContour( vertices, contour );\\r\\n\\r\\n            //\\r\\n\\r\\n            var holeIndex = contour.length;\\r\\n\\r\\n            holes.forEach( removeDupEndPts );\\r\\n\\r\\n            for ( var i = 0; i < holes.length; i ++ ) {\\r\\n\\r\\n                holeIndices.push( holeIndex );\\r\\n                holeIndex += holes[ i ].length;\\r\\n                addContour( vertices, holes[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            var triangles = Earcut.triangulate( vertices, holeIndices );\\r\\n\\r\\n            //\\r\\n\\r\\n            for ( var i = 0; i < triangles.length; i += 3 ) {\\r\\n\\r\\n                faces.push( triangles.slice( i, i + 3 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return faces;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    function removeDupEndPts( points ) {\\r\\n\\r\\n        var l = points.length;\\r\\n\\r\\n        if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\\r\\n\\r\\n            points.pop();\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function addContour( vertices, contour ) {\\r\\n\\r\\n        for ( var i = 0; i < contour.length; i ++ ) {\\r\\n\\r\\n            vertices.push( contour[ i ].x );\\r\\n            vertices.push( contour[ i ].y );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     *\\r\\n     * Creates extruded geometry from a path shape.\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *\\r\\n\\t *  curveSegments: <int>, // number of points on the curves\\r\\n\\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\\r\\n\\t *  depth: <float>, // Depth to extrude the shape\\r\\n\\t *\\r\\n\\t *  bevelEnabled: <bool>, // turn on bevel\\r\\n\\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\\r\\n\\t *  bevelSize: <float>, // how far from shape outline is bevel\\r\\n\\t *  bevelSegments: <int>, // number of bevel layers\\r\\n\\t *\\r\\n\\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\\r\\n\\t *\\r\\n\\t *  UVGenerator: <Object> // object that provides UV generator functions\\r\\n\\t *\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    // ExtrudeGeometry\\r\\n\\r\\n    function ExtrudeGeometry( shapes, options ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'ExtrudeGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            shapes: shapes,\\r\\n            options: options\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    ExtrudeGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\\r\\n\\r\\n    ExtrudeGeometry.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Geometry.prototype.toJSON.call( this );\\r\\n\\r\\n        var shapes = this.parameters.shapes;\\r\\n        var options = this.parameters.options;\\r\\n\\r\\n        return toJSON( shapes, options, data );\\r\\n\\r\\n    };\\r\\n\\r\\n    // ExtrudeBufferGeometry\\r\\n\\r\\n    function ExtrudeBufferGeometry( shapes, options ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'ExtrudeBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            shapes: shapes,\\r\\n            options: options\\r\\n        };\\r\\n\\r\\n        shapes = Array.isArray( shapes ) ? shapes : [ shapes ];\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        var verticesArray = [];\\r\\n        var uvArray = [];\\r\\n\\r\\n        for ( var i = 0, l = shapes.length; i < l; i ++ ) {\\r\\n\\r\\n            var shape = shapes[ i ];\\r\\n            addShape( shape );\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\\r\\n\\r\\n        this.computeVertexNormals();\\r\\n\\r\\n        // functions\\r\\n\\r\\n        function addShape( shape ) {\\r\\n\\r\\n            var placeholder = [];\\r\\n\\r\\n            // options\\r\\n\\r\\n            var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\r\\n            var steps = options.steps !== undefined ? options.steps : 1;\\r\\n            var depth = options.depth !== undefined ? options.depth : 100;\\r\\n\\r\\n            var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\\r\\n            var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\\r\\n            var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\\r\\n            var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\\r\\n\\r\\n            var extrudePath = options.extrudePath;\\r\\n\\r\\n            var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\\r\\n\\r\\n            // deprecated options\\r\\n\\r\\n            if ( options.amount !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\\r\\n                depth = options.amount;\\r\\n\\r\\n            }\\r\\n\\r\\n            //\\r\\n\\r\\n            var extrudePts, extrudeByPath = false;\\r\\n            var splineTube, binormal, normal, position2;\\r\\n\\r\\n            if ( extrudePath ) {\\r\\n\\r\\n                extrudePts = extrudePath.getSpacedPoints( steps );\\r\\n\\r\\n                extrudeByPath = true;\\r\\n                bevelEnabled = false; // bevels not supported for path extrusion\\r\\n\\r\\n                // SETUP TNB variables\\r\\n\\r\\n                // TODO1 - have a .isClosed in spline?\\r\\n\\r\\n                splineTube = extrudePath.computeFrenetFrames( steps, false );\\r\\n\\r\\n                // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\\r\\n\\r\\n                binormal = new Vector3();\\r\\n                normal = new Vector3();\\r\\n                position2 = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            // Safeguards if bevels are not enabled\\r\\n\\r\\n            if ( ! bevelEnabled ) {\\r\\n\\r\\n                bevelSegments = 0;\\r\\n                bevelThickness = 0;\\r\\n                bevelSize = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            // Variables initialization\\r\\n\\r\\n            var ahole, h, hl; // looping of holes\\r\\n\\r\\n            var shapePoints = shape.extractPoints( curveSegments );\\r\\n\\r\\n            var vertices = shapePoints.shape;\\r\\n            var holes = shapePoints.holes;\\r\\n\\r\\n            var reverse = ! ShapeUtils.isClockWise( vertices );\\r\\n\\r\\n            if ( reverse ) {\\r\\n\\r\\n                vertices = vertices.reverse();\\r\\n\\r\\n                // Maybe we should also check if holes are in the opposite direction, just to be safe ...\\r\\n\\r\\n                for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                    ahole = holes[ h ];\\r\\n\\r\\n                    if ( ShapeUtils.isClockWise( ahole ) ) {\\r\\n\\r\\n                        holes[ h ] = ahole.reverse();\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            var faces = ShapeUtils.triangulateShape( vertices, holes );\\r\\n\\r\\n            /* Vertices */\\r\\n\\r\\n            var contour = vertices; // vertices has all points but contour has only points of circumference\\r\\n\\r\\n            for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                ahole = holes[ h ];\\r\\n\\r\\n                vertices = vertices.concat( ahole );\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            function scalePt2( pt, vec, size ) {\\r\\n\\r\\n                if ( ! vec ) console.error( \\\"THREE.ExtrudeGeometry: vec does not exist\\\" );\\r\\n\\r\\n                return vec.clone().multiplyScalar( size ).add( pt );\\r\\n\\r\\n            }\\r\\n\\r\\n            var b, bs, t, z,\\r\\n                vert, vlen = vertices.length,\\r\\n                face, flen = faces.length;\\r\\n\\r\\n\\r\\n            // Find directions for point movement\\r\\n\\r\\n\\r\\n            function getBevelVec( inPt, inPrev, inNext ) {\\r\\n\\r\\n                // computes for inPt the corresponding point inPt' on a new contour\\r\\n                //   shifted by 1 unit (length of normalized vector) to the left\\r\\n                // if we walk along contour clockwise, this new contour is outside the old one\\r\\n                //\\r\\n                // inPt' is the intersection of the two lines parallel to the two\\r\\n                //  adjacent edges of inPt at a distance of 1 unit on the left side.\\r\\n\\r\\n                var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\\r\\n\\r\\n                // good reading for geometry algorithms (here: line-line intersection)\\r\\n                // http://geomalgorithms.com/a05-_intersect-1.html\\r\\n\\r\\n                var v_prev_x = inPt.x - inPrev.x,\\r\\n                    v_prev_y = inPt.y - inPrev.y;\\r\\n                var v_next_x = inNext.x - inPt.x,\\r\\n                    v_next_y = inNext.y - inPt.y;\\r\\n\\r\\n                var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\\r\\n\\r\\n                // check for collinear edges\\r\\n                var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\r\\n\\r\\n                if ( Math.abs( collinear0 ) > Number.EPSILON ) {\\r\\n\\r\\n                    // not collinear\\r\\n\\r\\n                    // length of vectors for normalizing\\r\\n\\r\\n                    var v_prev_len = Math.sqrt( v_prev_lensq );\\r\\n                    var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\\r\\n\\r\\n                    // shift adjacent points by unit vectors to the left\\r\\n\\r\\n                    var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\\r\\n                    var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\\r\\n\\r\\n                    var ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\\r\\n                    var ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\\r\\n\\r\\n                    // scaling factor for v_prev to intersection point\\r\\n\\r\\n                    var sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\\r\\n                        ( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\\r\\n                        ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\r\\n\\r\\n                    // vector from inPt to intersection point\\r\\n\\r\\n                    v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\\r\\n                    v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\\r\\n\\r\\n                    // Don't normalize!, otherwise sharp corners become ugly\\r\\n                    //  but prevent crazy spikes\\r\\n                    var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\\r\\n                    if ( v_trans_lensq <= 2 ) {\\r\\n\\r\\n                        return new Vector2( v_trans_x, v_trans_y );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        shrink_by = Math.sqrt( v_trans_lensq / 2 );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // handle special case of collinear edges\\r\\n\\r\\n                    var direction_eq = false; // assumes: opposite\\r\\n                    if ( v_prev_x > Number.EPSILON ) {\\r\\n\\r\\n                        if ( v_next_x > Number.EPSILON ) {\\r\\n\\r\\n                            direction_eq = true;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        if ( v_prev_x < - Number.EPSILON ) {\\r\\n\\r\\n                            if ( v_next_x < - Number.EPSILON ) {\\r\\n\\r\\n                                direction_eq = true;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\\r\\n\\r\\n                                direction_eq = true;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( direction_eq ) {\\r\\n\\r\\n                        // console.log(\\\"Warning: lines are a straight sequence\\\");\\r\\n                        v_trans_x = - v_prev_y;\\r\\n                        v_trans_y = v_prev_x;\\r\\n                        shrink_by = Math.sqrt( v_prev_lensq );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // console.log(\\\"Warning: lines are a straight spike\\\");\\r\\n                        v_trans_x = v_prev_x;\\r\\n                        v_trans_y = v_prev_y;\\r\\n                        shrink_by = Math.sqrt( v_prev_lensq / 2 );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            var contourMovements = [];\\r\\n\\r\\n            for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\r\\n\\r\\n                if ( j === il ) j = 0;\\r\\n                if ( k === il ) k = 0;\\r\\n\\r\\n                //  (j)---(i)---(k)\\r\\n                // console.log('i,j,k', i, j , k)\\r\\n\\r\\n                contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            var holesMovements = [],\\r\\n                oneHoleMovements, verticesMovements = contourMovements.concat();\\r\\n\\r\\n            for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                ahole = holes[ h ];\\r\\n\\r\\n                oneHoleMovements = [];\\r\\n\\r\\n                for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\r\\n\\r\\n                    if ( j === il ) j = 0;\\r\\n                    if ( k === il ) k = 0;\\r\\n\\r\\n                    //  (j)---(i)---(k)\\r\\n                    oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                holesMovements.push( oneHoleMovements );\\r\\n                verticesMovements = verticesMovements.concat( oneHoleMovements );\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            // Loop bevelSegments, 1 for the front, 1 for the back\\r\\n\\r\\n            for ( b = 0; b < bevelSegments; b ++ ) {\\r\\n\\r\\n                //for ( b = bevelSegments; b > 0; b -- ) {\\r\\n\\r\\n                t = b / bevelSegments;\\r\\n                z = bevelThickness * Math.cos( t * Math.PI / 2 );\\r\\n                bs = bevelSize * Math.sin( t * Math.PI / 2 );\\r\\n\\r\\n                // contract shape\\r\\n\\r\\n                for ( i = 0, il = contour.length; i < il; i ++ ) {\\r\\n\\r\\n                    vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\r\\n\\r\\n                    v( vert.x, vert.y, - z );\\r\\n\\r\\n                }\\r\\n\\r\\n                // expand holes\\r\\n\\r\\n                for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                    ahole = holes[ h ];\\r\\n                    oneHoleMovements = holesMovements[ h ];\\r\\n\\r\\n                    for ( i = 0, il = ahole.length; i < il; i ++ ) {\\r\\n\\r\\n                        vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\r\\n\\r\\n                        v( vert.x, vert.y, - z );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            bs = bevelSize;\\r\\n\\r\\n            // Back facing vertices\\r\\n\\r\\n            for ( i = 0; i < vlen; i ++ ) {\\r\\n\\r\\n                vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\r\\n\\r\\n                if ( ! extrudeByPath ) {\\r\\n\\r\\n                    v( vert.x, vert.y, 0 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\\r\\n\\r\\n                    normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\\r\\n                    binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\\r\\n\\r\\n                    position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\\r\\n\\r\\n                    v( position2.x, position2.y, position2.z );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // Add stepped vertices...\\r\\n            // Including front facing vertices\\r\\n\\r\\n            var s;\\r\\n\\r\\n            for ( s = 1; s <= steps; s ++ ) {\\r\\n\\r\\n                for ( i = 0; i < vlen; i ++ ) {\\r\\n\\r\\n                    vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\r\\n\\r\\n                    if ( ! extrudeByPath ) {\\r\\n\\r\\n                        v( vert.x, vert.y, depth / steps * s );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\\r\\n\\r\\n                        normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\\r\\n                        binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\\r\\n\\r\\n                        position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\\r\\n\\r\\n                        v( position2.x, position2.y, position2.z );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            // Add bevel segments planes\\r\\n\\r\\n            //for ( b = 1; b <= bevelSegments; b ++ ) {\\r\\n            for ( b = bevelSegments - 1; b >= 0; b -- ) {\\r\\n\\r\\n                t = b / bevelSegments;\\r\\n                z = bevelThickness * Math.cos( t * Math.PI / 2 );\\r\\n                bs = bevelSize * Math.sin( t * Math.PI / 2 );\\r\\n\\r\\n                // contract shape\\r\\n\\r\\n                for ( i = 0, il = contour.length; i < il; i ++ ) {\\r\\n\\r\\n                    vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\r\\n                    v( vert.x, vert.y, depth + z );\\r\\n\\r\\n                }\\r\\n\\r\\n                // expand holes\\r\\n\\r\\n                for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                    ahole = holes[ h ];\\r\\n                    oneHoleMovements = holesMovements[ h ];\\r\\n\\r\\n                    for ( i = 0, il = ahole.length; i < il; i ++ ) {\\r\\n\\r\\n                        vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\r\\n\\r\\n                        if ( ! extrudeByPath ) {\\r\\n\\r\\n                            v( vert.x, vert.y, depth + z );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            /* Faces */\\r\\n\\r\\n            // Top and bottom faces\\r\\n\\r\\n            buildLidFaces();\\r\\n\\r\\n            // Sides faces\\r\\n\\r\\n            buildSideFaces();\\r\\n\\r\\n\\r\\n            /////  Internal functions\\r\\n\\r\\n            function buildLidFaces() {\\r\\n\\r\\n                var start = verticesArray.length / 3;\\r\\n\\r\\n                if ( bevelEnabled ) {\\r\\n\\r\\n                    var layer = 0; // steps + 1\\r\\n                    var offset = vlen * layer;\\r\\n\\r\\n                    // Bottom faces\\r\\n\\r\\n                    for ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n                        face = faces[ i ];\\r\\n                        f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    layer = steps + bevelSegments * 2;\\r\\n                    offset = vlen * layer;\\r\\n\\r\\n                    // Top faces\\r\\n\\r\\n                    for ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n                        face = faces[ i ];\\r\\n                        f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // Bottom faces\\r\\n\\r\\n                    for ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n                        face = faces[ i ];\\r\\n                        f3( face[ 2 ], face[ 1 ], face[ 0 ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    // Top faces\\r\\n\\r\\n                    for ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n                        face = faces[ i ];\\r\\n                        f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                scope.addGroup( start, verticesArray.length / 3 - start, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Create faces for the z-sides of the shape\\r\\n\\r\\n            function buildSideFaces() {\\r\\n\\r\\n                var start = verticesArray.length / 3;\\r\\n                var layeroffset = 0;\\r\\n                sidewalls( contour, layeroffset );\\r\\n                layeroffset += contour.length;\\r\\n\\r\\n                for ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n                    ahole = holes[ h ];\\r\\n                    sidewalls( ahole, layeroffset );\\r\\n\\r\\n                    //, true\\r\\n                    layeroffset += ahole.length;\\r\\n\\r\\n                }\\r\\n\\r\\n\\r\\n                scope.addGroup( start, verticesArray.length / 3 - start, 1 );\\r\\n\\r\\n\\r\\n            }\\r\\n\\r\\n            function sidewalls( contour, layeroffset ) {\\r\\n\\r\\n                var j, k;\\r\\n                i = contour.length;\\r\\n\\r\\n                while ( -- i >= 0 ) {\\r\\n\\r\\n                    j = i;\\r\\n                    k = i - 1;\\r\\n                    if ( k < 0 ) k = contour.length - 1;\\r\\n\\r\\n                    //console.log('b', i,j, i-1, k,vertices.length);\\r\\n\\r\\n                    var s = 0,\\r\\n                        sl = steps + bevelSegments * 2;\\r\\n\\r\\n                    for ( s = 0; s < sl; s ++ ) {\\r\\n\\r\\n                        var slen1 = vlen * s;\\r\\n                        var slen2 = vlen * ( s + 1 );\\r\\n\\r\\n                        var a = layeroffset + j + slen1,\\r\\n                            b = layeroffset + k + slen1,\\r\\n                            c = layeroffset + k + slen2,\\r\\n                            d = layeroffset + j + slen2;\\r\\n\\r\\n                        f4( a, b, c, d );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function v( x, y, z ) {\\r\\n\\r\\n                placeholder.push( x );\\r\\n                placeholder.push( y );\\r\\n                placeholder.push( z );\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            function f3( a, b, c ) {\\r\\n\\r\\n                addVertex( a );\\r\\n                addVertex( b );\\r\\n                addVertex( c );\\r\\n\\r\\n                var nextIndex = verticesArray.length / 3;\\r\\n                var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\\r\\n\\r\\n                addUV( uvs[ 0 ] );\\r\\n                addUV( uvs[ 1 ] );\\r\\n                addUV( uvs[ 2 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            function f4( a, b, c, d ) {\\r\\n\\r\\n                addVertex( a );\\r\\n                addVertex( b );\\r\\n                addVertex( d );\\r\\n\\r\\n                addVertex( b );\\r\\n                addVertex( c );\\r\\n                addVertex( d );\\r\\n\\r\\n\\r\\n                var nextIndex = verticesArray.length / 3;\\r\\n                var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\\r\\n\\r\\n                addUV( uvs[ 0 ] );\\r\\n                addUV( uvs[ 1 ] );\\r\\n                addUV( uvs[ 3 ] );\\r\\n\\r\\n                addUV( uvs[ 1 ] );\\r\\n                addUV( uvs[ 2 ] );\\r\\n                addUV( uvs[ 3 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            function addVertex( index ) {\\r\\n\\r\\n                verticesArray.push( placeholder[ index * 3 + 0 ] );\\r\\n                verticesArray.push( placeholder[ index * 3 + 1 ] );\\r\\n                verticesArray.push( placeholder[ index * 3 + 2 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n\\r\\n            function addUV( vector2 ) {\\r\\n\\r\\n                uvArray.push( vector2.x );\\r\\n                uvArray.push( vector2.y );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    ExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\\r\\n\\r\\n    ExtrudeBufferGeometry.prototype.toJSON = function () {\\r\\n\\r\\n        var data = BufferGeometry.prototype.toJSON.call( this );\\r\\n\\r\\n        var shapes = this.parameters.shapes;\\r\\n        var options = this.parameters.options;\\r\\n\\r\\n        return toJSON( shapes, options, data );\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    var WorldUVGenerator = {\\r\\n\\r\\n        generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\\r\\n\\r\\n            var a_x = vertices[ indexA * 3 ];\\r\\n            var a_y = vertices[ indexA * 3 + 1 ];\\r\\n            var b_x = vertices[ indexB * 3 ];\\r\\n            var b_y = vertices[ indexB * 3 + 1 ];\\r\\n            var c_x = vertices[ indexC * 3 ];\\r\\n            var c_y = vertices[ indexC * 3 + 1 ];\\r\\n\\r\\n            return [\\r\\n                new Vector2( a_x, a_y ),\\r\\n                new Vector2( b_x, b_y ),\\r\\n                new Vector2( c_x, c_y )\\r\\n            ];\\r\\n\\r\\n        },\\r\\n\\r\\n        generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\\r\\n\\r\\n            var a_x = vertices[ indexA * 3 ];\\r\\n            var a_y = vertices[ indexA * 3 + 1 ];\\r\\n            var a_z = vertices[ indexA * 3 + 2 ];\\r\\n            var b_x = vertices[ indexB * 3 ];\\r\\n            var b_y = vertices[ indexB * 3 + 1 ];\\r\\n            var b_z = vertices[ indexB * 3 + 2 ];\\r\\n            var c_x = vertices[ indexC * 3 ];\\r\\n            var c_y = vertices[ indexC * 3 + 1 ];\\r\\n            var c_z = vertices[ indexC * 3 + 2 ];\\r\\n            var d_x = vertices[ indexD * 3 ];\\r\\n            var d_y = vertices[ indexD * 3 + 1 ];\\r\\n            var d_z = vertices[ indexD * 3 + 2 ];\\r\\n\\r\\n            if ( Math.abs( a_y - b_y ) < 0.01 ) {\\r\\n\\r\\n                return [\\r\\n                    new Vector2( a_x, 1 - a_z ),\\r\\n                    new Vector2( b_x, 1 - b_z ),\\r\\n                    new Vector2( c_x, 1 - c_z ),\\r\\n                    new Vector2( d_x, 1 - d_z )\\r\\n                ];\\r\\n\\r\\n            } else {\\r\\n\\r\\n                return [\\r\\n                    new Vector2( a_y, 1 - a_z ),\\r\\n                    new Vector2( b_y, 1 - b_z ),\\r\\n                    new Vector2( c_y, 1 - c_z ),\\r\\n                    new Vector2( d_y, 1 - d_z )\\r\\n                ];\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n    };\\r\\n\\r\\n    function toJSON( shapes, options, data ) {\\r\\n\\r\\n        //\\r\\n\\r\\n        data.shapes = [];\\r\\n\\r\\n        if ( Array.isArray( shapes ) ) {\\r\\n\\r\\n            for ( var i = 0, l = shapes.length; i < l; i ++ ) {\\r\\n\\r\\n                var shape = shapes[ i ];\\r\\n\\r\\n                data.shapes.push( shape.uuid );\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            data.shapes.push( shapes.uuid );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * Text = 3D Text\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  font: <THREE.Font>, // font\\r\\n\\t *\\r\\n\\t *  size: <float>, // size of the text\\r\\n\\t *  height: <float>, // thickness to extrude text\\r\\n\\t *  curveSegments: <int>, // number of points on the curves\\r\\n\\t *\\r\\n\\t *  bevelEnabled: <bool>, // turn on bevel\\r\\n\\t *  bevelThickness: <float>, // how deep into text bevel goes\\r\\n\\t *  bevelSize: <float> // how far from text outline is bevel\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    // TextGeometry\\r\\n\\r\\n    function TextGeometry( text, parameters ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'TextGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            text: text,\\r\\n            parameters: parameters\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    TextGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    TextGeometry.prototype.constructor = TextGeometry;\\r\\n\\r\\n    // TextBufferGeometry\\r\\n\\r\\n    function TextBufferGeometry( text, parameters ) {\\r\\n\\r\\n        parameters = parameters || {};\\r\\n\\r\\n        var font = parameters.font;\\r\\n\\r\\n        if ( ! ( font && font.isFont ) ) {\\r\\n\\r\\n            console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\\r\\n            return new Geometry();\\r\\n\\r\\n        }\\r\\n\\r\\n        var shapes = font.generateShapes( text, parameters.size );\\r\\n\\r\\n        // translate parameters to ExtrudeGeometry API\\r\\n\\r\\n        parameters.depth = parameters.height !== undefined ? parameters.height : 50;\\r\\n\\r\\n        // defaults\\r\\n\\r\\n        if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\\r\\n        if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\\r\\n        if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\\r\\n\\r\\n        ExtrudeBufferGeometry.call( this, shapes, parameters );\\r\\n\\r\\n        this.type = 'TextBufferGeometry';\\r\\n\\r\\n    }\\r\\n\\r\\n    TextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\\r\\n    TextBufferGeometry.prototype.constructor = TextBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // SphereGeometry\\r\\n\\r\\n    function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'SphereGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            phiStart: phiStart,\\r\\n            phiLength: phiLength,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    SphereGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    SphereGeometry.prototype.constructor = SphereGeometry;\\r\\n\\r\\n    // SphereBufferGeometry\\r\\n\\r\\n    function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'SphereBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            widthSegments: widthSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            phiStart: phiStart,\\r\\n            phiLength: phiLength,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        radius = radius || 1;\\r\\n\\r\\n        widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\\r\\n        heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\\r\\n\\r\\n        phiStart = phiStart !== undefined ? phiStart : 0;\\r\\n        phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\\r\\n\\r\\n        thetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n        thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\\r\\n\\r\\n        var thetaEnd = thetaStart + thetaLength;\\r\\n\\r\\n        var ix, iy;\\r\\n\\r\\n        var index = 0;\\r\\n        var grid = [];\\r\\n\\r\\n        var vertex = new Vector3();\\r\\n        var normal = new Vector3();\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        for ( iy = 0; iy <= heightSegments; iy ++ ) {\\r\\n\\r\\n            var verticesRow = [];\\r\\n\\r\\n            var v = iy / heightSegments;\\r\\n\\r\\n            for ( ix = 0; ix <= widthSegments; ix ++ ) {\\r\\n\\r\\n                var u = ix / widthSegments;\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\r\\n                vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\\r\\n                vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                normal.set( vertex.x, vertex.y, vertex.z ).normalize();\\r\\n                normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uvs.push( u, 1 - v );\\r\\n\\r\\n                verticesRow.push( index ++ );\\r\\n\\r\\n            }\\r\\n\\r\\n            grid.push( verticesRow );\\r\\n\\r\\n        }\\r\\n\\r\\n        // indices\\r\\n\\r\\n        for ( iy = 0; iy < heightSegments; iy ++ ) {\\r\\n\\r\\n            for ( ix = 0; ix < widthSegments; ix ++ ) {\\r\\n\\r\\n                var a = grid[ iy ][ ix + 1 ];\\r\\n                var b = grid[ iy ][ ix ];\\r\\n                var c = grid[ iy + 1 ][ ix ];\\r\\n                var d = grid[ iy + 1 ][ ix + 1 ];\\r\\n\\r\\n                if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\\r\\n                if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author Kaleb Murphy\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // RingGeometry\\r\\n\\r\\n    function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'RingGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            innerRadius: innerRadius,\\r\\n            outerRadius: outerRadius,\\r\\n            thetaSegments: thetaSegments,\\r\\n            phiSegments: phiSegments,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    RingGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    RingGeometry.prototype.constructor = RingGeometry;\\r\\n\\r\\n    // RingBufferGeometry\\r\\n\\r\\n    function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'RingBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            innerRadius: innerRadius,\\r\\n            outerRadius: outerRadius,\\r\\n            thetaSegments: thetaSegments,\\r\\n            phiSegments: phiSegments,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        innerRadius = innerRadius || 0.5;\\r\\n        outerRadius = outerRadius || 1;\\r\\n\\r\\n        thetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n        thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\r\\n\\r\\n        thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\\r\\n        phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // some helper variables\\r\\n\\r\\n        var segment;\\r\\n        var radius = innerRadius;\\r\\n        var radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\\r\\n        var vertex = new Vector3();\\r\\n        var uv = new Vector2();\\r\\n        var j, i;\\r\\n\\r\\n        // generate vertices, normals and uvs\\r\\n\\r\\n        for ( j = 0; j <= phiSegments; j ++ ) {\\r\\n\\r\\n            for ( i = 0; i <= thetaSegments; i ++ ) {\\r\\n\\r\\n                // values are generate from the inside of the ring to the outside\\r\\n\\r\\n                segment = thetaStart + i / thetaSegments * thetaLength;\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = radius * Math.cos( segment );\\r\\n                vertex.y = radius * Math.sin( segment );\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                normals.push( 0, 0, 1 );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uv.x = ( vertex.x / outerRadius + 1 ) / 2;\\r\\n                uv.y = ( vertex.y / outerRadius + 1 ) / 2;\\r\\n\\r\\n                uvs.push( uv.x, uv.y );\\r\\n\\r\\n            }\\r\\n\\r\\n            // increase the radius for next row of vertices\\r\\n\\r\\n            radius += radiusStep;\\r\\n\\r\\n        }\\r\\n\\r\\n        // indices\\r\\n\\r\\n        for ( j = 0; j < phiSegments; j ++ ) {\\r\\n\\r\\n            var thetaSegmentLevel = j * ( thetaSegments + 1 );\\r\\n\\r\\n            for ( i = 0; i < thetaSegments; i ++ ) {\\r\\n\\r\\n                segment = i + thetaSegmentLevel;\\r\\n\\r\\n                var a = segment;\\r\\n                var b = segment + thetaSegments + 1;\\r\\n                var c = segment + thetaSegments + 2;\\r\\n                var d = segment + 1;\\r\\n\\r\\n                // faces\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    RingBufferGeometry.prototype.constructor = RingBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / https://github.com/zz85\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // LatheGeometry\\r\\n\\r\\n    function LatheGeometry( points, segments, phiStart, phiLength ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'LatheGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            points: points,\\r\\n            segments: segments,\\r\\n            phiStart: phiStart,\\r\\n            phiLength: phiLength\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    LatheGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    LatheGeometry.prototype.constructor = LatheGeometry;\\r\\n\\r\\n    // LatheBufferGeometry\\r\\n\\r\\n    function LatheBufferGeometry( points, segments, phiStart, phiLength ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'LatheBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            points: points,\\r\\n            segments: segments,\\r\\n            phiStart: phiStart,\\r\\n            phiLength: phiLength\\r\\n        };\\r\\n\\r\\n        segments = Math.floor( segments ) || 12;\\r\\n        phiStart = phiStart || 0;\\r\\n        phiLength = phiLength || Math.PI * 2;\\r\\n\\r\\n        // clamp phiLength so it's in range of [ 0, 2PI ]\\r\\n\\r\\n        phiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\\r\\n\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var base;\\r\\n        var inverseSegments = 1.0 / segments;\\r\\n        var vertex = new Vector3();\\r\\n        var uv = new Vector2();\\r\\n        var i, j;\\r\\n\\r\\n        // generate vertices and uvs\\r\\n\\r\\n        for ( i = 0; i <= segments; i ++ ) {\\r\\n\\r\\n            var phi = phiStart + i * inverseSegments * phiLength;\\r\\n\\r\\n            var sin = Math.sin( phi );\\r\\n            var cos = Math.cos( phi );\\r\\n\\r\\n            for ( j = 0; j <= ( points.length - 1 ); j ++ ) {\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = points[ j ].x * sin;\\r\\n                vertex.y = points[ j ].y;\\r\\n                vertex.z = points[ j ].x * cos;\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uv.x = i / segments;\\r\\n                uv.y = j / ( points.length - 1 );\\r\\n\\r\\n                uvs.push( uv.x, uv.y );\\r\\n\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // indices\\r\\n\\r\\n        for ( i = 0; i < segments; i ++ ) {\\r\\n\\r\\n            for ( j = 0; j < ( points.length - 1 ); j ++ ) {\\r\\n\\r\\n                base = j + i * points.length;\\r\\n\\r\\n                var a = base;\\r\\n                var b = base + points.length;\\r\\n                var c = base + points.length + 1;\\r\\n                var d = base + 1;\\r\\n\\r\\n                // faces\\r\\n\\r\\n                indices.push( a, b, d );\\r\\n                indices.push( b, c, d );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n        // generate normals\\r\\n\\r\\n        this.computeVertexNormals();\\r\\n\\r\\n        // if the geometry is closed, we need to average the normals along the seam.\\r\\n        // because the corresponding vertices are identical (but still have different UVs).\\r\\n\\r\\n        if ( phiLength === Math.PI * 2 ) {\\r\\n\\r\\n            var normals = this.attributes.normal.array;\\r\\n            var n1 = new Vector3();\\r\\n            var n2 = new Vector3();\\r\\n            var n = new Vector3();\\r\\n\\r\\n            // this is the buffer offset for the last line of vertices\\r\\n\\r\\n            base = segments * points.length * 3;\\r\\n\\r\\n            for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\\r\\n\\r\\n                // select the normal of the vertex in the first line\\r\\n\\r\\n                n1.x = normals[ j + 0 ];\\r\\n                n1.y = normals[ j + 1 ];\\r\\n                n1.z = normals[ j + 2 ];\\r\\n\\r\\n                // select the normal of the vertex in the last line\\r\\n\\r\\n                n2.x = normals[ base + j + 0 ];\\r\\n                n2.y = normals[ base + j + 1 ];\\r\\n                n2.z = normals[ base + j + 2 ];\\r\\n\\r\\n                // average normals\\r\\n\\r\\n                n.addVectors( n1, n2 ).normalize();\\r\\n\\r\\n                // assign the new values to both normals\\r\\n\\r\\n                normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\\r\\n                normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\\r\\n                normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author jonobr1 / http://jonobr1.com\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // ShapeGeometry\\r\\n\\r\\n    function ShapeGeometry( shapes, curveSegments ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'ShapeGeometry';\\r\\n\\r\\n        if ( typeof curveSegments === 'object' ) {\\r\\n\\r\\n            console.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\\r\\n\\r\\n            curveSegments = curveSegments.curveSegments;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.parameters = {\\r\\n            shapes: shapes,\\r\\n            curveSegments: curveSegments\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    ShapeGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    ShapeGeometry.prototype.constructor = ShapeGeometry;\\r\\n\\r\\n    ShapeGeometry.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Geometry.prototype.toJSON.call( this );\\r\\n\\r\\n        var shapes = this.parameters.shapes;\\r\\n\\r\\n        return toJSON$1( shapes, data );\\r\\n\\r\\n    };\\r\\n\\r\\n    // ShapeBufferGeometry\\r\\n\\r\\n    function ShapeBufferGeometry( shapes, curveSegments ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'ShapeBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            shapes: shapes,\\r\\n            curveSegments: curveSegments\\r\\n        };\\r\\n\\r\\n        curveSegments = curveSegments || 12;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var groupStart = 0;\\r\\n        var groupCount = 0;\\r\\n\\r\\n        // allow single and array values for \\\"shapes\\\" parameter\\r\\n\\r\\n        if ( Array.isArray( shapes ) === false ) {\\r\\n\\r\\n            addShape( shapes );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            for ( var i = 0; i < shapes.length; i ++ ) {\\r\\n\\r\\n                addShape( shapes[ i ] );\\r\\n\\r\\n                this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\\r\\n\\r\\n                groupStart += groupCount;\\r\\n                groupCount = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n\\r\\n        // helper functions\\r\\n\\r\\n        function addShape( shape ) {\\r\\n\\r\\n            var i, l, shapeHole;\\r\\n\\r\\n            var indexOffset = vertices.length / 3;\\r\\n            var points = shape.extractPoints( curveSegments );\\r\\n\\r\\n            var shapeVertices = points.shape;\\r\\n            var shapeHoles = points.holes;\\r\\n\\r\\n            // check direction of vertices\\r\\n\\r\\n            if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\\r\\n\\r\\n                shapeVertices = shapeVertices.reverse();\\r\\n\\r\\n                // also check if holes are in the opposite direction\\r\\n\\r\\n                for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\\r\\n\\r\\n                    shapeHole = shapeHoles[ i ];\\r\\n\\r\\n                    if ( ShapeUtils.isClockWise( shapeHole ) === true ) {\\r\\n\\r\\n                        shapeHoles[ i ] = shapeHole.reverse();\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\\r\\n\\r\\n            // join vertices of inner and outer paths to a single array\\r\\n\\r\\n            for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\\r\\n\\r\\n                shapeHole = shapeHoles[ i ];\\r\\n                shapeVertices = shapeVertices.concat( shapeHole );\\r\\n\\r\\n            }\\r\\n\\r\\n            // vertices, normals, uvs\\r\\n\\r\\n            for ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\\r\\n\\r\\n                var vertex = shapeVertices[ i ];\\r\\n\\r\\n                vertices.push( vertex.x, vertex.y, 0 );\\r\\n                normals.push( 0, 0, 1 );\\r\\n                uvs.push( vertex.x, vertex.y ); // world uvs\\r\\n\\r\\n            }\\r\\n\\r\\n            // incides\\r\\n\\r\\n            for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n                var face = faces[ i ];\\r\\n\\r\\n                var a = face[ 0 ] + indexOffset;\\r\\n                var b = face[ 1 ] + indexOffset;\\r\\n                var c = face[ 2 ] + indexOffset;\\r\\n\\r\\n                indices.push( a, b, c );\\r\\n                groupCount += 3;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    ShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\\r\\n\\r\\n    ShapeBufferGeometry.prototype.toJSON = function () {\\r\\n\\r\\n        var data = BufferGeometry.prototype.toJSON.call( this );\\r\\n\\r\\n        var shapes = this.parameters.shapes;\\r\\n\\r\\n        return toJSON$1( shapes, data );\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    function toJSON$1( shapes, data ) {\\r\\n\\r\\n        data.shapes = [];\\r\\n\\r\\n        if ( Array.isArray( shapes ) ) {\\r\\n\\r\\n            for ( var i = 0, l = shapes.length; i < l; i ++ ) {\\r\\n\\r\\n                var shape = shapes[ i ];\\r\\n\\r\\n                data.shapes.push( shape.uuid );\\r\\n\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            data.shapes.push( shapes.uuid );\\r\\n\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function EdgesGeometry( geometry, thresholdAngle ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'EdgesGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            thresholdAngle: thresholdAngle\\r\\n        };\\r\\n\\r\\n        thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\\r\\n\\r\\n        // buffer\\r\\n\\r\\n        var vertices = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\\r\\n        var edge = [ 0, 0 ], edges = {}, edge1, edge2;\\r\\n        var key, keys = [ 'a', 'b', 'c' ];\\r\\n\\r\\n        // prepare source geometry\\r\\n\\r\\n        var geometry2;\\r\\n\\r\\n        if ( geometry.isBufferGeometry ) {\\r\\n\\r\\n            geometry2 = new Geometry();\\r\\n            geometry2.fromBufferGeometry( geometry );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            geometry2 = geometry.clone();\\r\\n\\r\\n        }\\r\\n\\r\\n        geometry2.mergeVertices();\\r\\n        geometry2.computeFaceNormals();\\r\\n\\r\\n        var sourceVertices = geometry2.vertices;\\r\\n        var faces = geometry2.faces;\\r\\n\\r\\n        // now create a data structure where each entry represents an edge with its adjoining faces\\r\\n\\r\\n        for ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n            var face = faces[ i ];\\r\\n\\r\\n            for ( var j = 0; j < 3; j ++ ) {\\r\\n\\r\\n                edge1 = face[ keys[ j ] ];\\r\\n                edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\\r\\n                edge[ 0 ] = Math.min( edge1, edge2 );\\r\\n                edge[ 1 ] = Math.max( edge1, edge2 );\\r\\n\\r\\n                key = edge[ 0 ] + ',' + edge[ 1 ];\\r\\n\\r\\n                if ( edges[ key ] === undefined ) {\\r\\n\\r\\n                    edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    edges[ key ].face2 = i;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // generate vertices\\r\\n\\r\\n        for ( key in edges ) {\\r\\n\\r\\n            var e = edges[ key ];\\r\\n\\r\\n            // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\\r\\n\\r\\n            if ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\\r\\n\\r\\n                var vertex = sourceVertices[ e.index1 ];\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                vertex = sourceVertices[ e.index2 ];\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    EdgesGeometry.prototype.constructor = EdgesGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    // CylinderGeometry\\r\\n\\r\\n    function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'CylinderGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radiusTop: radiusTop,\\r\\n            radiusBottom: radiusBottom,\\r\\n            height: height,\\r\\n            radialSegments: radialSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            openEnded: openEnded,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    CylinderGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    CylinderGeometry.prototype.constructor = CylinderGeometry;\\r\\n\\r\\n    // CylinderBufferGeometry\\r\\n\\r\\n    function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'CylinderBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radiusTop: radiusTop,\\r\\n            radiusBottom: radiusBottom,\\r\\n            height: height,\\r\\n            radialSegments: radialSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            openEnded: openEnded,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        radiusTop = radiusTop !== undefined ? radiusTop : 1;\\r\\n        radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\\r\\n        height = height || 1;\\r\\n\\r\\n        radialSegments = Math.floor( radialSegments ) || 8;\\r\\n        heightSegments = Math.floor( heightSegments ) || 1;\\r\\n\\r\\n        openEnded = openEnded !== undefined ? openEnded : false;\\r\\n        thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\\r\\n        thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var index = 0;\\r\\n        var indexArray = [];\\r\\n        var halfHeight = height / 2;\\r\\n        var groupStart = 0;\\r\\n\\r\\n        // generate geometry\\r\\n\\r\\n        generateTorso();\\r\\n\\r\\n        if ( openEnded === false ) {\\r\\n\\r\\n            if ( radiusTop > 0 ) generateCap( true );\\r\\n            if ( radiusBottom > 0 ) generateCap( false );\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n        function generateTorso() {\\r\\n\\r\\n            var x, y;\\r\\n            var normal = new Vector3();\\r\\n            var vertex = new Vector3();\\r\\n\\r\\n            var groupCount = 0;\\r\\n\\r\\n            // this will be used to calculate the normal\\r\\n            var slope = ( radiusBottom - radiusTop ) / height;\\r\\n\\r\\n            // generate vertices, normals and uvs\\r\\n\\r\\n            for ( y = 0; y <= heightSegments; y ++ ) {\\r\\n\\r\\n                var indexRow = [];\\r\\n\\r\\n                var v = y / heightSegments;\\r\\n\\r\\n                // calculate the radius of the current row\\r\\n\\r\\n                var radius = v * ( radiusBottom - radiusTop ) + radiusTop;\\r\\n\\r\\n                for ( x = 0; x <= radialSegments; x ++ ) {\\r\\n\\r\\n                    var u = x / radialSegments;\\r\\n\\r\\n                    var theta = u * thetaLength + thetaStart;\\r\\n\\r\\n                    var sinTheta = Math.sin( theta );\\r\\n                    var cosTheta = Math.cos( theta );\\r\\n\\r\\n                    // vertex\\r\\n\\r\\n                    vertex.x = radius * sinTheta;\\r\\n                    vertex.y = - v * height + halfHeight;\\r\\n                    vertex.z = radius * cosTheta;\\r\\n                    vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                    // normal\\r\\n\\r\\n                    normal.set( sinTheta, slope, cosTheta ).normalize();\\r\\n                    normals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n                    // uv\\r\\n\\r\\n                    uvs.push( u, 1 - v );\\r\\n\\r\\n                    // save index of vertex in respective row\\r\\n\\r\\n                    indexRow.push( index ++ );\\r\\n\\r\\n                }\\r\\n\\r\\n                // now save vertices of the row in our index array\\r\\n\\r\\n                indexArray.push( indexRow );\\r\\n\\r\\n            }\\r\\n\\r\\n            // generate indices\\r\\n\\r\\n            for ( x = 0; x < radialSegments; x ++ ) {\\r\\n\\r\\n                for ( y = 0; y < heightSegments; y ++ ) {\\r\\n\\r\\n                    // we use the index array to access the correct indices\\r\\n\\r\\n                    var a = indexArray[ y ][ x ];\\r\\n                    var b = indexArray[ y + 1 ][ x ];\\r\\n                    var c = indexArray[ y + 1 ][ x + 1 ];\\r\\n                    var d = indexArray[ y ][ x + 1 ];\\r\\n\\r\\n                    // faces\\r\\n\\r\\n                    indices.push( a, b, d );\\r\\n                    indices.push( b, c, d );\\r\\n\\r\\n                    // update group counter\\r\\n\\r\\n                    groupCount += 6;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // add a group to the geometry. this will ensure multi material support\\r\\n\\r\\n            scope.addGroup( groupStart, groupCount, 0 );\\r\\n\\r\\n            // calculate new start value for groups\\r\\n\\r\\n            groupStart += groupCount;\\r\\n\\r\\n        }\\r\\n\\r\\n        function generateCap( top ) {\\r\\n\\r\\n            var x, centerIndexStart, centerIndexEnd;\\r\\n\\r\\n            var uv = new Vector2();\\r\\n            var vertex = new Vector3();\\r\\n\\r\\n            var groupCount = 0;\\r\\n\\r\\n            var radius = ( top === true ) ? radiusTop : radiusBottom;\\r\\n            var sign = ( top === true ) ? 1 : - 1;\\r\\n\\r\\n            // save the index of the first center vertex\\r\\n            centerIndexStart = index;\\r\\n\\r\\n            // first we generate the center vertex data of the cap.\\r\\n            // because the geometry needs one set of uvs per face,\\r\\n            // we must generate a center vertex per face/segment\\r\\n\\r\\n            for ( x = 1; x <= radialSegments; x ++ ) {\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertices.push( 0, halfHeight * sign, 0 );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                normals.push( 0, sign, 0 );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uvs.push( 0.5, 0.5 );\\r\\n\\r\\n                // increase index\\r\\n\\r\\n                index ++;\\r\\n\\r\\n            }\\r\\n\\r\\n            // save the index of the last center vertex\\r\\n\\r\\n            centerIndexEnd = index;\\r\\n\\r\\n            // now we generate the surrounding vertices, normals and uvs\\r\\n\\r\\n            for ( x = 0; x <= radialSegments; x ++ ) {\\r\\n\\r\\n                var u = x / radialSegments;\\r\\n                var theta = u * thetaLength + thetaStart;\\r\\n\\r\\n                var cosTheta = Math.cos( theta );\\r\\n                var sinTheta = Math.sin( theta );\\r\\n\\r\\n                // vertex\\r\\n\\r\\n                vertex.x = radius * sinTheta;\\r\\n                vertex.y = halfHeight * sign;\\r\\n                vertex.z = radius * cosTheta;\\r\\n                vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n                // normal\\r\\n\\r\\n                normals.push( 0, sign, 0 );\\r\\n\\r\\n                // uv\\r\\n\\r\\n                uv.x = ( cosTheta * 0.5 ) + 0.5;\\r\\n                uv.y = ( sinTheta * 0.5 * sign ) + 0.5;\\r\\n                uvs.push( uv.x, uv.y );\\r\\n\\r\\n                // increase index\\r\\n\\r\\n                index ++;\\r\\n\\r\\n            }\\r\\n\\r\\n            // generate indices\\r\\n\\r\\n            for ( x = 0; x < radialSegments; x ++ ) {\\r\\n\\r\\n                var c = centerIndexStart + x;\\r\\n                var i = centerIndexEnd + x;\\r\\n\\r\\n                if ( top === true ) {\\r\\n\\r\\n                    // face top\\r\\n\\r\\n                    indices.push( i, i + 1, c );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // face bottom\\r\\n\\r\\n                    indices.push( i + 1, i, c );\\r\\n\\r\\n                }\\r\\n\\r\\n                groupCount += 3;\\r\\n\\r\\n            }\\r\\n\\r\\n            // add a group to the geometry. this will ensure multi material support\\r\\n\\r\\n            scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\\r\\n\\r\\n            // calculate new start value for groups\\r\\n\\r\\n            groupStart += groupCount;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author abelnation / http://github.com/abelnation\\r\\n     */\\r\\n\\r\\n    // ConeGeometry\\r\\n\\r\\n    function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n        CylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\\r\\n\\r\\n        this.type = 'ConeGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            height: height,\\r\\n            radialSegments: radialSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            openEnded: openEnded,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\\r\\n    ConeGeometry.prototype.constructor = ConeGeometry;\\r\\n\\r\\n    // ConeBufferGeometry\\r\\n\\r\\n    function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n        CylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\\r\\n\\r\\n        this.type = 'ConeBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            height: height,\\r\\n            radialSegments: radialSegments,\\r\\n            heightSegments: heightSegments,\\r\\n            openEnded: openEnded,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    ConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\\r\\n    ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     * @author hughes\\r\\n     */\\r\\n\\r\\n    // CircleGeometry\\r\\n\\r\\n    function CircleGeometry( radius, segments, thetaStart, thetaLength ) {\\r\\n\\r\\n        Geometry.call( this );\\r\\n\\r\\n        this.type = 'CircleGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            segments: segments,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\\r\\n        this.mergeVertices();\\r\\n\\r\\n    }\\r\\n\\r\\n    CircleGeometry.prototype = Object.create( Geometry.prototype );\\r\\n    CircleGeometry.prototype.constructor = CircleGeometry;\\r\\n\\r\\n    // CircleBufferGeometry\\r\\n\\r\\n    function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'CircleBufferGeometry';\\r\\n\\r\\n        this.parameters = {\\r\\n            radius: radius,\\r\\n            segments: segments,\\r\\n            thetaStart: thetaStart,\\r\\n            thetaLength: thetaLength\\r\\n        };\\r\\n\\r\\n        radius = radius || 1;\\r\\n        segments = segments !== undefined ? Math.max( 3, segments ) : 8;\\r\\n\\r\\n        thetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n        thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\r\\n\\r\\n        // buffers\\r\\n\\r\\n        var indices = [];\\r\\n        var vertices = [];\\r\\n        var normals = [];\\r\\n        var uvs = [];\\r\\n\\r\\n        // helper variables\\r\\n\\r\\n        var i, s;\\r\\n        var vertex = new Vector3();\\r\\n        var uv = new Vector2();\\r\\n\\r\\n        // center point\\r\\n\\r\\n        vertices.push( 0, 0, 0 );\\r\\n        normals.push( 0, 0, 1 );\\r\\n        uvs.push( 0.5, 0.5 );\\r\\n\\r\\n        for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\\r\\n\\r\\n            var segment = thetaStart + s / segments * thetaLength;\\r\\n\\r\\n            // vertex\\r\\n\\r\\n            vertex.x = radius * Math.cos( segment );\\r\\n            vertex.y = radius * Math.sin( segment );\\r\\n\\r\\n            vertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n            // normal\\r\\n\\r\\n            normals.push( 0, 0, 1 );\\r\\n\\r\\n            // uvs\\r\\n\\r\\n            uv.x = ( vertices[ i ] / radius + 1 ) / 2;\\r\\n            uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\\r\\n\\r\\n            uvs.push( uv.x, uv.y );\\r\\n\\r\\n        }\\r\\n\\r\\n        // indices\\r\\n\\r\\n        for ( i = 1; i <= segments; i ++ ) {\\r\\n\\r\\n            indices.push( i, i + 1, 0 );\\r\\n\\r\\n        }\\r\\n\\r\\n        // build geometry\\r\\n\\r\\n        this.setIndex( indices );\\r\\n        this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\\r\\n        this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\r\\n    CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\\r\\n\\r\\n\\r\\n\\r\\n    var Geometries = /*#__PURE__*/Object.freeze({\\r\\n        WireframeGeometry: WireframeGeometry,\\r\\n        ParametricGeometry: ParametricGeometry,\\r\\n        ParametricBufferGeometry: ParametricBufferGeometry,\\r\\n        TetrahedronGeometry: TetrahedronGeometry,\\r\\n        TetrahedronBufferGeometry: TetrahedronBufferGeometry,\\r\\n        OctahedronGeometry: OctahedronGeometry,\\r\\n        OctahedronBufferGeometry: OctahedronBufferGeometry,\\r\\n        IcosahedronGeometry: IcosahedronGeometry,\\r\\n        IcosahedronBufferGeometry: IcosahedronBufferGeometry,\\r\\n        DodecahedronGeometry: DodecahedronGeometry,\\r\\n        DodecahedronBufferGeometry: DodecahedronBufferGeometry,\\r\\n        PolyhedronGeometry: PolyhedronGeometry,\\r\\n        PolyhedronBufferGeometry: PolyhedronBufferGeometry,\\r\\n        TubeGeometry: TubeGeometry,\\r\\n        TubeBufferGeometry: TubeBufferGeometry,\\r\\n        TorusKnotGeometry: TorusKnotGeometry,\\r\\n        TorusKnotBufferGeometry: TorusKnotBufferGeometry,\\r\\n        TorusGeometry: TorusGeometry,\\r\\n        TorusBufferGeometry: TorusBufferGeometry,\\r\\n        TextGeometry: TextGeometry,\\r\\n        TextBufferGeometry: TextBufferGeometry,\\r\\n        SphereGeometry: SphereGeometry,\\r\\n        SphereBufferGeometry: SphereBufferGeometry,\\r\\n        RingGeometry: RingGeometry,\\r\\n        RingBufferGeometry: RingBufferGeometry,\\r\\n        PlaneGeometry: PlaneGeometry,\\r\\n        PlaneBufferGeometry: PlaneBufferGeometry,\\r\\n        LatheGeometry: LatheGeometry,\\r\\n        LatheBufferGeometry: LatheBufferGeometry,\\r\\n        ShapeGeometry: ShapeGeometry,\\r\\n        ShapeBufferGeometry: ShapeBufferGeometry,\\r\\n        ExtrudeGeometry: ExtrudeGeometry,\\r\\n        ExtrudeBufferGeometry: ExtrudeBufferGeometry,\\r\\n        EdgesGeometry: EdgesGeometry,\\r\\n        ConeGeometry: ConeGeometry,\\r\\n        ConeBufferGeometry: ConeBufferGeometry,\\r\\n        CylinderGeometry: CylinderGeometry,\\r\\n        CylinderBufferGeometry: CylinderBufferGeometry,\\r\\n        CircleGeometry: CircleGeometry,\\r\\n        CircleBufferGeometry: CircleBufferGeometry,\\r\\n        BoxGeometry: BoxGeometry,\\r\\n        BoxBufferGeometry: BoxBufferGeometry\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <THREE.Color>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function ShadowMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'ShadowMaterial';\\r\\n\\r\\n        this.color = new Color( 0x000000 );\\r\\n        this.transparent = true;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    ShadowMaterial.prototype = Object.create( Material.prototype );\\r\\n    ShadowMaterial.prototype.constructor = ShadowMaterial;\\r\\n\\r\\n    ShadowMaterial.prototype.isShadowMaterial = true;\\r\\n\\r\\n    ShadowMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function RawShaderMaterial( parameters ) {\\r\\n\\r\\n        ShaderMaterial.call( this, parameters );\\r\\n\\r\\n        this.type = 'RawShaderMaterial';\\r\\n\\r\\n    }\\r\\n\\r\\n    RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\\r\\n    RawShaderMaterial.prototype.constructor = RawShaderMaterial;\\r\\n\\r\\n    RawShaderMaterial.prototype.isRawShaderMaterial = true;\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  roughness: <float>,\\r\\n\\t *  metalness: <float>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\r\\n\\t *  lightMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\r\\n\\t *  aoMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  emissive: <hex>,\\r\\n\\t *  emissiveIntensity: <float>\\r\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\r\\n\\t *  bumpScale: <float>,\\r\\n\\t *\\r\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\r\\n\\t *  normalMapType: THREE.TangentSpaceNormalMap,\\r\\n\\t *  normalScale: <Vector2>,\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>,\\r\\n\\t *\\r\\n\\t *  roughnessMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  metalnessMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\r\\n\\t *  envMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  refractionRatio: <float>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshStandardMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.defines = { 'STANDARD': '' };\\r\\n\\r\\n        this.type = 'MeshStandardMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff ); // diffuse\\r\\n        this.roughness = 0.5;\\r\\n        this.metalness = 0.5;\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.lightMap = null;\\r\\n        this.lightMapIntensity = 1.0;\\r\\n\\r\\n        this.aoMap = null;\\r\\n        this.aoMapIntensity = 1.0;\\r\\n\\r\\n        this.emissive = new Color( 0x000000 );\\r\\n        this.emissiveIntensity = 1.0;\\r\\n        this.emissiveMap = null;\\r\\n\\r\\n        this.bumpMap = null;\\r\\n        this.bumpScale = 1;\\r\\n\\r\\n        this.normalMap = null;\\r\\n        this.normalMapType = TangentSpaceNormalMap;\\r\\n        this.normalScale = new Vector2( 1, 1 );\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.roughnessMap = null;\\r\\n\\r\\n        this.metalnessMap = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.envMap = null;\\r\\n        this.envMapIntensity = 1.0;\\r\\n\\r\\n        this.refractionRatio = 0.98;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n        this.wireframeLinecap = 'round';\\r\\n        this.wireframeLinejoin = 'round';\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n        this.morphNormals = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshStandardMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\\r\\n\\r\\n    MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\\r\\n\\r\\n    MeshStandardMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.defines = { 'STANDARD': '' };\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n        this.roughness = source.roughness;\\r\\n        this.metalness = source.metalness;\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.lightMap = source.lightMap;\\r\\n        this.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n        this.aoMap = source.aoMap;\\r\\n        this.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n        this.emissive.copy( source.emissive );\\r\\n        this.emissiveMap = source.emissiveMap;\\r\\n        this.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n        this.bumpMap = source.bumpMap;\\r\\n        this.bumpScale = source.bumpScale;\\r\\n\\r\\n        this.normalMap = source.normalMap;\\r\\n        this.normalMapType = source.normalMapType;\\r\\n        this.normalScale.copy( source.normalScale );\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        this.roughnessMap = source.roughnessMap;\\r\\n\\r\\n        this.metalnessMap = source.metalnessMap;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.envMap = source.envMap;\\r\\n        this.envMapIntensity = source.envMapIntensity;\\r\\n\\r\\n        this.refractionRatio = source.refractionRatio;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n        this.wireframeLinecap = source.wireframeLinecap;\\r\\n        this.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  reflectivity: <float>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshPhysicalMaterial( parameters ) {\\r\\n\\r\\n        MeshStandardMaterial.call( this );\\r\\n\\r\\n        this.defines = { 'PHYSICAL': '' };\\r\\n\\r\\n        this.type = 'MeshPhysicalMaterial';\\r\\n\\r\\n        this.reflectivity = 0.5; // maps to F0 = 0.04\\r\\n\\r\\n        this.clearCoat = 0.0;\\r\\n        this.clearCoatRoughness = 0.0;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\\r\\n    MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\\r\\n\\r\\n    MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\\r\\n\\r\\n    MeshPhysicalMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        MeshStandardMaterial.prototype.copy.call( this, source );\\r\\n\\r\\n        this.defines = { 'PHYSICAL': '' };\\r\\n\\r\\n        this.reflectivity = source.reflectivity;\\r\\n\\r\\n        this.clearCoat = source.clearCoat;\\r\\n        this.clearCoatRoughness = source.clearCoatRoughness;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  specular: <hex>,\\r\\n\\t *  shininess: <float>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\r\\n\\t *  lightMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\r\\n\\t *  aoMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  emissive: <hex>,\\r\\n\\t *  emissiveIntensity: <float>\\r\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\r\\n\\t *  bumpScale: <float>,\\r\\n\\t *\\r\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\r\\n\\t *  normalMapType: THREE.TangentSpaceNormalMap,\\r\\n\\t *  normalScale: <Vector2>,\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>,\\r\\n\\t *\\r\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\r\\n\\t *  combine: THREE.Multiply,\\r\\n\\t *  reflectivity: <float>,\\r\\n\\t *  refractionRatio: <float>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshPhongMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshPhongMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff ); // diffuse\\r\\n        this.specular = new Color( 0x111111 );\\r\\n        this.shininess = 30;\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.lightMap = null;\\r\\n        this.lightMapIntensity = 1.0;\\r\\n\\r\\n        this.aoMap = null;\\r\\n        this.aoMapIntensity = 1.0;\\r\\n\\r\\n        this.emissive = new Color( 0x000000 );\\r\\n        this.emissiveIntensity = 1.0;\\r\\n        this.emissiveMap = null;\\r\\n\\r\\n        this.bumpMap = null;\\r\\n        this.bumpScale = 1;\\r\\n\\r\\n        this.normalMap = null;\\r\\n        this.normalMapType = TangentSpaceNormalMap;\\r\\n        this.normalScale = new Vector2( 1, 1 );\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.specularMap = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.envMap = null;\\r\\n        this.combine = MultiplyOperation;\\r\\n        this.reflectivity = 1;\\r\\n        this.refractionRatio = 0.98;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n        this.wireframeLinecap = 'round';\\r\\n        this.wireframeLinejoin = 'round';\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n        this.morphNormals = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshPhongMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\\r\\n\\r\\n    MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\\r\\n\\r\\n    MeshPhongMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n        this.specular.copy( source.specular );\\r\\n        this.shininess = source.shininess;\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.lightMap = source.lightMap;\\r\\n        this.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n        this.aoMap = source.aoMap;\\r\\n        this.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n        this.emissive.copy( source.emissive );\\r\\n        this.emissiveMap = source.emissiveMap;\\r\\n        this.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n        this.bumpMap = source.bumpMap;\\r\\n        this.bumpScale = source.bumpScale;\\r\\n\\r\\n        this.normalMap = source.normalMap;\\r\\n        this.normalMapType = source.normalMapType;\\r\\n        this.normalScale.copy( source.normalScale );\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        this.specularMap = source.specularMap;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.envMap = source.envMap;\\r\\n        this.combine = source.combine;\\r\\n        this.reflectivity = source.reflectivity;\\r\\n        this.refractionRatio = source.refractionRatio;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n        this.wireframeLinecap = source.wireframeLinecap;\\r\\n        this.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author takahirox / http://github.com/takahirox\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  gradientMap: new THREE.Texture( <Image> )\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshToonMaterial( parameters ) {\\r\\n\\r\\n        MeshPhongMaterial.call( this );\\r\\n\\r\\n        this.defines = { 'TOON': '' };\\r\\n\\r\\n        this.type = 'MeshToonMaterial';\\r\\n\\r\\n        this.gradientMap = null;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\\r\\n    MeshToonMaterial.prototype.constructor = MeshToonMaterial;\\r\\n\\r\\n    MeshToonMaterial.prototype.isMeshToonMaterial = true;\\r\\n\\r\\n    MeshToonMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        MeshPhongMaterial.prototype.copy.call( this, source );\\r\\n\\r\\n        this.gradientMap = source.gradientMap;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\r\\n\\t *  bumpScale: <float>,\\r\\n\\t *\\r\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\r\\n\\t *  normalMapType: THREE.TangentSpaceNormalMap,\\r\\n\\t *  normalScale: <Vector2>,\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshNormalMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshNormalMaterial';\\r\\n\\r\\n        this.bumpMap = null;\\r\\n        this.bumpScale = 1;\\r\\n\\r\\n        this.normalMap = null;\\r\\n        this.normalMapType = TangentSpaceNormalMap;\\r\\n        this.normalScale = new Vector2( 1, 1 );\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n\\r\\n        this.fog = false;\\r\\n        this.lights = false;\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n        this.morphNormals = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshNormalMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\\r\\n\\r\\n    MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\\r\\n\\r\\n    MeshNormalMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.bumpMap = source.bumpMap;\\r\\n        this.bumpScale = source.bumpScale;\\r\\n\\r\\n        this.normalMap = source.normalMap;\\r\\n        this.normalMapType = source.normalMapType;\\r\\n        this.normalScale.copy( source.normalScale );\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\r\\n\\t *  lightMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\r\\n\\t *  aoMapIntensity: <float>\\r\\n\\t *\\r\\n\\t *  emissive: <hex>,\\r\\n\\t *  emissiveIntensity: <float>\\r\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\r\\n\\t *  combine: THREE.Multiply,\\r\\n\\t *  reflectivity: <float>,\\r\\n\\t *  refractionRatio: <float>,\\r\\n\\t *\\r\\n\\t *  wireframe: <boolean>,\\r\\n\\t *  wireframeLinewidth: <float>,\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshLambertMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.type = 'MeshLambertMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff ); // diffuse\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.lightMap = null;\\r\\n        this.lightMapIntensity = 1.0;\\r\\n\\r\\n        this.aoMap = null;\\r\\n        this.aoMapIntensity = 1.0;\\r\\n\\r\\n        this.emissive = new Color( 0x000000 );\\r\\n        this.emissiveIntensity = 1.0;\\r\\n        this.emissiveMap = null;\\r\\n\\r\\n        this.specularMap = null;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.envMap = null;\\r\\n        this.combine = MultiplyOperation;\\r\\n        this.reflectivity = 1;\\r\\n        this.refractionRatio = 0.98;\\r\\n\\r\\n        this.wireframe = false;\\r\\n        this.wireframeLinewidth = 1;\\r\\n        this.wireframeLinecap = 'round';\\r\\n        this.wireframeLinejoin = 'round';\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n        this.morphNormals = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshLambertMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\\r\\n\\r\\n    MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\\r\\n\\r\\n    MeshLambertMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.lightMap = source.lightMap;\\r\\n        this.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n        this.aoMap = source.aoMap;\\r\\n        this.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n        this.emissive.copy( source.emissive );\\r\\n        this.emissiveMap = source.emissiveMap;\\r\\n        this.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n        this.specularMap = source.specularMap;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.envMap = source.envMap;\\r\\n        this.combine = source.combine;\\r\\n        this.reflectivity = source.reflectivity;\\r\\n        this.refractionRatio = source.refractionRatio;\\r\\n\\r\\n        this.wireframe = source.wireframe;\\r\\n        this.wireframeLinewidth = source.wireframeLinewidth;\\r\\n        this.wireframeLinecap = source.wireframeLinecap;\\r\\n        this.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  matcap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  map: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\r\\n\\t *  bumpScale: <float>,\\r\\n\\t *\\r\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\r\\n\\t *  normalMapType: THREE.TangentSpaceNormalMap,\\r\\n\\t *  normalScale: <Vector2>,\\r\\n\\t *\\r\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\r\\n\\t *  displacementScale: <float>,\\r\\n\\t *  displacementBias: <float>,\\r\\n\\t *\\r\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\r\\n\\t *\\r\\n\\t *  skinning: <bool>,\\r\\n\\t *  morphTargets: <bool>,\\r\\n\\t *  morphNormals: <bool>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function MeshMatcapMaterial( parameters ) {\\r\\n\\r\\n        Material.call( this );\\r\\n\\r\\n        this.defines = { 'MATCAP': '' };\\r\\n\\r\\n        this.type = 'MeshMatcapMaterial';\\r\\n\\r\\n        this.color = new Color( 0xffffff ); // diffuse\\r\\n\\r\\n        this.matcap = null;\\r\\n\\r\\n        this.map = null;\\r\\n\\r\\n        this.bumpMap = null;\\r\\n        this.bumpScale = 1;\\r\\n\\r\\n        this.normalMap = null;\\r\\n        this.normalMapType = TangentSpaceNormalMap;\\r\\n        this.normalScale = new Vector2( 1, 1 );\\r\\n\\r\\n        this.displacementMap = null;\\r\\n        this.displacementScale = 1;\\r\\n        this.displacementBias = 0;\\r\\n\\r\\n        this.alphaMap = null;\\r\\n\\r\\n        this.skinning = false;\\r\\n        this.morphTargets = false;\\r\\n        this.morphNormals = false;\\r\\n\\r\\n        this.lights = false;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n        // a matcap is required\\r\\n\\r\\n        if ( this.matcap === null ) {\\r\\n\\r\\n            var canvas = document.createElement( 'canvas' );\\r\\n            canvas.width = 1;\\r\\n            canvas.height = 1;\\r\\n\\r\\n            var context = canvas.getContext( '2d' );\\r\\n\\r\\n            context.fillStyle = '#fff';\\r\\n            context.fillRect( 0, 0, 1, 1 );\\r\\n\\r\\n            this.matcap = new THREE.CanvasTexture( canvas );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    MeshMatcapMaterial.prototype = Object.create( Material.prototype );\\r\\n    MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\\r\\n\\r\\n    MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\\r\\n\\r\\n    MeshMatcapMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        Material.prototype.copy.call( this, source );\\r\\n\\r\\n        this.defines = { 'MATCAP': '' };\\r\\n\\r\\n        this.color.copy( source.color );\\r\\n\\r\\n        this.matcap = source.matcap;\\r\\n\\r\\n        this.map = source.map;\\r\\n\\r\\n        this.bumpMap = source.bumpMap;\\r\\n        this.bumpScale = source.bumpScale;\\r\\n\\r\\n        this.normalMap = source.normalMap;\\r\\n        this.normalMapType = source.normalMapType;\\r\\n        this.normalScale.copy( source.normalScale );\\r\\n\\r\\n        this.displacementMap = source.displacementMap;\\r\\n        this.displacementScale = source.displacementScale;\\r\\n        this.displacementBias = source.displacementBias;\\r\\n\\r\\n        this.alphaMap = source.alphaMap;\\r\\n\\r\\n        this.skinning = source.skinning;\\r\\n        this.morphTargets = source.morphTargets;\\r\\n        this.morphNormals = source.morphNormals;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     *\\r\\n     * parameters = {\\r\\n\\t *  color: <hex>,\\r\\n\\t *  opacity: <float>,\\r\\n\\t *\\r\\n\\t *  linewidth: <float>,\\r\\n\\t *\\r\\n\\t *  scale: <float>,\\r\\n\\t *  dashSize: <float>,\\r\\n\\t *  gapSize: <float>\\r\\n\\t * }\\r\\n     */\\r\\n\\r\\n    function LineDashedMaterial( parameters ) {\\r\\n\\r\\n        LineBasicMaterial.call( this );\\r\\n\\r\\n        this.type = 'LineDashedMaterial';\\r\\n\\r\\n        this.scale = 1;\\r\\n        this.dashSize = 3;\\r\\n        this.gapSize = 1;\\r\\n\\r\\n        this.setValues( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    LineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\\r\\n    LineDashedMaterial.prototype.constructor = LineDashedMaterial;\\r\\n\\r\\n    LineDashedMaterial.prototype.isLineDashedMaterial = true;\\r\\n\\r\\n    LineDashedMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n        LineBasicMaterial.prototype.copy.call( this, source );\\r\\n\\r\\n        this.scale = source.scale;\\r\\n        this.dashSize = source.dashSize;\\r\\n        this.gapSize = source.gapSize;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n\\r\\n\\r\\n    var Materials = /*#__PURE__*/Object.freeze({\\r\\n        ShadowMaterial: ShadowMaterial,\\r\\n        SpriteMaterial: SpriteMaterial,\\r\\n        RawShaderMaterial: RawShaderMaterial,\\r\\n        ShaderMaterial: ShaderMaterial,\\r\\n        PointsMaterial: PointsMaterial,\\r\\n        MeshPhysicalMaterial: MeshPhysicalMaterial,\\r\\n        MeshStandardMaterial: MeshStandardMaterial,\\r\\n        MeshPhongMaterial: MeshPhongMaterial,\\r\\n        MeshToonMaterial: MeshToonMaterial,\\r\\n        MeshNormalMaterial: MeshNormalMaterial,\\r\\n        MeshLambertMaterial: MeshLambertMaterial,\\r\\n        MeshDepthMaterial: MeshDepthMaterial,\\r\\n        MeshDistanceMaterial: MeshDistanceMaterial,\\r\\n        MeshBasicMaterial: MeshBasicMaterial,\\r\\n        MeshMatcapMaterial: MeshMatcapMaterial,\\r\\n        LineDashedMaterial: LineDashedMaterial,\\r\\n        LineBasicMaterial: LineBasicMaterial,\\r\\n        Material: Material\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var Cache = {\\r\\n\\r\\n        enabled: false,\\r\\n\\r\\n        files: {},\\r\\n\\r\\n        add: function ( key, file ) {\\r\\n\\r\\n            if ( this.enabled === false ) return;\\r\\n\\r\\n            // console.log( 'THREE.Cache', 'Adding key:', key );\\r\\n\\r\\n            this.files[ key ] = file;\\r\\n\\r\\n        },\\r\\n\\r\\n        get: function ( key ) {\\r\\n\\r\\n            if ( this.enabled === false ) return;\\r\\n\\r\\n            // console.log( 'THREE.Cache', 'Checking key:', key );\\r\\n\\r\\n            return this.files[ key ];\\r\\n\\r\\n        },\\r\\n\\r\\n        remove: function ( key ) {\\r\\n\\r\\n            delete this.files[ key ];\\r\\n\\r\\n        },\\r\\n\\r\\n        clear: function () {\\r\\n\\r\\n            this.files = {};\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function LoadingManager( onLoad, onProgress, onError ) {\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        var isLoading = false;\\r\\n        var itemsLoaded = 0;\\r\\n        var itemsTotal = 0;\\r\\n        var urlModifier = undefined;\\r\\n\\r\\n        // Refer to #5689 for the reason why we don't set .onStart\\r\\n        // in the constructor\\r\\n\\r\\n        this.onStart = undefined;\\r\\n        this.onLoad = onLoad;\\r\\n        this.onProgress = onProgress;\\r\\n        this.onError = onError;\\r\\n\\r\\n        this.itemStart = function ( url ) {\\r\\n\\r\\n            itemsTotal ++;\\r\\n\\r\\n            if ( isLoading === false ) {\\r\\n\\r\\n                if ( scope.onStart !== undefined ) {\\r\\n\\r\\n                    scope.onStart( url, itemsLoaded, itemsTotal );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            isLoading = true;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.itemEnd = function ( url ) {\\r\\n\\r\\n            itemsLoaded ++;\\r\\n\\r\\n            if ( scope.onProgress !== undefined ) {\\r\\n\\r\\n                scope.onProgress( url, itemsLoaded, itemsTotal );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( itemsLoaded === itemsTotal ) {\\r\\n\\r\\n                isLoading = false;\\r\\n\\r\\n                if ( scope.onLoad !== undefined ) {\\r\\n\\r\\n                    scope.onLoad();\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        this.itemError = function ( url ) {\\r\\n\\r\\n            if ( scope.onError !== undefined ) {\\r\\n\\r\\n                scope.onError( url );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n        this.resolveURL = function ( url ) {\\r\\n\\r\\n            if ( urlModifier ) {\\r\\n\\r\\n                return urlModifier( url );\\r\\n\\r\\n            }\\r\\n\\r\\n            return url;\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setURLModifier = function ( transform ) {\\r\\n\\r\\n            urlModifier = transform;\\r\\n            return this;\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    var DefaultLoadingManager = new LoadingManager();\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var loading = {};\\r\\n\\r\\n    function FileLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( FileLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            if ( url === undefined ) url = '';\\r\\n\\r\\n            if ( this.path !== undefined ) url = this.path + url;\\r\\n\\r\\n            url = this.manager.resolveURL( url );\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var cached = Cache.get( url );\\r\\n\\r\\n            if ( cached !== undefined ) {\\r\\n\\r\\n                scope.manager.itemStart( url );\\r\\n\\r\\n                setTimeout( function () {\\r\\n\\r\\n                    if ( onLoad ) onLoad( cached );\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n\\r\\n                }, 0 );\\r\\n\\r\\n                return cached;\\r\\n\\r\\n            }\\r\\n\\r\\n            // Check if request is duplicate\\r\\n\\r\\n            if ( loading[ url ] !== undefined ) {\\r\\n\\r\\n                loading[ url ].push( {\\r\\n\\r\\n                    onLoad: onLoad,\\r\\n                    onProgress: onProgress,\\r\\n                    onError: onError\\r\\n\\r\\n                } );\\r\\n\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            // Check for data: URI\\r\\n            var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\\r\\n            var dataUriRegexResult = url.match( dataUriRegex );\\r\\n\\r\\n            // Safari can not handle Data URIs through XMLHttpRequest so process manually\\r\\n            if ( dataUriRegexResult ) {\\r\\n\\r\\n                var mimeType = dataUriRegexResult[ 1 ];\\r\\n                var isBase64 = !! dataUriRegexResult[ 2 ];\\r\\n                var data = dataUriRegexResult[ 3 ];\\r\\n\\r\\n                data = window.decodeURIComponent( data );\\r\\n\\r\\n                if ( isBase64 ) data = window.atob( data );\\r\\n\\r\\n                try {\\r\\n\\r\\n                    var response;\\r\\n                    var responseType = ( this.responseType || '' ).toLowerCase();\\r\\n\\r\\n                    switch ( responseType ) {\\r\\n\\r\\n                        case 'arraybuffer':\\r\\n                        case 'blob':\\r\\n\\r\\n                            var view = new Uint8Array( data.length );\\r\\n\\r\\n                            for ( var i = 0; i < data.length; i ++ ) {\\r\\n\\r\\n                                view[ i ] = data.charCodeAt( i );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            if ( responseType === 'blob' ) {\\r\\n\\r\\n                                response = new Blob( [ view.buffer ], { type: mimeType } );\\r\\n\\r\\n                            } else {\\r\\n\\r\\n                                response = view.buffer;\\r\\n\\r\\n                            }\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'document':\\r\\n\\r\\n                            var parser = new DOMParser();\\r\\n                            response = parser.parseFromString( data, mimeType );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'json':\\r\\n\\r\\n                            response = JSON.parse( data );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        default: // 'text' or other\\r\\n\\r\\n                            response = data;\\r\\n\\r\\n                            break;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    // Wait for next browser tick like standard XMLHttpRequest event dispatching does\\r\\n                    window.setTimeout( function () {\\r\\n\\r\\n                        if ( onLoad ) onLoad( response );\\r\\n\\r\\n                        scope.manager.itemEnd( url );\\r\\n\\r\\n                    }, 0 );\\r\\n\\r\\n                } catch ( error ) {\\r\\n\\r\\n                    // Wait for next browser tick like standard XMLHttpRequest event dispatching does\\r\\n                    window.setTimeout( function () {\\r\\n\\r\\n                        if ( onError ) onError( error );\\r\\n\\r\\n                        scope.manager.itemEnd( url );\\r\\n                        scope.manager.itemError( url );\\r\\n\\r\\n                    }, 0 );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // Initialise array for duplicate requests\\r\\n\\r\\n                loading[ url ] = [];\\r\\n\\r\\n                loading[ url ].push( {\\r\\n\\r\\n                    onLoad: onLoad,\\r\\n                    onProgress: onProgress,\\r\\n                    onError: onError\\r\\n\\r\\n                } );\\r\\n\\r\\n                var request = new XMLHttpRequest();\\r\\n\\r\\n                request.open( 'GET', url, true );\\r\\n\\r\\n                request.addEventListener( 'load', function ( event ) {\\r\\n\\r\\n                    var response = this.response;\\r\\n\\r\\n                    Cache.add( url, response );\\r\\n\\r\\n                    var callbacks = loading[ url ];\\r\\n\\r\\n                    delete loading[ url ];\\r\\n\\r\\n                    if ( this.status === 200 || this.status === 0 ) {\\r\\n\\r\\n                        // Some browsers return HTTP Status 0 when using non-http protocol\\r\\n                        // e.g. 'file://' or 'data://'. Handle as success.\\r\\n\\r\\n                        if ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\\r\\n\\r\\n                        for ( var i = 0, il = callbacks.length; i < il; i ++ ) {\\r\\n\\r\\n                            var callback = callbacks[ i ];\\r\\n                            if ( callback.onLoad ) callback.onLoad( response );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        scope.manager.itemEnd( url );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        for ( var i = 0, il = callbacks.length; i < il; i ++ ) {\\r\\n\\r\\n                            var callback = callbacks[ i ];\\r\\n                            if ( callback.onError ) callback.onError( event );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        scope.manager.itemEnd( url );\\r\\n                        scope.manager.itemError( url );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }, false );\\r\\n\\r\\n                request.addEventListener( 'progress', function ( event ) {\\r\\n\\r\\n                    var callbacks = loading[ url ];\\r\\n\\r\\n                    for ( var i = 0, il = callbacks.length; i < il; i ++ ) {\\r\\n\\r\\n                        var callback = callbacks[ i ];\\r\\n                        if ( callback.onProgress ) callback.onProgress( event );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }, false );\\r\\n\\r\\n                request.addEventListener( 'error', function ( event ) {\\r\\n\\r\\n                    var callbacks = loading[ url ];\\r\\n\\r\\n                    delete loading[ url ];\\r\\n\\r\\n                    for ( var i = 0, il = callbacks.length; i < il; i ++ ) {\\r\\n\\r\\n                        var callback = callbacks[ i ];\\r\\n                        if ( callback.onError ) callback.onError( event );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n                    scope.manager.itemError( url );\\r\\n\\r\\n                }, false );\\r\\n\\r\\n                request.addEventListener( 'abort', function ( event ) {\\r\\n\\r\\n                    var callbacks = loading[ url ];\\r\\n\\r\\n                    delete loading[ url ];\\r\\n\\r\\n                    for ( var i = 0, il = callbacks.length; i < il; i ++ ) {\\r\\n\\r\\n                        var callback = callbacks[ i ];\\r\\n                        if ( callback.onError ) callback.onError( event );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n                    scope.manager.itemError( url );\\r\\n\\r\\n                }, false );\\r\\n\\r\\n                if ( this.responseType !== undefined ) request.responseType = this.responseType;\\r\\n                if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\\r\\n\\r\\n                if ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\\r\\n\\r\\n                for ( var header in this.requestHeader ) {\\r\\n\\r\\n                    request.setRequestHeader( header, this.requestHeader[ header ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                request.send( null );\\r\\n\\r\\n            }\\r\\n\\r\\n            scope.manager.itemStart( url );\\r\\n\\r\\n            return request;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setResponseType: function ( value ) {\\r\\n\\r\\n            this.responseType = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setWithCredentials: function ( value ) {\\r\\n\\r\\n            this.withCredentials = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setMimeType: function ( value ) {\\r\\n\\r\\n            this.mimeType = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setRequestHeader: function ( value ) {\\r\\n\\r\\n            this.requestHeader = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     *\\r\\n     * Abstract Base class to block based textures loader (dds, pvr, ...)\\r\\n     */\\r\\n\\r\\n    function CompressedTextureLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n        // override in sub classes\\r\\n        this._parser = null;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( CompressedTextureLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var images = [];\\r\\n\\r\\n            var texture = new CompressedTexture();\\r\\n            texture.image = images;\\r\\n\\r\\n            var loader = new FileLoader( this.manager );\\r\\n            loader.setPath( this.path );\\r\\n            loader.setResponseType( 'arraybuffer' );\\r\\n\\r\\n            function loadTexture( i ) {\\r\\n\\r\\n                loader.load( url[ i ], function ( buffer ) {\\r\\n\\r\\n                    var texDatas = scope._parser( buffer, true );\\r\\n\\r\\n                    images[ i ] = {\\r\\n                        width: texDatas.width,\\r\\n                        height: texDatas.height,\\r\\n                        format: texDatas.format,\\r\\n                        mipmaps: texDatas.mipmaps\\r\\n                    };\\r\\n\\r\\n                    loaded += 1;\\r\\n\\r\\n                    if ( loaded === 6 ) {\\r\\n\\r\\n                        if ( texDatas.mipmapCount === 1 )\\r\\n                            texture.minFilter = LinearFilter;\\r\\n\\r\\n                        texture.format = texDatas.format;\\r\\n                        texture.needsUpdate = true;\\r\\n\\r\\n                        if ( onLoad ) onLoad( texture );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }, onProgress, onError );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( Array.isArray( url ) ) {\\r\\n\\r\\n                var loaded = 0;\\r\\n\\r\\n                for ( var i = 0, il = url.length; i < il; ++ i ) {\\r\\n\\r\\n                    loadTexture( i );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // compressed cubemap texture stored in a single DDS file\\r\\n\\r\\n                loader.load( url, function ( buffer ) {\\r\\n\\r\\n                    var texDatas = scope._parser( buffer, true );\\r\\n\\r\\n                    if ( texDatas.isCubemap ) {\\r\\n\\r\\n                        var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\\r\\n\\r\\n                        for ( var f = 0; f < faces; f ++ ) {\\r\\n\\r\\n                            images[ f ] = { mipmaps: [] };\\r\\n\\r\\n                            for ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\\r\\n\\r\\n                                images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\\r\\n                                images[ f ].format = texDatas.format;\\r\\n                                images[ f ].width = texDatas.width;\\r\\n                                images[ f ].height = texDatas.height;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        texture.image.width = texDatas.width;\\r\\n                        texture.image.height = texDatas.height;\\r\\n                        texture.mipmaps = texDatas.mipmaps;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( texDatas.mipmapCount === 1 ) {\\r\\n\\r\\n                        texture.minFilter = LinearFilter;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture.format = texDatas.format;\\r\\n                    texture.needsUpdate = true;\\r\\n\\r\\n                    if ( onLoad ) onLoad( texture );\\r\\n\\r\\n                }, onProgress, onError );\\r\\n\\r\\n            }\\r\\n\\r\\n            return texture;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author Nikos M. / https://github.com/foo123/\\r\\n     *\\r\\n     * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\\r\\n     */\\r\\n\\r\\n    function DataTextureLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n        // override in sub classes\\r\\n        this._parser = null;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( DataTextureLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var texture = new DataTexture();\\r\\n\\r\\n            var loader = new FileLoader( this.manager );\\r\\n            loader.setResponseType( 'arraybuffer' );\\r\\n\\r\\n            loader.load( url, function ( buffer ) {\\r\\n\\r\\n                var texData = scope._parser( buffer );\\r\\n\\r\\n                if ( ! texData ) return;\\r\\n\\r\\n                if ( undefined !== texData.image ) {\\r\\n\\r\\n                    texture.image = texData.image;\\r\\n\\r\\n                } else if ( undefined !== texData.data ) {\\r\\n\\r\\n                    texture.image.width = texData.width;\\r\\n                    texture.image.height = texData.height;\\r\\n                    texture.image.data = texData.data;\\r\\n\\r\\n                }\\r\\n\\r\\n                texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\\r\\n                texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\\r\\n\\r\\n                texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\\r\\n                texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\\r\\n\\r\\n                texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\\r\\n\\r\\n                if ( undefined !== texData.format ) {\\r\\n\\r\\n                    texture.format = texData.format;\\r\\n\\r\\n                }\\r\\n                if ( undefined !== texData.type ) {\\r\\n\\r\\n                    texture.type = texData.type;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( undefined !== texData.mipmaps ) {\\r\\n\\r\\n                    texture.mipmaps = texData.mipmaps;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( 1 === texData.mipmapCount ) {\\r\\n\\r\\n                    texture.minFilter = LinearFilter;\\r\\n\\r\\n                }\\r\\n\\r\\n                texture.needsUpdate = true;\\r\\n\\r\\n                if ( onLoad ) onLoad( texture, texData );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n\\r\\n            return texture;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function ImageLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( ImageLoader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            if ( url === undefined ) url = '';\\r\\n\\r\\n            if ( this.path !== undefined ) url = this.path + url;\\r\\n\\r\\n            url = this.manager.resolveURL( url );\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var cached = Cache.get( url );\\r\\n\\r\\n            if ( cached !== undefined ) {\\r\\n\\r\\n                scope.manager.itemStart( url );\\r\\n\\r\\n                setTimeout( function () {\\r\\n\\r\\n                    if ( onLoad ) onLoad( cached );\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n\\r\\n                }, 0 );\\r\\n\\r\\n                return cached;\\r\\n\\r\\n            }\\r\\n\\r\\n            var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\\r\\n\\r\\n            function onImageLoad() {\\r\\n\\r\\n                image.removeEventListener( 'load', onImageLoad, false );\\r\\n                image.removeEventListener( 'error', onImageError, false );\\r\\n\\r\\n                Cache.add( url, this );\\r\\n\\r\\n                if ( onLoad ) onLoad( this );\\r\\n\\r\\n                scope.manager.itemEnd( url );\\r\\n\\r\\n            }\\r\\n\\r\\n            function onImageError( event ) {\\r\\n\\r\\n                image.removeEventListener( 'load', onImageLoad, false );\\r\\n                image.removeEventListener( 'error', onImageError, false );\\r\\n\\r\\n                if ( onError ) onError( event );\\r\\n\\r\\n                scope.manager.itemEnd( url );\\r\\n                scope.manager.itemError( url );\\r\\n\\r\\n            }\\r\\n\\r\\n            image.addEventListener( 'load', onImageLoad, false );\\r\\n            image.addEventListener( 'error', onImageError, false );\\r\\n\\r\\n            if ( url.substr( 0, 5 ) !== 'data:' ) {\\r\\n\\r\\n                if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\\r\\n\\r\\n            }\\r\\n\\r\\n            scope.manager.itemStart( url );\\r\\n\\r\\n            image.src = url;\\r\\n\\r\\n            return image;\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( value ) {\\r\\n\\r\\n            this.crossOrigin = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function CubeTextureLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( CubeTextureLoader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        load: function ( urls, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var texture = new CubeTexture();\\r\\n\\r\\n            var loader = new ImageLoader( this.manager );\\r\\n            loader.setCrossOrigin( this.crossOrigin );\\r\\n            loader.setPath( this.path );\\r\\n\\r\\n            var loaded = 0;\\r\\n\\r\\n            function loadTexture( i ) {\\r\\n\\r\\n                loader.load( urls[ i ], function ( image ) {\\r\\n\\r\\n                    texture.images[ i ] = image;\\r\\n\\r\\n                    loaded ++;\\r\\n\\r\\n                    if ( loaded === 6 ) {\\r\\n\\r\\n                        texture.needsUpdate = true;\\r\\n\\r\\n                        if ( onLoad ) onLoad( texture );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }, undefined, onError );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i < urls.length; ++ i ) {\\r\\n\\r\\n                loadTexture( i );\\r\\n\\r\\n            }\\r\\n\\r\\n            return texture;\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( value ) {\\r\\n\\r\\n            this.crossOrigin = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function TextureLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( TextureLoader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var texture = new Texture();\\r\\n\\r\\n            var loader = new ImageLoader( this.manager );\\r\\n            loader.setCrossOrigin( this.crossOrigin );\\r\\n            loader.setPath( this.path );\\r\\n\\r\\n            loader.load( url, function ( image ) {\\r\\n\\r\\n                texture.image = image;\\r\\n\\r\\n                // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\\r\\n                var isJPEG = url.search( /\\\\.jpe?g$/i ) > 0 || url.search( /^data\\\\:image\\\\/jpeg/ ) === 0;\\r\\n\\r\\n                texture.format = isJPEG ? RGBFormat : RGBAFormat;\\r\\n                texture.needsUpdate = true;\\r\\n\\r\\n                if ( onLoad !== undefined ) {\\r\\n\\r\\n                    onLoad( texture );\\r\\n\\r\\n                }\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n            return texture;\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( value ) {\\r\\n\\r\\n            this.crossOrigin = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * Extensible curve object\\r\\n     *\\r\\n     * Some common of curve methods:\\r\\n     * .getPoint( t, optionalTarget ), .getTangent( t )\\r\\n     * .getPointAt( u, optionalTarget ), .getTangentAt( u )\\r\\n     * .getPoints(), .getSpacedPoints()\\r\\n     * .getLength()\\r\\n     * .updateArcLengths()\\r\\n     *\\r\\n     * This following curves inherit from THREE.Curve:\\r\\n     *\\r\\n     * -- 2D curves --\\r\\n     * THREE.ArcCurve\\r\\n     * THREE.CubicBezierCurve\\r\\n     * THREE.EllipseCurve\\r\\n     * THREE.LineCurve\\r\\n     * THREE.QuadraticBezierCurve\\r\\n     * THREE.SplineCurve\\r\\n     *\\r\\n     * -- 3D curves --\\r\\n     * THREE.CatmullRomCurve3\\r\\n     * THREE.CubicBezierCurve3\\r\\n     * THREE.LineCurve3\\r\\n     * THREE.QuadraticBezierCurve3\\r\\n     *\\r\\n     * A series of curves can be represented as a THREE.CurvePath.\\r\\n     *\\r\\n     **/\\r\\n\\r\\n    /**************************************************************\\r\\n     *\\tAbstract Curve base class\\r\\n     **************************************************************/\\r\\n\\r\\n    function Curve() {\\r\\n\\r\\n        this.type = 'Curve';\\r\\n\\r\\n        this.arcLengthDivisions = 200;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Curve.prototype, {\\r\\n\\r\\n        // Virtual base class method to overwrite and implement in subclasses\\r\\n        //\\t- t [0 .. 1]\\r\\n\\r\\n        getPoint: function ( /* t, optionalTarget */ ) {\\r\\n\\r\\n            console.warn( 'THREE.Curve: .getPoint() not implemented.' );\\r\\n            return null;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Get point at relative position in curve according to arc length\\r\\n        // - u [0 .. 1]\\r\\n\\r\\n        getPointAt: function ( u, optionalTarget ) {\\r\\n\\r\\n            var t = this.getUtoTmapping( u );\\r\\n            return this.getPoint( t, optionalTarget );\\r\\n\\r\\n        },\\r\\n\\r\\n        // Get sequence of points using getPoint( t )\\r\\n\\r\\n        getPoints: function ( divisions ) {\\r\\n\\r\\n            if ( divisions === undefined ) divisions = 5;\\r\\n\\r\\n            var points = [];\\r\\n\\r\\n            for ( var d = 0; d <= divisions; d ++ ) {\\r\\n\\r\\n                points.push( this.getPoint( d / divisions ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return points;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Get sequence of points using getPointAt( u )\\r\\n\\r\\n        getSpacedPoints: function ( divisions ) {\\r\\n\\r\\n            if ( divisions === undefined ) divisions = 5;\\r\\n\\r\\n            var points = [];\\r\\n\\r\\n            for ( var d = 0; d <= divisions; d ++ ) {\\r\\n\\r\\n                points.push( this.getPointAt( d / divisions ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return points;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Get total curve arc length\\r\\n\\r\\n        getLength: function () {\\r\\n\\r\\n            var lengths = this.getLengths();\\r\\n            return lengths[ lengths.length - 1 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        // Get list of cumulative segment lengths\\r\\n\\r\\n        getLengths: function ( divisions ) {\\r\\n\\r\\n            if ( divisions === undefined ) divisions = this.arcLengthDivisions;\\r\\n\\r\\n            if ( this.cacheArcLengths &&\\r\\n                ( this.cacheArcLengths.length === divisions + 1 ) &&\\r\\n                ! this.needsUpdate ) {\\r\\n\\r\\n                return this.cacheArcLengths;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.needsUpdate = false;\\r\\n\\r\\n            var cache = [];\\r\\n            var current, last = this.getPoint( 0 );\\r\\n            var p, sum = 0;\\r\\n\\r\\n            cache.push( 0 );\\r\\n\\r\\n            for ( p = 1; p <= divisions; p ++ ) {\\r\\n\\r\\n                current = this.getPoint( p / divisions );\\r\\n                sum += current.distanceTo( last );\\r\\n                cache.push( sum );\\r\\n                last = current;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.cacheArcLengths = cache;\\r\\n\\r\\n            return cache; // { sums: cache, sum: sum }; Sum is in the last element.\\r\\n\\r\\n        },\\r\\n\\r\\n        updateArcLengths: function () {\\r\\n\\r\\n            this.needsUpdate = true;\\r\\n            this.getLengths();\\r\\n\\r\\n        },\\r\\n\\r\\n        // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\\r\\n\\r\\n        getUtoTmapping: function ( u, distance ) {\\r\\n\\r\\n            var arcLengths = this.getLengths();\\r\\n\\r\\n            var i = 0, il = arcLengths.length;\\r\\n\\r\\n            var targetArcLength; // The targeted u distance value to get\\r\\n\\r\\n            if ( distance ) {\\r\\n\\r\\n                targetArcLength = distance;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                targetArcLength = u * arcLengths[ il - 1 ];\\r\\n\\r\\n            }\\r\\n\\r\\n            // binary search for the index with largest value smaller than target u distance\\r\\n\\r\\n            var low = 0, high = il - 1, comparison;\\r\\n\\r\\n            while ( low <= high ) {\\r\\n\\r\\n                i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\\r\\n\\r\\n                comparison = arcLengths[ i ] - targetArcLength;\\r\\n\\r\\n                if ( comparison < 0 ) {\\r\\n\\r\\n                    low = i + 1;\\r\\n\\r\\n                } else if ( comparison > 0 ) {\\r\\n\\r\\n                    high = i - 1;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    high = i;\\r\\n                    break;\\r\\n\\r\\n                    // DONE\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            i = high;\\r\\n\\r\\n            if ( arcLengths[ i ] === targetArcLength ) {\\r\\n\\r\\n                return i / ( il - 1 );\\r\\n\\r\\n            }\\r\\n\\r\\n            // we could get finer grain at lengths, or use simple interpolation between two points\\r\\n\\r\\n            var lengthBefore = arcLengths[ i ];\\r\\n            var lengthAfter = arcLengths[ i + 1 ];\\r\\n\\r\\n            var segmentLength = lengthAfter - lengthBefore;\\r\\n\\r\\n            // determine where we are between the 'before' and 'after' points\\r\\n\\r\\n            var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\\r\\n\\r\\n            // add that fractional amount to t\\r\\n\\r\\n            var t = ( i + segmentFraction ) / ( il - 1 );\\r\\n\\r\\n            return t;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Returns a unit vector tangent at t\\r\\n        // In case any sub curve does not implement its tangent derivation,\\r\\n        // 2 points a small delta apart will be used to find its gradient\\r\\n        // which seems to give a reasonable approximation\\r\\n\\r\\n        getTangent: function ( t ) {\\r\\n\\r\\n            var delta = 0.0001;\\r\\n            var t1 = t - delta;\\r\\n            var t2 = t + delta;\\r\\n\\r\\n            // Capping in case of danger\\r\\n\\r\\n            if ( t1 < 0 ) t1 = 0;\\r\\n            if ( t2 > 1 ) t2 = 1;\\r\\n\\r\\n            var pt1 = this.getPoint( t1 );\\r\\n            var pt2 = this.getPoint( t2 );\\r\\n\\r\\n            var vec = pt2.clone().sub( pt1 );\\r\\n            return vec.normalize();\\r\\n\\r\\n        },\\r\\n\\r\\n        getTangentAt: function ( u ) {\\r\\n\\r\\n            var t = this.getUtoTmapping( u );\\r\\n            return this.getTangent( t );\\r\\n\\r\\n        },\\r\\n\\r\\n        computeFrenetFrames: function ( segments, closed ) {\\r\\n\\r\\n            // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\\r\\n\\r\\n            var normal = new Vector3();\\r\\n\\r\\n            var tangents = [];\\r\\n            var normals = [];\\r\\n            var binormals = [];\\r\\n\\r\\n            var vec = new Vector3();\\r\\n            var mat = new Matrix4();\\r\\n\\r\\n            var i, u, theta;\\r\\n\\r\\n            // compute the tangent vectors for each segment on the curve\\r\\n\\r\\n            for ( i = 0; i <= segments; i ++ ) {\\r\\n\\r\\n                u = i / segments;\\r\\n\\r\\n                tangents[ i ] = this.getTangentAt( u );\\r\\n                tangents[ i ].normalize();\\r\\n\\r\\n            }\\r\\n\\r\\n            // select an initial normal vector perpendicular to the first tangent vector,\\r\\n            // and in the direction of the minimum tangent xyz component\\r\\n\\r\\n            normals[ 0 ] = new Vector3();\\r\\n            binormals[ 0 ] = new Vector3();\\r\\n            var min = Number.MAX_VALUE;\\r\\n            var tx = Math.abs( tangents[ 0 ].x );\\r\\n            var ty = Math.abs( tangents[ 0 ].y );\\r\\n            var tz = Math.abs( tangents[ 0 ].z );\\r\\n\\r\\n            if ( tx <= min ) {\\r\\n\\r\\n                min = tx;\\r\\n                normal.set( 1, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( ty <= min ) {\\r\\n\\r\\n                min = ty;\\r\\n                normal.set( 0, 1, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( tz <= min ) {\\r\\n\\r\\n                normal.set( 0, 0, 1 );\\r\\n\\r\\n            }\\r\\n\\r\\n            vec.crossVectors( tangents[ 0 ], normal ).normalize();\\r\\n\\r\\n            normals[ 0 ].crossVectors( tangents[ 0 ], vec );\\r\\n            binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\\r\\n\\r\\n\\r\\n            // compute the slowly-varying normal and binormal vectors for each segment on the curve\\r\\n\\r\\n            for ( i = 1; i <= segments; i ++ ) {\\r\\n\\r\\n                normals[ i ] = normals[ i - 1 ].clone();\\r\\n\\r\\n                binormals[ i ] = binormals[ i - 1 ].clone();\\r\\n\\r\\n                vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\\r\\n\\r\\n                if ( vec.length() > Number.EPSILON ) {\\r\\n\\r\\n                    vec.normalize();\\r\\n\\r\\n                    theta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\\r\\n\\r\\n                    normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\\r\\n\\r\\n            if ( closed === true ) {\\r\\n\\r\\n                theta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\\r\\n                theta /= segments;\\r\\n\\r\\n                if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\\r\\n\\r\\n                    theta = - theta;\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( i = 1; i <= segments; i ++ ) {\\r\\n\\r\\n                    // twist a little...\\r\\n                    normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\\r\\n                    binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                tangents: tangents,\\r\\n                normals: normals,\\r\\n                binormals: binormals\\r\\n            };\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.arcLengthDivisions = source.arcLengthDivisions;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = {\\r\\n                metadata: {\\r\\n                    version: 4.5,\\r\\n                    type: 'Curve',\\r\\n                    generator: 'Curve.toJSON'\\r\\n                }\\r\\n            };\\r\\n\\r\\n            data.arcLengthDivisions = this.arcLengthDivisions;\\r\\n            data.type = this.type;\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromJSON: function ( json ) {\\r\\n\\r\\n            this.arcLengthDivisions = json.arcLengthDivisions;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'EllipseCurve';\\r\\n\\r\\n        this.aX = aX || 0;\\r\\n        this.aY = aY || 0;\\r\\n\\r\\n        this.xRadius = xRadius || 1;\\r\\n        this.yRadius = yRadius || 1;\\r\\n\\r\\n        this.aStartAngle = aStartAngle || 0;\\r\\n        this.aEndAngle = aEndAngle || 2 * Math.PI;\\r\\n\\r\\n        this.aClockwise = aClockwise || false;\\r\\n\\r\\n        this.aRotation = aRotation || 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    EllipseCurve.prototype = Object.create( Curve.prototype );\\r\\n    EllipseCurve.prototype.constructor = EllipseCurve;\\r\\n\\r\\n    EllipseCurve.prototype.isEllipseCurve = true;\\r\\n\\r\\n    EllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector2();\\r\\n\\r\\n        var twoPi = Math.PI * 2;\\r\\n        var deltaAngle = this.aEndAngle - this.aStartAngle;\\r\\n        var samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\\r\\n\\r\\n        // ensures that deltaAngle is 0 .. 2 PI\\r\\n        while ( deltaAngle < 0 ) deltaAngle += twoPi;\\r\\n        while ( deltaAngle > twoPi ) deltaAngle -= twoPi;\\r\\n\\r\\n        if ( deltaAngle < Number.EPSILON ) {\\r\\n\\r\\n            if ( samePoints ) {\\r\\n\\r\\n                deltaAngle = 0;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                deltaAngle = twoPi;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( this.aClockwise === true && ! samePoints ) {\\r\\n\\r\\n            if ( deltaAngle === twoPi ) {\\r\\n\\r\\n                deltaAngle = - twoPi;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                deltaAngle = deltaAngle - twoPi;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        var angle = this.aStartAngle + t * deltaAngle;\\r\\n        var x = this.aX + this.xRadius * Math.cos( angle );\\r\\n        var y = this.aY + this.yRadius * Math.sin( angle );\\r\\n\\r\\n        if ( this.aRotation !== 0 ) {\\r\\n\\r\\n            var cos = Math.cos( this.aRotation );\\r\\n            var sin = Math.sin( this.aRotation );\\r\\n\\r\\n            var tx = x - this.aX;\\r\\n            var ty = y - this.aY;\\r\\n\\r\\n            // Rotate the point about the center of the ellipse.\\r\\n            x = tx * cos - ty * sin + this.aX;\\r\\n            y = tx * sin + ty * cos + this.aY;\\r\\n\\r\\n        }\\r\\n\\r\\n        return point.set( x, y );\\r\\n\\r\\n    };\\r\\n\\r\\n    EllipseCurve.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.aX = source.aX;\\r\\n        this.aY = source.aY;\\r\\n\\r\\n        this.xRadius = source.xRadius;\\r\\n        this.yRadius = source.yRadius;\\r\\n\\r\\n        this.aStartAngle = source.aStartAngle;\\r\\n        this.aEndAngle = source.aEndAngle;\\r\\n\\r\\n        this.aClockwise = source.aClockwise;\\r\\n\\r\\n        this.aRotation = source.aRotation;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n\\r\\n    EllipseCurve.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.aX = this.aX;\\r\\n        data.aY = this.aY;\\r\\n\\r\\n        data.xRadius = this.xRadius;\\r\\n        data.yRadius = this.yRadius;\\r\\n\\r\\n        data.aStartAngle = this.aStartAngle;\\r\\n        data.aEndAngle = this.aEndAngle;\\r\\n\\r\\n        data.aClockwise = this.aClockwise;\\r\\n\\r\\n        data.aRotation = this.aRotation;\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    EllipseCurve.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.aX = json.aX;\\r\\n        this.aY = json.aY;\\r\\n\\r\\n        this.xRadius = json.xRadius;\\r\\n        this.yRadius = json.yRadius;\\r\\n\\r\\n        this.aStartAngle = json.aStartAngle;\\r\\n        this.aEndAngle = json.aEndAngle;\\r\\n\\r\\n        this.aClockwise = json.aClockwise;\\r\\n\\r\\n        this.aRotation = json.aRotation;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n        EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n        this.type = 'ArcCurve';\\r\\n\\r\\n    }\\r\\n\\r\\n    ArcCurve.prototype = Object.create( EllipseCurve.prototype );\\r\\n    ArcCurve.prototype.constructor = ArcCurve;\\r\\n\\r\\n    ArcCurve.prototype.isArcCurve = true;\\r\\n\\r\\n    /**\\r\\n     * @author zz85 https://github.com/zz85\\r\\n     *\\r\\n     * Centripetal CatmullRom Curve - which is useful for avoiding\\r\\n     * cusps and self-intersections in non-uniform catmull rom curves.\\r\\n     * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\\r\\n     *\\r\\n     * curve.type accepts centripetal(default), chordal and catmullrom\\r\\n     * curve.tension is used for catmullrom which defaults to 0.5\\r\\n     */\\r\\n\\r\\n\\r\\n    /*\\r\\n\\tBased on an optimized c++ solution in\\r\\n\\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\\r\\n\\t - http://ideone.com/NoEbVM\\r\\n\\r\\n\\tThis CubicPoly class could be used for reusing some variables and calculations,\\r\\n\\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\\r\\n\\twhich can be placed in CurveUtils.\\r\\n\\t*/\\r\\n\\r\\n    function CubicPoly() {\\r\\n\\r\\n        var c0 = 0, c1 = 0, c2 = 0, c3 = 0;\\r\\n\\r\\n        /*\\r\\n\\t\\t * Compute coefficients for a cubic polynomial\\r\\n\\t\\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\\r\\n\\t\\t * such that\\r\\n\\t\\t *   p(0) = x0, p(1) = x1\\r\\n\\t\\t *  and\\r\\n\\t\\t *   p'(0) = t0, p'(1) = t1.\\r\\n\\t\\t */\\r\\n        function init( x0, x1, t0, t1 ) {\\r\\n\\r\\n            c0 = x0;\\r\\n            c1 = t0;\\r\\n            c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\\r\\n            c3 = 2 * x0 - 2 * x1 + t0 + t1;\\r\\n\\r\\n        }\\r\\n\\r\\n        return {\\r\\n\\r\\n            initCatmullRom: function ( x0, x1, x2, x3, tension ) {\\r\\n\\r\\n                init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\\r\\n\\r\\n            },\\r\\n\\r\\n            initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\\r\\n\\r\\n                // compute tangents when parameterized in [t1,t2]\\r\\n                var t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\\r\\n                var t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\\r\\n\\r\\n                // rescale tangents for parametrization in [0,1]\\r\\n                t1 *= dt1;\\r\\n                t2 *= dt1;\\r\\n\\r\\n                init( x1, x2, t1, t2 );\\r\\n\\r\\n            },\\r\\n\\r\\n            calc: function ( t ) {\\r\\n\\r\\n                var t2 = t * t;\\r\\n                var t3 = t2 * t;\\r\\n                return c0 + c1 * t + c2 * t2 + c3 * t3;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    var tmp = new Vector3();\\r\\n    var px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\\r\\n\\r\\n    function CatmullRomCurve3( points, closed, curveType, tension ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'CatmullRomCurve3';\\r\\n\\r\\n        this.points = points || [];\\r\\n        this.closed = closed || false;\\r\\n        this.curveType = curveType || 'centripetal';\\r\\n        this.tension = tension || 0.5;\\r\\n\\r\\n    }\\r\\n\\r\\n    CatmullRomCurve3.prototype = Object.create( Curve.prototype );\\r\\n    CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\\r\\n\\r\\n    CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\\r\\n\\r\\n    CatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector3();\\r\\n\\r\\n        var points = this.points;\\r\\n        var l = points.length;\\r\\n\\r\\n        var p = ( l - ( this.closed ? 0 : 1 ) ) * t;\\r\\n        var intPoint = Math.floor( p );\\r\\n        var weight = p - intPoint;\\r\\n\\r\\n        if ( this.closed ) {\\r\\n\\r\\n            intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\\r\\n\\r\\n        } else if ( weight === 0 && intPoint === l - 1 ) {\\r\\n\\r\\n            intPoint = l - 2;\\r\\n            weight = 1;\\r\\n\\r\\n        }\\r\\n\\r\\n        var p0, p1, p2, p3; // 4 points\\r\\n\\r\\n        if ( this.closed || intPoint > 0 ) {\\r\\n\\r\\n            p0 = points[ ( intPoint - 1 ) % l ];\\r\\n\\r\\n        } else {\\r\\n\\r\\n            // extrapolate first point\\r\\n            tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\\r\\n            p0 = tmp;\\r\\n\\r\\n        }\\r\\n\\r\\n        p1 = points[ intPoint % l ];\\r\\n        p2 = points[ ( intPoint + 1 ) % l ];\\r\\n\\r\\n        if ( this.closed || intPoint + 2 < l ) {\\r\\n\\r\\n            p3 = points[ ( intPoint + 2 ) % l ];\\r\\n\\r\\n        } else {\\r\\n\\r\\n            // extrapolate last point\\r\\n            tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\\r\\n            p3 = tmp;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\\r\\n\\r\\n            // init Centripetal / Chordal Catmull-Rom\\r\\n            var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\\r\\n            var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\\r\\n            var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\\r\\n            var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\\r\\n\\r\\n            // safety check for repeated points\\r\\n            if ( dt1 < 1e-4 ) dt1 = 1.0;\\r\\n            if ( dt0 < 1e-4 ) dt0 = dt1;\\r\\n            if ( dt2 < 1e-4 ) dt2 = dt1;\\r\\n\\r\\n            px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\\r\\n            py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\\r\\n            pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\\r\\n\\r\\n        } else if ( this.curveType === 'catmullrom' ) {\\r\\n\\r\\n            px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\\r\\n            py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\\r\\n            pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\\r\\n\\r\\n        }\\r\\n\\r\\n        point.set(\\r\\n            px.calc( weight ),\\r\\n            py.calc( weight ),\\r\\n            pz.calc( weight )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    CatmullRomCurve3.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.points = [];\\r\\n\\r\\n        for ( var i = 0, l = source.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = source.points[ i ];\\r\\n\\r\\n            this.points.push( point.clone() );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.closed = source.closed;\\r\\n        this.curveType = source.curveType;\\r\\n        this.tension = source.tension;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    CatmullRomCurve3.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.points = [];\\r\\n\\r\\n        for ( var i = 0, l = this.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = this.points[ i ];\\r\\n            data.points.push( point.toArray() );\\r\\n\\r\\n        }\\r\\n\\r\\n        data.closed = this.closed;\\r\\n        data.curveType = this.curveType;\\r\\n        data.tension = this.tension;\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    CatmullRomCurve3.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.points = [];\\r\\n\\r\\n        for ( var i = 0, l = json.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = json.points[ i ];\\r\\n            this.points.push( new Vector3().fromArray( point ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.closed = json.closed;\\r\\n        this.curveType = json.curveType;\\r\\n        this.tension = json.tension;\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     *\\r\\n     * Bezier Curves formulas obtained from\\r\\n     * http://en.wikipedia.org/wiki/Bézier_curve\\r\\n     */\\r\\n\\r\\n    function CatmullRom( t, p0, p1, p2, p3 ) {\\r\\n\\r\\n        var v0 = ( p2 - p0 ) * 0.5;\\r\\n        var v1 = ( p3 - p1 ) * 0.5;\\r\\n        var t2 = t * t;\\r\\n        var t3 = t * t2;\\r\\n        return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    function QuadraticBezierP0( t, p ) {\\r\\n\\r\\n        var k = 1 - t;\\r\\n        return k * k * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function QuadraticBezierP1( t, p ) {\\r\\n\\r\\n        return 2 * ( 1 - t ) * t * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function QuadraticBezierP2( t, p ) {\\r\\n\\r\\n        return t * t * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function QuadraticBezier( t, p0, p1, p2 ) {\\r\\n\\r\\n        return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\\r\\n            QuadraticBezierP2( t, p2 );\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    function CubicBezierP0( t, p ) {\\r\\n\\r\\n        var k = 1 - t;\\r\\n        return k * k * k * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function CubicBezierP1( t, p ) {\\r\\n\\r\\n        var k = 1 - t;\\r\\n        return 3 * k * k * t * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function CubicBezierP2( t, p ) {\\r\\n\\r\\n        return 3 * ( 1 - t ) * t * t * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function CubicBezierP3( t, p ) {\\r\\n\\r\\n        return t * t * t * p;\\r\\n\\r\\n    }\\r\\n\\r\\n    function CubicBezier( t, p0, p1, p2, p3 ) {\\r\\n\\r\\n        return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\\r\\n            CubicBezierP3( t, p3 );\\r\\n\\r\\n    }\\r\\n\\r\\n    function CubicBezierCurve( v0, v1, v2, v3 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'CubicBezierCurve';\\r\\n\\r\\n        this.v0 = v0 || new Vector2();\\r\\n        this.v1 = v1 || new Vector2();\\r\\n        this.v2 = v2 || new Vector2();\\r\\n        this.v3 = v3 || new Vector2();\\r\\n\\r\\n    }\\r\\n\\r\\n    CubicBezierCurve.prototype = Object.create( Curve.prototype );\\r\\n    CubicBezierCurve.prototype.constructor = CubicBezierCurve;\\r\\n\\r\\n    CubicBezierCurve.prototype.isCubicBezierCurve = true;\\r\\n\\r\\n    CubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector2();\\r\\n\\r\\n        var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\\r\\n\\r\\n        point.set(\\r\\n            CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\\r\\n            CubicBezier( t, v0.y, v1.y, v2.y, v3.y )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v0.copy( source.v0 );\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n        this.v3.copy( source.v3 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v0 = this.v0.toArray();\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n        data.v3 = this.v3.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v0.fromArray( json.v0 );\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n        this.v3.fromArray( json.v3 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function CubicBezierCurve3( v0, v1, v2, v3 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'CubicBezierCurve3';\\r\\n\\r\\n        this.v0 = v0 || new Vector3();\\r\\n        this.v1 = v1 || new Vector3();\\r\\n        this.v2 = v2 || new Vector3();\\r\\n        this.v3 = v3 || new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    CubicBezierCurve3.prototype = Object.create( Curve.prototype );\\r\\n    CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\\r\\n\\r\\n    CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\\r\\n\\r\\n    CubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector3();\\r\\n\\r\\n        var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\\r\\n\\r\\n        point.set(\\r\\n            CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\\r\\n            CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\\r\\n            CubicBezier( t, v0.z, v1.z, v2.z, v3.z )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve3.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v0.copy( source.v0 );\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n        this.v3.copy( source.v3 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve3.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v0 = this.v0.toArray();\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n        data.v3 = this.v3.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    CubicBezierCurve3.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v0.fromArray( json.v0 );\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n        this.v3.fromArray( json.v3 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function LineCurve( v1, v2 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'LineCurve';\\r\\n\\r\\n        this.v1 = v1 || new Vector2();\\r\\n        this.v2 = v2 || new Vector2();\\r\\n\\r\\n    }\\r\\n\\r\\n    LineCurve.prototype = Object.create( Curve.prototype );\\r\\n    LineCurve.prototype.constructor = LineCurve;\\r\\n\\r\\n    LineCurve.prototype.isLineCurve = true;\\r\\n\\r\\n    LineCurve.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector2();\\r\\n\\r\\n        if ( t === 1 ) {\\r\\n\\r\\n            point.copy( this.v2 );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            point.copy( this.v2 ).sub( this.v1 );\\r\\n            point.multiplyScalar( t ).add( this.v1 );\\r\\n\\r\\n        }\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    // Line curve is linear, so we can overwrite default getPointAt\\r\\n\\r\\n    LineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\\r\\n\\r\\n        return this.getPoint( u, optionalTarget );\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve.prototype.getTangent = function ( /* t */ ) {\\r\\n\\r\\n        var tangent = this.v2.clone().sub( this.v1 );\\r\\n\\r\\n        return tangent.normalize();\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function LineCurve3( v1, v2 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'LineCurve3';\\r\\n\\r\\n        this.v1 = v1 || new Vector3();\\r\\n        this.v2 = v2 || new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    LineCurve3.prototype = Object.create( Curve.prototype );\\r\\n    LineCurve3.prototype.constructor = LineCurve3;\\r\\n\\r\\n    LineCurve3.prototype.isLineCurve3 = true;\\r\\n\\r\\n    LineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector3();\\r\\n\\r\\n        if ( t === 1 ) {\\r\\n\\r\\n            point.copy( this.v2 );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            point.copy( this.v2 ).sub( this.v1 );\\r\\n            point.multiplyScalar( t ).add( this.v1 );\\r\\n\\r\\n        }\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    // Line curve is linear, so we can overwrite default getPointAt\\r\\n\\r\\n    LineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\\r\\n\\r\\n        return this.getPoint( u, optionalTarget );\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve3.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve3.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    LineCurve3.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function QuadraticBezierCurve( v0, v1, v2 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'QuadraticBezierCurve';\\r\\n\\r\\n        this.v0 = v0 || new Vector2();\\r\\n        this.v1 = v1 || new Vector2();\\r\\n        this.v2 = v2 || new Vector2();\\r\\n\\r\\n    }\\r\\n\\r\\n    QuadraticBezierCurve.prototype = Object.create( Curve.prototype );\\r\\n    QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\\r\\n\\r\\n    QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\\r\\n\\r\\n    QuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector2();\\r\\n\\r\\n        var v0 = this.v0, v1 = this.v1, v2 = this.v2;\\r\\n\\r\\n        point.set(\\r\\n            QuadraticBezier( t, v0.x, v1.x, v2.x ),\\r\\n            QuadraticBezier( t, v0.y, v1.y, v2.y )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v0.copy( source.v0 );\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v0 = this.v0.toArray();\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v0.fromArray( json.v0 );\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function QuadraticBezierCurve3( v0, v1, v2 ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'QuadraticBezierCurve3';\\r\\n\\r\\n        this.v0 = v0 || new Vector3();\\r\\n        this.v1 = v1 || new Vector3();\\r\\n        this.v2 = v2 || new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    QuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\\r\\n    QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\\r\\n\\r\\n    QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\\r\\n\\r\\n    QuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector3();\\r\\n\\r\\n        var v0 = this.v0, v1 = this.v1, v2 = this.v2;\\r\\n\\r\\n        point.set(\\r\\n            QuadraticBezier( t, v0.x, v1.x, v2.x ),\\r\\n            QuadraticBezier( t, v0.y, v1.y, v2.y ),\\r\\n            QuadraticBezier( t, v0.z, v1.z, v2.z )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve3.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.v0.copy( source.v0 );\\r\\n        this.v1.copy( source.v1 );\\r\\n        this.v2.copy( source.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve3.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.v0 = this.v0.toArray();\\r\\n        data.v1 = this.v1.toArray();\\r\\n        data.v2 = this.v2.toArray();\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    QuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.v0.fromArray( json.v0 );\\r\\n        this.v1.fromArray( json.v1 );\\r\\n        this.v2.fromArray( json.v2 );\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    function SplineCurve( points /* array of Vector2 */ ) {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'SplineCurve';\\r\\n\\r\\n        this.points = points || [];\\r\\n\\r\\n    }\\r\\n\\r\\n    SplineCurve.prototype = Object.create( Curve.prototype );\\r\\n    SplineCurve.prototype.constructor = SplineCurve;\\r\\n\\r\\n    SplineCurve.prototype.isSplineCurve = true;\\r\\n\\r\\n    SplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\\r\\n\\r\\n        var point = optionalTarget || new Vector2();\\r\\n\\r\\n        var points = this.points;\\r\\n        var p = ( points.length - 1 ) * t;\\r\\n\\r\\n        var intPoint = Math.floor( p );\\r\\n        var weight = p - intPoint;\\r\\n\\r\\n        var p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\\r\\n        var p1 = points[ intPoint ];\\r\\n        var p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\r\\n        var p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\r\\n\\r\\n        point.set(\\r\\n            CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\\r\\n            CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\\r\\n        );\\r\\n\\r\\n        return point;\\r\\n\\r\\n    };\\r\\n\\r\\n    SplineCurve.prototype.copy = function ( source ) {\\r\\n\\r\\n        Curve.prototype.copy.call( this, source );\\r\\n\\r\\n        this.points = [];\\r\\n\\r\\n        for ( var i = 0, l = source.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = source.points[ i ];\\r\\n\\r\\n            this.points.push( point.clone() );\\r\\n\\r\\n        }\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    SplineCurve.prototype.toJSON = function () {\\r\\n\\r\\n        var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n        data.points = [];\\r\\n\\r\\n        for ( var i = 0, l = this.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = this.points[ i ];\\r\\n            data.points.push( point.toArray() );\\r\\n\\r\\n        }\\r\\n\\r\\n        return data;\\r\\n\\r\\n    };\\r\\n\\r\\n    SplineCurve.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n        this.points = [];\\r\\n\\r\\n        for ( var i = 0, l = json.points.length; i < l; i ++ ) {\\r\\n\\r\\n            var point = json.points[ i ];\\r\\n            this.points.push( new Vector2().fromArray( point ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n\\r\\n\\r\\n    var Curves = /*#__PURE__*/Object.freeze({\\r\\n        ArcCurve: ArcCurve,\\r\\n        CatmullRomCurve3: CatmullRomCurve3,\\r\\n        CubicBezierCurve: CubicBezierCurve,\\r\\n        CubicBezierCurve3: CubicBezierCurve3,\\r\\n        EllipseCurve: EllipseCurve,\\r\\n        LineCurve: LineCurve,\\r\\n        LineCurve3: LineCurve3,\\r\\n        QuadraticBezierCurve: QuadraticBezierCurve,\\r\\n        QuadraticBezierCurve3: QuadraticBezierCurve3,\\r\\n        SplineCurve: SplineCurve\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     *\\r\\n     **/\\r\\n\\r\\n    /**************************************************************\\r\\n     *\\tCurved Path - a curve path is simply a array of connected\\r\\n     *  curves, but retains the api of a curve\\r\\n     **************************************************************/\\r\\n\\r\\n    function CurvePath() {\\r\\n\\r\\n        Curve.call( this );\\r\\n\\r\\n        this.type = 'CurvePath';\\r\\n\\r\\n        this.curves = [];\\r\\n        this.autoClose = false; // Automatically closes the path\\r\\n\\r\\n    }\\r\\n\\r\\n    CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\\r\\n\\r\\n        constructor: CurvePath,\\r\\n\\r\\n        add: function ( curve ) {\\r\\n\\r\\n            this.curves.push( curve );\\r\\n\\r\\n        },\\r\\n\\r\\n        closePath: function () {\\r\\n\\r\\n            // Add a line curve if start and end of lines are not connected\\r\\n            var startPoint = this.curves[ 0 ].getPoint( 0 );\\r\\n            var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\\r\\n\\r\\n            if ( ! startPoint.equals( endPoint ) ) {\\r\\n\\r\\n                this.curves.push( new LineCurve( endPoint, startPoint ) );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        // To get accurate point with reference to\\r\\n        // entire path distance at time t,\\r\\n        // following has to be done:\\r\\n\\r\\n        // 1. Length of each sub path have to be known\\r\\n        // 2. Locate and identify type of curve\\r\\n        // 3. Get t for the curve\\r\\n        // 4. Return curve.getPointAt(t')\\r\\n\\r\\n        getPoint: function ( t ) {\\r\\n\\r\\n            var d = t * this.getLength();\\r\\n            var curveLengths = this.getCurveLengths();\\r\\n            var i = 0;\\r\\n\\r\\n            // To think about boundaries points.\\r\\n\\r\\n            while ( i < curveLengths.length ) {\\r\\n\\r\\n                if ( curveLengths[ i ] >= d ) {\\r\\n\\r\\n                    var diff = curveLengths[ i ] - d;\\r\\n                    var curve = this.curves[ i ];\\r\\n\\r\\n                    var segmentLength = curve.getLength();\\r\\n                    var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\\r\\n\\r\\n                    return curve.getPointAt( u );\\r\\n\\r\\n                }\\r\\n\\r\\n                i ++;\\r\\n\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n\\r\\n            // loop where sum != 0, sum > d , sum+1 <d\\r\\n\\r\\n        },\\r\\n\\r\\n        // We cannot use the default THREE.Curve getPoint() with getLength() because in\\r\\n        // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\\r\\n        // getPoint() depends on getLength\\r\\n\\r\\n        getLength: function () {\\r\\n\\r\\n            var lens = this.getCurveLengths();\\r\\n            return lens[ lens.length - 1 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        // cacheLengths must be recalculated.\\r\\n        updateArcLengths: function () {\\r\\n\\r\\n            this.needsUpdate = true;\\r\\n            this.cacheLengths = null;\\r\\n            this.getCurveLengths();\\r\\n\\r\\n        },\\r\\n\\r\\n        // Compute lengths and cache them\\r\\n        // We cannot overwrite getLengths() because UtoT mapping uses it.\\r\\n\\r\\n        getCurveLengths: function () {\\r\\n\\r\\n            // We use cache values if curves and cache array are same length\\r\\n\\r\\n            if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\\r\\n\\r\\n                return this.cacheLengths;\\r\\n\\r\\n            }\\r\\n\\r\\n            // Get length of sub-curve\\r\\n            // Push sums into cached array\\r\\n\\r\\n            var lengths = [], sums = 0;\\r\\n\\r\\n            for ( var i = 0, l = this.curves.length; i < l; i ++ ) {\\r\\n\\r\\n                sums += this.curves[ i ].getLength();\\r\\n                lengths.push( sums );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.cacheLengths = lengths;\\r\\n\\r\\n            return lengths;\\r\\n\\r\\n        },\\r\\n\\r\\n        getSpacedPoints: function ( divisions ) {\\r\\n\\r\\n            if ( divisions === undefined ) divisions = 40;\\r\\n\\r\\n            var points = [];\\r\\n\\r\\n            for ( var i = 0; i <= divisions; i ++ ) {\\r\\n\\r\\n                points.push( this.getPoint( i / divisions ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.autoClose ) {\\r\\n\\r\\n                points.push( points[ 0 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            return points;\\r\\n\\r\\n        },\\r\\n\\r\\n        getPoints: function ( divisions ) {\\r\\n\\r\\n            divisions = divisions || 12;\\r\\n\\r\\n            var points = [], last;\\r\\n\\r\\n            for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\\r\\n\\r\\n                var curve = curves[ i ];\\r\\n                var resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\\r\\n                    : ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\\r\\n                        : ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\\r\\n                            : divisions;\\r\\n\\r\\n                var pts = curve.getPoints( resolution );\\r\\n\\r\\n                for ( var j = 0; j < pts.length; j ++ ) {\\r\\n\\r\\n                    var point = pts[ j ];\\r\\n\\r\\n                    if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\\r\\n\\r\\n                    points.push( point );\\r\\n                    last = point;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\\r\\n\\r\\n                points.push( points[ 0 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            return points;\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Curve.prototype.copy.call( this, source );\\r\\n\\r\\n            this.curves = [];\\r\\n\\r\\n            for ( var i = 0, l = source.curves.length; i < l; i ++ ) {\\r\\n\\r\\n                var curve = source.curves[ i ];\\r\\n\\r\\n                this.curves.push( curve.clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.autoClose = source.autoClose;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = Curve.prototype.toJSON.call( this );\\r\\n\\r\\n            data.autoClose = this.autoClose;\\r\\n            data.curves = [];\\r\\n\\r\\n            for ( var i = 0, l = this.curves.length; i < l; i ++ ) {\\r\\n\\r\\n                var curve = this.curves[ i ];\\r\\n                data.curves.push( curve.toJSON() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromJSON: function ( json ) {\\r\\n\\r\\n            Curve.prototype.fromJSON.call( this, json );\\r\\n\\r\\n            this.autoClose = json.autoClose;\\r\\n            this.curves = [];\\r\\n\\r\\n            for ( var i = 0, l = json.curves.length; i < l; i ++ ) {\\r\\n\\r\\n                var curve = json.curves[ i ];\\r\\n                this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * Creates free form 2d path using series of points, lines or curves.\\r\\n     **/\\r\\n\\r\\n    function Path( points ) {\\r\\n\\r\\n        CurvePath.call( this );\\r\\n\\r\\n        this.type = 'Path';\\r\\n\\r\\n        this.currentPoint = new Vector2();\\r\\n\\r\\n        if ( points ) {\\r\\n\\r\\n            this.setFromPoints( points );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Path.prototype = Object.assign( Object.create( CurvePath.prototype ), {\\r\\n\\r\\n        constructor: Path,\\r\\n\\r\\n        setFromPoints: function ( points ) {\\r\\n\\r\\n            this.moveTo( points[ 0 ].x, points[ 0 ].y );\\r\\n\\r\\n            for ( var i = 1, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n                this.lineTo( points[ i ].x, points[ i ].y );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        moveTo: function ( x, y ) {\\r\\n\\r\\n            this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\\r\\n\\r\\n        },\\r\\n\\r\\n        lineTo: function ( x, y ) {\\r\\n\\r\\n            var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\\r\\n            this.curves.push( curve );\\r\\n\\r\\n            this.currentPoint.set( x, y );\\r\\n\\r\\n        },\\r\\n\\r\\n        quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\r\\n\\r\\n            var curve = new QuadraticBezierCurve(\\r\\n                this.currentPoint.clone(),\\r\\n                new Vector2( aCPx, aCPy ),\\r\\n                new Vector2( aX, aY )\\r\\n            );\\r\\n\\r\\n            this.curves.push( curve );\\r\\n\\r\\n            this.currentPoint.set( aX, aY );\\r\\n\\r\\n        },\\r\\n\\r\\n        bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\r\\n\\r\\n            var curve = new CubicBezierCurve(\\r\\n                this.currentPoint.clone(),\\r\\n                new Vector2( aCP1x, aCP1y ),\\r\\n                new Vector2( aCP2x, aCP2y ),\\r\\n                new Vector2( aX, aY )\\r\\n            );\\r\\n\\r\\n            this.curves.push( curve );\\r\\n\\r\\n            this.currentPoint.set( aX, aY );\\r\\n\\r\\n        },\\r\\n\\r\\n        splineThru: function ( pts /*Array of Vector*/ ) {\\r\\n\\r\\n            var npts = [ this.currentPoint.clone() ].concat( pts );\\r\\n\\r\\n            var curve = new SplineCurve( npts );\\r\\n            this.curves.push( curve );\\r\\n\\r\\n            this.currentPoint.copy( pts[ pts.length - 1 ] );\\r\\n\\r\\n        },\\r\\n\\r\\n        arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n            var x0 = this.currentPoint.x;\\r\\n            var y0 = this.currentPoint.y;\\r\\n\\r\\n            this.absarc( aX + x0, aY + y0, aRadius,\\r\\n                aStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n        },\\r\\n\\r\\n        absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n            this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n        },\\r\\n\\r\\n        ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n            var x0 = this.currentPoint.x;\\r\\n            var y0 = this.currentPoint.y;\\r\\n\\r\\n            this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\r\\n\\r\\n        },\\r\\n\\r\\n        absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n            var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\r\\n\\r\\n            if ( this.curves.length > 0 ) {\\r\\n\\r\\n                // if a previous curve is present, attempt to join\\r\\n                var firstPoint = curve.getPoint( 0 );\\r\\n\\r\\n                if ( ! firstPoint.equals( this.currentPoint ) ) {\\r\\n\\r\\n                    this.lineTo( firstPoint.x, firstPoint.y );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this.curves.push( curve );\\r\\n\\r\\n            var lastPoint = curve.getPoint( 1 );\\r\\n            this.currentPoint.copy( lastPoint );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            CurvePath.prototype.copy.call( this, source );\\r\\n\\r\\n            this.currentPoint.copy( source.currentPoint );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = CurvePath.prototype.toJSON.call( this );\\r\\n\\r\\n            data.currentPoint = this.currentPoint.toArray();\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromJSON: function ( json ) {\\r\\n\\r\\n            CurvePath.prototype.fromJSON.call( this, json );\\r\\n\\r\\n            this.currentPoint.fromArray( json.currentPoint );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * Defines a 2d shape plane using paths.\\r\\n     **/\\r\\n\\r\\n    // STEP 1 Create a path.\\r\\n    // STEP 2 Turn path into shape.\\r\\n    // STEP 3 ExtrudeGeometry takes in Shape/Shapes\\r\\n    // STEP 3a - Extract points from each shape, turn to vertices\\r\\n    // STEP 3b - Triangulate each shape, add faces.\\r\\n\\r\\n    function Shape( points ) {\\r\\n\\r\\n        Path.call( this, points );\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        this.type = 'Shape';\\r\\n\\r\\n        this.holes = [];\\r\\n\\r\\n    }\\r\\n\\r\\n    Shape.prototype = Object.assign( Object.create( Path.prototype ), {\\r\\n\\r\\n        constructor: Shape,\\r\\n\\r\\n        getPointsHoles: function ( divisions ) {\\r\\n\\r\\n            var holesPts = [];\\r\\n\\r\\n            for ( var i = 0, l = this.holes.length; i < l; i ++ ) {\\r\\n\\r\\n                holesPts[ i ] = this.holes[ i ].getPoints( divisions );\\r\\n\\r\\n            }\\r\\n\\r\\n            return holesPts;\\r\\n\\r\\n        },\\r\\n\\r\\n        // get points of shape and holes (keypoints based on segments parameter)\\r\\n\\r\\n        extractPoints: function ( divisions ) {\\r\\n\\r\\n            return {\\r\\n\\r\\n                shape: this.getPoints( divisions ),\\r\\n                holes: this.getPointsHoles( divisions )\\r\\n\\r\\n            };\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Path.prototype.copy.call( this, source );\\r\\n\\r\\n            this.holes = [];\\r\\n\\r\\n            for ( var i = 0, l = source.holes.length; i < l; i ++ ) {\\r\\n\\r\\n                var hole = source.holes[ i ];\\r\\n\\r\\n                this.holes.push( hole.clone() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var data = Path.prototype.toJSON.call( this );\\r\\n\\r\\n            data.uuid = this.uuid;\\r\\n            data.holes = [];\\r\\n\\r\\n            for ( var i = 0, l = this.holes.length; i < l; i ++ ) {\\r\\n\\r\\n                var hole = this.holes[ i ];\\r\\n                data.holes.push( hole.toJSON() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return data;\\r\\n\\r\\n        },\\r\\n\\r\\n        fromJSON: function ( json ) {\\r\\n\\r\\n            Path.prototype.fromJSON.call( this, json );\\r\\n\\r\\n            this.uuid = json.uuid;\\r\\n            this.holes = [];\\r\\n\\r\\n            for ( var i = 0, l = json.holes.length; i < l; i ++ ) {\\r\\n\\r\\n                var hole = json.holes[ i ];\\r\\n                this.holes.push( new Path().fromJSON( hole ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Light( color, intensity ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Light';\\r\\n\\r\\n        this.color = new Color( color );\\r\\n        this.intensity = intensity !== undefined ? intensity : 1;\\r\\n\\r\\n        this.receiveShadow = undefined;\\r\\n\\r\\n    }\\r\\n\\r\\n    Light.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Light,\\r\\n\\r\\n        isLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n            this.color.copy( source.color );\\r\\n            this.intensity = source.intensity;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            data.object.color = this.color.getHex();\\r\\n            data.object.intensity = this.intensity;\\r\\n\\r\\n            if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\\r\\n\\r\\n            if ( this.distance !== undefined ) data.object.distance = this.distance;\\r\\n            if ( this.angle !== undefined ) data.object.angle = this.angle;\\r\\n            if ( this.decay !== undefined ) data.object.decay = this.decay;\\r\\n            if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\\r\\n\\r\\n            if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function HemisphereLight( skyColor, groundColor, intensity ) {\\r\\n\\r\\n        Light.call( this, skyColor, intensity );\\r\\n\\r\\n        this.type = 'HemisphereLight';\\r\\n\\r\\n        this.castShadow = undefined;\\r\\n\\r\\n        this.position.copy( Object3D.DefaultUp );\\r\\n        this.updateMatrix();\\r\\n\\r\\n        this.groundColor = new Color( groundColor );\\r\\n\\r\\n    }\\r\\n\\r\\n    HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: HemisphereLight,\\r\\n\\r\\n        isHemisphereLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Light.prototype.copy.call( this, source );\\r\\n\\r\\n            this.groundColor.copy( source.groundColor );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function LightShadow( camera ) {\\r\\n\\r\\n        this.camera = camera;\\r\\n\\r\\n        this.bias = 0;\\r\\n        this.radius = 1;\\r\\n\\r\\n        this.mapSize = new Vector2( 512, 512 );\\r\\n\\r\\n        this.map = null;\\r\\n        this.matrix = new Matrix4();\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( LightShadow.prototype, {\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            this.camera = source.camera.clone();\\r\\n\\r\\n            this.bias = source.bias;\\r\\n            this.radius = source.radius;\\r\\n\\r\\n            this.mapSize.copy( source.mapSize );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function () {\\r\\n\\r\\n            var object = {};\\r\\n\\r\\n            if ( this.bias !== 0 ) object.bias = this.bias;\\r\\n            if ( this.radius !== 1 ) object.radius = this.radius;\\r\\n            if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\\r\\n\\r\\n            object.camera = this.camera.toJSON( false ).object;\\r\\n            delete object.camera.matrix;\\r\\n\\r\\n            return object;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function SpotLightShadow() {\\r\\n\\r\\n        LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\\r\\n\\r\\n        constructor: SpotLightShadow,\\r\\n\\r\\n        isSpotLightShadow: true,\\r\\n\\r\\n        update: function ( light ) {\\r\\n\\r\\n            var camera = this.camera;\\r\\n\\r\\n            var fov = _Math.RAD2DEG * 2 * light.angle;\\r\\n            var aspect = this.mapSize.width / this.mapSize.height;\\r\\n            var far = light.distance || camera.far;\\r\\n\\r\\n            if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\\r\\n\\r\\n                camera.fov = fov;\\r\\n                camera.aspect = aspect;\\r\\n                camera.far = far;\\r\\n                camera.updateProjectionMatrix();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function SpotLight( color, intensity, distance, angle, penumbra, decay ) {\\r\\n\\r\\n        Light.call( this, color, intensity );\\r\\n\\r\\n        this.type = 'SpotLight';\\r\\n\\r\\n        this.position.copy( Object3D.DefaultUp );\\r\\n        this.updateMatrix();\\r\\n\\r\\n        this.target = new Object3D();\\r\\n\\r\\n        Object.defineProperty( this, 'power', {\\r\\n            get: function () {\\r\\n\\r\\n                // intensity = power per solid angle.\\r\\n                // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\\r\\n                return this.intensity * Math.PI;\\r\\n\\r\\n            },\\r\\n            set: function ( power ) {\\r\\n\\r\\n                // intensity = power per solid angle.\\r\\n                // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\\r\\n                this.intensity = power / Math.PI;\\r\\n\\r\\n            }\\r\\n        } );\\r\\n\\r\\n        this.distance = ( distance !== undefined ) ? distance : 0;\\r\\n        this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\\r\\n        this.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\\r\\n        this.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\r\\n\\r\\n        this.shadow = new SpotLightShadow();\\r\\n\\r\\n    }\\r\\n\\r\\n    SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: SpotLight,\\r\\n\\r\\n        isSpotLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Light.prototype.copy.call( this, source );\\r\\n\\r\\n            this.distance = source.distance;\\r\\n            this.angle = source.angle;\\r\\n            this.penumbra = source.penumbra;\\r\\n            this.decay = source.decay;\\r\\n\\r\\n            this.target = source.target.clone();\\r\\n\\r\\n            this.shadow = source.shadow.clone();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function PointLight( color, intensity, distance, decay ) {\\r\\n\\r\\n        Light.call( this, color, intensity );\\r\\n\\r\\n        this.type = 'PointLight';\\r\\n\\r\\n        Object.defineProperty( this, 'power', {\\r\\n            get: function () {\\r\\n\\r\\n                // intensity = power per solid angle.\\r\\n                // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\\r\\n                return this.intensity * 4 * Math.PI;\\r\\n\\r\\n            },\\r\\n            set: function ( power ) {\\r\\n\\r\\n                // intensity = power per solid angle.\\r\\n                // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\\r\\n                this.intensity = power / ( 4 * Math.PI );\\r\\n\\r\\n            }\\r\\n        } );\\r\\n\\r\\n        this.distance = ( distance !== undefined ) ? distance : 0;\\r\\n        this.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\r\\n\\r\\n        this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    PointLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: PointLight,\\r\\n\\r\\n        isPointLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Light.prototype.copy.call( this, source );\\r\\n\\r\\n            this.distance = source.distance;\\r\\n            this.decay = source.decay;\\r\\n\\r\\n            this.shadow = source.shadow.clone();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author arose / http://github.com/arose\\r\\n     */\\r\\n\\r\\n    function OrthographicCamera( left, right, top, bottom, near, far ) {\\r\\n\\r\\n        Camera.call( this );\\r\\n\\r\\n        this.type = 'OrthographicCamera';\\r\\n\\r\\n        this.zoom = 1;\\r\\n        this.view = null;\\r\\n\\r\\n        this.left = left;\\r\\n        this.right = right;\\r\\n        this.top = top;\\r\\n        this.bottom = bottom;\\r\\n\\r\\n        this.near = ( near !== undefined ) ? near : 0.1;\\r\\n        this.far = ( far !== undefined ) ? far : 2000;\\r\\n\\r\\n        this.updateProjectionMatrix();\\r\\n\\r\\n    }\\r\\n\\r\\n    OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\\r\\n\\r\\n        constructor: OrthographicCamera,\\r\\n\\r\\n        isOrthographicCamera: true,\\r\\n\\r\\n        copy: function ( source, recursive ) {\\r\\n\\r\\n            Camera.prototype.copy.call( this, source, recursive );\\r\\n\\r\\n            this.left = source.left;\\r\\n            this.right = source.right;\\r\\n            this.top = source.top;\\r\\n            this.bottom = source.bottom;\\r\\n            this.near = source.near;\\r\\n            this.far = source.far;\\r\\n\\r\\n            this.zoom = source.zoom;\\r\\n            this.view = source.view === null ? null : Object.assign( {}, source.view );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\\r\\n\\r\\n            if ( this.view === null ) {\\r\\n\\r\\n                this.view = {\\r\\n                    enabled: true,\\r\\n                    fullWidth: 1,\\r\\n                    fullHeight: 1,\\r\\n                    offsetX: 0,\\r\\n                    offsetY: 0,\\r\\n                    width: 1,\\r\\n                    height: 1\\r\\n                };\\r\\n\\r\\n            }\\r\\n\\r\\n            this.view.enabled = true;\\r\\n            this.view.fullWidth = fullWidth;\\r\\n            this.view.fullHeight = fullHeight;\\r\\n            this.view.offsetX = x;\\r\\n            this.view.offsetY = y;\\r\\n            this.view.width = width;\\r\\n            this.view.height = height;\\r\\n\\r\\n            this.updateProjectionMatrix();\\r\\n\\r\\n        },\\r\\n\\r\\n        clearViewOffset: function () {\\r\\n\\r\\n            if ( this.view !== null ) {\\r\\n\\r\\n                this.view.enabled = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.updateProjectionMatrix();\\r\\n\\r\\n        },\\r\\n\\r\\n        updateProjectionMatrix: function () {\\r\\n\\r\\n            var dx = ( this.right - this.left ) / ( 2 * this.zoom );\\r\\n            var dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\\r\\n            var cx = ( this.right + this.left ) / 2;\\r\\n            var cy = ( this.top + this.bottom ) / 2;\\r\\n\\r\\n            var left = cx - dx;\\r\\n            var right = cx + dx;\\r\\n            var top = cy + dy;\\r\\n            var bottom = cy - dy;\\r\\n\\r\\n            if ( this.view !== null && this.view.enabled ) {\\r\\n\\r\\n                var zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\\r\\n                var zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\\r\\n                var scaleW = ( this.right - this.left ) / this.view.width;\\r\\n                var scaleH = ( this.top - this.bottom ) / this.view.height;\\r\\n\\r\\n                left += scaleW * ( this.view.offsetX / zoomW );\\r\\n                right = left + scaleW * ( this.view.width / zoomW );\\r\\n                top -= scaleH * ( this.view.offsetY / zoomH );\\r\\n                bottom = top - scaleH * ( this.view.height / zoomH );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\\r\\n\\r\\n            this.projectionMatrixInverse.getInverse( this.projectionMatrix );\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            data.object.zoom = this.zoom;\\r\\n            data.object.left = this.left;\\r\\n            data.object.right = this.right;\\r\\n            data.object.top = this.top;\\r\\n            data.object.bottom = this.bottom;\\r\\n            data.object.near = this.near;\\r\\n            data.object.far = this.far;\\r\\n\\r\\n            if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function DirectionalLightShadow( ) {\\r\\n\\r\\n        LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\\r\\n\\r\\n        constructor: DirectionalLightShadow\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function DirectionalLight( color, intensity ) {\\r\\n\\r\\n        Light.call( this, color, intensity );\\r\\n\\r\\n        this.type = 'DirectionalLight';\\r\\n\\r\\n        this.position.copy( Object3D.DefaultUp );\\r\\n        this.updateMatrix();\\r\\n\\r\\n        this.target = new Object3D();\\r\\n\\r\\n        this.shadow = new DirectionalLightShadow();\\r\\n\\r\\n    }\\r\\n\\r\\n    DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: DirectionalLight,\\r\\n\\r\\n        isDirectionalLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Light.prototype.copy.call( this, source );\\r\\n\\r\\n            this.target = source.target.clone();\\r\\n\\r\\n            this.shadow = source.shadow.clone();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function AmbientLight( color, intensity ) {\\r\\n\\r\\n        Light.call( this, color, intensity );\\r\\n\\r\\n        this.type = 'AmbientLight';\\r\\n\\r\\n        this.castShadow = undefined;\\r\\n\\r\\n    }\\r\\n\\r\\n    AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: AmbientLight,\\r\\n\\r\\n        isAmbientLight: true\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author abelnation / http://github.com/abelnation\\r\\n     */\\r\\n\\r\\n    function RectAreaLight( color, intensity, width, height ) {\\r\\n\\r\\n        Light.call( this, color, intensity );\\r\\n\\r\\n        this.type = 'RectAreaLight';\\r\\n\\r\\n        this.width = ( width !== undefined ) ? width : 10;\\r\\n        this.height = ( height !== undefined ) ? height : 10;\\r\\n\\r\\n    }\\r\\n\\r\\n    RectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\\r\\n\\r\\n        constructor: RectAreaLight,\\r\\n\\r\\n        isRectAreaLight: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            Light.prototype.copy.call( this, source );\\r\\n\\r\\n            this.width = source.width;\\r\\n            this.height = source.height;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( meta ) {\\r\\n\\r\\n            var data = Light.prototype.toJSON.call( this, meta );\\r\\n\\r\\n            data.object.width = this.width;\\r\\n            data.object.height = this.height;\\r\\n\\r\\n            return data;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author tschw\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     */\\r\\n\\r\\n    var AnimationUtils = {\\r\\n\\r\\n        // same as Array.prototype.slice, but also works on typed arrays\\r\\n        arraySlice: function ( array, from, to ) {\\r\\n\\r\\n            if ( AnimationUtils.isTypedArray( array ) ) {\\r\\n\\r\\n                // in ios9 array.subarray(from, undefined) will return empty array\\r\\n                // but array.subarray(from) or array.subarray(from, len) is correct\\r\\n                return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return array.slice( from, to );\\r\\n\\r\\n        },\\r\\n\\r\\n        // converts an array to a specific type\\r\\n        convertArray: function ( array, type, forceClone ) {\\r\\n\\r\\n            if ( ! array || // let 'undefined' and 'null' pass\\r\\n                ! forceClone && array.constructor === type ) return array;\\r\\n\\r\\n            if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\\r\\n\\r\\n                return new type( array ); // create typed array\\r\\n\\r\\n            }\\r\\n\\r\\n            return Array.prototype.slice.call( array ); // create Array\\r\\n\\r\\n        },\\r\\n\\r\\n        isTypedArray: function ( object ) {\\r\\n\\r\\n            return ArrayBuffer.isView( object ) &&\\r\\n                ! ( object instanceof DataView );\\r\\n\\r\\n        },\\r\\n\\r\\n        // returns an array by which times and values can be sorted\\r\\n        getKeyframeOrder: function ( times ) {\\r\\n\\r\\n            function compareTime( i, j ) {\\r\\n\\r\\n                return times[ i ] - times[ j ];\\r\\n\\r\\n            }\\r\\n\\r\\n            var n = times.length;\\r\\n            var result = new Array( n );\\r\\n            for ( var i = 0; i !== n; ++ i ) result[ i ] = i;\\r\\n\\r\\n            result.sort( compareTime );\\r\\n\\r\\n            return result;\\r\\n\\r\\n        },\\r\\n\\r\\n        // uses the array previously returned by 'getKeyframeOrder' to sort data\\r\\n        sortedArray: function ( values, stride, order ) {\\r\\n\\r\\n            var nValues = values.length;\\r\\n            var result = new values.constructor( nValues );\\r\\n\\r\\n            for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\\r\\n\\r\\n                var srcOffset = order[ i ] * stride;\\r\\n\\r\\n                for ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n                    result[ dstOffset ++ ] = values[ srcOffset + j ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        },\\r\\n\\r\\n        // function for parsing AOS keyframe formats\\r\\n        flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\\r\\n\\r\\n            var i = 1, key = jsonKeys[ 0 ];\\r\\n\\r\\n            while ( key !== undefined && key[ valuePropertyName ] === undefined ) {\\r\\n\\r\\n                key = jsonKeys[ i ++ ];\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( key === undefined ) return; // no data\\r\\n\\r\\n            var value = key[ valuePropertyName ];\\r\\n            if ( value === undefined ) return; // no data\\r\\n\\r\\n            if ( Array.isArray( value ) ) {\\r\\n\\r\\n                do {\\r\\n\\r\\n                    value = key[ valuePropertyName ];\\r\\n\\r\\n                    if ( value !== undefined ) {\\r\\n\\r\\n                        times.push( key.time );\\r\\n                        values.push.apply( values, value ); // push all elements\\r\\n\\r\\n                    }\\r\\n\\r\\n                    key = jsonKeys[ i ++ ];\\r\\n\\r\\n                } while ( key !== undefined );\\r\\n\\r\\n            } else if ( value.toArray !== undefined ) {\\r\\n\\r\\n                // ...assume THREE.Math-ish\\r\\n\\r\\n                do {\\r\\n\\r\\n                    value = key[ valuePropertyName ];\\r\\n\\r\\n                    if ( value !== undefined ) {\\r\\n\\r\\n                        times.push( key.time );\\r\\n                        value.toArray( values, values.length );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    key = jsonKeys[ i ++ ];\\r\\n\\r\\n                } while ( key !== undefined );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // otherwise push as-is\\r\\n\\r\\n                do {\\r\\n\\r\\n                    value = key[ valuePropertyName ];\\r\\n\\r\\n                    if ( value !== undefined ) {\\r\\n\\r\\n                        times.push( key.time );\\r\\n                        values.push( value );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    key = jsonKeys[ i ++ ];\\r\\n\\r\\n                } while ( key !== undefined );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Abstract base class of interpolants over parametric samples.\\r\\n     *\\r\\n     * The parameter domain is one dimensional, typically the time or a path\\r\\n     * along a curve defined by the data.\\r\\n     *\\r\\n     * The sample values can have any dimensionality and derived classes may\\r\\n     * apply special interpretations to the data.\\r\\n     *\\r\\n     * This class provides the interval seek in a Template Method, deferring\\r\\n     * the actual interpolation to derived classes.\\r\\n     *\\r\\n     * Time complexity is O(1) for linear access crossing at most two points\\r\\n     * and O(log N) for random access, where N is the number of positions.\\r\\n     *\\r\\n     * References:\\r\\n     *\\r\\n     * \\t\\thttp://www.oodesign.com/template-method-pattern.html\\r\\n     *\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n        this.parameterPositions = parameterPositions;\\r\\n        this._cachedIndex = 0;\\r\\n\\r\\n        this.resultBuffer = resultBuffer !== undefined ?\\r\\n            resultBuffer : new sampleValues.constructor( sampleSize );\\r\\n        this.sampleValues = sampleValues;\\r\\n        this.valueSize = sampleSize;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Interpolant.prototype, {\\r\\n\\r\\n        evaluate: function ( t ) {\\r\\n\\r\\n            var pp = this.parameterPositions,\\r\\n                i1 = this._cachedIndex,\\r\\n\\r\\n                t1 = pp[ i1 ],\\r\\n                t0 = pp[ i1 - 1 ];\\r\\n\\r\\n            validate_interval: {\\r\\n\\r\\n                seek: {\\r\\n\\r\\n                    var right;\\r\\n\\r\\n                    linear_scan: {\\r\\n\\r\\n                        //- See http://jsperf.com/comparison-to-undefined/3\\r\\n                        //- slower code:\\r\\n                        //-\\r\\n                        //- \\t\\t\\t\\tif ( t >= t1 || t1 === undefined ) {\\r\\n                        forward_scan: if ( ! ( t < t1 ) ) {\\r\\n\\r\\n                            for ( var giveUpAt = i1 + 2; ; ) {\\r\\n\\r\\n                                if ( t1 === undefined ) {\\r\\n\\r\\n                                    if ( t < t0 ) break forward_scan;\\r\\n\\r\\n                                    // after end\\r\\n\\r\\n                                    i1 = pp.length;\\r\\n                                    this._cachedIndex = i1;\\r\\n                                    return this.afterEnd_( i1 - 1, t, t0 );\\r\\n\\r\\n                                }\\r\\n\\r\\n                                if ( i1 === giveUpAt ) break; // this loop\\r\\n\\r\\n                                t0 = t1;\\r\\n                                t1 = pp[ ++ i1 ];\\r\\n\\r\\n                                if ( t < t1 ) {\\r\\n\\r\\n                                    // we have arrived at the sought interval\\r\\n                                    break seek;\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                            // prepare binary search on the right side of the index\\r\\n                            right = pp.length;\\r\\n                            break linear_scan;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        //- slower code:\\r\\n                        //-\\t\\t\\t\\t\\tif ( t < t0 || t0 === undefined ) {\\r\\n                        if ( ! ( t >= t0 ) ) {\\r\\n\\r\\n                            // looping?\\r\\n\\r\\n                            var t1global = pp[ 1 ];\\r\\n\\r\\n                            if ( t < t1global ) {\\r\\n\\r\\n                                i1 = 2; // + 1, using the scan for the details\\r\\n                                t0 = t1global;\\r\\n\\r\\n                            }\\r\\n\\r\\n                            // linear reverse scan\\r\\n\\r\\n                            for ( var giveUpAt = i1 - 2; ; ) {\\r\\n\\r\\n                                if ( t0 === undefined ) {\\r\\n\\r\\n                                    // before start\\r\\n\\r\\n                                    this._cachedIndex = 0;\\r\\n                                    return this.beforeStart_( 0, t, t1 );\\r\\n\\r\\n                                }\\r\\n\\r\\n                                if ( i1 === giveUpAt ) break; // this loop\\r\\n\\r\\n                                t1 = t0;\\r\\n                                t0 = pp[ -- i1 - 1 ];\\r\\n\\r\\n                                if ( t >= t0 ) {\\r\\n\\r\\n                                    // we have arrived at the sought interval\\r\\n                                    break seek;\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                            // prepare binary search on the left side of the index\\r\\n                            right = i1;\\r\\n                            i1 = 0;\\r\\n                            break linear_scan;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        // the interval is valid\\r\\n\\r\\n                        break validate_interval;\\r\\n\\r\\n                    } // linear scan\\r\\n\\r\\n                    // binary search\\r\\n\\r\\n                    while ( i1 < right ) {\\r\\n\\r\\n                        var mid = ( i1 + right ) >>> 1;\\r\\n\\r\\n                        if ( t < pp[ mid ] ) {\\r\\n\\r\\n                            right = mid;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            i1 = mid + 1;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    t1 = pp[ i1 ];\\r\\n                    t0 = pp[ i1 - 1 ];\\r\\n\\r\\n                    // check boundary cases, again\\r\\n\\r\\n                    if ( t0 === undefined ) {\\r\\n\\r\\n                        this._cachedIndex = 0;\\r\\n                        return this.beforeStart_( 0, t, t1 );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( t1 === undefined ) {\\r\\n\\r\\n                        i1 = pp.length;\\r\\n                        this._cachedIndex = i1;\\r\\n                        return this.afterEnd_( i1 - 1, t0, t );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } // seek\\r\\n\\r\\n                this._cachedIndex = i1;\\r\\n\\r\\n                this.intervalChanged_( i1, t0, t1 );\\r\\n\\r\\n            } // validate_interval\\r\\n\\r\\n            return this.interpolate_( i1, t0, t, t1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        settings: null, // optional, subclass-specific settings structure\\r\\n        // Note: The indirection allows central control of many interpolants.\\r\\n\\r\\n        // --- Protected interface\\r\\n\\r\\n        DefaultSettings_: {},\\r\\n\\r\\n        getSettings_: function () {\\r\\n\\r\\n            return this.settings || this.DefaultSettings_;\\r\\n\\r\\n        },\\r\\n\\r\\n        copySampleValue_: function ( index ) {\\r\\n\\r\\n            // copies a sample value to the result buffer\\r\\n\\r\\n            var result = this.resultBuffer,\\r\\n                values = this.sampleValues,\\r\\n                stride = this.valueSize,\\r\\n                offset = index * stride;\\r\\n\\r\\n            for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                result[ i ] = values[ offset + i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Template methods for derived classes:\\r\\n\\r\\n        interpolate_: function ( /* i1, t0, t, t1 */ ) {\\r\\n\\r\\n            throw new Error( 'call to abstract method' );\\r\\n            // implementations shall return this.resultBuffer\\r\\n\\r\\n        },\\r\\n\\r\\n        intervalChanged_: function ( /* i1, t0, t1 */ ) {\\r\\n\\r\\n            // empty\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //!\\\\ DECLARE ALIAS AFTER assign prototype !\\r\\n    Object.assign( Interpolant.prototype, {\\r\\n\\r\\n        //( 0, t, t0 ), returns this.resultBuffer\\r\\n        beforeStart_: Interpolant.prototype.copySampleValue_,\\r\\n\\r\\n        //( N-1, tN-1, t ), returns this.resultBuffer\\r\\n        afterEnd_: Interpolant.prototype.copySampleValue_,\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * Fast and simple cubic spline interpolant.\\r\\n     *\\r\\n     * It was derived from a Hermitian construction setting the first derivative\\r\\n     * at each sample position to the linear slope between neighboring positions\\r\\n     * over their parameter interval.\\r\\n     *\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n        Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n        this._weightPrev = - 0;\\r\\n        this._offsetPrev = - 0;\\r\\n        this._weightNext = - 0;\\r\\n        this._offsetNext = - 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\\r\\n\\r\\n        constructor: CubicInterpolant,\\r\\n\\r\\n        DefaultSettings_: {\\r\\n\\r\\n            endingStart: ZeroCurvatureEnding,\\r\\n            endingEnd: ZeroCurvatureEnding\\r\\n\\r\\n        },\\r\\n\\r\\n        intervalChanged_: function ( i1, t0, t1 ) {\\r\\n\\r\\n            var pp = this.parameterPositions,\\r\\n                iPrev = i1 - 2,\\r\\n                iNext = i1 + 1,\\r\\n\\r\\n                tPrev = pp[ iPrev ],\\r\\n                tNext = pp[ iNext ];\\r\\n\\r\\n            if ( tPrev === undefined ) {\\r\\n\\r\\n                switch ( this.getSettings_().endingStart ) {\\r\\n\\r\\n                    case ZeroSlopeEnding:\\r\\n\\r\\n                        // f'(t0) = 0\\r\\n                        iPrev = i1;\\r\\n                        tPrev = 2 * t0 - t1;\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case WrapAroundEnding:\\r\\n\\r\\n                        // use the other end of the curve\\r\\n                        iPrev = pp.length - 2;\\r\\n                        tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    default: // ZeroCurvatureEnding\\r\\n\\r\\n                        // f''(t0) = 0 a.k.a. Natural Spline\\r\\n                        iPrev = i1;\\r\\n                        tPrev = t1;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( tNext === undefined ) {\\r\\n\\r\\n                switch ( this.getSettings_().endingEnd ) {\\r\\n\\r\\n                    case ZeroSlopeEnding:\\r\\n\\r\\n                        // f'(tN) = 0\\r\\n                        iNext = i1;\\r\\n                        tNext = 2 * t1 - t0;\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case WrapAroundEnding:\\r\\n\\r\\n                        // use the other end of the curve\\r\\n                        iNext = 1;\\r\\n                        tNext = t1 + pp[ 1 ] - pp[ 0 ];\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    default: // ZeroCurvatureEnding\\r\\n\\r\\n                        // f''(tN) = 0, a.k.a. Natural Spline\\r\\n                        iNext = i1 - 1;\\r\\n                        tNext = t0;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var halfDt = ( t1 - t0 ) * 0.5,\\r\\n                stride = this.valueSize;\\r\\n\\r\\n            this._weightPrev = halfDt / ( t0 - tPrev );\\r\\n            this._weightNext = halfDt / ( tNext - t1 );\\r\\n            this._offsetPrev = iPrev * stride;\\r\\n            this._offsetNext = iNext * stride;\\r\\n\\r\\n        },\\r\\n\\r\\n        interpolate_: function ( i1, t0, t, t1 ) {\\r\\n\\r\\n            var result = this.resultBuffer,\\r\\n                values = this.sampleValues,\\r\\n                stride = this.valueSize,\\r\\n\\r\\n                o1 = i1 * stride,\\t\\to0 = o1 - stride,\\r\\n                oP = this._offsetPrev, \\toN = this._offsetNext,\\r\\n                wP = this._weightPrev,\\twN = this._weightNext,\\r\\n\\r\\n                p = ( t - t0 ) / ( t1 - t0 ),\\r\\n                pp = p * p,\\r\\n                ppp = pp * p;\\r\\n\\r\\n            // evaluate polynomials\\r\\n\\r\\n            var sP = - wP * ppp + 2 * wP * pp - wP * p;\\r\\n            var s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\\r\\n            var s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\\r\\n            var sN = wN * ppp - wN * pp;\\r\\n\\r\\n            // combine data linearly\\r\\n\\r\\n            for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                result[ i ] =\\r\\n                    sP * values[ oP + i ] +\\r\\n                    s0 * values[ o0 + i ] +\\r\\n                    s1 * values[ o1 + i ] +\\r\\n                    sN * values[ oN + i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n        Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n    }\\r\\n\\r\\n    LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\\r\\n\\r\\n        constructor: LinearInterpolant,\\r\\n\\r\\n        interpolate_: function ( i1, t0, t, t1 ) {\\r\\n\\r\\n            var result = this.resultBuffer,\\r\\n                values = this.sampleValues,\\r\\n                stride = this.valueSize,\\r\\n\\r\\n                offset1 = i1 * stride,\\r\\n                offset0 = offset1 - stride,\\r\\n\\r\\n                weight1 = ( t - t0 ) / ( t1 - t0 ),\\r\\n                weight0 = 1 - weight1;\\r\\n\\r\\n            for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                result[ i ] =\\r\\n                    values[ offset0 + i ] * weight0 +\\r\\n                    values[ offset1 + i ] * weight1;\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Interpolant that evaluates to the sample value at the position preceeding\\r\\n     * the parameter.\\r\\n     *\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n        Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n    }\\r\\n\\r\\n    DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\\r\\n\\r\\n        constructor: DiscreteInterpolant,\\r\\n\\r\\n        interpolate_: function ( i1 /*, t0, t, t1 */ ) {\\r\\n\\r\\n            return this.copySampleValue_( i1 - 1 );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A timed sequence of keyframes for a specific property.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function KeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\\r\\n        if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\\r\\n\\r\\n        this.name = name;\\r\\n\\r\\n        this.times = AnimationUtils.convertArray( times, this.TimeBufferType );\\r\\n        this.values = AnimationUtils.convertArray( values, this.ValueBufferType );\\r\\n\\r\\n        this.setInterpolation( interpolation || this.DefaultInterpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    // Static methods\\r\\n\\r\\n    Object.assign( KeyframeTrack, {\\r\\n\\r\\n        // Serialization (in static context, because of constructor invocation\\r\\n        // and automatic invocation of .toJSON):\\r\\n\\r\\n        toJSON: function ( track ) {\\r\\n\\r\\n            var trackType = track.constructor;\\r\\n\\r\\n            var json;\\r\\n\\r\\n            // derived classes can define a static toJSON method\\r\\n            if ( trackType.toJSON !== undefined ) {\\r\\n\\r\\n                json = trackType.toJSON( track );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // by default, we assume the data can be serialized as-is\\r\\n                json = {\\r\\n\\r\\n                    'name': track.name,\\r\\n                    'times': AnimationUtils.convertArray( track.times, Array ),\\r\\n                    'values': AnimationUtils.convertArray( track.values, Array )\\r\\n\\r\\n                };\\r\\n\\r\\n                var interpolation = track.getInterpolation();\\r\\n\\r\\n                if ( interpolation !== track.DefaultInterpolation ) {\\r\\n\\r\\n                    json.interpolation = interpolation;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            json.type = track.ValueTypeName; // mandatory\\r\\n\\r\\n            return json;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( KeyframeTrack.prototype, {\\r\\n\\r\\n        constructor: KeyframeTrack,\\r\\n\\r\\n        TimeBufferType: Float32Array,\\r\\n\\r\\n        ValueBufferType: Float32Array,\\r\\n\\r\\n        DefaultInterpolation: InterpolateLinear,\\r\\n\\r\\n        InterpolantFactoryMethodDiscrete: function ( result ) {\\r\\n\\r\\n            return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n        },\\r\\n\\r\\n        InterpolantFactoryMethodLinear: function ( result ) {\\r\\n\\r\\n            return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n        },\\r\\n\\r\\n        InterpolantFactoryMethodSmooth: function ( result ) {\\r\\n\\r\\n            return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n        },\\r\\n\\r\\n        setInterpolation: function ( interpolation ) {\\r\\n\\r\\n            var factoryMethod;\\r\\n\\r\\n            switch ( interpolation ) {\\r\\n\\r\\n                case InterpolateDiscrete:\\r\\n\\r\\n                    factoryMethod = this.InterpolantFactoryMethodDiscrete;\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case InterpolateLinear:\\r\\n\\r\\n                    factoryMethod = this.InterpolantFactoryMethodLinear;\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case InterpolateSmooth:\\r\\n\\r\\n                    factoryMethod = this.InterpolantFactoryMethodSmooth;\\r\\n\\r\\n                    break;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( factoryMethod === undefined ) {\\r\\n\\r\\n                var message = \\\"unsupported interpolation for \\\" +\\r\\n                    this.ValueTypeName + \\\" keyframe track named \\\" + this.name;\\r\\n\\r\\n                if ( this.createInterpolant === undefined ) {\\r\\n\\r\\n                    // fall back to default, unless the default itself is messed up\\r\\n                    if ( interpolation !== this.DefaultInterpolation ) {\\r\\n\\r\\n                        this.setInterpolation( this.DefaultInterpolation );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        throw new Error( message ); // fatal, in this case\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                console.warn( 'THREE.KeyframeTrack:', message );\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.createInterpolant = factoryMethod;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getInterpolation: function () {\\r\\n\\r\\n            switch ( this.createInterpolant ) {\\r\\n\\r\\n                case this.InterpolantFactoryMethodDiscrete:\\r\\n\\r\\n                    return InterpolateDiscrete;\\r\\n\\r\\n                case this.InterpolantFactoryMethodLinear:\\r\\n\\r\\n                    return InterpolateLinear;\\r\\n\\r\\n                case this.InterpolantFactoryMethodSmooth:\\r\\n\\r\\n                    return InterpolateSmooth;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        getValueSize: function () {\\r\\n\\r\\n            return this.values.length / this.times.length;\\r\\n\\r\\n        },\\r\\n\\r\\n        // move all keyframes either forwards or backwards in time\\r\\n        shift: function ( timeOffset ) {\\r\\n\\r\\n            if ( timeOffset !== 0.0 ) {\\r\\n\\r\\n                var times = this.times;\\r\\n\\r\\n                for ( var i = 0, n = times.length; i !== n; ++ i ) {\\r\\n\\r\\n                    times[ i ] += timeOffset;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\\r\\n        scale: function ( timeScale ) {\\r\\n\\r\\n            if ( timeScale !== 1.0 ) {\\r\\n\\r\\n                var times = this.times;\\r\\n\\r\\n                for ( var i = 0, n = times.length; i !== n; ++ i ) {\\r\\n\\r\\n                    times[ i ] *= timeScale;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\\r\\n        // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\\r\\n        trim: function ( startTime, endTime ) {\\r\\n\\r\\n            var times = this.times,\\r\\n                nKeys = times.length,\\r\\n                from = 0,\\r\\n                to = nKeys - 1;\\r\\n\\r\\n            while ( from !== nKeys && times[ from ] < startTime ) {\\r\\n\\r\\n                ++ from;\\r\\n\\r\\n            }\\r\\n\\r\\n            while ( to !== - 1 && times[ to ] > endTime ) {\\r\\n\\r\\n                -- to;\\r\\n\\r\\n            }\\r\\n\\r\\n            ++ to; // inclusive -> exclusive bound\\r\\n\\r\\n            if ( from !== 0 || to !== nKeys ) {\\r\\n\\r\\n                // empty tracks are forbidden, so keep at least one keyframe\\r\\n                if ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\\r\\n\\r\\n                var stride = this.getValueSize();\\r\\n                this.times = AnimationUtils.arraySlice( times, from, to );\\r\\n                this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\\r\\n        validate: function () {\\r\\n\\r\\n            var valid = true;\\r\\n\\r\\n            var valueSize = this.getValueSize();\\r\\n            if ( valueSize - Math.floor( valueSize ) !== 0 ) {\\r\\n\\r\\n                console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\\r\\n                valid = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            var times = this.times,\\r\\n                values = this.values,\\r\\n\\r\\n                nKeys = times.length;\\r\\n\\r\\n            if ( nKeys === 0 ) {\\r\\n\\r\\n                console.error( 'THREE.KeyframeTrack: Track is empty.', this );\\r\\n                valid = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            var prevTime = null;\\r\\n\\r\\n            for ( var i = 0; i !== nKeys; i ++ ) {\\r\\n\\r\\n                var currTime = times[ i ];\\r\\n\\r\\n                if ( typeof currTime === 'number' && isNaN( currTime ) ) {\\r\\n\\r\\n                    console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\\r\\n                    valid = false;\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( prevTime !== null && prevTime > currTime ) {\\r\\n\\r\\n                    console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\\r\\n                    valid = false;\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n                prevTime = currTime;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( values !== undefined ) {\\r\\n\\r\\n                if ( AnimationUtils.isTypedArray( values ) ) {\\r\\n\\r\\n                    for ( var i = 0, n = values.length; i !== n; ++ i ) {\\r\\n\\r\\n                        var value = values[ i ];\\r\\n\\r\\n                        if ( isNaN( value ) ) {\\r\\n\\r\\n                            console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\\r\\n                            valid = false;\\r\\n                            break;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return valid;\\r\\n\\r\\n        },\\r\\n\\r\\n        // removes equivalent sequential keys as common in morph target sequences\\r\\n        // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\\r\\n        optimize: function () {\\r\\n\\r\\n            var times = this.times,\\r\\n                values = this.values,\\r\\n                stride = this.getValueSize(),\\r\\n\\r\\n                smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\\r\\n\\r\\n                writeIndex = 1,\\r\\n                lastIndex = times.length - 1;\\r\\n\\r\\n            for ( var i = 1; i < lastIndex; ++ i ) {\\r\\n\\r\\n                var keep = false;\\r\\n\\r\\n                var time = times[ i ];\\r\\n                var timeNext = times[ i + 1 ];\\r\\n\\r\\n                // remove adjacent keyframes scheduled at the same time\\r\\n\\r\\n                if ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\\r\\n\\r\\n                    if ( ! smoothInterpolation ) {\\r\\n\\r\\n                        // remove unnecessary keyframes same as their neighbors\\r\\n\\r\\n                        var offset = i * stride,\\r\\n                            offsetP = offset - stride,\\r\\n                            offsetN = offset + stride;\\r\\n\\r\\n                        for ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n                            var value = values[ offset + j ];\\r\\n\\r\\n                            if ( value !== values[ offsetP + j ] ||\\r\\n                                value !== values[ offsetN + j ] ) {\\r\\n\\r\\n                                keep = true;\\r\\n                                break;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        keep = true;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                // in-place compaction\\r\\n\\r\\n                if ( keep ) {\\r\\n\\r\\n                    if ( i !== writeIndex ) {\\r\\n\\r\\n                        times[ writeIndex ] = times[ i ];\\r\\n\\r\\n                        var readOffset = i * stride,\\r\\n                            writeOffset = writeIndex * stride;\\r\\n\\r\\n                        for ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n                            values[ writeOffset + j ] = values[ readOffset + j ];\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    ++ writeIndex;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // flush last keyframe (compaction looks ahead)\\r\\n\\r\\n            if ( lastIndex > 0 ) {\\r\\n\\r\\n                times[ writeIndex ] = times[ lastIndex ];\\r\\n\\r\\n                for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n                    values[ writeOffset + j ] = values[ readOffset + j ];\\r\\n\\r\\n                }\\r\\n\\r\\n                ++ writeIndex;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( writeIndex !== times.length ) {\\r\\n\\r\\n                this.times = AnimationUtils.arraySlice( times, 0, writeIndex );\\r\\n                this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track of Boolean keyframe values.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function BooleanKeyframeTrack( name, times, values ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values );\\r\\n\\r\\n    }\\r\\n\\r\\n    BooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: BooleanKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'bool',\\r\\n        ValueBufferType: Array,\\r\\n\\r\\n        DefaultInterpolation: InterpolateDiscrete,\\r\\n\\r\\n        InterpolantFactoryMethodLinear: undefined,\\r\\n        InterpolantFactoryMethodSmooth: undefined\\r\\n\\r\\n        // Note: Actually this track could have a optimized / compressed\\r\\n        // representation of a single value and a custom interpolant that\\r\\n        // computes \\\"firstValue ^ isOdd( index )\\\".\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track of keyframe values that represent color.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function ColorKeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    ColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: ColorKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'color'\\r\\n\\r\\n        // ValueBufferType is inherited\\r\\n\\r\\n        // DefaultInterpolation is inherited\\r\\n\\r\\n        // Note: Very basic implementation and nothing special yet.\\r\\n        // However, this is the place for color space parameterization.\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track of numeric keyframe values.\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function NumberKeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    NumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: NumberKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'number'\\r\\n\\r\\n        // ValueBufferType is inherited\\r\\n\\r\\n        // DefaultInterpolation is inherited\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * Spherical linear unit quaternion interpolant.\\r\\n     *\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n        Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n    }\\r\\n\\r\\n    QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\\r\\n\\r\\n        constructor: QuaternionLinearInterpolant,\\r\\n\\r\\n        interpolate_: function ( i1, t0, t, t1 ) {\\r\\n\\r\\n            var result = this.resultBuffer,\\r\\n                values = this.sampleValues,\\r\\n                stride = this.valueSize,\\r\\n\\r\\n                offset = i1 * stride,\\r\\n\\r\\n                alpha = ( t - t0 ) / ( t1 - t0 );\\r\\n\\r\\n            for ( var end = offset + stride; offset !== end; offset += 4 ) {\\r\\n\\r\\n                Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\\r\\n\\r\\n            }\\r\\n\\r\\n            return result;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track of quaternion keyframe values.\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function QuaternionKeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    QuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: QuaternionKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'quaternion',\\r\\n\\r\\n        // ValueBufferType is inherited\\r\\n\\r\\n        DefaultInterpolation: InterpolateLinear,\\r\\n\\r\\n        InterpolantFactoryMethodLinear: function ( result ) {\\r\\n\\r\\n            return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n        },\\r\\n\\r\\n        InterpolantFactoryMethodSmooth: undefined // not yet implemented\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track that interpolates Strings\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function StringKeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    StringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: StringKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'string',\\r\\n        ValueBufferType: Array,\\r\\n\\r\\n        DefaultInterpolation: InterpolateDiscrete,\\r\\n\\r\\n        InterpolantFactoryMethodLinear: undefined,\\r\\n\\r\\n        InterpolantFactoryMethodSmooth: undefined\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A Track of vectored keyframe values.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function VectorKeyframeTrack( name, times, values, interpolation ) {\\r\\n\\r\\n        KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n    }\\r\\n\\r\\n    VectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\\r\\n\\r\\n        constructor: VectorKeyframeTrack,\\r\\n\\r\\n        ValueTypeName: 'vector'\\r\\n\\r\\n        // ValueBufferType is inherited\\r\\n\\r\\n        // DefaultInterpolation is inherited\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Reusable set of Tracks that represent an animation.\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     */\\r\\n\\r\\n    function AnimationClip( name, duration, tracks ) {\\r\\n\\r\\n        this.name = name;\\r\\n        this.tracks = tracks;\\r\\n        this.duration = ( duration !== undefined ) ? duration : - 1;\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        // this means it should figure out its duration by scanning the tracks\\r\\n        if ( this.duration < 0 ) {\\r\\n\\r\\n            this.resetDuration();\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function getTrackTypeForValueTypeName( typeName ) {\\r\\n\\r\\n        switch ( typeName.toLowerCase() ) {\\r\\n\\r\\n            case 'scalar':\\r\\n            case 'double':\\r\\n            case 'float':\\r\\n            case 'number':\\r\\n            case 'integer':\\r\\n\\r\\n                return NumberKeyframeTrack;\\r\\n\\r\\n            case 'vector':\\r\\n            case 'vector2':\\r\\n            case 'vector3':\\r\\n            case 'vector4':\\r\\n\\r\\n                return VectorKeyframeTrack;\\r\\n\\r\\n            case 'color':\\r\\n\\r\\n                return ColorKeyframeTrack;\\r\\n\\r\\n            case 'quaternion':\\r\\n\\r\\n                return QuaternionKeyframeTrack;\\r\\n\\r\\n            case 'bool':\\r\\n            case 'boolean':\\r\\n\\r\\n                return BooleanKeyframeTrack;\\r\\n\\r\\n            case 'string':\\r\\n\\r\\n                return StringKeyframeTrack;\\r\\n\\r\\n        }\\r\\n\\r\\n        throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\\r\\n\\r\\n    }\\r\\n\\r\\n    function parseKeyframeTrack( json ) {\\r\\n\\r\\n        if ( json.type === undefined ) {\\r\\n\\r\\n            throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\\r\\n\\r\\n        }\\r\\n\\r\\n        var trackType = getTrackTypeForValueTypeName( json.type );\\r\\n\\r\\n        if ( json.times === undefined ) {\\r\\n\\r\\n            var times = [], values = [];\\r\\n\\r\\n            AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\\r\\n\\r\\n            json.times = times;\\r\\n            json.values = values;\\r\\n\\r\\n        }\\r\\n\\r\\n        // derived classes can define a static parse method\\r\\n        if ( trackType.parse !== undefined ) {\\r\\n\\r\\n            return trackType.parse( json );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            // by default, we assume a constructor compatible with the base\\r\\n            return new trackType( json.name, json.times, json.values, json.interpolation );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( AnimationClip, {\\r\\n\\r\\n        parse: function ( json ) {\\r\\n\\r\\n            var tracks = [],\\r\\n                jsonTracks = json.tracks,\\r\\n                frameTime = 1.0 / ( json.fps || 1.0 );\\r\\n\\r\\n            for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\\r\\n\\r\\n                tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return new AnimationClip( json.name, json.duration, tracks );\\r\\n\\r\\n        },\\r\\n\\r\\n        toJSON: function ( clip ) {\\r\\n\\r\\n            var tracks = [],\\r\\n                clipTracks = clip.tracks;\\r\\n\\r\\n            var json = {\\r\\n\\r\\n                'name': clip.name,\\r\\n                'duration': clip.duration,\\r\\n                'tracks': tracks,\\r\\n                'uuid': clip.uuid\\r\\n\\r\\n            };\\r\\n\\r\\n            for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\\r\\n\\r\\n                tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return json;\\r\\n\\r\\n        },\\r\\n\\r\\n        CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\\r\\n\\r\\n            var numMorphTargets = morphTargetSequence.length;\\r\\n            var tracks = [];\\r\\n\\r\\n            for ( var i = 0; i < numMorphTargets; i ++ ) {\\r\\n\\r\\n                var times = [];\\r\\n                var values = [];\\r\\n\\r\\n                times.push(\\r\\n                    ( i + numMorphTargets - 1 ) % numMorphTargets,\\r\\n                    i,\\r\\n                    ( i + 1 ) % numMorphTargets );\\r\\n\\r\\n                values.push( 0, 1, 0 );\\r\\n\\r\\n                var order = AnimationUtils.getKeyframeOrder( times );\\r\\n                times = AnimationUtils.sortedArray( times, 1, order );\\r\\n                values = AnimationUtils.sortedArray( values, 1, order );\\r\\n\\r\\n                // if there is a key at the first frame, duplicate it as the\\r\\n                // last frame as well for perfect loop.\\r\\n                if ( ! noLoop && times[ 0 ] === 0 ) {\\r\\n\\r\\n                    times.push( numMorphTargets );\\r\\n                    values.push( values[ 0 ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                tracks.push(\\r\\n                    new NumberKeyframeTrack(\\r\\n                        '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\\r\\n                        times, values\\r\\n                    ).scale( 1.0 / fps ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return new AnimationClip( name, - 1, tracks );\\r\\n\\r\\n        },\\r\\n\\r\\n        findByName: function ( objectOrClipArray, name ) {\\r\\n\\r\\n            var clipArray = objectOrClipArray;\\r\\n\\r\\n            if ( ! Array.isArray( objectOrClipArray ) ) {\\r\\n\\r\\n                var o = objectOrClipArray;\\r\\n                clipArray = o.geometry && o.geometry.animations || o.animations;\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i < clipArray.length; i ++ ) {\\r\\n\\r\\n                if ( clipArray[ i ].name === name ) {\\r\\n\\r\\n                    return clipArray[ i ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n\\r\\n        },\\r\\n\\r\\n        CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\\r\\n\\r\\n            var animationToMorphTargets = {};\\r\\n\\r\\n            // tested with https://regex101.com/ on trick sequences\\r\\n            // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\\r\\n            var pattern = /^([\\\\w-]*?)([\\\\d]+)$/;\\r\\n\\r\\n            // sort morph target names into animation groups based\\r\\n            // patterns like Walk_001, Walk_002, Run_001, Run_002\\r\\n            for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n                var morphTarget = morphTargets[ i ];\\r\\n                var parts = morphTarget.name.match( pattern );\\r\\n\\r\\n                if ( parts && parts.length > 1 ) {\\r\\n\\r\\n                    var name = parts[ 1 ];\\r\\n\\r\\n                    var animationMorphTargets = animationToMorphTargets[ name ];\\r\\n                    if ( ! animationMorphTargets ) {\\r\\n\\r\\n                        animationToMorphTargets[ name ] = animationMorphTargets = [];\\r\\n\\r\\n                    }\\r\\n\\r\\n                    animationMorphTargets.push( morphTarget );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var clips = [];\\r\\n\\r\\n            for ( var name in animationToMorphTargets ) {\\r\\n\\r\\n                clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return clips;\\r\\n\\r\\n        },\\r\\n\\r\\n        // parse the animation.hierarchy format\\r\\n        parseAnimation: function ( animation, bones ) {\\r\\n\\r\\n            if ( ! animation ) {\\r\\n\\r\\n                console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\\r\\n                return null;\\r\\n\\r\\n            }\\r\\n\\r\\n            var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\\r\\n\\r\\n                // only return track if there are actually keys.\\r\\n                if ( animationKeys.length !== 0 ) {\\r\\n\\r\\n                    var times = [];\\r\\n                    var values = [];\\r\\n\\r\\n                    AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\\r\\n\\r\\n                    // empty keys are filtered out, so check again\\r\\n                    if ( times.length !== 0 ) {\\r\\n\\r\\n                        destTracks.push( new trackType( trackName, times, values ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n            var tracks = [];\\r\\n\\r\\n            var clipName = animation.name || 'default';\\r\\n            // automatic length determination in AnimationClip.\\r\\n            var duration = animation.length || - 1;\\r\\n            var fps = animation.fps || 30;\\r\\n\\r\\n            var hierarchyTracks = animation.hierarchy || [];\\r\\n\\r\\n            for ( var h = 0; h < hierarchyTracks.length; h ++ ) {\\r\\n\\r\\n                var animationKeys = hierarchyTracks[ h ].keys;\\r\\n\\r\\n                // skip empty tracks\\r\\n                if ( ! animationKeys || animationKeys.length === 0 ) continue;\\r\\n\\r\\n                // process morph targets\\r\\n                if ( animationKeys[ 0 ].morphTargets ) {\\r\\n\\r\\n                    // figure out all morph targets used in this track\\r\\n                    var morphTargetNames = {};\\r\\n\\r\\n                    for ( var k = 0; k < animationKeys.length; k ++ ) {\\r\\n\\r\\n                        if ( animationKeys[ k ].morphTargets ) {\\r\\n\\r\\n                            for ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\\r\\n\\r\\n                                morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    // create a track for each morph target with all zero\\r\\n                    // morphTargetInfluences except for the keys in which\\r\\n                    // the morphTarget is named.\\r\\n                    for ( var morphTargetName in morphTargetNames ) {\\r\\n\\r\\n                        var times = [];\\r\\n                        var values = [];\\r\\n\\r\\n                        for ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\\r\\n\\r\\n                            var animationKey = animationKeys[ k ];\\r\\n\\r\\n                            times.push( animationKey.time );\\r\\n                            values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    duration = morphTargetNames.length * ( fps || 1.0 );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    // ...assume skeletal animation\\r\\n\\r\\n                    var boneName = '.bones[' + bones[ h ].name + ']';\\r\\n\\r\\n                    addNonemptyTrack(\\r\\n                        VectorKeyframeTrack, boneName + '.position',\\r\\n                        animationKeys, 'pos', tracks );\\r\\n\\r\\n                    addNonemptyTrack(\\r\\n                        QuaternionKeyframeTrack, boneName + '.quaternion',\\r\\n                        animationKeys, 'rot', tracks );\\r\\n\\r\\n                    addNonemptyTrack(\\r\\n                        VectorKeyframeTrack, boneName + '.scale',\\r\\n                        animationKeys, 'scl', tracks );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( tracks.length === 0 ) {\\r\\n\\r\\n                return null;\\r\\n\\r\\n            }\\r\\n\\r\\n            var clip = new AnimationClip( clipName, duration, tracks );\\r\\n\\r\\n            return clip;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( AnimationClip.prototype, {\\r\\n\\r\\n        resetDuration: function () {\\r\\n\\r\\n            var tracks = this.tracks, duration = 0;\\r\\n\\r\\n            for ( var i = 0, n = tracks.length; i !== n; ++ i ) {\\r\\n\\r\\n                var track = this.tracks[ i ];\\r\\n\\r\\n                duration = Math.max( duration, track.times[ track.times.length - 1 ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.duration = duration;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        trim: function () {\\r\\n\\r\\n            for ( var i = 0; i < this.tracks.length; i ++ ) {\\r\\n\\r\\n                this.tracks[ i ].trim( 0, this.duration );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        validate: function () {\\r\\n\\r\\n            var valid = true;\\r\\n\\r\\n            for ( var i = 0; i < this.tracks.length; i ++ ) {\\r\\n\\r\\n                valid = valid && this.tracks[ i ].validate();\\r\\n\\r\\n            }\\r\\n\\r\\n            return valid;\\r\\n\\r\\n        },\\r\\n\\r\\n        optimize: function () {\\r\\n\\r\\n            for ( var i = 0; i < this.tracks.length; i ++ ) {\\r\\n\\r\\n                this.tracks[ i ].optimize();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function MaterialLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n        this.textures = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( MaterialLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var loader = new FileLoader( scope.manager );\\r\\n            loader.load( url, function ( text ) {\\r\\n\\r\\n                onLoad( scope.parse( JSON.parse( text ) ) );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        },\\r\\n\\r\\n        setTextures: function ( value ) {\\r\\n\\r\\n            this.textures = value;\\r\\n\\r\\n        },\\r\\n\\r\\n        parse: function ( json ) {\\r\\n\\r\\n            var textures = this.textures;\\r\\n\\r\\n            function getTexture( name ) {\\r\\n\\r\\n                if ( textures[ name ] === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.MaterialLoader: Undefined texture', name );\\r\\n\\r\\n                }\\r\\n\\r\\n                return textures[ name ];\\r\\n\\r\\n            }\\r\\n\\r\\n            var material = new Materials[ json.type ]();\\r\\n\\r\\n            if ( json.uuid !== undefined ) material.uuid = json.uuid;\\r\\n            if ( json.name !== undefined ) material.name = json.name;\\r\\n            if ( json.color !== undefined ) material.color.setHex( json.color );\\r\\n            if ( json.roughness !== undefined ) material.roughness = json.roughness;\\r\\n            if ( json.metalness !== undefined ) material.metalness = json.metalness;\\r\\n            if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\\r\\n            if ( json.specular !== undefined ) material.specular.setHex( json.specular );\\r\\n            if ( json.shininess !== undefined ) material.shininess = json.shininess;\\r\\n            if ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\\r\\n            if ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\\r\\n            if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\\r\\n            if ( json.fog !== undefined ) material.fog = json.fog;\\r\\n            if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\\r\\n            if ( json.blending !== undefined ) material.blending = json.blending;\\r\\n            if ( json.combine !== undefined ) material.combine = json.combine;\\r\\n            if ( json.side !== undefined ) material.side = json.side;\\r\\n            if ( json.opacity !== undefined ) material.opacity = json.opacity;\\r\\n            if ( json.transparent !== undefined ) material.transparent = json.transparent;\\r\\n            if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\\r\\n            if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\\r\\n            if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\\r\\n            if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\\r\\n            if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\\r\\n            if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\\r\\n            if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\\r\\n            if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\\r\\n\\r\\n            if ( json.rotation !== undefined ) material.rotation = json.rotation;\\r\\n\\r\\n            if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\\r\\n            if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\\r\\n            if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\\r\\n            if ( json.scale !== undefined ) material.scale = json.scale;\\r\\n\\r\\n            if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\\r\\n            if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\\r\\n            if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\\r\\n\\r\\n            if ( json.skinning !== undefined ) material.skinning = json.skinning;\\r\\n            if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\\r\\n            if ( json.dithering !== undefined ) material.dithering = json.dithering;\\r\\n\\r\\n            if ( json.visible !== undefined ) material.visible = json.visible;\\r\\n            if ( json.userData !== undefined ) material.userData = json.userData;\\r\\n\\r\\n            // Shader Material\\r\\n\\r\\n            if ( json.uniforms !== undefined ) {\\r\\n\\r\\n                for ( var name in json.uniforms ) {\\r\\n\\r\\n                    var uniform = json.uniforms[ name ];\\r\\n\\r\\n                    material.uniforms[ name ] = {};\\r\\n\\r\\n                    switch ( uniform.type ) {\\r\\n\\r\\n                        case 't':\\r\\n                            material.uniforms[ name ].value = getTexture( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        case 'c':\\r\\n                            material.uniforms[ name ].value = new Color().setHex( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        case 'v2':\\r\\n                            material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        case 'v3':\\r\\n                            material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        case 'v4':\\r\\n                            material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        case 'm4':\\r\\n                            material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\\r\\n                            break;\\r\\n\\r\\n                        default:\\r\\n                            material.uniforms[ name ].value = uniform.value;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( json.defines !== undefined ) material.defines = json.defines;\\r\\n            if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\\r\\n            if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\\r\\n\\r\\n            // Deprecated\\r\\n\\r\\n            if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\\r\\n\\r\\n            // for PointsMaterial\\r\\n\\r\\n            if ( json.size !== undefined ) material.size = json.size;\\r\\n            if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\\r\\n\\r\\n            // maps\\r\\n\\r\\n            if ( json.map !== undefined ) material.map = getTexture( json.map );\\r\\n\\r\\n            if ( json.alphaMap !== undefined ) {\\r\\n\\r\\n                material.alphaMap = getTexture( json.alphaMap );\\r\\n                material.transparent = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\\r\\n            if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\\r\\n\\r\\n            if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\\r\\n            if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\\r\\n            if ( json.normalScale !== undefined ) {\\r\\n\\r\\n                var normalScale = json.normalScale;\\r\\n\\r\\n                if ( Array.isArray( normalScale ) === false ) {\\r\\n\\r\\n                    // Blender exporter used to export a scalar. See #7459\\r\\n\\r\\n                    normalScale = [ normalScale, normalScale ];\\r\\n\\r\\n                }\\r\\n\\r\\n                material.normalScale = new Vector2().fromArray( normalScale );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\\r\\n            if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\\r\\n            if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\\r\\n\\r\\n            if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\\r\\n            if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\\r\\n\\r\\n            if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\\r\\n            if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\\r\\n\\r\\n            if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\\r\\n\\r\\n            if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\\r\\n            if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\\r\\n\\r\\n            if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\\r\\n\\r\\n            if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\\r\\n            if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\\r\\n\\r\\n            if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\\r\\n            if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\\r\\n\\r\\n            if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\\r\\n\\r\\n            return material;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function BufferGeometryLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( BufferGeometryLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var loader = new FileLoader( scope.manager );\\r\\n            loader.load( url, function ( text ) {\\r\\n\\r\\n                onLoad( scope.parse( JSON.parse( text ) ) );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        },\\r\\n\\r\\n        parse: function ( json ) {\\r\\n\\r\\n            var geometry = new BufferGeometry();\\r\\n\\r\\n            var index = json.data.index;\\r\\n\\r\\n            if ( index !== undefined ) {\\r\\n\\r\\n                var typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\\r\\n                geometry.setIndex( new BufferAttribute( typedArray, 1 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            var attributes = json.data.attributes;\\r\\n\\r\\n            for ( var key in attributes ) {\\r\\n\\r\\n                var attribute = attributes[ key ];\\r\\n                var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\\r\\n\\r\\n                geometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\\r\\n\\r\\n            if ( groups !== undefined ) {\\r\\n\\r\\n                for ( var i = 0, n = groups.length; i !== n; ++ i ) {\\r\\n\\r\\n                    var group = groups[ i ];\\r\\n\\r\\n                    geometry.addGroup( group.start, group.count, group.materialIndex );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var boundingSphere = json.data.boundingSphere;\\r\\n\\r\\n            if ( boundingSphere !== undefined ) {\\r\\n\\r\\n                var center = new Vector3();\\r\\n\\r\\n                if ( boundingSphere.center !== undefined ) {\\r\\n\\r\\n                    center.fromArray( boundingSphere.center );\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.boundingSphere = new Sphere( center, boundingSphere.radius );\\r\\n\\r\\n            }\\r\\n\\r\\n            return geometry;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    var TYPED_ARRAYS = {\\r\\n        Int8Array: Int8Array,\\r\\n        Uint8Array: Uint8Array,\\r\\n        // Workaround for IE11 pre KB2929437. See #11440\\r\\n        Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\\r\\n        Int16Array: Int16Array,\\r\\n        Uint16Array: Uint16Array,\\r\\n        Int32Array: Int32Array,\\r\\n        Uint32Array: Uint32Array,\\r\\n        Float32Array: Float32Array,\\r\\n        Float64Array: Float64Array\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Loader() {}\\r\\n\\r\\n    Loader.Handlers = {\\r\\n\\r\\n        handlers: [],\\r\\n\\r\\n        add: function ( regex, loader ) {\\r\\n\\r\\n            this.handlers.push( regex, loader );\\r\\n\\r\\n        },\\r\\n\\r\\n        get: function ( file ) {\\r\\n\\r\\n            var handlers = this.handlers;\\r\\n\\r\\n            for ( var i = 0, l = handlers.length; i < l; i += 2 ) {\\r\\n\\r\\n                var regex = handlers[ i ];\\r\\n                var loader = handlers[ i + 1 ];\\r\\n\\r\\n                if ( regex.test( file ) ) {\\r\\n\\r\\n                    return loader;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    Object.assign( Loader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        onLoadStart: function () {},\\r\\n\\r\\n        onLoadProgress: function () {},\\r\\n\\r\\n        onLoadComplete: function () {},\\r\\n\\r\\n        initMaterials: function ( materials, texturePath, crossOrigin ) {\\r\\n\\r\\n            var array = [];\\r\\n\\r\\n            for ( var i = 0; i < materials.length; ++ i ) {\\r\\n\\r\\n                array[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\\r\\n\\r\\n            }\\r\\n\\r\\n            return array;\\r\\n\\r\\n        },\\r\\n\\r\\n        createMaterial: ( function () {\\r\\n\\r\\n            var BlendingMode = {\\r\\n                NoBlending: NoBlending,\\r\\n                NormalBlending: NormalBlending,\\r\\n                AdditiveBlending: AdditiveBlending,\\r\\n                SubtractiveBlending: SubtractiveBlending,\\r\\n                MultiplyBlending: MultiplyBlending,\\r\\n                CustomBlending: CustomBlending\\r\\n            };\\r\\n\\r\\n            var color = new Color();\\r\\n            var textureLoader = new TextureLoader();\\r\\n            var materialLoader = new MaterialLoader();\\r\\n\\r\\n            return function createMaterial( m, texturePath, crossOrigin ) {\\r\\n\\r\\n                // convert from old material format\\r\\n\\r\\n                var textures = {};\\r\\n\\r\\n                function loadTexture( path, repeat, offset, wrap, anisotropy ) {\\r\\n\\r\\n                    var fullPath = texturePath + path;\\r\\n                    var loader = Loader.Handlers.get( fullPath );\\r\\n\\r\\n                    var texture;\\r\\n\\r\\n                    if ( loader !== null ) {\\r\\n\\r\\n                        texture = loader.load( fullPath );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        textureLoader.setCrossOrigin( crossOrigin );\\r\\n                        texture = textureLoader.load( fullPath );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( repeat !== undefined ) {\\r\\n\\r\\n                        texture.repeat.fromArray( repeat );\\r\\n\\r\\n                        if ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\\r\\n                        if ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( offset !== undefined ) {\\r\\n\\r\\n                        texture.offset.fromArray( offset );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( wrap !== undefined ) {\\r\\n\\r\\n                        if ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\\r\\n                        if ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\\r\\n\\r\\n                        if ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\\r\\n                        if ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( anisotropy !== undefined ) {\\r\\n\\r\\n                        texture.anisotropy = anisotropy;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    var uuid = _Math.generateUUID();\\r\\n\\r\\n                    textures[ uuid ] = texture;\\r\\n\\r\\n                    return uuid;\\r\\n\\r\\n                }\\r\\n\\r\\n                //\\r\\n\\r\\n                var json = {\\r\\n                    uuid: _Math.generateUUID(),\\r\\n                    type: 'MeshLambertMaterial'\\r\\n                };\\r\\n\\r\\n                for ( var name in m ) {\\r\\n\\r\\n                    var value = m[ name ];\\r\\n\\r\\n                    switch ( name ) {\\r\\n\\r\\n                        case 'DbgColor':\\r\\n                        case 'DbgIndex':\\r\\n                        case 'opticalDensity':\\r\\n                        case 'illumination':\\r\\n                            break;\\r\\n                        case 'DbgName':\\r\\n                            json.name = value;\\r\\n                            break;\\r\\n                        case 'blending':\\r\\n                            json.blending = BlendingMode[ value ];\\r\\n                            break;\\r\\n                        case 'colorAmbient':\\r\\n                        case 'mapAmbient':\\r\\n                            console.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\\r\\n                            break;\\r\\n                        case 'colorDiffuse':\\r\\n                            json.color = color.fromArray( value ).getHex();\\r\\n                            break;\\r\\n                        case 'colorSpecular':\\r\\n                            json.specular = color.fromArray( value ).getHex();\\r\\n                            break;\\r\\n                        case 'colorEmissive':\\r\\n                            json.emissive = color.fromArray( value ).getHex();\\r\\n                            break;\\r\\n                        case 'specularCoef':\\r\\n                            json.shininess = value;\\r\\n                            break;\\r\\n                        case 'shading':\\r\\n                            if ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\\r\\n                            if ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\\r\\n                            if ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\\r\\n                            break;\\r\\n                        case 'mapDiffuse':\\r\\n                            json.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapDiffuseRepeat':\\r\\n                        case 'mapDiffuseOffset':\\r\\n                        case 'mapDiffuseWrap':\\r\\n                        case 'mapDiffuseAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapEmissive':\\r\\n                            json.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapEmissiveRepeat':\\r\\n                        case 'mapEmissiveOffset':\\r\\n                        case 'mapEmissiveWrap':\\r\\n                        case 'mapEmissiveAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapLight':\\r\\n                            json.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapLightRepeat':\\r\\n                        case 'mapLightOffset':\\r\\n                        case 'mapLightWrap':\\r\\n                        case 'mapLightAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapAO':\\r\\n                            json.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapAORepeat':\\r\\n                        case 'mapAOOffset':\\r\\n                        case 'mapAOWrap':\\r\\n                        case 'mapAOAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapBump':\\r\\n                            json.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapBumpScale':\\r\\n                            json.bumpScale = value;\\r\\n                            break;\\r\\n                        case 'mapBumpRepeat':\\r\\n                        case 'mapBumpOffset':\\r\\n                        case 'mapBumpWrap':\\r\\n                        case 'mapBumpAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapNormal':\\r\\n                            json.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapNormalFactor':\\r\\n                            json.normalScale = value;\\r\\n                            break;\\r\\n                        case 'mapNormalRepeat':\\r\\n                        case 'mapNormalOffset':\\r\\n                        case 'mapNormalWrap':\\r\\n                        case 'mapNormalAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapSpecular':\\r\\n                            json.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapSpecularRepeat':\\r\\n                        case 'mapSpecularOffset':\\r\\n                        case 'mapSpecularWrap':\\r\\n                        case 'mapSpecularAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapMetalness':\\r\\n                            json.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapMetalnessRepeat':\\r\\n                        case 'mapMetalnessOffset':\\r\\n                        case 'mapMetalnessWrap':\\r\\n                        case 'mapMetalnessAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapRoughness':\\r\\n                            json.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapRoughnessRepeat':\\r\\n                        case 'mapRoughnessOffset':\\r\\n                        case 'mapRoughnessWrap':\\r\\n                        case 'mapRoughnessAnisotropy':\\r\\n                            break;\\r\\n                        case 'mapAlpha':\\r\\n                            json.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\\r\\n                            break;\\r\\n                        case 'mapAlphaRepeat':\\r\\n                        case 'mapAlphaOffset':\\r\\n                        case 'mapAlphaWrap':\\r\\n                        case 'mapAlphaAnisotropy':\\r\\n                            break;\\r\\n                        case 'flipSided':\\r\\n                            json.side = BackSide;\\r\\n                            break;\\r\\n                        case 'doubleSided':\\r\\n                            json.side = DoubleSide;\\r\\n                            break;\\r\\n                        case 'transparency':\\r\\n                            console.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\\r\\n                            json.opacity = value;\\r\\n                            break;\\r\\n                        case 'depthTest':\\r\\n                        case 'depthWrite':\\r\\n                        case 'colorWrite':\\r\\n                        case 'opacity':\\r\\n                        case 'reflectivity':\\r\\n                        case 'transparent':\\r\\n                        case 'visible':\\r\\n                        case 'wireframe':\\r\\n                            json[ name ] = value;\\r\\n                            break;\\r\\n                        case 'vertexColors':\\r\\n                            if ( value === true ) json.vertexColors = VertexColors;\\r\\n                            if ( value === 'face' ) json.vertexColors = FaceColors;\\r\\n                            break;\\r\\n                        default:\\r\\n                            console.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\\r\\n                            break;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\\r\\n                if ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\\r\\n\\r\\n                if ( json.opacity < 1 ) json.transparent = true;\\r\\n\\r\\n                materialLoader.setTextures( textures );\\r\\n\\r\\n                return materialLoader.parse( json );\\r\\n\\r\\n            };\\r\\n\\r\\n        } )()\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author Don McCurdy / https://www.donmccurdy.com\\r\\n     */\\r\\n\\r\\n    var LoaderUtils = {\\r\\n\\r\\n        decodeText: function ( array ) {\\r\\n\\r\\n            if ( typeof TextDecoder !== 'undefined' ) {\\r\\n\\r\\n                return new TextDecoder().decode( array );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Avoid the String.fromCharCode.apply(null, array) shortcut, which\\r\\n            // throws a \\\"maximum call stack size exceeded\\\" error for large arrays.\\r\\n\\r\\n            var s = '';\\r\\n\\r\\n            for ( var i = 0, il = array.length; i < il; i ++ ) {\\r\\n\\r\\n                // Implicitly assumes little-endian.\\r\\n                s += String.fromCharCode( array[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            // Merges multi-byte utf-8 characters.\\r\\n            return decodeURIComponent( escape( s ) );\\r\\n\\r\\n        },\\r\\n\\r\\n        extractUrlBase: function ( url ) {\\r\\n\\r\\n            var index = url.lastIndexOf( '/' );\\r\\n\\r\\n            if ( index === - 1 ) return './';\\r\\n\\r\\n            return url.substr( 0, index + 1 );\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function JSONLoader( manager ) {\\r\\n\\r\\n        if ( typeof manager === 'boolean' ) {\\r\\n\\r\\n            console.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\\r\\n            manager = undefined;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n        this.withCredentials = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( JSONLoader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\\r\\n\\r\\n            var loader = new FileLoader( this.manager );\\r\\n            loader.setPath( this.path );\\r\\n            loader.setWithCredentials( this.withCredentials );\\r\\n            loader.load( url, function ( text ) {\\r\\n\\r\\n                var json = JSON.parse( text );\\r\\n                var metadata = json.metadata;\\r\\n\\r\\n                if ( metadata !== undefined ) {\\r\\n\\r\\n                    var type = metadata.type;\\r\\n\\r\\n                    if ( type !== undefined ) {\\r\\n\\r\\n                        if ( type.toLowerCase() === 'object' ) {\\r\\n\\r\\n                            console.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                var object = scope.parse( json, path );\\r\\n                onLoad( object.geometry, object.materials );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setResourcePath: function ( value ) {\\r\\n\\r\\n            this.resourcePath = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( value ) {\\r\\n\\r\\n            this.crossOrigin = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        parse: ( function () {\\r\\n\\r\\n            function parseModel( json, geometry ) {\\r\\n\\r\\n                function isBitSet( value, position ) {\\r\\n\\r\\n                    return value & ( 1 << position );\\r\\n\\r\\n                }\\r\\n\\r\\n                var i, j, fi,\\r\\n\\r\\n                    offset, zLength,\\r\\n\\r\\n                    colorIndex, normalIndex, uvIndex, materialIndex,\\r\\n\\r\\n                    type,\\r\\n                    isQuad,\\r\\n                    hasMaterial,\\r\\n                    hasFaceVertexUv,\\r\\n                    hasFaceNormal, hasFaceVertexNormal,\\r\\n                    hasFaceColor, hasFaceVertexColor,\\r\\n\\r\\n                    vertex, face, faceA, faceB, hex, normal,\\r\\n\\r\\n                    uvLayer, uv, u, v,\\r\\n\\r\\n                    faces = json.faces,\\r\\n                    vertices = json.vertices,\\r\\n                    normals = json.normals,\\r\\n                    colors = json.colors,\\r\\n\\r\\n                    scale = json.scale,\\r\\n\\r\\n                    nUvLayers = 0;\\r\\n\\r\\n\\r\\n                if ( json.uvs !== undefined ) {\\r\\n\\r\\n                    // disregard empty arrays\\r\\n\\r\\n                    for ( i = 0; i < json.uvs.length; i ++ ) {\\r\\n\\r\\n                        if ( json.uvs[ i ].length ) nUvLayers ++;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    for ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n                        geometry.faceVertexUvs[ i ] = [];\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                offset = 0;\\r\\n                zLength = vertices.length;\\r\\n\\r\\n                while ( offset < zLength ) {\\r\\n\\r\\n                    vertex = new Vector3();\\r\\n\\r\\n                    vertex.x = vertices[ offset ++ ] * scale;\\r\\n                    vertex.y = vertices[ offset ++ ] * scale;\\r\\n                    vertex.z = vertices[ offset ++ ] * scale;\\r\\n\\r\\n                    geometry.vertices.push( vertex );\\r\\n\\r\\n                }\\r\\n\\r\\n                offset = 0;\\r\\n                zLength = faces.length;\\r\\n\\r\\n                while ( offset < zLength ) {\\r\\n\\r\\n                    type = faces[ offset ++ ];\\r\\n\\r\\n                    isQuad = isBitSet( type, 0 );\\r\\n                    hasMaterial = isBitSet( type, 1 );\\r\\n                    hasFaceVertexUv = isBitSet( type, 3 );\\r\\n                    hasFaceNormal = isBitSet( type, 4 );\\r\\n                    hasFaceVertexNormal = isBitSet( type, 5 );\\r\\n                    hasFaceColor = isBitSet( type, 6 );\\r\\n                    hasFaceVertexColor = isBitSet( type, 7 );\\r\\n\\r\\n                    // console.log(\\\"type\\\", type, \\\"bits\\\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\\r\\n\\r\\n                    if ( isQuad ) {\\r\\n\\r\\n                        faceA = new Face3();\\r\\n                        faceA.a = faces[ offset ];\\r\\n                        faceA.b = faces[ offset + 1 ];\\r\\n                        faceA.c = faces[ offset + 3 ];\\r\\n\\r\\n                        faceB = new Face3();\\r\\n                        faceB.a = faces[ offset + 1 ];\\r\\n                        faceB.b = faces[ offset + 2 ];\\r\\n                        faceB.c = faces[ offset + 3 ];\\r\\n\\r\\n                        offset += 4;\\r\\n\\r\\n                        if ( hasMaterial ) {\\r\\n\\r\\n                            materialIndex = faces[ offset ++ ];\\r\\n                            faceA.materialIndex = materialIndex;\\r\\n                            faceB.materialIndex = materialIndex;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        // to get face <=> uv index correspondence\\r\\n\\r\\n                        fi = geometry.faces.length;\\r\\n\\r\\n                        if ( hasFaceVertexUv ) {\\r\\n\\r\\n                            for ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n                                uvLayer = json.uvs[ i ];\\r\\n\\r\\n                                geometry.faceVertexUvs[ i ][ fi ] = [];\\r\\n                                geometry.faceVertexUvs[ i ][ fi + 1 ] = [];\\r\\n\\r\\n                                for ( j = 0; j < 4; j ++ ) {\\r\\n\\r\\n                                    uvIndex = faces[ offset ++ ];\\r\\n\\r\\n                                    u = uvLayer[ uvIndex * 2 ];\\r\\n                                    v = uvLayer[ uvIndex * 2 + 1 ];\\r\\n\\r\\n                                    uv = new Vector2( u, v );\\r\\n\\r\\n                                    if ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\\r\\n                                    if ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( hasFaceNormal ) {\\r\\n\\r\\n                            normalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n                            faceA.normal.set(\\r\\n                                normals[ normalIndex ++ ],\\r\\n                                normals[ normalIndex ++ ],\\r\\n                                normals[ normalIndex ]\\r\\n                            );\\r\\n\\r\\n                            faceB.normal.copy( faceA.normal );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( hasFaceVertexNormal ) {\\r\\n\\r\\n                            for ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n                                normalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n                                normal = new Vector3(\\r\\n                                    normals[ normalIndex ++ ],\\r\\n                                    normals[ normalIndex ++ ],\\r\\n                                    normals[ normalIndex ]\\r\\n                                );\\r\\n\\r\\n\\r\\n                                if ( i !== 2 ) faceA.vertexNormals.push( normal );\\r\\n                                if ( i !== 0 ) faceB.vertexNormals.push( normal );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n\\r\\n                        if ( hasFaceColor ) {\\r\\n\\r\\n                            colorIndex = faces[ offset ++ ];\\r\\n                            hex = colors[ colorIndex ];\\r\\n\\r\\n                            faceA.color.setHex( hex );\\r\\n                            faceB.color.setHex( hex );\\r\\n\\r\\n                        }\\r\\n\\r\\n\\r\\n                        if ( hasFaceVertexColor ) {\\r\\n\\r\\n                            for ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n                                colorIndex = faces[ offset ++ ];\\r\\n                                hex = colors[ colorIndex ];\\r\\n\\r\\n                                if ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\\r\\n                                if ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                        geometry.faces.push( faceA );\\r\\n                        geometry.faces.push( faceB );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        face = new Face3();\\r\\n                        face.a = faces[ offset ++ ];\\r\\n                        face.b = faces[ offset ++ ];\\r\\n                        face.c = faces[ offset ++ ];\\r\\n\\r\\n                        if ( hasMaterial ) {\\r\\n\\r\\n                            materialIndex = faces[ offset ++ ];\\r\\n                            face.materialIndex = materialIndex;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        // to get face <=> uv index correspondence\\r\\n\\r\\n                        fi = geometry.faces.length;\\r\\n\\r\\n                        if ( hasFaceVertexUv ) {\\r\\n\\r\\n                            for ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n                                uvLayer = json.uvs[ i ];\\r\\n\\r\\n                                geometry.faceVertexUvs[ i ][ fi ] = [];\\r\\n\\r\\n                                for ( j = 0; j < 3; j ++ ) {\\r\\n\\r\\n                                    uvIndex = faces[ offset ++ ];\\r\\n\\r\\n                                    u = uvLayer[ uvIndex * 2 ];\\r\\n                                    v = uvLayer[ uvIndex * 2 + 1 ];\\r\\n\\r\\n                                    uv = new Vector2( u, v );\\r\\n\\r\\n                                    geometry.faceVertexUvs[ i ][ fi ].push( uv );\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( hasFaceNormal ) {\\r\\n\\r\\n                            normalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n                            face.normal.set(\\r\\n                                normals[ normalIndex ++ ],\\r\\n                                normals[ normalIndex ++ ],\\r\\n                                normals[ normalIndex ]\\r\\n                            );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( hasFaceVertexNormal ) {\\r\\n\\r\\n                            for ( i = 0; i < 3; i ++ ) {\\r\\n\\r\\n                                normalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n                                normal = new Vector3(\\r\\n                                    normals[ normalIndex ++ ],\\r\\n                                    normals[ normalIndex ++ ],\\r\\n                                    normals[ normalIndex ]\\r\\n                                );\\r\\n\\r\\n                                face.vertexNormals.push( normal );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n\\r\\n                        if ( hasFaceColor ) {\\r\\n\\r\\n                            colorIndex = faces[ offset ++ ];\\r\\n                            face.color.setHex( colors[ colorIndex ] );\\r\\n\\r\\n                        }\\r\\n\\r\\n\\r\\n                        if ( hasFaceVertexColor ) {\\r\\n\\r\\n                            for ( i = 0; i < 3; i ++ ) {\\r\\n\\r\\n                                colorIndex = faces[ offset ++ ];\\r\\n                                face.vertexColors.push( new Color( colors[ colorIndex ] ) );\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                        geometry.faces.push( face );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function parseSkin( json, geometry ) {\\r\\n\\r\\n                var influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\\r\\n\\r\\n                if ( json.skinWeights ) {\\r\\n\\r\\n                    for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\\r\\n\\r\\n                        var x = json.skinWeights[ i ];\\r\\n                        var y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\\r\\n                        var z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\\r\\n                        var w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\\r\\n\\r\\n                        geometry.skinWeights.push( new Vector4( x, y, z, w ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( json.skinIndices ) {\\r\\n\\r\\n                    for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\\r\\n\\r\\n                        var a = json.skinIndices[ i ];\\r\\n                        var b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\\r\\n                        var c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\\r\\n                        var d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\\r\\n\\r\\n                        geometry.skinIndices.push( new Vector4( a, b, c, d ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                geometry.bones = json.bones;\\r\\n\\r\\n                if ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\\r\\n\\r\\n                    console.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\\r\\n                        geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function parseMorphing( json, geometry ) {\\r\\n\\r\\n                var scale = json.scale;\\r\\n\\r\\n                if ( json.morphTargets !== undefined ) {\\r\\n\\r\\n                    for ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\\r\\n\\r\\n                        geometry.morphTargets[ i ] = {};\\r\\n                        geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\\r\\n                        geometry.morphTargets[ i ].vertices = [];\\r\\n\\r\\n                        var dstVertices = geometry.morphTargets[ i ].vertices;\\r\\n                        var srcVertices = json.morphTargets[ i ].vertices;\\r\\n\\r\\n                        for ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\\r\\n\\r\\n                            var vertex = new Vector3();\\r\\n                            vertex.x = srcVertices[ v ] * scale;\\r\\n                            vertex.y = srcVertices[ v + 1 ] * scale;\\r\\n                            vertex.z = srcVertices[ v + 2 ] * scale;\\r\\n\\r\\n                            dstVertices.push( vertex );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\\r\\n\\r\\n                    console.warn( 'THREE.JSONLoader: \\\"morphColors\\\" no longer supported. Using them as face colors.' );\\r\\n\\r\\n                    var faces = geometry.faces;\\r\\n                    var morphColors = json.morphColors[ 0 ].colors;\\r\\n\\r\\n                    for ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n                        faces[ i ].color.fromArray( morphColors, i * 3 );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            function parseAnimations( json, geometry ) {\\r\\n\\r\\n                var outputAnimations = [];\\r\\n\\r\\n                // parse old style Bone/Hierarchy animations\\r\\n                var animations = [];\\r\\n\\r\\n                if ( json.animation !== undefined ) {\\r\\n\\r\\n                    animations.push( json.animation );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( json.animations !== undefined ) {\\r\\n\\r\\n                    if ( json.animations.length ) {\\r\\n\\r\\n                        animations = animations.concat( json.animations );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        animations.push( json.animations );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( var i = 0; i < animations.length; i ++ ) {\\r\\n\\r\\n                    var clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\\r\\n                    if ( clip ) outputAnimations.push( clip );\\r\\n\\r\\n                }\\r\\n\\r\\n                // parse implicit morph animations\\r\\n                if ( geometry.morphTargets ) {\\r\\n\\r\\n                    // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\\r\\n                    var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\\r\\n                    outputAnimations = outputAnimations.concat( morphAnimationClips );\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\\r\\n\\r\\n            }\\r\\n\\r\\n            return function parse( json, path ) {\\r\\n\\r\\n                if ( json.data !== undefined ) {\\r\\n\\r\\n                    // Geometry 4.0 spec\\r\\n                    json = json.data;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( json.scale !== undefined ) {\\r\\n\\r\\n                    json.scale = 1.0 / json.scale;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    json.scale = 1.0;\\r\\n\\r\\n                }\\r\\n\\r\\n                var geometry = new Geometry();\\r\\n\\r\\n                parseModel( json, geometry );\\r\\n                parseSkin( json, geometry );\\r\\n                parseMorphing( json, geometry );\\r\\n                parseAnimations( json, geometry );\\r\\n\\r\\n                geometry.computeFaceNormals();\\r\\n                geometry.computeBoundingSphere();\\r\\n\\r\\n                if ( json.materials === undefined || json.materials.length === 0 ) {\\r\\n\\r\\n                    return { geometry: geometry };\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    var materials = Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\\r\\n\\r\\n                    return { geometry: geometry, materials: materials };\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        } )()\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function ObjectLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n        this.texturePath = '';\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( ObjectLoader.prototype, {\\r\\n\\r\\n        crossOrigin: 'anonymous',\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            if ( this.texturePath === '' ) {\\r\\n\\r\\n                this.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\\r\\n\\r\\n            }\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var loader = new FileLoader( scope.manager );\\r\\n            loader.load( url, function ( text ) {\\r\\n\\r\\n                var json = null;\\r\\n\\r\\n                try {\\r\\n\\r\\n                    json = JSON.parse( text );\\r\\n\\r\\n                } catch ( error ) {\\r\\n\\r\\n                    if ( onError !== undefined ) onError( error );\\r\\n\\r\\n                    console.error( 'THREE:ObjectLoader: Can\\\\'t parse ' + url + '.', error.message );\\r\\n\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n                var metadata = json.metadata;\\r\\n\\r\\n                if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\\r\\n\\r\\n                    console.error( 'THREE.ObjectLoader: Can\\\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\\r\\n                    return;\\r\\n\\r\\n                }\\r\\n\\r\\n                scope.parse( json, onLoad );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        },\\r\\n\\r\\n        setTexturePath: function ( value ) {\\r\\n\\r\\n            this.texturePath = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( value ) {\\r\\n\\r\\n            this.crossOrigin = value;\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        parse: function ( json, onLoad ) {\\r\\n\\r\\n            var shapes = this.parseShape( json.shapes );\\r\\n            var geometries = this.parseGeometries( json.geometries, shapes );\\r\\n\\r\\n            var images = this.parseImages( json.images, function () {\\r\\n\\r\\n                if ( onLoad !== undefined ) onLoad( object );\\r\\n\\r\\n            } );\\r\\n\\r\\n            var textures = this.parseTextures( json.textures, images );\\r\\n            var materials = this.parseMaterials( json.materials, textures );\\r\\n\\r\\n            var object = this.parseObject( json.object, geometries, materials );\\r\\n\\r\\n            if ( json.animations ) {\\r\\n\\r\\n                object.animations = this.parseAnimations( json.animations );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( json.images === undefined || json.images.length === 0 ) {\\r\\n\\r\\n                if ( onLoad !== undefined ) onLoad( object );\\r\\n\\r\\n            }\\r\\n\\r\\n            return object;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseShape: function ( json ) {\\r\\n\\r\\n            var shapes = {};\\r\\n\\r\\n            if ( json !== undefined ) {\\r\\n\\r\\n                for ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n                    var shape = new Shape().fromJSON( json[ i ] );\\r\\n\\r\\n                    shapes[ shape.uuid ] = shape;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return shapes;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseGeometries: function ( json, shapes ) {\\r\\n\\r\\n            var geometries = {};\\r\\n\\r\\n            if ( json !== undefined ) {\\r\\n\\r\\n                var geometryLoader = new JSONLoader();\\r\\n                var bufferGeometryLoader = new BufferGeometryLoader();\\r\\n\\r\\n                for ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n                    var geometry;\\r\\n                    var data = json[ i ];\\r\\n\\r\\n                    switch ( data.type ) {\\r\\n\\r\\n                        case 'PlaneGeometry':\\r\\n                        case 'PlaneBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.width,\\r\\n                                data.height,\\r\\n                                data.widthSegments,\\r\\n                                data.heightSegments\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'BoxGeometry':\\r\\n                        case 'BoxBufferGeometry':\\r\\n                        case 'CubeGeometry': // backwards compatible\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.width,\\r\\n                                data.height,\\r\\n                                data.depth,\\r\\n                                data.widthSegments,\\r\\n                                data.heightSegments,\\r\\n                                data.depthSegments\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'CircleGeometry':\\r\\n                        case 'CircleBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.segments,\\r\\n                                data.thetaStart,\\r\\n                                data.thetaLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'CylinderGeometry':\\r\\n                        case 'CylinderBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radiusTop,\\r\\n                                data.radiusBottom,\\r\\n                                data.height,\\r\\n                                data.radialSegments,\\r\\n                                data.heightSegments,\\r\\n                                data.openEnded,\\r\\n                                data.thetaStart,\\r\\n                                data.thetaLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'ConeGeometry':\\r\\n                        case 'ConeBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.height,\\r\\n                                data.radialSegments,\\r\\n                                data.heightSegments,\\r\\n                                data.openEnded,\\r\\n                                data.thetaStart,\\r\\n                                data.thetaLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'SphereGeometry':\\r\\n                        case 'SphereBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.widthSegments,\\r\\n                                data.heightSegments,\\r\\n                                data.phiStart,\\r\\n                                data.phiLength,\\r\\n                                data.thetaStart,\\r\\n                                data.thetaLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'DodecahedronGeometry':\\r\\n                        case 'DodecahedronBufferGeometry':\\r\\n                        case 'IcosahedronGeometry':\\r\\n                        case 'IcosahedronBufferGeometry':\\r\\n                        case 'OctahedronGeometry':\\r\\n                        case 'OctahedronBufferGeometry':\\r\\n                        case 'TetrahedronGeometry':\\r\\n                        case 'TetrahedronBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.detail\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'RingGeometry':\\r\\n                        case 'RingBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.innerRadius,\\r\\n                                data.outerRadius,\\r\\n                                data.thetaSegments,\\r\\n                                data.phiSegments,\\r\\n                                data.thetaStart,\\r\\n                                data.thetaLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'TorusGeometry':\\r\\n                        case 'TorusBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.tube,\\r\\n                                data.radialSegments,\\r\\n                                data.tubularSegments,\\r\\n                                data.arc\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'TorusKnotGeometry':\\r\\n                        case 'TorusKnotBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.radius,\\r\\n                                data.tube,\\r\\n                                data.tubularSegments,\\r\\n                                data.radialSegments,\\r\\n                                data.p,\\r\\n                                data.q\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'LatheGeometry':\\r\\n                        case 'LatheBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.points,\\r\\n                                data.segments,\\r\\n                                data.phiStart,\\r\\n                                data.phiLength\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'PolyhedronGeometry':\\r\\n                        case 'PolyhedronBufferGeometry':\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                data.vertices,\\r\\n                                data.indices,\\r\\n                                data.radius,\\r\\n                                data.details\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'ShapeGeometry':\\r\\n                        case 'ShapeBufferGeometry':\\r\\n\\r\\n                            var geometryShapes = [];\\r\\n\\r\\n                            for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\\r\\n\\r\\n                                var shape = shapes[ data.shapes[ j ] ];\\r\\n\\r\\n                                geometryShapes.push( shape );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                geometryShapes,\\r\\n                                data.curveSegments\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n\\r\\n                        case 'ExtrudeGeometry':\\r\\n                        case 'ExtrudeBufferGeometry':\\r\\n\\r\\n                            var geometryShapes = [];\\r\\n\\r\\n                            for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\\r\\n\\r\\n                                var shape = shapes[ data.shapes[ j ] ];\\r\\n\\r\\n                                geometryShapes.push( shape );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            var extrudePath = data.options.extrudePath;\\r\\n\\r\\n                            if ( extrudePath !== undefined ) {\\r\\n\\r\\n                                data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\\r\\n\\r\\n                            }\\r\\n\\r\\n                            geometry = new Geometries[ data.type ](\\r\\n                                geometryShapes,\\r\\n                                data.options\\r\\n                            );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'BufferGeometry':\\r\\n\\r\\n                            geometry = bufferGeometryLoader.parse( data );\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        case 'Geometry':\\r\\n\\r\\n                            geometry = geometryLoader.parse( data, this.texturePath ).geometry;\\r\\n\\r\\n                            break;\\r\\n\\r\\n                        default:\\r\\n\\r\\n                            console.warn( 'THREE.ObjectLoader: Unsupported geometry type \\\"' + data.type + '\\\"' );\\r\\n\\r\\n                            continue;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    geometry.uuid = data.uuid;\\r\\n\\r\\n                    if ( data.name !== undefined ) geometry.name = data.name;\\r\\n                    if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\\r\\n\\r\\n                    geometries[ data.uuid ] = geometry;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return geometries;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseMaterials: function ( json, textures ) {\\r\\n\\r\\n            var materials = {};\\r\\n\\r\\n            if ( json !== undefined ) {\\r\\n\\r\\n                var loader = new MaterialLoader();\\r\\n                loader.setTextures( textures );\\r\\n\\r\\n                for ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n                    var data = json[ i ];\\r\\n\\r\\n                    if ( data.type === 'MultiMaterial' ) {\\r\\n\\r\\n                        // Deprecated\\r\\n\\r\\n                        var array = [];\\r\\n\\r\\n                        for ( var j = 0; j < data.materials.length; j ++ ) {\\r\\n\\r\\n                            array.push( loader.parse( data.materials[ j ] ) );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        materials[ data.uuid ] = array;\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        materials[ data.uuid ] = loader.parse( data );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return materials;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseAnimations: function ( json ) {\\r\\n\\r\\n            var animations = [];\\r\\n\\r\\n            for ( var i = 0; i < json.length; i ++ ) {\\r\\n\\r\\n                var data = json[ i ];\\r\\n\\r\\n                var clip = AnimationClip.parse( data );\\r\\n\\r\\n                if ( data.uuid !== undefined ) clip.uuid = data.uuid;\\r\\n\\r\\n                animations.push( clip );\\r\\n\\r\\n            }\\r\\n\\r\\n            return animations;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseImages: function ( json, onLoad ) {\\r\\n\\r\\n            var scope = this;\\r\\n            var images = {};\\r\\n\\r\\n            function loadImage( url ) {\\r\\n\\r\\n                scope.manager.itemStart( url );\\r\\n\\r\\n                return loader.load( url, function () {\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n\\r\\n                }, undefined, function () {\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n                    scope.manager.itemError( url );\\r\\n\\r\\n                } );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( json !== undefined && json.length > 0 ) {\\r\\n\\r\\n                var manager = new LoadingManager( onLoad );\\r\\n\\r\\n                var loader = new ImageLoader( manager );\\r\\n                loader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n                for ( var i = 0, il = json.length; i < il; i ++ ) {\\r\\n\\r\\n                    var image = json[ i ];\\r\\n                    var url = image.url;\\r\\n\\r\\n                    if ( Array.isArray( url ) ) {\\r\\n\\r\\n                        // load array of images e.g CubeTexture\\r\\n\\r\\n                        images[ image.uuid ] = [];\\r\\n\\r\\n                        for ( var j = 0, jl = url.length; j < jl; j ++ ) {\\r\\n\\r\\n                            var currentUrl = url[ j ];\\r\\n\\r\\n                            var path = /^(\\\\/\\\\/)|([a-z]+:(\\\\/\\\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\\r\\n\\r\\n                            images[ image.uuid ].push( loadImage( path ) );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // load single image\\r\\n\\r\\n                        var path = /^(\\\\/\\\\/)|([a-z]+:(\\\\/\\\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\\r\\n\\r\\n                        images[ image.uuid ] = loadImage( path );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return images;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseTextures: function ( json, images ) {\\r\\n\\r\\n            function parseConstant( value, type ) {\\r\\n\\r\\n                if ( typeof value === 'number' ) return value;\\r\\n\\r\\n                console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\\r\\n\\r\\n                return type[ value ];\\r\\n\\r\\n            }\\r\\n\\r\\n            var textures = {};\\r\\n\\r\\n            if ( json !== undefined ) {\\r\\n\\r\\n                for ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n                    var data = json[ i ];\\r\\n\\r\\n                    if ( data.image === undefined ) {\\r\\n\\r\\n                        console.warn( 'THREE.ObjectLoader: No \\\"image\\\" specified for', data.uuid );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( images[ data.image ] === undefined ) {\\r\\n\\r\\n                        console.warn( 'THREE.ObjectLoader: Undefined image', data.image );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    var texture;\\r\\n\\r\\n                    if ( Array.isArray( images[ data.image ] ) ) {\\r\\n\\r\\n                        texture = new CubeTexture( images[ data.image ] );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        texture = new Texture( images[ data.image ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    texture.needsUpdate = true;\\r\\n\\r\\n                    texture.uuid = data.uuid;\\r\\n\\r\\n                    if ( data.name !== undefined ) texture.name = data.name;\\r\\n\\r\\n                    if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\\r\\n\\r\\n                    if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\\r\\n                    if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\\r\\n                    if ( data.center !== undefined ) texture.center.fromArray( data.center );\\r\\n                    if ( data.rotation !== undefined ) texture.rotation = data.rotation;\\r\\n\\r\\n                    if ( data.wrap !== undefined ) {\\r\\n\\r\\n                        texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\\r\\n                        texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( data.format !== undefined ) texture.format = data.format;\\r\\n\\r\\n                    if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\\r\\n                    if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\\r\\n                    if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\\r\\n\\r\\n                    if ( data.flipY !== undefined ) texture.flipY = data.flipY;\\r\\n\\r\\n                    textures[ data.uuid ] = texture;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return textures;\\r\\n\\r\\n        },\\r\\n\\r\\n        parseObject: function ( data, geometries, materials ) {\\r\\n\\r\\n            var object;\\r\\n\\r\\n            function getGeometry( name ) {\\r\\n\\r\\n                if ( geometries[ name ] === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.ObjectLoader: Undefined geometry', name );\\r\\n\\r\\n                }\\r\\n\\r\\n                return geometries[ name ];\\r\\n\\r\\n            }\\r\\n\\r\\n            function getMaterial( name ) {\\r\\n\\r\\n                if ( name === undefined ) return undefined;\\r\\n\\r\\n                if ( Array.isArray( name ) ) {\\r\\n\\r\\n                    var array = [];\\r\\n\\r\\n                    for ( var i = 0, l = name.length; i < l; i ++ ) {\\r\\n\\r\\n                        var uuid = name[ i ];\\r\\n\\r\\n                        if ( materials[ uuid ] === undefined ) {\\r\\n\\r\\n                            console.warn( 'THREE.ObjectLoader: Undefined material', uuid );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        array.push( materials[ uuid ] );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    return array;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( materials[ name ] === undefined ) {\\r\\n\\r\\n                    console.warn( 'THREE.ObjectLoader: Undefined material', name );\\r\\n\\r\\n                }\\r\\n\\r\\n                return materials[ name ];\\r\\n\\r\\n            }\\r\\n\\r\\n            switch ( data.type ) {\\r\\n\\r\\n                case 'Scene':\\r\\n\\r\\n                    object = new Scene();\\r\\n\\r\\n                    if ( data.background !== undefined ) {\\r\\n\\r\\n                        if ( Number.isInteger( data.background ) ) {\\r\\n\\r\\n                            object.background = new Color( data.background );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( data.fog !== undefined ) {\\r\\n\\r\\n                        if ( data.fog.type === 'Fog' ) {\\r\\n\\r\\n                            object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\\r\\n\\r\\n                        } else if ( data.fog.type === 'FogExp2' ) {\\r\\n\\r\\n                            object.fog = new FogExp2( data.fog.color, data.fog.density );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'PerspectiveCamera':\\r\\n\\r\\n                    object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\\r\\n\\r\\n                    if ( data.focus !== undefined ) object.focus = data.focus;\\r\\n                    if ( data.zoom !== undefined ) object.zoom = data.zoom;\\r\\n                    if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\\r\\n                    if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\\r\\n                    if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'OrthographicCamera':\\r\\n\\r\\n                    object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\\r\\n\\r\\n                    if ( data.zoom !== undefined ) object.zoom = data.zoom;\\r\\n                    if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'AmbientLight':\\r\\n\\r\\n                    object = new AmbientLight( data.color, data.intensity );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'DirectionalLight':\\r\\n\\r\\n                    object = new DirectionalLight( data.color, data.intensity );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'PointLight':\\r\\n\\r\\n                    object = new PointLight( data.color, data.intensity, data.distance, data.decay );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'RectAreaLight':\\r\\n\\r\\n                    object = new RectAreaLight( data.color, data.intensity, data.width, data.height );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'SpotLight':\\r\\n\\r\\n                    object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'HemisphereLight':\\r\\n\\r\\n                    object = new HemisphereLight( data.color, data.groundColor, data.intensity );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'SkinnedMesh':\\r\\n\\r\\n                    console.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\\r\\n\\r\\n                case 'Mesh':\\r\\n\\r\\n                    var geometry = getGeometry( data.geometry );\\r\\n                    var material = getMaterial( data.material );\\r\\n\\r\\n                    if ( geometry.bones && geometry.bones.length > 0 ) {\\r\\n\\r\\n                        object = new SkinnedMesh( geometry, material );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        object = new Mesh( geometry, material );\\r\\n\\r\\n                    }\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'LOD':\\r\\n\\r\\n                    object = new LOD();\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'Line':\\r\\n\\r\\n                    object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'LineLoop':\\r\\n\\r\\n                    object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'LineSegments':\\r\\n\\r\\n                    object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'PointCloud':\\r\\n                case 'Points':\\r\\n\\r\\n                    object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'Sprite':\\r\\n\\r\\n                    object = new Sprite( getMaterial( data.material ) );\\r\\n\\r\\n                    break;\\r\\n\\r\\n                case 'Group':\\r\\n\\r\\n                    object = new Group();\\r\\n\\r\\n                    break;\\r\\n\\r\\n                default:\\r\\n\\r\\n                    object = new Object3D();\\r\\n\\r\\n            }\\r\\n\\r\\n            object.uuid = data.uuid;\\r\\n\\r\\n            if ( data.name !== undefined ) object.name = data.name;\\r\\n\\r\\n            if ( data.matrix !== undefined ) {\\r\\n\\r\\n                object.matrix.fromArray( data.matrix );\\r\\n\\r\\n                if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\\r\\n                if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                if ( data.position !== undefined ) object.position.fromArray( data.position );\\r\\n                if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\\r\\n                if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\\r\\n                if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\\r\\n            if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\\r\\n\\r\\n            if ( data.shadow ) {\\r\\n\\r\\n                if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\\r\\n                if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\\r\\n                if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\\r\\n                if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( data.visible !== undefined ) object.visible = data.visible;\\r\\n            if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\\r\\n            if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\\r\\n            if ( data.userData !== undefined ) object.userData = data.userData;\\r\\n            if ( data.layers !== undefined ) object.layers.mask = data.layers;\\r\\n\\r\\n            if ( data.children !== undefined ) {\\r\\n\\r\\n                var children = data.children;\\r\\n\\r\\n                for ( var i = 0; i < children.length; i ++ ) {\\r\\n\\r\\n                    object.add( this.parseObject( children[ i ], geometries, materials ) );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( data.type === 'LOD' ) {\\r\\n\\r\\n                var levels = data.levels;\\r\\n\\r\\n                for ( var l = 0; l < levels.length; l ++ ) {\\r\\n\\r\\n                    var level = levels[ l ];\\r\\n                    var child = object.getObjectByProperty( 'uuid', level.object );\\r\\n\\r\\n                    if ( child !== undefined ) {\\r\\n\\r\\n                        object.addLevel( child, level.distance );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return object;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    var TEXTURE_MAPPING = {\\r\\n        UVMapping: UVMapping,\\r\\n        CubeReflectionMapping: CubeReflectionMapping,\\r\\n        CubeRefractionMapping: CubeRefractionMapping,\\r\\n        EquirectangularReflectionMapping: EquirectangularReflectionMapping,\\r\\n        EquirectangularRefractionMapping: EquirectangularRefractionMapping,\\r\\n        SphericalReflectionMapping: SphericalReflectionMapping,\\r\\n        CubeUVReflectionMapping: CubeUVReflectionMapping,\\r\\n        CubeUVRefractionMapping: CubeUVRefractionMapping\\r\\n    };\\r\\n\\r\\n    var TEXTURE_WRAPPING = {\\r\\n        RepeatWrapping: RepeatWrapping,\\r\\n        ClampToEdgeWrapping: ClampToEdgeWrapping,\\r\\n        MirroredRepeatWrapping: MirroredRepeatWrapping\\r\\n    };\\r\\n\\r\\n    var TEXTURE_FILTER = {\\r\\n        NearestFilter: NearestFilter,\\r\\n        NearestMipMapNearestFilter: NearestMipMapNearestFilter,\\r\\n        NearestMipMapLinearFilter: NearestMipMapLinearFilter,\\r\\n        LinearFilter: LinearFilter,\\r\\n        LinearMipMapNearestFilter: LinearMipMapNearestFilter,\\r\\n        LinearMipMapLinearFilter: LinearMipMapLinearFilter\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author thespite / http://clicktorelease.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function ImageBitmapLoader( manager ) {\\r\\n\\r\\n        if ( typeof createImageBitmap === 'undefined' ) {\\r\\n\\r\\n            console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( typeof fetch === 'undefined' ) {\\r\\n\\r\\n            console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.manager = manager !== undefined ? manager : DefaultLoadingManager;\\r\\n        this.options = undefined;\\r\\n\\r\\n    }\\r\\n\\r\\n    ImageBitmapLoader.prototype = {\\r\\n\\r\\n        constructor: ImageBitmapLoader,\\r\\n\\r\\n        setOptions: function setOptions( options ) {\\r\\n\\r\\n            this.options = options;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            if ( url === undefined ) url = '';\\r\\n\\r\\n            if ( this.path !== undefined ) url = this.path + url;\\r\\n\\r\\n            url = this.manager.resolveURL( url );\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var cached = Cache.get( url );\\r\\n\\r\\n            if ( cached !== undefined ) {\\r\\n\\r\\n                scope.manager.itemStart( url );\\r\\n\\r\\n                setTimeout( function () {\\r\\n\\r\\n                    if ( onLoad ) onLoad( cached );\\r\\n\\r\\n                    scope.manager.itemEnd( url );\\r\\n\\r\\n                }, 0 );\\r\\n\\r\\n                return cached;\\r\\n\\r\\n            }\\r\\n\\r\\n            fetch( url ).then( function ( res ) {\\r\\n\\r\\n                return res.blob();\\r\\n\\r\\n            } ).then( function ( blob ) {\\r\\n\\r\\n                return createImageBitmap( blob, scope.options );\\r\\n\\r\\n            } ).then( function ( imageBitmap ) {\\r\\n\\r\\n                Cache.add( url, imageBitmap );\\r\\n\\r\\n                if ( onLoad ) onLoad( imageBitmap );\\r\\n\\r\\n                scope.manager.itemEnd( url );\\r\\n\\r\\n            } ).catch( function ( e ) {\\r\\n\\r\\n                if ( onError ) onError( e );\\r\\n\\r\\n                scope.manager.itemEnd( url );\\r\\n                scope.manager.itemError( url );\\r\\n\\r\\n            } );\\r\\n\\r\\n        },\\r\\n\\r\\n        setCrossOrigin: function ( /* value */ ) {\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * minimal class for proxing functions to Path. Replaces old \\\"extractSubpaths()\\\"\\r\\n     **/\\r\\n\\r\\n    function ShapePath() {\\r\\n\\r\\n        this.type = 'ShapePath';\\r\\n\\r\\n        this.color = new Color();\\r\\n\\r\\n        this.subPaths = [];\\r\\n        this.currentPath = null;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( ShapePath.prototype, {\\r\\n\\r\\n        moveTo: function ( x, y ) {\\r\\n\\r\\n            this.currentPath = new Path();\\r\\n            this.subPaths.push( this.currentPath );\\r\\n            this.currentPath.moveTo( x, y );\\r\\n\\r\\n        },\\r\\n\\r\\n        lineTo: function ( x, y ) {\\r\\n\\r\\n            this.currentPath.lineTo( x, y );\\r\\n\\r\\n        },\\r\\n\\r\\n        quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\r\\n\\r\\n            this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\\r\\n\\r\\n        },\\r\\n\\r\\n        bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\r\\n\\r\\n            this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\\r\\n\\r\\n        },\\r\\n\\r\\n        splineThru: function ( pts ) {\\r\\n\\r\\n            this.currentPath.splineThru( pts );\\r\\n\\r\\n        },\\r\\n\\r\\n        toShapes: function ( isCCW, noHoles ) {\\r\\n\\r\\n            function toShapesNoHoles( inSubpaths ) {\\r\\n\\r\\n                var shapes = [];\\r\\n\\r\\n                for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\\r\\n\\r\\n                    var tmpPath = inSubpaths[ i ];\\r\\n\\r\\n                    var tmpShape = new Shape();\\r\\n                    tmpShape.curves = tmpPath.curves;\\r\\n\\r\\n                    shapes.push( tmpShape );\\r\\n\\r\\n                }\\r\\n\\r\\n                return shapes;\\r\\n\\r\\n            }\\r\\n\\r\\n            function isPointInsidePolygon( inPt, inPolygon ) {\\r\\n\\r\\n                var polyLen = inPolygon.length;\\r\\n\\r\\n                // inPt on polygon contour => immediate success    or\\r\\n                // toggling of inside/outside at every single! intersection point of an edge\\r\\n                //  with the horizontal line through inPt, left of inPt\\r\\n                //  not counting lowerY endpoints of edges and whole edges on that line\\r\\n                var inside = false;\\r\\n                for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\\r\\n\\r\\n                    var edgeLowPt = inPolygon[ p ];\\r\\n                    var edgeHighPt = inPolygon[ q ];\\r\\n\\r\\n                    var edgeDx = edgeHighPt.x - edgeLowPt.x;\\r\\n                    var edgeDy = edgeHighPt.y - edgeLowPt.y;\\r\\n\\r\\n                    if ( Math.abs( edgeDy ) > Number.EPSILON ) {\\r\\n\\r\\n                        // not parallel\\r\\n                        if ( edgeDy < 0 ) {\\r\\n\\r\\n                            edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\\r\\n                            edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\\r\\n\\r\\n                        }\\r\\n                        if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \\t\\tcontinue;\\r\\n\\r\\n                        if ( inPt.y === edgeLowPt.y ) {\\r\\n\\r\\n                            if ( inPt.x === edgeLowPt.x )\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\r\\n                            // continue;\\t\\t\\t\\t// no intersection or edgeLowPt => doesn't count !!!\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\\r\\n                            if ( perpEdge === 0 )\\t\\t\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\r\\n                            if ( perpEdge < 0 ) \\t\\t\\t\\tcontinue;\\r\\n                            inside = ! inside;\\t\\t// true intersection left of inPt\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // parallel or collinear\\r\\n                        if ( inPt.y !== edgeLowPt.y ) \\t\\tcontinue;\\t\\t\\t// parallel\\r\\n                        // edge lies on the same horizontal line as inPt\\r\\n                        if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\\r\\n                            ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\\t\\treturn\\ttrue;\\t// inPt: Point on contour !\\r\\n                        // continue;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                return\\tinside;\\r\\n\\r\\n            }\\r\\n\\r\\n            var isClockWise = ShapeUtils.isClockWise;\\r\\n\\r\\n            var subPaths = this.subPaths;\\r\\n            if ( subPaths.length === 0 ) return [];\\r\\n\\r\\n            if ( noHoles === true )\\treturn\\ttoShapesNoHoles( subPaths );\\r\\n\\r\\n\\r\\n            var solid, tmpPath, tmpShape, shapes = [];\\r\\n\\r\\n            if ( subPaths.length === 1 ) {\\r\\n\\r\\n                tmpPath = subPaths[ 0 ];\\r\\n                tmpShape = new Shape();\\r\\n                tmpShape.curves = tmpPath.curves;\\r\\n                shapes.push( tmpShape );\\r\\n                return shapes;\\r\\n\\r\\n            }\\r\\n\\r\\n            var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\\r\\n            holesFirst = isCCW ? ! holesFirst : holesFirst;\\r\\n\\r\\n            // console.log(\\\"Holes first\\\", holesFirst);\\r\\n\\r\\n            var betterShapeHoles = [];\\r\\n            var newShapes = [];\\r\\n            var newShapeHoles = [];\\r\\n            var mainIdx = 0;\\r\\n            var tmpPoints;\\r\\n\\r\\n            newShapes[ mainIdx ] = undefined;\\r\\n            newShapeHoles[ mainIdx ] = [];\\r\\n\\r\\n            for ( var i = 0, l = subPaths.length; i < l; i ++ ) {\\r\\n\\r\\n                tmpPath = subPaths[ i ];\\r\\n                tmpPoints = tmpPath.getPoints();\\r\\n                solid = isClockWise( tmpPoints );\\r\\n                solid = isCCW ? ! solid : solid;\\r\\n\\r\\n                if ( solid ) {\\r\\n\\r\\n                    if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\\tmainIdx ++;\\r\\n\\r\\n                    newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\\r\\n                    newShapes[ mainIdx ].s.curves = tmpPath.curves;\\r\\n\\r\\n                    if ( holesFirst )\\tmainIdx ++;\\r\\n                    newShapeHoles[ mainIdx ] = [];\\r\\n\\r\\n                    //console.log('cw', i);\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\\r\\n\\r\\n                    //console.log('ccw', i);\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // only Holes? -> probably all Shapes with wrong orientation\\r\\n            if ( ! newShapes[ 0 ] )\\treturn\\ttoShapesNoHoles( subPaths );\\r\\n\\r\\n\\r\\n            if ( newShapes.length > 1 ) {\\r\\n\\r\\n                var ambiguous = false;\\r\\n                var toChange = [];\\r\\n\\r\\n                for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\r\\n\\r\\n                    betterShapeHoles[ sIdx ] = [];\\r\\n\\r\\n                }\\r\\n\\r\\n                for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\r\\n\\r\\n                    var sho = newShapeHoles[ sIdx ];\\r\\n\\r\\n                    for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\\r\\n\\r\\n                        var ho = sho[ hIdx ];\\r\\n                        var hole_unassigned = true;\\r\\n\\r\\n                        for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\\r\\n\\r\\n                            if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\\r\\n\\r\\n                                if ( sIdx !== s2Idx )\\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\\r\\n                                if ( hole_unassigned ) {\\r\\n\\r\\n                                    hole_unassigned = false;\\r\\n                                    betterShapeHoles[ s2Idx ].push( ho );\\r\\n\\r\\n                                } else {\\r\\n\\r\\n                                    ambiguous = true;\\r\\n\\r\\n                                }\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n                        if ( hole_unassigned ) {\\r\\n\\r\\n                            betterShapeHoles[ sIdx ].push( ho );\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n                // console.log(\\\"ambiguous: \\\", ambiguous);\\r\\n                if ( toChange.length > 0 ) {\\r\\n\\r\\n                    // console.log(\\\"to change: \\\", toChange);\\r\\n                    if ( ! ambiguous )\\tnewShapeHoles = betterShapeHoles;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var tmpHoles;\\r\\n\\r\\n            for ( var i = 0, il = newShapes.length; i < il; i ++ ) {\\r\\n\\r\\n                tmpShape = newShapes[ i ].s;\\r\\n                shapes.push( tmpShape );\\r\\n                tmpHoles = newShapeHoles[ i ];\\r\\n\\r\\n                for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\\r\\n\\r\\n                    tmpShape.holes.push( tmpHoles[ j ].h );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            //console.log(\\\"shape\\\", shapes);\\r\\n\\r\\n            return shapes;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n\\r\\n    function Font( data ) {\\r\\n\\r\\n        this.type = 'Font';\\r\\n\\r\\n        this.data = data;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Font.prototype, {\\r\\n\\r\\n        isFont: true,\\r\\n\\r\\n        generateShapes: function ( text, size ) {\\r\\n\\r\\n            if ( size === undefined ) size = 100;\\r\\n\\r\\n            var shapes = [];\\r\\n            var paths = createPaths( text, size, this.data );\\r\\n\\r\\n            for ( var p = 0, pl = paths.length; p < pl; p ++ ) {\\r\\n\\r\\n                Array.prototype.push.apply( shapes, paths[ p ].toShapes() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return shapes;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    function createPaths( text, size, data ) {\\r\\n\\r\\n        var chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\\r\\n        var scale = size / data.resolution;\\r\\n        var line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\\r\\n\\r\\n        var paths = [];\\r\\n\\r\\n        var offsetX = 0, offsetY = 0;\\r\\n\\r\\n        for ( var i = 0; i < chars.length; i ++ ) {\\r\\n\\r\\n            var char = chars[ i ];\\r\\n\\r\\n            if ( char === '\\\\n' ) {\\r\\n\\r\\n                offsetX = 0;\\r\\n                offsetY -= line_height;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var ret = createPath( char, scale, offsetX, offsetY, data );\\r\\n                offsetX += ret.offsetX;\\r\\n                paths.push( ret.path );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        return paths;\\r\\n\\r\\n    }\\r\\n\\r\\n    function createPath( char, scale, offsetX, offsetY, data ) {\\r\\n\\r\\n        var glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\\r\\n\\r\\n        if ( ! glyph ) return;\\r\\n\\r\\n        var path = new ShapePath();\\r\\n\\r\\n        var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\\r\\n\\r\\n        if ( glyph.o ) {\\r\\n\\r\\n            var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\\r\\n\\r\\n            for ( var i = 0, l = outline.length; i < l; ) {\\r\\n\\r\\n                var action = outline[ i ++ ];\\r\\n\\r\\n                switch ( action ) {\\r\\n\\r\\n                    case 'm': // moveTo\\r\\n\\r\\n                        x = outline[ i ++ ] * scale + offsetX;\\r\\n                        y = outline[ i ++ ] * scale + offsetY;\\r\\n\\r\\n                        path.moveTo( x, y );\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case 'l': // lineTo\\r\\n\\r\\n                        x = outline[ i ++ ] * scale + offsetX;\\r\\n                        y = outline[ i ++ ] * scale + offsetY;\\r\\n\\r\\n                        path.lineTo( x, y );\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case 'q': // quadraticCurveTo\\r\\n\\r\\n                        cpx = outline[ i ++ ] * scale + offsetX;\\r\\n                        cpy = outline[ i ++ ] * scale + offsetY;\\r\\n                        cpx1 = outline[ i ++ ] * scale + offsetX;\\r\\n                        cpy1 = outline[ i ++ ] * scale + offsetY;\\r\\n\\r\\n                        path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case 'b': // bezierCurveTo\\r\\n\\r\\n                        cpx = outline[ i ++ ] * scale + offsetX;\\r\\n                        cpy = outline[ i ++ ] * scale + offsetY;\\r\\n                        cpx1 = outline[ i ++ ] * scale + offsetX;\\r\\n                        cpy1 = outline[ i ++ ] * scale + offsetY;\\r\\n                        cpx2 = outline[ i ++ ] * scale + offsetX;\\r\\n                        cpy2 = outline[ i ++ ] * scale + offsetY;\\r\\n\\r\\n                        path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\\r\\n\\r\\n                        break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        return { offsetX: glyph.ha * scale, path: path };\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function FontLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( FontLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            var loader = new FileLoader( this.manager );\\r\\n            loader.setPath( this.path );\\r\\n            loader.load( url, function ( text ) {\\r\\n\\r\\n                var json;\\r\\n\\r\\n                try {\\r\\n\\r\\n                    json = JSON.parse( text );\\r\\n\\r\\n                } catch ( e ) {\\r\\n\\r\\n                    console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\\r\\n                    json = JSON.parse( text.substring( 65, text.length - 2 ) );\\r\\n\\r\\n                }\\r\\n\\r\\n                var font = scope.parse( json );\\r\\n\\r\\n                if ( onLoad ) onLoad( font );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        },\\r\\n\\r\\n        parse: function ( json ) {\\r\\n\\r\\n            return new Font( json );\\r\\n\\r\\n        },\\r\\n\\r\\n        setPath: function ( value ) {\\r\\n\\r\\n            this.path = value;\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    var context;\\r\\n\\r\\n    var AudioContext = {\\r\\n\\r\\n        getContext: function () {\\r\\n\\r\\n            if ( context === undefined ) {\\r\\n\\r\\n                context = new ( window.AudioContext || window.webkitAudioContext )();\\r\\n\\r\\n            }\\r\\n\\r\\n            return context;\\r\\n\\r\\n        },\\r\\n\\r\\n        setContext: function ( value ) {\\r\\n\\r\\n            context = value;\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author Reece Aaron Lecrivain / http://reecenotes.com/\\r\\n     */\\r\\n\\r\\n    function AudioLoader( manager ) {\\r\\n\\r\\n        this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( AudioLoader.prototype, {\\r\\n\\r\\n        load: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n            var loader = new FileLoader( this.manager );\\r\\n            loader.setResponseType( 'arraybuffer' );\\r\\n            loader.load( url, function ( buffer ) {\\r\\n\\r\\n                // Create a copy of the buffer. The `decodeAudioData` method\\r\\n                // detaches the buffer when complete, preventing reuse.\\r\\n                var bufferCopy = buffer.slice( 0 );\\r\\n\\r\\n                var context = AudioContext.getContext();\\r\\n                context.decodeAudioData( bufferCopy, function ( audioBuffer ) {\\r\\n\\r\\n                    onLoad( audioBuffer );\\r\\n\\r\\n                } );\\r\\n\\r\\n            }, onProgress, onError );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function StereoCamera() {\\r\\n\\r\\n        this.type = 'StereoCamera';\\r\\n\\r\\n        this.aspect = 1;\\r\\n\\r\\n        this.eyeSep = 0.064;\\r\\n\\r\\n        this.cameraL = new PerspectiveCamera();\\r\\n        this.cameraL.layers.enable( 1 );\\r\\n        this.cameraL.matrixAutoUpdate = false;\\r\\n\\r\\n        this.cameraR = new PerspectiveCamera();\\r\\n        this.cameraR.layers.enable( 2 );\\r\\n        this.cameraR.matrixAutoUpdate = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( StereoCamera.prototype, {\\r\\n\\r\\n        update: ( function () {\\r\\n\\r\\n            var instance, focus, fov, aspect, near, far, zoom, eyeSep;\\r\\n\\r\\n            var eyeRight = new Matrix4();\\r\\n            var eyeLeft = new Matrix4();\\r\\n\\r\\n            return function update( camera ) {\\r\\n\\r\\n                var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\\r\\n                    aspect !== camera.aspect * this.aspect || near !== camera.near ||\\r\\n                    far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\\r\\n\\r\\n                if ( needsUpdate ) {\\r\\n\\r\\n                    instance = this;\\r\\n                    focus = camera.focus;\\r\\n                    fov = camera.fov;\\r\\n                    aspect = camera.aspect * this.aspect;\\r\\n                    near = camera.near;\\r\\n                    far = camera.far;\\r\\n                    zoom = camera.zoom;\\r\\n\\r\\n                    // Off-axis stereoscopic effect based on\\r\\n                    // http://paulbourke.net/stereographics/stereorender/\\r\\n\\r\\n                    var projectionMatrix = camera.projectionMatrix.clone();\\r\\n                    eyeSep = this.eyeSep / 2;\\r\\n                    var eyeSepOnProjection = eyeSep * near / focus;\\r\\n                    var ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\\r\\n                    var xmin, xmax;\\r\\n\\r\\n                    // translate xOffset\\r\\n\\r\\n                    eyeLeft.elements[ 12 ] = - eyeSep;\\r\\n                    eyeRight.elements[ 12 ] = eyeSep;\\r\\n\\r\\n                    // for left eye\\r\\n\\r\\n                    xmin = - ymax * aspect + eyeSepOnProjection;\\r\\n                    xmax = ymax * aspect + eyeSepOnProjection;\\r\\n\\r\\n                    projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\r\\n                    projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\r\\n\\r\\n                    this.cameraL.projectionMatrix.copy( projectionMatrix );\\r\\n\\r\\n                    // for right eye\\r\\n\\r\\n                    xmin = - ymax * aspect - eyeSepOnProjection;\\r\\n                    xmax = ymax * aspect - eyeSepOnProjection;\\r\\n\\r\\n                    projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\r\\n                    projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\r\\n\\r\\n                    this.cameraR.projectionMatrix.copy( projectionMatrix );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\\r\\n                this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\\r\\n\\r\\n            };\\r\\n\\r\\n        } )()\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * Camera for rendering cube maps\\r\\n     *\\t- renders scene into axis-aligned cube\\r\\n     *\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function CubeCamera( near, far, cubeResolution ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'CubeCamera';\\r\\n\\r\\n        var fov = 90, aspect = 1;\\r\\n\\r\\n        var cameraPX = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraPX.up.set( 0, - 1, 0 );\\r\\n        cameraPX.lookAt( new Vector3( 1, 0, 0 ) );\\r\\n        this.add( cameraPX );\\r\\n\\r\\n        var cameraNX = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraNX.up.set( 0, - 1, 0 );\\r\\n        cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\\r\\n        this.add( cameraNX );\\r\\n\\r\\n        var cameraPY = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraPY.up.set( 0, 0, 1 );\\r\\n        cameraPY.lookAt( new Vector3( 0, 1, 0 ) );\\r\\n        this.add( cameraPY );\\r\\n\\r\\n        var cameraNY = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraNY.up.set( 0, 0, - 1 );\\r\\n        cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\\r\\n        this.add( cameraNY );\\r\\n\\r\\n        var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraPZ.up.set( 0, - 1, 0 );\\r\\n        cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\\r\\n        this.add( cameraPZ );\\r\\n\\r\\n        var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\\r\\n        cameraNZ.up.set( 0, - 1, 0 );\\r\\n        cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\\r\\n        this.add( cameraNZ );\\r\\n\\r\\n        var options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\\r\\n\\r\\n        this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\\r\\n        this.renderTarget.texture.name = \\\"CubeCamera\\\";\\r\\n\\r\\n        this.update = function ( renderer, scene ) {\\r\\n\\r\\n            if ( this.parent === null ) this.updateMatrixWorld();\\r\\n\\r\\n            var renderTarget = this.renderTarget;\\r\\n            var generateMipmaps = renderTarget.texture.generateMipmaps;\\r\\n\\r\\n            renderTarget.texture.generateMipmaps = false;\\r\\n\\r\\n            renderTarget.activeCubeFace = 0;\\r\\n            renderer.render( scene, cameraPX, renderTarget );\\r\\n\\r\\n            renderTarget.activeCubeFace = 1;\\r\\n            renderer.render( scene, cameraNX, renderTarget );\\r\\n\\r\\n            renderTarget.activeCubeFace = 2;\\r\\n            renderer.render( scene, cameraPY, renderTarget );\\r\\n\\r\\n            renderTarget.activeCubeFace = 3;\\r\\n            renderer.render( scene, cameraNY, renderTarget );\\r\\n\\r\\n            renderTarget.activeCubeFace = 4;\\r\\n            renderer.render( scene, cameraPZ, renderTarget );\\r\\n\\r\\n            renderTarget.texture.generateMipmaps = generateMipmaps;\\r\\n\\r\\n            renderTarget.activeCubeFace = 5;\\r\\n            renderer.render( scene, cameraNZ, renderTarget );\\r\\n\\r\\n            renderer.setRenderTarget( null );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.clear = function ( renderer, color, depth, stencil ) {\\r\\n\\r\\n            var renderTarget = this.renderTarget;\\r\\n\\r\\n            for ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n                renderTarget.activeCubeFace = i;\\r\\n                renderer.setRenderTarget( renderTarget );\\r\\n\\r\\n                renderer.clear( color, depth, stencil );\\r\\n\\r\\n            }\\r\\n\\r\\n            renderer.setRenderTarget( null );\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    CubeCamera.prototype = Object.create( Object3D.prototype );\\r\\n    CubeCamera.prototype.constructor = CubeCamera;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function AudioListener() {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'AudioListener';\\r\\n\\r\\n        this.context = AudioContext.getContext();\\r\\n\\r\\n        this.gain = this.context.createGain();\\r\\n        this.gain.connect( this.context.destination );\\r\\n\\r\\n        this.filter = null;\\r\\n\\r\\n    }\\r\\n\\r\\n    AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: AudioListener,\\r\\n\\r\\n        getInput: function () {\\r\\n\\r\\n            return this.gain;\\r\\n\\r\\n        },\\r\\n\\r\\n        removeFilter: function ( ) {\\r\\n\\r\\n            if ( this.filter !== null ) {\\r\\n\\r\\n                this.gain.disconnect( this.filter );\\r\\n                this.filter.disconnect( this.context.destination );\\r\\n                this.gain.connect( this.context.destination );\\r\\n                this.filter = null;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getFilter: function () {\\r\\n\\r\\n            return this.filter;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFilter: function ( value ) {\\r\\n\\r\\n            if ( this.filter !== null ) {\\r\\n\\r\\n                this.gain.disconnect( this.filter );\\r\\n                this.filter.disconnect( this.context.destination );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.gain.disconnect( this.context.destination );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.filter = value;\\r\\n            this.gain.connect( this.filter );\\r\\n            this.filter.connect( this.context.destination );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getMasterVolume: function () {\\r\\n\\r\\n            return this.gain.gain.value;\\r\\n\\r\\n        },\\r\\n\\r\\n        setMasterVolume: function ( value ) {\\r\\n\\r\\n            this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrixWorld: ( function () {\\r\\n\\r\\n            var position = new Vector3();\\r\\n            var quaternion = new Quaternion();\\r\\n            var scale = new Vector3();\\r\\n\\r\\n            var orientation = new Vector3();\\r\\n\\r\\n            return function updateMatrixWorld( force ) {\\r\\n\\r\\n                Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n                var listener = this.context.listener;\\r\\n                var up = this.up;\\r\\n\\r\\n                this.matrixWorld.decompose( position, quaternion, scale );\\r\\n\\r\\n                orientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\r\\n\\r\\n                if ( listener.positionX ) {\\r\\n\\r\\n                    listener.positionX.setValueAtTime( position.x, this.context.currentTime );\\r\\n                    listener.positionY.setValueAtTime( position.y, this.context.currentTime );\\r\\n                    listener.positionZ.setValueAtTime( position.z, this.context.currentTime );\\r\\n                    listener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\\r\\n                    listener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\\r\\n                    listener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\\r\\n                    listener.upX.setValueAtTime( up.x, this.context.currentTime );\\r\\n                    listener.upY.setValueAtTime( up.y, this.context.currentTime );\\r\\n                    listener.upZ.setValueAtTime( up.z, this.context.currentTime );\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    listener.setPosition( position.x, position.y, position.z );\\r\\n                    listener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\\r\\n\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        } )()\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Reece Aaron Lecrivain / http://reecenotes.com/\\r\\n     */\\r\\n\\r\\n    function Audio( listener ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.type = 'Audio';\\r\\n\\r\\n        this.context = listener.context;\\r\\n\\r\\n        this.gain = this.context.createGain();\\r\\n        this.gain.connect( listener.getInput() );\\r\\n\\r\\n        this.autoplay = false;\\r\\n\\r\\n        this.buffer = null;\\r\\n        this.loop = false;\\r\\n        this.startTime = 0;\\r\\n        this.offset = 0;\\r\\n        this.playbackRate = 1;\\r\\n        this.isPlaying = false;\\r\\n        this.hasPlaybackControl = true;\\r\\n        this.sourceType = 'empty';\\r\\n\\r\\n        this.filters = [];\\r\\n\\r\\n    }\\r\\n\\r\\n    Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {\\r\\n\\r\\n        constructor: Audio,\\r\\n\\r\\n        getOutput: function () {\\r\\n\\r\\n            return this.gain;\\r\\n\\r\\n        },\\r\\n\\r\\n        setNodeSource: function ( audioNode ) {\\r\\n\\r\\n            this.hasPlaybackControl = false;\\r\\n            this.sourceType = 'audioNode';\\r\\n            this.source = audioNode;\\r\\n            this.connect();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setMediaElementSource: function ( mediaElement ) {\\r\\n\\r\\n            this.hasPlaybackControl = false;\\r\\n            this.sourceType = 'mediaNode';\\r\\n            this.source = this.context.createMediaElementSource( mediaElement );\\r\\n            this.connect();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setBuffer: function ( audioBuffer ) {\\r\\n\\r\\n            this.buffer = audioBuffer;\\r\\n            this.sourceType = 'buffer';\\r\\n\\r\\n            if ( this.autoplay ) this.play();\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        play: function () {\\r\\n\\r\\n            if ( this.isPlaying === true ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: Audio is already playing.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            var source = this.context.createBufferSource();\\r\\n\\r\\n            source.buffer = this.buffer;\\r\\n            source.loop = this.loop;\\r\\n            source.onended = this.onEnded.bind( this );\\r\\n            source.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\\r\\n            this.startTime = this.context.currentTime;\\r\\n            source.start( this.startTime, this.offset );\\r\\n\\r\\n            this.isPlaying = true;\\r\\n\\r\\n            this.source = source;\\r\\n\\r\\n            return this.connect();\\r\\n\\r\\n        },\\r\\n\\r\\n        pause: function () {\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.isPlaying === true ) {\\r\\n\\r\\n                this.source.stop();\\r\\n                this.source.onended = null;\\r\\n                this.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\\r\\n                this.isPlaying = false;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        stop: function () {\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.source.stop();\\r\\n            this.source.onended = null;\\r\\n            this.offset = 0;\\r\\n            this.isPlaying = false;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        connect: function () {\\r\\n\\r\\n            if ( this.filters.length > 0 ) {\\r\\n\\r\\n                this.source.connect( this.filters[ 0 ] );\\r\\n\\r\\n                for ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\r\\n\\r\\n                    this.filters[ i - 1 ].connect( this.filters[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.filters[ this.filters.length - 1 ].connect( this.getOutput() );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.source.connect( this.getOutput() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        disconnect: function () {\\r\\n\\r\\n            if ( this.filters.length > 0 ) {\\r\\n\\r\\n                this.source.disconnect( this.filters[ 0 ] );\\r\\n\\r\\n                for ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\r\\n\\r\\n                    this.filters[ i - 1 ].disconnect( this.filters[ i ] );\\r\\n\\r\\n                }\\r\\n\\r\\n                this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.source.disconnect( this.getOutput() );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getFilters: function () {\\r\\n\\r\\n            return this.filters;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFilters: function ( value ) {\\r\\n\\r\\n            if ( ! value ) value = [];\\r\\n\\r\\n            if ( this.isPlaying === true ) {\\r\\n\\r\\n                this.disconnect();\\r\\n                this.filters = value;\\r\\n                this.connect();\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.filters = value;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getFilter: function () {\\r\\n\\r\\n            return this.getFilters()[ 0 ];\\r\\n\\r\\n        },\\r\\n\\r\\n        setFilter: function ( filter ) {\\r\\n\\r\\n            return this.setFilters( filter ? [ filter ] : [] );\\r\\n\\r\\n        },\\r\\n\\r\\n        setPlaybackRate: function ( value ) {\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.playbackRate = value;\\r\\n\\r\\n            if ( this.isPlaying === true ) {\\r\\n\\r\\n                this.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getPlaybackRate: function () {\\r\\n\\r\\n            return this.playbackRate;\\r\\n\\r\\n        },\\r\\n\\r\\n        onEnded: function () {\\r\\n\\r\\n            this.isPlaying = false;\\r\\n\\r\\n        },\\r\\n\\r\\n        getLoop: function () {\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return false;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.loop;\\r\\n\\r\\n        },\\r\\n\\r\\n        setLoop: function ( value ) {\\r\\n\\r\\n            if ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            this.loop = value;\\r\\n\\r\\n            if ( this.isPlaying === true ) {\\r\\n\\r\\n                this.source.loop = this.loop;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getVolume: function () {\\r\\n\\r\\n            return this.gain.gain.value;\\r\\n\\r\\n        },\\r\\n\\r\\n        setVolume: function ( value ) {\\r\\n\\r\\n            this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function PositionalAudio( listener ) {\\r\\n\\r\\n        Audio.call( this, listener );\\r\\n\\r\\n        this.panner = this.context.createPanner();\\r\\n        this.panner.connect( this.gain );\\r\\n\\r\\n    }\\r\\n\\r\\n    PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\\r\\n\\r\\n        constructor: PositionalAudio,\\r\\n\\r\\n        getOutput: function () {\\r\\n\\r\\n            return this.panner;\\r\\n\\r\\n        },\\r\\n\\r\\n        getRefDistance: function () {\\r\\n\\r\\n            return this.panner.refDistance;\\r\\n\\r\\n        },\\r\\n\\r\\n        setRefDistance: function ( value ) {\\r\\n\\r\\n            this.panner.refDistance = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getRolloffFactor: function () {\\r\\n\\r\\n            return this.panner.rolloffFactor;\\r\\n\\r\\n        },\\r\\n\\r\\n        setRolloffFactor: function ( value ) {\\r\\n\\r\\n            this.panner.rolloffFactor = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getDistanceModel: function () {\\r\\n\\r\\n            return this.panner.distanceModel;\\r\\n\\r\\n        },\\r\\n\\r\\n        setDistanceModel: function ( value ) {\\r\\n\\r\\n            this.panner.distanceModel = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getMaxDistance: function () {\\r\\n\\r\\n            return this.panner.maxDistance;\\r\\n\\r\\n        },\\r\\n\\r\\n        setMaxDistance: function ( value ) {\\r\\n\\r\\n            this.panner.maxDistance = value;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\\r\\n\\r\\n            this.panner.coneInnerAngle = coneInnerAngle;\\r\\n            this.panner.coneOuterAngle = coneOuterAngle;\\r\\n            this.panner.coneOuterGain = coneOuterGain;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        updateMatrixWorld: ( function () {\\r\\n\\r\\n            var position = new Vector3();\\r\\n            var quaternion = new Quaternion();\\r\\n            var scale = new Vector3();\\r\\n\\r\\n            var orientation = new Vector3();\\r\\n\\r\\n            return function updateMatrixWorld( force ) {\\r\\n\\r\\n                Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n                var panner = this.panner;\\r\\n                this.matrixWorld.decompose( position, quaternion, scale );\\r\\n\\r\\n                orientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\\r\\n\\r\\n                panner.setPosition( position.x, position.y, position.z );\\r\\n                panner.setOrientation( orientation.x, orientation.y, orientation.z );\\r\\n\\r\\n            };\\r\\n\\r\\n        } )()\\r\\n\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function AudioAnalyser( audio, fftSize ) {\\r\\n\\r\\n        this.analyser = audio.context.createAnalyser();\\r\\n        this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\\r\\n\\r\\n        this.data = new Uint8Array( this.analyser.frequencyBinCount );\\r\\n\\r\\n        audio.getOutput().connect( this.analyser );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( AudioAnalyser.prototype, {\\r\\n\\r\\n        getFrequencyData: function () {\\r\\n\\r\\n            this.analyser.getByteFrequencyData( this.data );\\r\\n\\r\\n            return this.data;\\r\\n\\r\\n        },\\r\\n\\r\\n        getAverageFrequency: function () {\\r\\n\\r\\n            var value = 0, data = this.getFrequencyData();\\r\\n\\r\\n            for ( var i = 0; i < data.length; i ++ ) {\\r\\n\\r\\n                value += data[ i ];\\r\\n\\r\\n            }\\r\\n\\r\\n            return value / data.length;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Buffered scene graph property that allows weighted accumulation.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function PropertyMixer( binding, typeName, valueSize ) {\\r\\n\\r\\n        this.binding = binding;\\r\\n        this.valueSize = valueSize;\\r\\n\\r\\n        var bufferType = Float64Array,\\r\\n            mixFunction;\\r\\n\\r\\n        switch ( typeName ) {\\r\\n\\r\\n            case 'quaternion':\\r\\n                mixFunction = this._slerp;\\r\\n                break;\\r\\n\\r\\n            case 'string':\\r\\n            case 'bool':\\r\\n                bufferType = Array;\\r\\n                mixFunction = this._select;\\r\\n                break;\\r\\n\\r\\n            default:\\r\\n                mixFunction = this._lerp;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.buffer = new bufferType( valueSize * 4 );\\r\\n        // layout: [ incoming | accu0 | accu1 | orig ]\\r\\n        //\\r\\n        // interpolators can use .buffer as their .result\\r\\n        // the data then goes to 'incoming'\\r\\n        //\\r\\n        // 'accu0' and 'accu1' are used frame-interleaved for\\r\\n        // the cumulative result and are compared to detect\\r\\n        // changes\\r\\n        //\\r\\n        // 'orig' stores the original state of the property\\r\\n\\r\\n        this._mixBufferRegion = mixFunction;\\r\\n\\r\\n        this.cumulativeWeight = 0;\\r\\n\\r\\n        this.useCount = 0;\\r\\n        this.referenceCount = 0;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( PropertyMixer.prototype, {\\r\\n\\r\\n        // accumulate data in the 'incoming' region into 'accu<i>'\\r\\n        accumulate: function ( accuIndex, weight ) {\\r\\n\\r\\n            // note: happily accumulating nothing when weight = 0, the caller knows\\r\\n            // the weight and shouldn't have made the call in the first place\\r\\n\\r\\n            var buffer = this.buffer,\\r\\n                stride = this.valueSize,\\r\\n                offset = accuIndex * stride + stride,\\r\\n\\r\\n                currentWeight = this.cumulativeWeight;\\r\\n\\r\\n            if ( currentWeight === 0 ) {\\r\\n\\r\\n                // accuN := incoming * weight\\r\\n\\r\\n                for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                    buffer[ offset + i ] = buffer[ i ];\\r\\n\\r\\n                }\\r\\n\\r\\n                currentWeight = weight;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // accuN := accuN + incoming * weight\\r\\n\\r\\n                currentWeight += weight;\\r\\n                var mix = weight / currentWeight;\\r\\n                this._mixBufferRegion( buffer, offset, 0, mix, stride );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.cumulativeWeight = currentWeight;\\r\\n\\r\\n        },\\r\\n\\r\\n        // apply the state of 'accu<i>' to the binding when accus differ\\r\\n        apply: function ( accuIndex ) {\\r\\n\\r\\n            var stride = this.valueSize,\\r\\n                buffer = this.buffer,\\r\\n                offset = accuIndex * stride + stride,\\r\\n\\r\\n                weight = this.cumulativeWeight,\\r\\n\\r\\n                binding = this.binding;\\r\\n\\r\\n            this.cumulativeWeight = 0;\\r\\n\\r\\n            if ( weight < 1 ) {\\r\\n\\r\\n                // accuN := accuN + original * ( 1 - cumulativeWeight )\\r\\n\\r\\n                var originalValueOffset = stride * 3;\\r\\n\\r\\n                this._mixBufferRegion(\\r\\n                    buffer, offset, originalValueOffset, 1 - weight, stride );\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = stride, e = stride + stride; i !== e; ++ i ) {\\r\\n\\r\\n                if ( buffer[ i ] !== buffer[ i + stride ] ) {\\r\\n\\r\\n                    // value has changed -> update scene graph\\r\\n\\r\\n                    binding.setValue( buffer, offset );\\r\\n                    break;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        // remember the state of the bound property and copy it to both accus\\r\\n        saveOriginalState: function () {\\r\\n\\r\\n            var binding = this.binding;\\r\\n\\r\\n            var buffer = this.buffer,\\r\\n                stride = this.valueSize,\\r\\n\\r\\n                originalValueOffset = stride * 3;\\r\\n\\r\\n            binding.getValue( buffer, originalValueOffset );\\r\\n\\r\\n            // accu[0..1] := orig -- initially detect changes against the original\\r\\n            for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\\r\\n\\r\\n                buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\\r\\n\\r\\n            }\\r\\n\\r\\n            this.cumulativeWeight = 0;\\r\\n\\r\\n        },\\r\\n\\r\\n        // apply the state previously taken via 'saveOriginalState' to the binding\\r\\n        restoreOriginalState: function () {\\r\\n\\r\\n            var originalValueOffset = this.valueSize * 3;\\r\\n            this.binding.setValue( this.buffer, originalValueOffset );\\r\\n\\r\\n        },\\r\\n\\r\\n\\r\\n        // mix functions\\r\\n\\r\\n        _select: function ( buffer, dstOffset, srcOffset, t, stride ) {\\r\\n\\r\\n            if ( t >= 0.5 ) {\\r\\n\\r\\n                for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                    buffer[ dstOffset + i ] = buffer[ srcOffset + i ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _slerp: function ( buffer, dstOffset, srcOffset, t ) {\\r\\n\\r\\n            Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\\r\\n\\r\\n        },\\r\\n\\r\\n        _lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\\r\\n\\r\\n            var s = 1 - t;\\r\\n\\r\\n            for ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n                var j = dstOffset + i;\\r\\n\\r\\n                buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A reference to a real property in the scene graph.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n        // Characters [].:/ are reserved for track binding syntax.\\r\\n    var RESERVED_CHARS_RE = '\\\\\\\\[\\\\\\\\]\\\\\\\\.:\\\\\\\\/';\\r\\n\\r\\n    function Composite( targetGroup, path, optionalParsedPath ) {\\r\\n\\r\\n        var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\\r\\n\\r\\n        this._targetGroup = targetGroup;\\r\\n        this._bindings = targetGroup.subscribe_( path, parsedPath );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Composite.prototype, {\\r\\n\\r\\n        getValue: function ( array, offset ) {\\r\\n\\r\\n            this.bind(); // bind all binding\\r\\n\\r\\n            var firstValidIndex = this._targetGroup.nCachedObjects_,\\r\\n                binding = this._bindings[ firstValidIndex ];\\r\\n\\r\\n            // and only call .getValue on the first\\r\\n            if ( binding !== undefined ) binding.getValue( array, offset );\\r\\n\\r\\n        },\\r\\n\\r\\n        setValue: function ( array, offset ) {\\r\\n\\r\\n            var bindings = this._bindings;\\r\\n\\r\\n            for ( var i = this._targetGroup.nCachedObjects_,\\r\\n                      n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                bindings[ i ].setValue( array, offset );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        bind: function () {\\r\\n\\r\\n            var bindings = this._bindings;\\r\\n\\r\\n            for ( var i = this._targetGroup.nCachedObjects_,\\r\\n                      n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                bindings[ i ].bind();\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        unbind: function () {\\r\\n\\r\\n            var bindings = this._bindings;\\r\\n\\r\\n            for ( var i = this._targetGroup.nCachedObjects_,\\r\\n                      n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                bindings[ i ].unbind();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n\\r\\n    function PropertyBinding( rootNode, path, parsedPath ) {\\r\\n\\r\\n        this.path = path;\\r\\n        this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\\r\\n\\r\\n        this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\\r\\n\\r\\n        this.rootNode = rootNode;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( PropertyBinding, {\\r\\n\\r\\n        Composite: Composite,\\r\\n\\r\\n        create: function ( root, path, parsedPath ) {\\r\\n\\r\\n            if ( ! ( root && root.isAnimationObjectGroup ) ) {\\r\\n\\r\\n                return new PropertyBinding( root, path, parsedPath );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                return new PropertyBinding.Composite( root, path, parsedPath );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Replaces spaces with underscores and removes unsupported characters from\\r\\n         * node names, to ensure compatibility with parseTrackName().\\r\\n         *\\r\\n         * @param  {string} name Node name to be sanitized.\\r\\n         * @return {string}\\r\\n         */\\r\\n        sanitizeNodeName: ( function () {\\r\\n\\r\\n            var reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\\r\\n\\r\\n            return function sanitizeNodeName( name ) {\\r\\n\\r\\n                return name.replace( /\\\\s/g, '_' ).replace( reservedRe, '' );\\r\\n\\r\\n            };\\r\\n\\r\\n        }() ),\\r\\n\\r\\n        parseTrackName: function () {\\r\\n\\r\\n            // Attempts to allow node names from any language. ES5's `\\\\w` regexp matches\\r\\n            // only latin characters, and the unicode \\\\p{L} is not yet supported. So\\r\\n            // instead, we exclude reserved characters and match everything else.\\r\\n            var wordChar = '[^' + RESERVED_CHARS_RE + ']';\\r\\n            var wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\\\\\.', '' ) + ']';\\r\\n\\r\\n            // Parent directories, delimited by '/' or ':'. Currently unused, but must\\r\\n            // be matched to parse the rest of the track name.\\r\\n            var directoryRe = /((?:WC+[\\\\/:])*)/.source.replace( 'WC', wordChar );\\r\\n\\r\\n            // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\\r\\n            var nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\\r\\n\\r\\n            // Object on target node, and accessor. May not contain reserved\\r\\n            // characters. Accessor may contain any character except closing bracket.\\r\\n            var objectRe = /(?:\\\\.(WC+)(?:\\\\[(.+)\\\\])?)?/.source.replace( 'WC', wordChar );\\r\\n\\r\\n            // Property and accessor. May not contain reserved characters. Accessor may\\r\\n            // contain any non-bracket characters.\\r\\n            var propertyRe = /\\\\.(WC+)(?:\\\\[(.+)\\\\])?/.source.replace( 'WC', wordChar );\\r\\n\\r\\n            var trackRe = new RegExp( ''\\r\\n                + '^'\\r\\n                + directoryRe\\r\\n                + nodeRe\\r\\n                + objectRe\\r\\n                + propertyRe\\r\\n                + '$'\\r\\n            );\\r\\n\\r\\n            var supportedObjectNames = [ 'material', 'materials', 'bones' ];\\r\\n\\r\\n            return function parseTrackName( trackName ) {\\r\\n\\r\\n                var matches = trackRe.exec( trackName );\\r\\n\\r\\n                if ( ! matches ) {\\r\\n\\r\\n                    throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\\r\\n\\r\\n                }\\r\\n\\r\\n                var results = {\\r\\n                    // directoryName: matches[ 1 ], // (tschw) currently unused\\r\\n                    nodeName: matches[ 2 ],\\r\\n                    objectName: matches[ 3 ],\\r\\n                    objectIndex: matches[ 4 ],\\r\\n                    propertyName: matches[ 5 ], // required\\r\\n                    propertyIndex: matches[ 6 ]\\r\\n                };\\r\\n\\r\\n                var lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\\r\\n\\r\\n                if ( lastDot !== undefined && lastDot !== - 1 ) {\\r\\n\\r\\n                    var objectName = results.nodeName.substring( lastDot + 1 );\\r\\n\\r\\n                    // Object names must be checked against a whitelist. Otherwise, there\\r\\n                    // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\\r\\n                    // 'bar' could be the objectName, or part of a nodeName (which can\\r\\n                    // include '.' characters).\\r\\n                    if ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\\r\\n\\r\\n                        results.nodeName = results.nodeName.substring( 0, lastDot );\\r\\n                        results.objectName = objectName;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( results.propertyName === null || results.propertyName.length === 0 ) {\\r\\n\\r\\n                    throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\\r\\n\\r\\n                }\\r\\n\\r\\n                return results;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        findNode: function ( root, nodeName ) {\\r\\n\\r\\n            if ( ! nodeName || nodeName === \\\"\\\" || nodeName === \\\"root\\\" || nodeName === \\\".\\\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\\r\\n\\r\\n                return root;\\r\\n\\r\\n            }\\r\\n\\r\\n            // search into skeleton bones.\\r\\n            if ( root.skeleton ) {\\r\\n\\r\\n                var bone = root.skeleton.getBoneByName( nodeName );\\r\\n\\r\\n                if ( bone !== undefined ) {\\r\\n\\r\\n                    return bone;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // search into node subtree.\\r\\n            if ( root.children ) {\\r\\n\\r\\n                var searchNodeSubtree = function ( children ) {\\r\\n\\r\\n                    for ( var i = 0; i < children.length; i ++ ) {\\r\\n\\r\\n                        var childNode = children[ i ];\\r\\n\\r\\n                        if ( childNode.name === nodeName || childNode.uuid === nodeName ) {\\r\\n\\r\\n                            return childNode;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        var result = searchNodeSubtree( childNode.children );\\r\\n\\r\\n                        if ( result ) return result;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    return null;\\r\\n\\r\\n                };\\r\\n\\r\\n                var subTreeNode = searchNodeSubtree( root.children );\\r\\n\\r\\n                if ( subTreeNode ) {\\r\\n\\r\\n                    return subTreeNode;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( PropertyBinding.prototype, { // prototype, continued\\r\\n\\r\\n        // these are used to \\\"bind\\\" a nonexistent property\\r\\n        _getValue_unavailable: function () {},\\r\\n        _setValue_unavailable: function () {},\\r\\n\\r\\n        BindingType: {\\r\\n            Direct: 0,\\r\\n            EntireArray: 1,\\r\\n            ArrayElement: 2,\\r\\n            HasFromToArray: 3\\r\\n        },\\r\\n\\r\\n        Versioning: {\\r\\n            None: 0,\\r\\n            NeedsUpdate: 1,\\r\\n            MatrixWorldNeedsUpdate: 2\\r\\n        },\\r\\n\\r\\n        GetterByBindingType: [\\r\\n\\r\\n            function getValue_direct( buffer, offset ) {\\r\\n\\r\\n                buffer[ offset ] = this.node[ this.propertyName ];\\r\\n\\r\\n            },\\r\\n\\r\\n            function getValue_array( buffer, offset ) {\\r\\n\\r\\n                var source = this.resolvedProperty;\\r\\n\\r\\n                for ( var i = 0, n = source.length; i !== n; ++ i ) {\\r\\n\\r\\n                    buffer[ offset ++ ] = source[ i ];\\r\\n\\r\\n                }\\r\\n\\r\\n            },\\r\\n\\r\\n            function getValue_arrayElement( buffer, offset ) {\\r\\n\\r\\n                buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\\r\\n\\r\\n            },\\r\\n\\r\\n            function getValue_toArray( buffer, offset ) {\\r\\n\\r\\n                this.resolvedProperty.toArray( buffer, offset );\\r\\n\\r\\n            }\\r\\n\\r\\n        ],\\r\\n\\r\\n        SetterByBindingTypeAndVersioning: [\\r\\n\\r\\n            [\\r\\n                // Direct\\r\\n\\r\\n                function setValue_direct( buffer, offset ) {\\r\\n\\r\\n                    this.targetObject[ this.propertyName ] = buffer[ offset ];\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_direct_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.targetObject[ this.propertyName ] = buffer[ offset ];\\r\\n                    this.targetObject.needsUpdate = true;\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.targetObject[ this.propertyName ] = buffer[ offset ];\\r\\n                    this.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            ], [\\r\\n\\r\\n                // EntireArray\\r\\n\\r\\n                function setValue_array( buffer, offset ) {\\r\\n\\r\\n                    var dest = this.resolvedProperty;\\r\\n\\r\\n                    for ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n                        dest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n                    }\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_array_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    var dest = this.resolvedProperty;\\r\\n\\r\\n                    for ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n                        dest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n                    }\\r\\n\\r\\n                    this.targetObject.needsUpdate = true;\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    var dest = this.resolvedProperty;\\r\\n\\r\\n                    for ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n                        dest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n                    }\\r\\n\\r\\n                    this.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            ], [\\r\\n\\r\\n                // ArrayElement\\r\\n\\r\\n                function setValue_arrayElement( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n                    this.targetObject.needsUpdate = true;\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n                    this.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            ], [\\r\\n\\r\\n                // HasToFromArray\\r\\n\\r\\n                function setValue_fromArray( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty.fromArray( buffer, offset );\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_fromArray_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty.fromArray( buffer, offset );\\r\\n                    this.targetObject.needsUpdate = true;\\r\\n\\r\\n                },\\r\\n\\r\\n                function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n                    this.resolvedProperty.fromArray( buffer, offset );\\r\\n                    this.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n                }\\r\\n\\r\\n            ]\\r\\n\\r\\n        ],\\r\\n\\r\\n        getValue: function getValue_unbound( targetArray, offset ) {\\r\\n\\r\\n            this.bind();\\r\\n            this.getValue( targetArray, offset );\\r\\n\\r\\n            // Note: This class uses a State pattern on a per-method basis:\\r\\n            // 'bind' sets 'this.getValue' / 'setValue' and shadows the\\r\\n            // prototype version of these methods with one that represents\\r\\n            // the bound state. When the property is not found, the methods\\r\\n            // become no-ops.\\r\\n\\r\\n        },\\r\\n\\r\\n        setValue: function getValue_unbound( sourceArray, offset ) {\\r\\n\\r\\n            this.bind();\\r\\n            this.setValue( sourceArray, offset );\\r\\n\\r\\n        },\\r\\n\\r\\n        // create getter / setter pair for a property in the scene graph\\r\\n        bind: function () {\\r\\n\\r\\n            var targetObject = this.node,\\r\\n                parsedPath = this.parsedPath,\\r\\n\\r\\n                objectName = parsedPath.objectName,\\r\\n                propertyName = parsedPath.propertyName,\\r\\n                propertyIndex = parsedPath.propertyIndex;\\r\\n\\r\\n            if ( ! targetObject ) {\\r\\n\\r\\n                targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\\r\\n\\r\\n                this.node = targetObject;\\r\\n\\r\\n            }\\r\\n\\r\\n            // set fail state so we can just 'return' on error\\r\\n            this.getValue = this._getValue_unavailable;\\r\\n            this.setValue = this._setValue_unavailable;\\r\\n\\r\\n            // ensure there is a value node\\r\\n            if ( ! targetObject ) {\\r\\n\\r\\n                console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\\\'t found.' );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( objectName ) {\\r\\n\\r\\n                var objectIndex = parsedPath.objectIndex;\\r\\n\\r\\n                // special cases were we need to reach deeper into the hierarchy to get the face materials....\\r\\n                switch ( objectName ) {\\r\\n\\r\\n                    case 'materials':\\r\\n\\r\\n                        if ( ! targetObject.material ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        if ( ! targetObject.material.materials ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        targetObject = targetObject.material.materials;\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    case 'bones':\\r\\n\\r\\n                        if ( ! targetObject.skeleton ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        // potential future optimization: skip this if propertyIndex is already an integer\\r\\n                        // and convert the integer string to a true integer.\\r\\n\\r\\n                        targetObject = targetObject.skeleton.bones;\\r\\n\\r\\n                        // support resolving morphTarget names into indices.\\r\\n                        for ( var i = 0; i < targetObject.length; i ++ ) {\\r\\n\\r\\n                            if ( targetObject[ i ].name === objectIndex ) {\\r\\n\\r\\n                                objectIndex = i;\\r\\n                                break;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                        break;\\r\\n\\r\\n                    default:\\r\\n\\r\\n                        if ( targetObject[ objectName ] === undefined ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        targetObject = targetObject[ objectName ];\\r\\n\\r\\n                }\\r\\n\\r\\n\\r\\n                if ( objectIndex !== undefined ) {\\r\\n\\r\\n                    if ( targetObject[ objectIndex ] === undefined ) {\\r\\n\\r\\n                        console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\\r\\n                        return;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    targetObject = targetObject[ objectIndex ];\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            // resolve property\\r\\n            var nodeProperty = targetObject[ propertyName ];\\r\\n\\r\\n            if ( nodeProperty === undefined ) {\\r\\n\\r\\n                var nodeName = parsedPath.nodeName;\\r\\n\\r\\n                console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\\r\\n                    '.' + propertyName + ' but it wasn\\\\'t found.', targetObject );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            // determine versioning scheme\\r\\n            var versioning = this.Versioning.None;\\r\\n\\r\\n            this.targetObject = targetObject;\\r\\n\\r\\n            if ( targetObject.needsUpdate !== undefined ) { // material\\r\\n\\r\\n                versioning = this.Versioning.NeedsUpdate;\\r\\n\\r\\n            } else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\\r\\n\\r\\n                versioning = this.Versioning.MatrixWorldNeedsUpdate;\\r\\n\\r\\n            }\\r\\n\\r\\n            // determine how the property gets bound\\r\\n            var bindingType = this.BindingType.Direct;\\r\\n\\r\\n            if ( propertyIndex !== undefined ) {\\r\\n\\r\\n                // access a sub element of the property array (only primitives are supported right now)\\r\\n\\r\\n                if ( propertyName === \\\"morphTargetInfluences\\\" ) {\\r\\n\\r\\n                    // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\\r\\n\\r\\n                    // support resolving morphTarget names into indices.\\r\\n                    if ( ! targetObject.geometry ) {\\r\\n\\r\\n                        console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\\r\\n                        return;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    if ( targetObject.geometry.isBufferGeometry ) {\\r\\n\\r\\n                        if ( ! targetObject.geometry.morphAttributes ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        for ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\\r\\n\\r\\n                            if ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\\r\\n\\r\\n                                propertyIndex = i;\\r\\n                                break;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        if ( ! targetObject.geometry.morphTargets ) {\\r\\n\\r\\n                            console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\\r\\n                            return;\\r\\n\\r\\n                        }\\r\\n\\r\\n                        for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\\r\\n\\r\\n                            if ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\\r\\n\\r\\n                                propertyIndex = i;\\r\\n                                break;\\r\\n\\r\\n                            }\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                bindingType = this.BindingType.ArrayElement;\\r\\n\\r\\n                this.resolvedProperty = nodeProperty;\\r\\n                this.propertyIndex = propertyIndex;\\r\\n\\r\\n            } else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\\r\\n\\r\\n                // must use copy for Object3D.Euler/Quaternion\\r\\n\\r\\n                bindingType = this.BindingType.HasFromToArray;\\r\\n\\r\\n                this.resolvedProperty = nodeProperty;\\r\\n\\r\\n            } else if ( Array.isArray( nodeProperty ) ) {\\r\\n\\r\\n                bindingType = this.BindingType.EntireArray;\\r\\n\\r\\n                this.resolvedProperty = nodeProperty;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.propertyName = propertyName;\\r\\n\\r\\n            }\\r\\n\\r\\n            // select getter / setter\\r\\n            this.getValue = this.GetterByBindingType[ bindingType ];\\r\\n            this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\\r\\n\\r\\n        },\\r\\n\\r\\n        unbind: function () {\\r\\n\\r\\n            this.node = null;\\r\\n\\r\\n            // back to the prototype version of getValue / setValue\\r\\n            // note: avoiding to mutate the shape of 'this' via 'delete'\\r\\n            this.getValue = this._getValue_unbound;\\r\\n            this.setValue = this._setValue_unbound;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //!\\\\ DECLARE ALIAS AFTER assign prototype !\\r\\n    Object.assign( PropertyBinding.prototype, {\\r\\n\\r\\n        // initial state of these methods that calls 'bind'\\r\\n        _getValue_unbound: PropertyBinding.prototype.getValue,\\r\\n        _setValue_unbound: PropertyBinding.prototype.setValue,\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * A group of objects that receives a shared animation state.\\r\\n     *\\r\\n     * Usage:\\r\\n     *\\r\\n     * \\t-\\tAdd objects you would otherwise pass as 'root' to the\\r\\n     * \\t\\tconstructor or the .clipAction method of AnimationMixer.\\r\\n     *\\r\\n     * \\t-\\tInstead pass this object as 'root'.\\r\\n     *\\r\\n     * \\t-\\tYou can also add and remove objects later when the mixer\\r\\n     * \\t\\tis running.\\r\\n     *\\r\\n     * Note:\\r\\n     *\\r\\n     *  \\tObjects of this class appear as one object to the mixer,\\r\\n     *  \\tso cache control of the individual objects must be done\\r\\n     *  \\ton the group.\\r\\n     *\\r\\n     * Limitation:\\r\\n     *\\r\\n     * \\t- \\tThe animated properties must be compatible among the\\r\\n     * \\t\\tall objects in the group.\\r\\n     *\\r\\n     *  -\\tA single property can either be controlled through a\\r\\n     *  \\ttarget group or directly, but not both.\\r\\n     *\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function AnimationObjectGroup() {\\r\\n\\r\\n        this.uuid = _Math.generateUUID();\\r\\n\\r\\n        // cached objects followed by the active ones\\r\\n        this._objects = Array.prototype.slice.call( arguments );\\r\\n\\r\\n        this.nCachedObjects_ = 0;\\t\\t\\t// threshold\\r\\n        // note: read by PropertyBinding.Composite\\r\\n\\r\\n        var indices = {};\\r\\n        this._indicesByUUID = indices;\\t\\t// for bookkeeping\\r\\n\\r\\n        for ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n            indices[ arguments[ i ].uuid ] = i;\\r\\n\\r\\n        }\\r\\n\\r\\n        this._paths = [];\\t\\t\\t\\t\\t// inside: string\\r\\n        this._parsedPaths = [];\\t\\t\\t\\t// inside: { we don't care, here }\\r\\n        this._bindings = []; \\t\\t\\t\\t// inside: Array< PropertyBinding >\\r\\n        this._bindingsIndicesByPath = {}; \\t// inside: indices in these arrays\\r\\n\\r\\n        var scope = this;\\r\\n\\r\\n        this.stats = {\\r\\n\\r\\n            objects: {\\r\\n                get total() {\\r\\n\\r\\n                    return scope._objects.length;\\r\\n\\r\\n                },\\r\\n                get inUse() {\\r\\n\\r\\n                    return this.total - scope.nCachedObjects_;\\r\\n\\r\\n                }\\r\\n            },\\r\\n            get bindingsPerObject() {\\r\\n\\r\\n                return scope._bindings.length;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( AnimationObjectGroup.prototype, {\\r\\n\\r\\n        isAnimationObjectGroup: true,\\r\\n\\r\\n        add: function () {\\r\\n\\r\\n            var objects = this._objects,\\r\\n                nObjects = objects.length,\\r\\n                nCachedObjects = this.nCachedObjects_,\\r\\n                indicesByUUID = this._indicesByUUID,\\r\\n                paths = this._paths,\\r\\n                parsedPaths = this._parsedPaths,\\r\\n                bindings = this._bindings,\\r\\n                nBindings = bindings.length,\\r\\n                knownObject = undefined;\\r\\n\\r\\n            for ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n                var object = arguments[ i ],\\r\\n                    uuid = object.uuid,\\r\\n                    index = indicesByUUID[ uuid ];\\r\\n\\r\\n                if ( index === undefined ) {\\r\\n\\r\\n                    // unknown object -> add it to the ACTIVE region\\r\\n\\r\\n                    index = nObjects ++;\\r\\n                    indicesByUUID[ uuid ] = index;\\r\\n                    objects.push( object );\\r\\n\\r\\n                    // accounting is done, now do the same for all bindings\\r\\n\\r\\n                    for ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n                        bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( index < nCachedObjects ) {\\r\\n\\r\\n                    knownObject = objects[ index ];\\r\\n\\r\\n                    // move existing object to the ACTIVE region\\r\\n\\r\\n                    var firstActiveIndex = -- nCachedObjects,\\r\\n                        lastCachedObject = objects[ firstActiveIndex ];\\r\\n\\r\\n                    indicesByUUID[ lastCachedObject.uuid ] = index;\\r\\n                    objects[ index ] = lastCachedObject;\\r\\n\\r\\n                    indicesByUUID[ uuid ] = firstActiveIndex;\\r\\n                    objects[ firstActiveIndex ] = object;\\r\\n\\r\\n                    // accounting is done, now do the same for all bindings\\r\\n\\r\\n                    for ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n                        var bindingsForPath = bindings[ j ],\\r\\n                            lastCached = bindingsForPath[ firstActiveIndex ],\\r\\n                            binding = bindingsForPath[ index ];\\r\\n\\r\\n                        bindingsForPath[ index ] = lastCached;\\r\\n\\r\\n                        if ( binding === undefined ) {\\r\\n\\r\\n                            // since we do not bother to create new bindings\\r\\n                            // for objects that are cached, the binding may\\r\\n                            // or may not exist\\r\\n\\r\\n                            binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        bindingsForPath[ firstActiveIndex ] = binding;\\r\\n\\r\\n                    }\\r\\n\\r\\n                } else if ( objects[ index ] !== knownObject ) {\\r\\n\\r\\n                    console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\\r\\n                        'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\\r\\n\\r\\n                } // else the object is already where we want it to be\\r\\n\\r\\n            } // for arguments\\r\\n\\r\\n            this.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n        },\\r\\n\\r\\n        remove: function () {\\r\\n\\r\\n            var objects = this._objects,\\r\\n                nCachedObjects = this.nCachedObjects_,\\r\\n                indicesByUUID = this._indicesByUUID,\\r\\n                bindings = this._bindings,\\r\\n                nBindings = bindings.length;\\r\\n\\r\\n            for ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n                var object = arguments[ i ],\\r\\n                    uuid = object.uuid,\\r\\n                    index = indicesByUUID[ uuid ];\\r\\n\\r\\n                if ( index !== undefined && index >= nCachedObjects ) {\\r\\n\\r\\n                    // move existing object into the CACHED region\\r\\n\\r\\n                    var lastCachedIndex = nCachedObjects ++,\\r\\n                        firstActiveObject = objects[ lastCachedIndex ];\\r\\n\\r\\n                    indicesByUUID[ firstActiveObject.uuid ] = index;\\r\\n                    objects[ index ] = firstActiveObject;\\r\\n\\r\\n                    indicesByUUID[ uuid ] = lastCachedIndex;\\r\\n                    objects[ lastCachedIndex ] = object;\\r\\n\\r\\n                    // accounting is done, now do the same for all bindings\\r\\n\\r\\n                    for ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n                        var bindingsForPath = bindings[ j ],\\r\\n                            firstActive = bindingsForPath[ lastCachedIndex ],\\r\\n                            binding = bindingsForPath[ index ];\\r\\n\\r\\n                        bindingsForPath[ index ] = firstActive;\\r\\n                        bindingsForPath[ lastCachedIndex ] = binding;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } // for arguments\\r\\n\\r\\n            this.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n        },\\r\\n\\r\\n        // remove & forget\\r\\n        uncache: function () {\\r\\n\\r\\n            var objects = this._objects,\\r\\n                nObjects = objects.length,\\r\\n                nCachedObjects = this.nCachedObjects_,\\r\\n                indicesByUUID = this._indicesByUUID,\\r\\n                bindings = this._bindings,\\r\\n                nBindings = bindings.length;\\r\\n\\r\\n            for ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n                var object = arguments[ i ],\\r\\n                    uuid = object.uuid,\\r\\n                    index = indicesByUUID[ uuid ];\\r\\n\\r\\n                if ( index !== undefined ) {\\r\\n\\r\\n                    delete indicesByUUID[ uuid ];\\r\\n\\r\\n                    if ( index < nCachedObjects ) {\\r\\n\\r\\n                        // object is cached, shrink the CACHED region\\r\\n\\r\\n                        var firstActiveIndex = -- nCachedObjects,\\r\\n                            lastCachedObject = objects[ firstActiveIndex ],\\r\\n                            lastIndex = -- nObjects,\\r\\n                            lastObject = objects[ lastIndex ];\\r\\n\\r\\n                        // last cached object takes this object's place\\r\\n                        indicesByUUID[ lastCachedObject.uuid ] = index;\\r\\n                        objects[ index ] = lastCachedObject;\\r\\n\\r\\n                        // last object goes to the activated slot and pop\\r\\n                        indicesByUUID[ lastObject.uuid ] = firstActiveIndex;\\r\\n                        objects[ firstActiveIndex ] = lastObject;\\r\\n                        objects.pop();\\r\\n\\r\\n                        // accounting is done, now do the same for all bindings\\r\\n\\r\\n                        for ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n                            var bindingsForPath = bindings[ j ],\\r\\n                                lastCached = bindingsForPath[ firstActiveIndex ],\\r\\n                                last = bindingsForPath[ lastIndex ];\\r\\n\\r\\n                            bindingsForPath[ index ] = lastCached;\\r\\n                            bindingsForPath[ firstActiveIndex ] = last;\\r\\n                            bindingsForPath.pop();\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // object is active, just swap with the last and pop\\r\\n\\r\\n                        var lastIndex = -- nObjects,\\r\\n                            lastObject = objects[ lastIndex ];\\r\\n\\r\\n                        indicesByUUID[ lastObject.uuid ] = index;\\r\\n                        objects[ index ] = lastObject;\\r\\n                        objects.pop();\\r\\n\\r\\n                        // accounting is done, now do the same for all bindings\\r\\n\\r\\n                        for ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n                            var bindingsForPath = bindings[ j ];\\r\\n\\r\\n                            bindingsForPath[ index ] = bindingsForPath[ lastIndex ];\\r\\n                            bindingsForPath.pop();\\r\\n\\r\\n                        }\\r\\n\\r\\n                    } // cached or active\\r\\n\\r\\n                } // if object is known\\r\\n\\r\\n            } // for arguments\\r\\n\\r\\n            this.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Internal interface used by befriended PropertyBinding.Composite:\\r\\n\\r\\n        subscribe_: function ( path, parsedPath ) {\\r\\n\\r\\n            // returns an array of bindings for the given path that is changed\\r\\n            // according to the contained objects in the group\\r\\n\\r\\n            var indicesByPath = this._bindingsIndicesByPath,\\r\\n                index = indicesByPath[ path ],\\r\\n                bindings = this._bindings;\\r\\n\\r\\n            if ( index !== undefined ) return bindings[ index ];\\r\\n\\r\\n            var paths = this._paths,\\r\\n                parsedPaths = this._parsedPaths,\\r\\n                objects = this._objects,\\r\\n                nObjects = objects.length,\\r\\n                nCachedObjects = this.nCachedObjects_,\\r\\n                bindingsForPath = new Array( nObjects );\\r\\n\\r\\n            index = bindings.length;\\r\\n\\r\\n            indicesByPath[ path ] = index;\\r\\n\\r\\n            paths.push( path );\\r\\n            parsedPaths.push( parsedPath );\\r\\n            bindings.push( bindingsForPath );\\r\\n\\r\\n            for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\\r\\n\\r\\n                var object = objects[ i ];\\r\\n                bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\\r\\n\\r\\n            }\\r\\n\\r\\n            return bindingsForPath;\\r\\n\\r\\n        },\\r\\n\\r\\n        unsubscribe_: function ( path ) {\\r\\n\\r\\n            // tells the group to forget about a property path and no longer\\r\\n            // update the array previously obtained with 'subscribe_'\\r\\n\\r\\n            var indicesByPath = this._bindingsIndicesByPath,\\r\\n                index = indicesByPath[ path ];\\r\\n\\r\\n            if ( index !== undefined ) {\\r\\n\\r\\n                var paths = this._paths,\\r\\n                    parsedPaths = this._parsedPaths,\\r\\n                    bindings = this._bindings,\\r\\n                    lastBindingsIndex = bindings.length - 1,\\r\\n                    lastBindings = bindings[ lastBindingsIndex ],\\r\\n                    lastBindingsPath = path[ lastBindingsIndex ];\\r\\n\\r\\n                indicesByPath[ lastBindingsPath ] = index;\\r\\n\\r\\n                bindings[ index ] = lastBindings;\\r\\n                bindings.pop();\\r\\n\\r\\n                parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\\r\\n                parsedPaths.pop();\\r\\n\\r\\n                paths[ index ] = paths[ lastBindingsIndex ];\\r\\n                paths.pop();\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Action provided by AnimationMixer for scheduling clip playback on specific\\r\\n     * objects.\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     *\\r\\n     */\\r\\n\\r\\n    function AnimationAction( mixer, clip, localRoot ) {\\r\\n\\r\\n        this._mixer = mixer;\\r\\n        this._clip = clip;\\r\\n        this._localRoot = localRoot || null;\\r\\n\\r\\n        var tracks = clip.tracks,\\r\\n            nTracks = tracks.length,\\r\\n            interpolants = new Array( nTracks );\\r\\n\\r\\n        var interpolantSettings = {\\r\\n            endingStart: ZeroCurvatureEnding,\\r\\n            endingEnd: ZeroCurvatureEnding\\r\\n        };\\r\\n\\r\\n        for ( var i = 0; i !== nTracks; ++ i ) {\\r\\n\\r\\n            var interpolant = tracks[ i ].createInterpolant( null );\\r\\n            interpolants[ i ] = interpolant;\\r\\n            interpolant.settings = interpolantSettings;\\r\\n\\r\\n        }\\r\\n\\r\\n        this._interpolantSettings = interpolantSettings;\\r\\n\\r\\n        this._interpolants = interpolants;\\t// bound by the mixer\\r\\n\\r\\n        // inside: PropertyMixer (managed by the mixer)\\r\\n        this._propertyBindings = new Array( nTracks );\\r\\n\\r\\n        this._cacheIndex = null;\\t\\t\\t// for the memory manager\\r\\n        this._byClipCacheIndex = null;\\t\\t// for the memory manager\\r\\n\\r\\n        this._timeScaleInterpolant = null;\\r\\n        this._weightInterpolant = null;\\r\\n\\r\\n        this.loop = LoopRepeat;\\r\\n        this._loopCount = - 1;\\r\\n\\r\\n        // global mixer time when the action is to be started\\r\\n        // it's set back to 'null' upon start of the action\\r\\n        this._startTime = null;\\r\\n\\r\\n        // scaled local time of the action\\r\\n        // gets clamped or wrapped to 0..clip.duration according to loop\\r\\n        this.time = 0;\\r\\n\\r\\n        this.timeScale = 1;\\r\\n        this._effectiveTimeScale = 1;\\r\\n\\r\\n        this.weight = 1;\\r\\n        this._effectiveWeight = 1;\\r\\n\\r\\n        this.repetitions = Infinity; \\t\\t// no. of repetitions when looping\\r\\n\\r\\n        this.paused = false;\\t\\t\\t\\t// true -> zero effective time scale\\r\\n        this.enabled = true;\\t\\t\\t\\t// false -> zero effective weight\\r\\n\\r\\n        this.clampWhenFinished \\t= false;\\t// keep feeding the last frame?\\r\\n\\r\\n        this.zeroSlopeAtStart \\t= true;\\t\\t// for smooth interpolation w/o separate\\r\\n        this.zeroSlopeAtEnd\\t\\t= true;\\t\\t// clips for start, loop and end\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( AnimationAction.prototype, {\\r\\n\\r\\n        // State & Scheduling\\r\\n\\r\\n        play: function () {\\r\\n\\r\\n            this._mixer._activateAction( this );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        stop: function () {\\r\\n\\r\\n            this._mixer._deactivateAction( this );\\r\\n\\r\\n            return this.reset();\\r\\n\\r\\n        },\\r\\n\\r\\n        reset: function () {\\r\\n\\r\\n            this.paused = false;\\r\\n            this.enabled = true;\\r\\n\\r\\n            this.time = 0;\\t\\t\\t// restart clip\\r\\n            this._loopCount = - 1;\\t// forget previous loops\\r\\n            this._startTime = null;\\t// forget scheduling\\r\\n\\r\\n            return this.stopFading().stopWarping();\\r\\n\\r\\n        },\\r\\n\\r\\n        isRunning: function () {\\r\\n\\r\\n            return this.enabled && ! this.paused && this.timeScale !== 0 &&\\r\\n                this._startTime === null && this._mixer._isActiveAction( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        // return true when play has been called\\r\\n        isScheduled: function () {\\r\\n\\r\\n            return this._mixer._isActiveAction( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        startAt: function ( time ) {\\r\\n\\r\\n            this._startTime = time;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setLoop: function ( mode, repetitions ) {\\r\\n\\r\\n            this.loop = mode;\\r\\n            this.repetitions = repetitions;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Weight\\r\\n\\r\\n        // set the weight stopping any scheduled fading\\r\\n        // although .enabled = false yields an effective weight of zero, this\\r\\n        // method does *not* change .enabled, because it would be confusing\\r\\n        setEffectiveWeight: function ( weight ) {\\r\\n\\r\\n            this.weight = weight;\\r\\n\\r\\n            // note: same logic as when updated at runtime\\r\\n            this._effectiveWeight = this.enabled ? weight : 0;\\r\\n\\r\\n            return this.stopFading();\\r\\n\\r\\n        },\\r\\n\\r\\n        // return the weight considering fading and .enabled\\r\\n        getEffectiveWeight: function () {\\r\\n\\r\\n            return this._effectiveWeight;\\r\\n\\r\\n        },\\r\\n\\r\\n        fadeIn: function ( duration ) {\\r\\n\\r\\n            return this._scheduleFading( duration, 0, 1 );\\r\\n\\r\\n        },\\r\\n\\r\\n        fadeOut: function ( duration ) {\\r\\n\\r\\n            return this._scheduleFading( duration, 1, 0 );\\r\\n\\r\\n        },\\r\\n\\r\\n        crossFadeFrom: function ( fadeOutAction, duration, warp ) {\\r\\n\\r\\n            fadeOutAction.fadeOut( duration );\\r\\n            this.fadeIn( duration );\\r\\n\\r\\n            if ( warp ) {\\r\\n\\r\\n                var fadeInDuration = this._clip.duration,\\r\\n                    fadeOutDuration = fadeOutAction._clip.duration,\\r\\n\\r\\n                    startEndRatio = fadeOutDuration / fadeInDuration,\\r\\n                    endStartRatio = fadeInDuration / fadeOutDuration;\\r\\n\\r\\n                fadeOutAction.warp( 1.0, startEndRatio, duration );\\r\\n                this.warp( endStartRatio, 1.0, duration );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        crossFadeTo: function ( fadeInAction, duration, warp ) {\\r\\n\\r\\n            return fadeInAction.crossFadeFrom( this, duration, warp );\\r\\n\\r\\n        },\\r\\n\\r\\n        stopFading: function () {\\r\\n\\r\\n            var weightInterpolant = this._weightInterpolant;\\r\\n\\r\\n            if ( weightInterpolant !== null ) {\\r\\n\\r\\n                this._weightInterpolant = null;\\r\\n                this._mixer._takeBackControlInterpolant( weightInterpolant );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Time Scale Control\\r\\n\\r\\n        // set the time scale stopping any scheduled warping\\r\\n        // although .paused = true yields an effective time scale of zero, this\\r\\n        // method does *not* change .paused, because it would be confusing\\r\\n        setEffectiveTimeScale: function ( timeScale ) {\\r\\n\\r\\n            this.timeScale = timeScale;\\r\\n            this._effectiveTimeScale = this.paused ? 0 : timeScale;\\r\\n\\r\\n            return this.stopWarping();\\r\\n\\r\\n        },\\r\\n\\r\\n        // return the time scale considering warping and .paused\\r\\n        getEffectiveTimeScale: function () {\\r\\n\\r\\n            return this._effectiveTimeScale;\\r\\n\\r\\n        },\\r\\n\\r\\n        setDuration: function ( duration ) {\\r\\n\\r\\n            this.timeScale = this._clip.duration / duration;\\r\\n\\r\\n            return this.stopWarping();\\r\\n\\r\\n        },\\r\\n\\r\\n        syncWith: function ( action ) {\\r\\n\\r\\n            this.time = action.time;\\r\\n            this.timeScale = action.timeScale;\\r\\n\\r\\n            return this.stopWarping();\\r\\n\\r\\n        },\\r\\n\\r\\n        halt: function ( duration ) {\\r\\n\\r\\n            return this.warp( this._effectiveTimeScale, 0, duration );\\r\\n\\r\\n        },\\r\\n\\r\\n        warp: function ( startTimeScale, endTimeScale, duration ) {\\r\\n\\r\\n            var mixer = this._mixer, now = mixer.time,\\r\\n                interpolant = this._timeScaleInterpolant,\\r\\n\\r\\n                timeScale = this.timeScale;\\r\\n\\r\\n            if ( interpolant === null ) {\\r\\n\\r\\n                interpolant = mixer._lendControlInterpolant();\\r\\n                this._timeScaleInterpolant = interpolant;\\r\\n\\r\\n            }\\r\\n\\r\\n            var times = interpolant.parameterPositions,\\r\\n                values = interpolant.sampleValues;\\r\\n\\r\\n            times[ 0 ] = now;\\r\\n            times[ 1 ] = now + duration;\\r\\n\\r\\n            values[ 0 ] = startTimeScale / timeScale;\\r\\n            values[ 1 ] = endTimeScale / timeScale;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        stopWarping: function () {\\r\\n\\r\\n            var timeScaleInterpolant = this._timeScaleInterpolant;\\r\\n\\r\\n            if ( timeScaleInterpolant !== null ) {\\r\\n\\r\\n                this._timeScaleInterpolant = null;\\r\\n                this._mixer._takeBackControlInterpolant( timeScaleInterpolant );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Object Accessors\\r\\n\\r\\n        getMixer: function () {\\r\\n\\r\\n            return this._mixer;\\r\\n\\r\\n        },\\r\\n\\r\\n        getClip: function () {\\r\\n\\r\\n            return this._clip;\\r\\n\\r\\n        },\\r\\n\\r\\n        getRoot: function () {\\r\\n\\r\\n            return this._localRoot || this._mixer._root;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Interna\\r\\n\\r\\n        _update: function ( time, deltaTime, timeDirection, accuIndex ) {\\r\\n\\r\\n            // called by the mixer\\r\\n\\r\\n            if ( ! this.enabled ) {\\r\\n\\r\\n                // call ._updateWeight() to update ._effectiveWeight\\r\\n\\r\\n                this._updateWeight( time );\\r\\n                return;\\r\\n\\r\\n            }\\r\\n\\r\\n            var startTime = this._startTime;\\r\\n\\r\\n            if ( startTime !== null ) {\\r\\n\\r\\n                // check for scheduled start of action\\r\\n\\r\\n                var timeRunning = ( time - startTime ) * timeDirection;\\r\\n                if ( timeRunning < 0 || timeDirection === 0 ) {\\r\\n\\r\\n                    return; // yet to come / don't decide when delta = 0\\r\\n\\r\\n                }\\r\\n\\r\\n                // start\\r\\n\\r\\n                this._startTime = null; // unschedule\\r\\n                deltaTime = timeDirection * timeRunning;\\r\\n\\r\\n            }\\r\\n\\r\\n            // apply time scale and advance time\\r\\n\\r\\n            deltaTime *= this._updateTimeScale( time );\\r\\n            var clipTime = this._updateTime( deltaTime );\\r\\n\\r\\n            // note: _updateTime may disable the action resulting in\\r\\n            // an effective weight of 0\\r\\n\\r\\n            var weight = this._updateWeight( time );\\r\\n\\r\\n            if ( weight > 0 ) {\\r\\n\\r\\n                var interpolants = this._interpolants;\\r\\n                var propertyMixers = this._propertyBindings;\\r\\n\\r\\n                for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\\r\\n\\r\\n                    interpolants[ j ].evaluate( clipTime );\\r\\n                    propertyMixers[ j ].accumulate( accuIndex, weight );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _updateWeight: function ( time ) {\\r\\n\\r\\n            var weight = 0;\\r\\n\\r\\n            if ( this.enabled ) {\\r\\n\\r\\n                weight = this.weight;\\r\\n                var interpolant = this._weightInterpolant;\\r\\n\\r\\n                if ( interpolant !== null ) {\\r\\n\\r\\n                    var interpolantValue = interpolant.evaluate( time )[ 0 ];\\r\\n\\r\\n                    weight *= interpolantValue;\\r\\n\\r\\n                    if ( time > interpolant.parameterPositions[ 1 ] ) {\\r\\n\\r\\n                        this.stopFading();\\r\\n\\r\\n                        if ( interpolantValue === 0 ) {\\r\\n\\r\\n                            // faded out, disable\\r\\n                            this.enabled = false;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this._effectiveWeight = weight;\\r\\n            return weight;\\r\\n\\r\\n        },\\r\\n\\r\\n        _updateTimeScale: function ( time ) {\\r\\n\\r\\n            var timeScale = 0;\\r\\n\\r\\n            if ( ! this.paused ) {\\r\\n\\r\\n                timeScale = this.timeScale;\\r\\n\\r\\n                var interpolant = this._timeScaleInterpolant;\\r\\n\\r\\n                if ( interpolant !== null ) {\\r\\n\\r\\n                    var interpolantValue = interpolant.evaluate( time )[ 0 ];\\r\\n\\r\\n                    timeScale *= interpolantValue;\\r\\n\\r\\n                    if ( time > interpolant.parameterPositions[ 1 ] ) {\\r\\n\\r\\n                        this.stopWarping();\\r\\n\\r\\n                        if ( timeScale === 0 ) {\\r\\n\\r\\n                            // motion has halted, pause\\r\\n                            this.paused = true;\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            // warp done - apply final time scale\\r\\n                            this.timeScale = timeScale;\\r\\n\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this._effectiveTimeScale = timeScale;\\r\\n            return timeScale;\\r\\n\\r\\n        },\\r\\n\\r\\n        _updateTime: function ( deltaTime ) {\\r\\n\\r\\n            var time = this.time + deltaTime;\\r\\n            var duration = this._clip.duration;\\r\\n            var loop = this.loop;\\r\\n            var loopCount = this._loopCount;\\r\\n\\r\\n            var pingPong = ( loop === LoopPingPong );\\r\\n\\r\\n            if ( deltaTime === 0 ) {\\r\\n\\r\\n                if ( loopCount === - 1 ) return time;\\r\\n\\r\\n                return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( loop === LoopOnce ) {\\r\\n\\r\\n                if ( loopCount === - 1 ) {\\r\\n\\r\\n                    // just started\\r\\n\\r\\n                    this._loopCount = 0;\\r\\n                    this._setEndings( true, true, false );\\r\\n\\r\\n                }\\r\\n\\r\\n                handle_stop: {\\r\\n\\r\\n                    if ( time >= duration ) {\\r\\n\\r\\n                        time = duration;\\r\\n\\r\\n                    } else if ( time < 0 ) {\\r\\n\\r\\n                        time = 0;\\r\\n\\r\\n                    } else break handle_stop;\\r\\n\\r\\n                    if ( this.clampWhenFinished ) this.paused = true;\\r\\n                    else this.enabled = false;\\r\\n\\r\\n                    this._mixer.dispatchEvent( {\\r\\n                        type: 'finished', action: this,\\r\\n                        direction: deltaTime < 0 ? - 1 : 1\\r\\n                    } );\\r\\n\\r\\n                }\\r\\n\\r\\n            } else { // repetitive Repeat or PingPong\\r\\n\\r\\n                if ( loopCount === - 1 ) {\\r\\n\\r\\n                    // just started\\r\\n\\r\\n                    if ( deltaTime >= 0 ) {\\r\\n\\r\\n                        loopCount = 0;\\r\\n\\r\\n                        this._setEndings( true, this.repetitions === 0, pingPong );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // when looping in reverse direction, the initial\\r\\n                        // transition through zero counts as a repetition,\\r\\n                        // so leave loopCount at -1\\r\\n\\r\\n                        this._setEndings( this.repetitions === 0, true, pingPong );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( time >= duration || time < 0 ) {\\r\\n\\r\\n                    // wrap around\\r\\n\\r\\n                    var loopDelta = Math.floor( time / duration ); // signed\\r\\n                    time -= duration * loopDelta;\\r\\n\\r\\n                    loopCount += Math.abs( loopDelta );\\r\\n\\r\\n                    var pending = this.repetitions - loopCount;\\r\\n\\r\\n                    if ( pending <= 0 ) {\\r\\n\\r\\n                        // have to stop (switch state, clamp time, fire event)\\r\\n\\r\\n                        if ( this.clampWhenFinished ) this.paused = true;\\r\\n                        else this.enabled = false;\\r\\n\\r\\n                        time = deltaTime > 0 ? duration : 0;\\r\\n\\r\\n                        this._mixer.dispatchEvent( {\\r\\n                            type: 'finished', action: this,\\r\\n                            direction: deltaTime > 0 ? 1 : - 1\\r\\n                        } );\\r\\n\\r\\n                    } else {\\r\\n\\r\\n                        // keep running\\r\\n\\r\\n                        if ( pending === 1 ) {\\r\\n\\r\\n                            // entering the last round\\r\\n\\r\\n                            var atStart = deltaTime < 0;\\r\\n                            this._setEndings( atStart, ! atStart, pingPong );\\r\\n\\r\\n                        } else {\\r\\n\\r\\n                            this._setEndings( false, false, pingPong );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        this._loopCount = loopCount;\\r\\n\\r\\n                        this._mixer.dispatchEvent( {\\r\\n                            type: 'loop', action: this, loopDelta: loopDelta\\r\\n                        } );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( pingPong && ( loopCount & 1 ) === 1 ) {\\r\\n\\r\\n                    // invert time for the \\\"pong round\\\"\\r\\n\\r\\n                    this.time = time;\\r\\n                    return duration - time;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            this.time = time;\\r\\n            return time;\\r\\n\\r\\n        },\\r\\n\\r\\n        _setEndings: function ( atStart, atEnd, pingPong ) {\\r\\n\\r\\n            var settings = this._interpolantSettings;\\r\\n\\r\\n            if ( pingPong ) {\\r\\n\\r\\n                settings.endingStart \\t= ZeroSlopeEnding;\\r\\n                settings.endingEnd\\t\\t= ZeroSlopeEnding;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // assuming for LoopOnce atStart == atEnd == true\\r\\n\\r\\n                if ( atStart ) {\\r\\n\\r\\n                    settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    settings.endingStart = WrapAroundEnding;\\r\\n\\r\\n                }\\r\\n\\r\\n                if ( atEnd ) {\\r\\n\\r\\n                    settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    settings.endingEnd \\t = WrapAroundEnding;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _scheduleFading: function ( duration, weightNow, weightThen ) {\\r\\n\\r\\n            var mixer = this._mixer, now = mixer.time,\\r\\n                interpolant = this._weightInterpolant;\\r\\n\\r\\n            if ( interpolant === null ) {\\r\\n\\r\\n                interpolant = mixer._lendControlInterpolant();\\r\\n                this._weightInterpolant = interpolant;\\r\\n\\r\\n            }\\r\\n\\r\\n            var times = interpolant.parameterPositions,\\r\\n                values = interpolant.sampleValues;\\r\\n\\r\\n            times[ 0 ] = now; \\t\\t\\t\\tvalues[ 0 ] = weightNow;\\r\\n            times[ 1 ] = now + duration;\\tvalues[ 1 ] = weightThen;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Player for AnimationClips.\\r\\n     *\\r\\n     *\\r\\n     * @author Ben Houston / http://clara.io/\\r\\n     * @author David Sarno / http://lighthaus.us/\\r\\n     * @author tschw\\r\\n     */\\r\\n\\r\\n    function AnimationMixer( root ) {\\r\\n\\r\\n        this._root = root;\\r\\n        this._initMemoryManager();\\r\\n        this._accuIndex = 0;\\r\\n\\r\\n        this.time = 0;\\r\\n\\r\\n        this.timeScale = 1.0;\\r\\n\\r\\n    }\\r\\n\\r\\n    AnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\\r\\n\\r\\n        constructor: AnimationMixer,\\r\\n\\r\\n        _bindAction: function ( action, prototypeAction ) {\\r\\n\\r\\n            var root = action._localRoot || this._root,\\r\\n                tracks = action._clip.tracks,\\r\\n                nTracks = tracks.length,\\r\\n                bindings = action._propertyBindings,\\r\\n                interpolants = action._interpolants,\\r\\n                rootUuid = root.uuid,\\r\\n                bindingsByRoot = this._bindingsByRootAndName,\\r\\n                bindingsByName = bindingsByRoot[ rootUuid ];\\r\\n\\r\\n            if ( bindingsByName === undefined ) {\\r\\n\\r\\n                bindingsByName = {};\\r\\n                bindingsByRoot[ rootUuid ] = bindingsByName;\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i !== nTracks; ++ i ) {\\r\\n\\r\\n                var track = tracks[ i ],\\r\\n                    trackName = track.name,\\r\\n                    binding = bindingsByName[ trackName ];\\r\\n\\r\\n                if ( binding !== undefined ) {\\r\\n\\r\\n                    bindings[ i ] = binding;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    binding = bindings[ i ];\\r\\n\\r\\n                    if ( binding !== undefined ) {\\r\\n\\r\\n                        // existing binding, make sure the cache knows\\r\\n\\r\\n                        if ( binding._cacheIndex === null ) {\\r\\n\\r\\n                            ++ binding.referenceCount;\\r\\n                            this._addInactiveBinding( binding, rootUuid, trackName );\\r\\n\\r\\n                        }\\r\\n\\r\\n                        continue;\\r\\n\\r\\n                    }\\r\\n\\r\\n                    var path = prototypeAction && prototypeAction.\\r\\n                        _propertyBindings[ i ].binding.parsedPath;\\r\\n\\r\\n                    binding = new PropertyMixer(\\r\\n                        PropertyBinding.create( root, trackName, path ),\\r\\n                        track.ValueTypeName, track.getValueSize() );\\r\\n\\r\\n                    ++ binding.referenceCount;\\r\\n                    this._addInactiveBinding( binding, rootUuid, trackName );\\r\\n\\r\\n                    bindings[ i ] = binding;\\r\\n\\r\\n                }\\r\\n\\r\\n                interpolants[ i ].resultBuffer = binding.buffer;\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _activateAction: function ( action ) {\\r\\n\\r\\n            if ( ! this._isActiveAction( action ) ) {\\r\\n\\r\\n                if ( action._cacheIndex === null ) {\\r\\n\\r\\n                    // this action has been forgotten by the cache, but the user\\r\\n                    // appears to be still using it -> rebind\\r\\n\\r\\n                    var rootUuid = ( action._localRoot || this._root ).uuid,\\r\\n                        clipUuid = action._clip.uuid,\\r\\n                        actionsForClip = this._actionsByClip[ clipUuid ];\\r\\n\\r\\n                    this._bindAction( action,\\r\\n                        actionsForClip && actionsForClip.knownActions[ 0 ] );\\r\\n\\r\\n                    this._addInactiveAction( action, clipUuid, rootUuid );\\r\\n\\r\\n                }\\r\\n\\r\\n                var bindings = action._propertyBindings;\\r\\n\\r\\n                // increment reference counts / sort out state\\r\\n                for ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                    var binding = bindings[ i ];\\r\\n\\r\\n                    if ( binding.useCount ++ === 0 ) {\\r\\n\\r\\n                        this._lendBinding( binding );\\r\\n                        binding.saveOriginalState();\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this._lendAction( action );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _deactivateAction: function ( action ) {\\r\\n\\r\\n            if ( this._isActiveAction( action ) ) {\\r\\n\\r\\n                var bindings = action._propertyBindings;\\r\\n\\r\\n                // decrement reference counts / sort out state\\r\\n                for ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                    var binding = bindings[ i ];\\r\\n\\r\\n                    if ( -- binding.useCount === 0 ) {\\r\\n\\r\\n                        binding.restoreOriginalState();\\r\\n                        this._takeBackBinding( binding );\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n                this._takeBackAction( action );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        // Memory manager\\r\\n\\r\\n        _initMemoryManager: function () {\\r\\n\\r\\n            this._actions = []; // 'nActiveActions' followed by inactive ones\\r\\n            this._nActiveActions = 0;\\r\\n\\r\\n            this._actionsByClip = {};\\r\\n            // inside:\\r\\n            // {\\r\\n            // \\t\\tknownActions: Array< AnimationAction >\\t- used as prototypes\\r\\n            // \\t\\tactionByRoot: AnimationAction\\t\\t\\t- lookup\\r\\n            // }\\r\\n\\r\\n\\r\\n            this._bindings = []; // 'nActiveBindings' followed by inactive ones\\r\\n            this._nActiveBindings = 0;\\r\\n\\r\\n            this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\\r\\n\\r\\n\\r\\n            this._controlInterpolants = []; // same game as above\\r\\n            this._nActiveControlInterpolants = 0;\\r\\n\\r\\n            var scope = this;\\r\\n\\r\\n            this.stats = {\\r\\n\\r\\n                actions: {\\r\\n                    get total() {\\r\\n\\r\\n                        return scope._actions.length;\\r\\n\\r\\n                    },\\r\\n                    get inUse() {\\r\\n\\r\\n                        return scope._nActiveActions;\\r\\n\\r\\n                    }\\r\\n                },\\r\\n                bindings: {\\r\\n                    get total() {\\r\\n\\r\\n                        return scope._bindings.length;\\r\\n\\r\\n                    },\\r\\n                    get inUse() {\\r\\n\\r\\n                        return scope._nActiveBindings;\\r\\n\\r\\n                    }\\r\\n                },\\r\\n                controlInterpolants: {\\r\\n                    get total() {\\r\\n\\r\\n                        return scope._controlInterpolants.length;\\r\\n\\r\\n                    },\\r\\n                    get inUse() {\\r\\n\\r\\n                        return scope._nActiveControlInterpolants;\\r\\n\\r\\n                    }\\r\\n                }\\r\\n\\r\\n            };\\r\\n\\r\\n        },\\r\\n\\r\\n        // Memory management for AnimationAction objects\\r\\n\\r\\n        _isActiveAction: function ( action ) {\\r\\n\\r\\n            var index = action._cacheIndex;\\r\\n            return index !== null && index < this._nActiveActions;\\r\\n\\r\\n        },\\r\\n\\r\\n        _addInactiveAction: function ( action, clipUuid, rootUuid ) {\\r\\n\\r\\n            var actions = this._actions,\\r\\n                actionsByClip = this._actionsByClip,\\r\\n                actionsForClip = actionsByClip[ clipUuid ];\\r\\n\\r\\n            if ( actionsForClip === undefined ) {\\r\\n\\r\\n                actionsForClip = {\\r\\n\\r\\n                    knownActions: [ action ],\\r\\n                    actionByRoot: {}\\r\\n\\r\\n                };\\r\\n\\r\\n                action._byClipCacheIndex = 0;\\r\\n\\r\\n                actionsByClip[ clipUuid ] = actionsForClip;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var knownActions = actionsForClip.knownActions;\\r\\n\\r\\n                action._byClipCacheIndex = knownActions.length;\\r\\n                knownActions.push( action );\\r\\n\\r\\n            }\\r\\n\\r\\n            action._cacheIndex = actions.length;\\r\\n            actions.push( action );\\r\\n\\r\\n            actionsForClip.actionByRoot[ rootUuid ] = action;\\r\\n\\r\\n        },\\r\\n\\r\\n        _removeInactiveAction: function ( action ) {\\r\\n\\r\\n            var actions = this._actions,\\r\\n                lastInactiveAction = actions[ actions.length - 1 ],\\r\\n                cacheIndex = action._cacheIndex;\\r\\n\\r\\n            lastInactiveAction._cacheIndex = cacheIndex;\\r\\n            actions[ cacheIndex ] = lastInactiveAction;\\r\\n            actions.pop();\\r\\n\\r\\n            action._cacheIndex = null;\\r\\n\\r\\n\\r\\n            var clipUuid = action._clip.uuid,\\r\\n                actionsByClip = this._actionsByClip,\\r\\n                actionsForClip = actionsByClip[ clipUuid ],\\r\\n                knownActionsForClip = actionsForClip.knownActions,\\r\\n\\r\\n                lastKnownAction =\\r\\n                    knownActionsForClip[ knownActionsForClip.length - 1 ],\\r\\n\\r\\n                byClipCacheIndex = action._byClipCacheIndex;\\r\\n\\r\\n            lastKnownAction._byClipCacheIndex = byClipCacheIndex;\\r\\n            knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\\r\\n            knownActionsForClip.pop();\\r\\n\\r\\n            action._byClipCacheIndex = null;\\r\\n\\r\\n\\r\\n            var actionByRoot = actionsForClip.actionByRoot,\\r\\n                rootUuid = ( action._localRoot || this._root ).uuid;\\r\\n\\r\\n            delete actionByRoot[ rootUuid ];\\r\\n\\r\\n            if ( knownActionsForClip.length === 0 ) {\\r\\n\\r\\n                delete actionsByClip[ clipUuid ];\\r\\n\\r\\n            }\\r\\n\\r\\n            this._removeInactiveBindingsForAction( action );\\r\\n\\r\\n        },\\r\\n\\r\\n        _removeInactiveBindingsForAction: function ( action ) {\\r\\n\\r\\n            var bindings = action._propertyBindings;\\r\\n            for ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n                var binding = bindings[ i ];\\r\\n\\r\\n                if ( -- binding.referenceCount === 0 ) {\\r\\n\\r\\n                    this._removeInactiveBinding( binding );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _lendAction: function ( action ) {\\r\\n\\r\\n            // [ active actions |  inactive actions  ]\\r\\n            // [  active actions >| inactive actions ]\\r\\n            //                 s        a\\r\\n            //                  <-swap->\\r\\n            //                 a        s\\r\\n\\r\\n            var actions = this._actions,\\r\\n                prevIndex = action._cacheIndex,\\r\\n\\r\\n                lastActiveIndex = this._nActiveActions ++,\\r\\n\\r\\n                firstInactiveAction = actions[ lastActiveIndex ];\\r\\n\\r\\n            action._cacheIndex = lastActiveIndex;\\r\\n            actions[ lastActiveIndex ] = action;\\r\\n\\r\\n            firstInactiveAction._cacheIndex = prevIndex;\\r\\n            actions[ prevIndex ] = firstInactiveAction;\\r\\n\\r\\n        },\\r\\n\\r\\n        _takeBackAction: function ( action ) {\\r\\n\\r\\n            // [  active actions  | inactive actions ]\\r\\n            // [ active actions |< inactive actions  ]\\r\\n            //        a        s\\r\\n            //         <-swap->\\r\\n            //        s        a\\r\\n\\r\\n            var actions = this._actions,\\r\\n                prevIndex = action._cacheIndex,\\r\\n\\r\\n                firstInactiveIndex = -- this._nActiveActions,\\r\\n\\r\\n                lastActiveAction = actions[ firstInactiveIndex ];\\r\\n\\r\\n            action._cacheIndex = firstInactiveIndex;\\r\\n            actions[ firstInactiveIndex ] = action;\\r\\n\\r\\n            lastActiveAction._cacheIndex = prevIndex;\\r\\n            actions[ prevIndex ] = lastActiveAction;\\r\\n\\r\\n        },\\r\\n\\r\\n        // Memory management for PropertyMixer objects\\r\\n\\r\\n        _addInactiveBinding: function ( binding, rootUuid, trackName ) {\\r\\n\\r\\n            var bindingsByRoot = this._bindingsByRootAndName,\\r\\n                bindingByName = bindingsByRoot[ rootUuid ],\\r\\n\\r\\n                bindings = this._bindings;\\r\\n\\r\\n            if ( bindingByName === undefined ) {\\r\\n\\r\\n                bindingByName = {};\\r\\n                bindingsByRoot[ rootUuid ] = bindingByName;\\r\\n\\r\\n            }\\r\\n\\r\\n            bindingByName[ trackName ] = binding;\\r\\n\\r\\n            binding._cacheIndex = bindings.length;\\r\\n            bindings.push( binding );\\r\\n\\r\\n        },\\r\\n\\r\\n        _removeInactiveBinding: function ( binding ) {\\r\\n\\r\\n            var bindings = this._bindings,\\r\\n                propBinding = binding.binding,\\r\\n                rootUuid = propBinding.rootNode.uuid,\\r\\n                trackName = propBinding.path,\\r\\n                bindingsByRoot = this._bindingsByRootAndName,\\r\\n                bindingByName = bindingsByRoot[ rootUuid ],\\r\\n\\r\\n                lastInactiveBinding = bindings[ bindings.length - 1 ],\\r\\n                cacheIndex = binding._cacheIndex;\\r\\n\\r\\n            lastInactiveBinding._cacheIndex = cacheIndex;\\r\\n            bindings[ cacheIndex ] = lastInactiveBinding;\\r\\n            bindings.pop();\\r\\n\\r\\n            delete bindingByName[ trackName ];\\r\\n\\r\\n            remove_empty_map: {\\r\\n\\r\\n                for ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\\r\\n\\r\\n                delete bindingsByRoot[ rootUuid ];\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        _lendBinding: function ( binding ) {\\r\\n\\r\\n            var bindings = this._bindings,\\r\\n                prevIndex = binding._cacheIndex,\\r\\n\\r\\n                lastActiveIndex = this._nActiveBindings ++,\\r\\n\\r\\n                firstInactiveBinding = bindings[ lastActiveIndex ];\\r\\n\\r\\n            binding._cacheIndex = lastActiveIndex;\\r\\n            bindings[ lastActiveIndex ] = binding;\\r\\n\\r\\n            firstInactiveBinding._cacheIndex = prevIndex;\\r\\n            bindings[ prevIndex ] = firstInactiveBinding;\\r\\n\\r\\n        },\\r\\n\\r\\n        _takeBackBinding: function ( binding ) {\\r\\n\\r\\n            var bindings = this._bindings,\\r\\n                prevIndex = binding._cacheIndex,\\r\\n\\r\\n                firstInactiveIndex = -- this._nActiveBindings,\\r\\n\\r\\n                lastActiveBinding = bindings[ firstInactiveIndex ];\\r\\n\\r\\n            binding._cacheIndex = firstInactiveIndex;\\r\\n            bindings[ firstInactiveIndex ] = binding;\\r\\n\\r\\n            lastActiveBinding._cacheIndex = prevIndex;\\r\\n            bindings[ prevIndex ] = lastActiveBinding;\\r\\n\\r\\n        },\\r\\n\\r\\n\\r\\n        // Memory management of Interpolants for weight and time scale\\r\\n\\r\\n        _lendControlInterpolant: function () {\\r\\n\\r\\n            var interpolants = this._controlInterpolants,\\r\\n                lastActiveIndex = this._nActiveControlInterpolants ++,\\r\\n                interpolant = interpolants[ lastActiveIndex ];\\r\\n\\r\\n            if ( interpolant === undefined ) {\\r\\n\\r\\n                interpolant = new LinearInterpolant(\\r\\n                    new Float32Array( 2 ), new Float32Array( 2 ),\\r\\n                    1, this._controlInterpolantsResultBuffer );\\r\\n\\r\\n                interpolant.__cacheIndex = lastActiveIndex;\\r\\n                interpolants[ lastActiveIndex ] = interpolant;\\r\\n\\r\\n            }\\r\\n\\r\\n            return interpolant;\\r\\n\\r\\n        },\\r\\n\\r\\n        _takeBackControlInterpolant: function ( interpolant ) {\\r\\n\\r\\n            var interpolants = this._controlInterpolants,\\r\\n                prevIndex = interpolant.__cacheIndex,\\r\\n\\r\\n                firstInactiveIndex = -- this._nActiveControlInterpolants,\\r\\n\\r\\n                lastActiveInterpolant = interpolants[ firstInactiveIndex ];\\r\\n\\r\\n            interpolant.__cacheIndex = firstInactiveIndex;\\r\\n            interpolants[ firstInactiveIndex ] = interpolant;\\r\\n\\r\\n            lastActiveInterpolant.__cacheIndex = prevIndex;\\r\\n            interpolants[ prevIndex ] = lastActiveInterpolant;\\r\\n\\r\\n        },\\r\\n\\r\\n        _controlInterpolantsResultBuffer: new Float32Array( 1 ),\\r\\n\\r\\n        // return an action for a clip optionally using a custom root target\\r\\n        // object (this method allocates a lot of dynamic memory in case a\\r\\n        // previously unknown clip/root combination is specified)\\r\\n        clipAction: function ( clip, optionalRoot ) {\\r\\n\\r\\n            var root = optionalRoot || this._root,\\r\\n                rootUuid = root.uuid,\\r\\n\\r\\n                clipObject = typeof clip === 'string' ?\\r\\n                    AnimationClip.findByName( root, clip ) : clip,\\r\\n\\r\\n                clipUuid = clipObject !== null ? clipObject.uuid : clip,\\r\\n\\r\\n                actionsForClip = this._actionsByClip[ clipUuid ],\\r\\n                prototypeAction = null;\\r\\n\\r\\n            if ( actionsForClip !== undefined ) {\\r\\n\\r\\n                var existingAction =\\r\\n                    actionsForClip.actionByRoot[ rootUuid ];\\r\\n\\r\\n                if ( existingAction !== undefined ) {\\r\\n\\r\\n                    return existingAction;\\r\\n\\r\\n                }\\r\\n\\r\\n                // we know the clip, so we don't have to parse all\\r\\n                // the bindings again but can just copy\\r\\n                prototypeAction = actionsForClip.knownActions[ 0 ];\\r\\n\\r\\n                // also, take the clip from the prototype action\\r\\n                if ( clipObject === null )\\r\\n                    clipObject = prototypeAction._clip;\\r\\n\\r\\n            }\\r\\n\\r\\n            // clip must be known when specified via string\\r\\n            if ( clipObject === null ) return null;\\r\\n\\r\\n            // allocate all resources required to run it\\r\\n            var newAction = new AnimationAction( this, clipObject, optionalRoot );\\r\\n\\r\\n            this._bindAction( newAction, prototypeAction );\\r\\n\\r\\n            // and make the action known to the memory manager\\r\\n            this._addInactiveAction( newAction, clipUuid, rootUuid );\\r\\n\\r\\n            return newAction;\\r\\n\\r\\n        },\\r\\n\\r\\n        // get an existing action\\r\\n        existingAction: function ( clip, optionalRoot ) {\\r\\n\\r\\n            var root = optionalRoot || this._root,\\r\\n                rootUuid = root.uuid,\\r\\n\\r\\n                clipObject = typeof clip === 'string' ?\\r\\n                    AnimationClip.findByName( root, clip ) : clip,\\r\\n\\r\\n                clipUuid = clipObject ? clipObject.uuid : clip,\\r\\n\\r\\n                actionsForClip = this._actionsByClip[ clipUuid ];\\r\\n\\r\\n            if ( actionsForClip !== undefined ) {\\r\\n\\r\\n                return actionsForClip.actionByRoot[ rootUuid ] || null;\\r\\n\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n\\r\\n        },\\r\\n\\r\\n        // deactivates all previously scheduled actions\\r\\n        stopAllAction: function () {\\r\\n\\r\\n            var actions = this._actions,\\r\\n                nActions = this._nActiveActions,\\r\\n                bindings = this._bindings,\\r\\n                nBindings = this._nActiveBindings;\\r\\n\\r\\n            this._nActiveActions = 0;\\r\\n            this._nActiveBindings = 0;\\r\\n\\r\\n            for ( var i = 0; i !== nActions; ++ i ) {\\r\\n\\r\\n                actions[ i ].reset();\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0; i !== nBindings; ++ i ) {\\r\\n\\r\\n                bindings[ i ].useCount = 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // advance the time and update apply the animation\\r\\n        update: function ( deltaTime ) {\\r\\n\\r\\n            deltaTime *= this.timeScale;\\r\\n\\r\\n            var actions = this._actions,\\r\\n                nActions = this._nActiveActions,\\r\\n\\r\\n                time = this.time += deltaTime,\\r\\n                timeDirection = Math.sign( deltaTime ),\\r\\n\\r\\n                accuIndex = this._accuIndex ^= 1;\\r\\n\\r\\n            // run active actions\\r\\n\\r\\n            for ( var i = 0; i !== nActions; ++ i ) {\\r\\n\\r\\n                var action = actions[ i ];\\r\\n\\r\\n                action._update( time, deltaTime, timeDirection, accuIndex );\\r\\n\\r\\n            }\\r\\n\\r\\n            // update scene graph\\r\\n\\r\\n            var bindings = this._bindings,\\r\\n                nBindings = this._nActiveBindings;\\r\\n\\r\\n            for ( var i = 0; i !== nBindings; ++ i ) {\\r\\n\\r\\n                bindings[ i ].apply( accuIndex );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // return this mixer's root target object\\r\\n        getRoot: function () {\\r\\n\\r\\n            return this._root;\\r\\n\\r\\n        },\\r\\n\\r\\n        // free all resources specific to a particular clip\\r\\n        uncacheClip: function ( clip ) {\\r\\n\\r\\n            var actions = this._actions,\\r\\n                clipUuid = clip.uuid,\\r\\n                actionsByClip = this._actionsByClip,\\r\\n                actionsForClip = actionsByClip[ clipUuid ];\\r\\n\\r\\n            if ( actionsForClip !== undefined ) {\\r\\n\\r\\n                // note: just calling _removeInactiveAction would mess up the\\r\\n                // iteration state and also require updating the state we can\\r\\n                // just throw away\\r\\n\\r\\n                var actionsToRemove = actionsForClip.knownActions;\\r\\n\\r\\n                for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\\r\\n\\r\\n                    var action = actionsToRemove[ i ];\\r\\n\\r\\n                    this._deactivateAction( action );\\r\\n\\r\\n                    var cacheIndex = action._cacheIndex,\\r\\n                        lastInactiveAction = actions[ actions.length - 1 ];\\r\\n\\r\\n                    action._cacheIndex = null;\\r\\n                    action._byClipCacheIndex = null;\\r\\n\\r\\n                    lastInactiveAction._cacheIndex = cacheIndex;\\r\\n                    actions[ cacheIndex ] = lastInactiveAction;\\r\\n                    actions.pop();\\r\\n\\r\\n                    this._removeInactiveBindingsForAction( action );\\r\\n\\r\\n                }\\r\\n\\r\\n                delete actionsByClip[ clipUuid ];\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        // free all resources specific to a particular root target object\\r\\n        uncacheRoot: function ( root ) {\\r\\n\\r\\n            var rootUuid = root.uuid,\\r\\n                actionsByClip = this._actionsByClip;\\r\\n\\r\\n            for ( var clipUuid in actionsByClip ) {\\r\\n\\r\\n                var actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\\r\\n                    action = actionByRoot[ rootUuid ];\\r\\n\\r\\n                if ( action !== undefined ) {\\r\\n\\r\\n                    this._deactivateAction( action );\\r\\n                    this._removeInactiveAction( action );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            var bindingsByRoot = this._bindingsByRootAndName,\\r\\n                bindingByName = bindingsByRoot[ rootUuid ];\\r\\n\\r\\n            if ( bindingByName !== undefined ) {\\r\\n\\r\\n                for ( var trackName in bindingByName ) {\\r\\n\\r\\n                    var binding = bindingByName[ trackName ];\\r\\n                    binding.restoreOriginalState();\\r\\n                    this._removeInactiveBinding( binding );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        // remove a targeted clip from the cache\\r\\n        uncacheAction: function ( clip, optionalRoot ) {\\r\\n\\r\\n            var action = this.existingAction( clip, optionalRoot );\\r\\n\\r\\n            if ( action !== null ) {\\r\\n\\r\\n                this._deactivateAction( action );\\r\\n                this._removeInactiveAction( action );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Uniform( value ) {\\r\\n\\r\\n        if ( typeof value === 'string' ) {\\r\\n\\r\\n            console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\\r\\n            value = arguments[ 1 ];\\r\\n\\r\\n        }\\r\\n\\r\\n        this.value = value;\\r\\n\\r\\n    }\\r\\n\\r\\n    Uniform.prototype.clone = function () {\\r\\n\\r\\n        return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     */\\r\\n\\r\\n    function InstancedBufferGeometry() {\\r\\n\\r\\n        BufferGeometry.call( this );\\r\\n\\r\\n        this.type = 'InstancedBufferGeometry';\\r\\n        this.maxInstancedCount = undefined;\\r\\n\\r\\n    }\\r\\n\\r\\n    InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\\r\\n\\r\\n        constructor: InstancedBufferGeometry,\\r\\n\\r\\n        isInstancedBufferGeometry: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            BufferGeometry.prototype.copy.call( this, source );\\r\\n\\r\\n            this.maxInstancedCount = source.maxInstancedCount;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     */\\r\\n\\r\\n    function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\\r\\n\\r\\n        InterleavedBuffer.call( this, array, stride );\\r\\n\\r\\n        this.meshPerAttribute = meshPerAttribute || 1;\\r\\n\\r\\n    }\\r\\n\\r\\n    InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\\r\\n\\r\\n        constructor: InstancedInterleavedBuffer,\\r\\n\\r\\n        isInstancedInterleavedBuffer: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            InterleavedBuffer.prototype.copy.call( this, source );\\r\\n\\r\\n            this.meshPerAttribute = source.meshPerAttribute;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author benaadams / https://twitter.com/ben_a_adams\\r\\n     */\\r\\n\\r\\n    function InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\\r\\n\\r\\n        if ( typeof ( normalized ) === 'number' ) {\\r\\n\\r\\n            meshPerAttribute = normalized;\\r\\n\\r\\n            normalized = false;\\r\\n\\r\\n            console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        BufferAttribute.call( this, array, itemSize, normalized );\\r\\n\\r\\n        this.meshPerAttribute = meshPerAttribute || 1;\\r\\n\\r\\n    }\\r\\n\\r\\n    InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\\r\\n\\r\\n        constructor: InstancedBufferAttribute,\\r\\n\\r\\n        isInstancedBufferAttribute: true,\\r\\n\\r\\n        copy: function ( source ) {\\r\\n\\r\\n            BufferAttribute.prototype.copy.call( this, source );\\r\\n\\r\\n            this.meshPerAttribute = source.meshPerAttribute;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author bhouston / http://clara.io/\\r\\n     * @author stephomi / http://stephaneginier.com/\\r\\n     */\\r\\n\\r\\n    function Raycaster( origin, direction, near, far ) {\\r\\n\\r\\n        this.ray = new Ray( origin, direction );\\r\\n        // direction is assumed to be normalized (for accurate distance calculations)\\r\\n\\r\\n        this.near = near || 0;\\r\\n        this.far = far || Infinity;\\r\\n\\r\\n        this.params = {\\r\\n            Mesh: {},\\r\\n            Line: {},\\r\\n            LOD: {},\\r\\n            Points: { threshold: 1 },\\r\\n            Sprite: {}\\r\\n        };\\r\\n\\r\\n        Object.defineProperties( this.params, {\\r\\n            PointCloud: {\\r\\n                get: function () {\\r\\n\\r\\n                    console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\\r\\n                    return this.Points;\\r\\n\\r\\n                }\\r\\n            }\\r\\n        } );\\r\\n\\r\\n    }\\r\\n\\r\\n    function ascSort( a, b ) {\\r\\n\\r\\n        return a.distance - b.distance;\\r\\n\\r\\n    }\\r\\n\\r\\n    function intersectObject( object, raycaster, intersects, recursive ) {\\r\\n\\r\\n        if ( object.visible === false ) return;\\r\\n\\r\\n        object.raycast( raycaster, intersects );\\r\\n\\r\\n        if ( recursive === true ) {\\r\\n\\r\\n            var children = object.children;\\r\\n\\r\\n            for ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n                intersectObject( children[ i ], raycaster, intersects, true );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Raycaster.prototype, {\\r\\n\\r\\n        linePrecision: 1,\\r\\n\\r\\n        set: function ( origin, direction ) {\\r\\n\\r\\n            // direction is assumed to be normalized (for accurate distance calculations)\\r\\n\\r\\n            this.ray.set( origin, direction );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCamera: function ( coords, camera ) {\\r\\n\\r\\n            if ( ( camera && camera.isPerspectiveCamera ) ) {\\r\\n\\r\\n                this.ray.origin.setFromMatrixPosition( camera.matrixWorld );\\r\\n                this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\\r\\n\\r\\n            } else if ( ( camera && camera.isOrthographicCamera ) ) {\\r\\n\\r\\n                this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\\r\\n                this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                console.error( 'THREE.Raycaster: Unsupported camera type.' );\\r\\n\\r\\n            }\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectObject: function ( object, recursive, optionalTarget ) {\\r\\n\\r\\n            var intersects = optionalTarget || [];\\r\\n\\r\\n            intersectObject( object, this, intersects, recursive );\\r\\n\\r\\n            intersects.sort( ascSort );\\r\\n\\r\\n            return intersects;\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectObjects: function ( objects, recursive, optionalTarget ) {\\r\\n\\r\\n            var intersects = optionalTarget || [];\\r\\n\\r\\n            if ( Array.isArray( objects ) === false ) {\\r\\n\\r\\n                console.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\\r\\n                return intersects;\\r\\n\\r\\n            }\\r\\n\\r\\n            for ( var i = 0, l = objects.length; i < l; i ++ ) {\\r\\n\\r\\n                intersectObject( objects[ i ], this, intersects, recursive );\\r\\n\\r\\n            }\\r\\n\\r\\n            intersects.sort( ascSort );\\r\\n\\r\\n            return intersects;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function Clock( autoStart ) {\\r\\n\\r\\n        this.autoStart = ( autoStart !== undefined ) ? autoStart : true;\\r\\n\\r\\n        this.startTime = 0;\\r\\n        this.oldTime = 0;\\r\\n        this.elapsedTime = 0;\\r\\n\\r\\n        this.running = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Clock.prototype, {\\r\\n\\r\\n        start: function () {\\r\\n\\r\\n            this.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\\r\\n\\r\\n            this.oldTime = this.startTime;\\r\\n            this.elapsedTime = 0;\\r\\n            this.running = true;\\r\\n\\r\\n        },\\r\\n\\r\\n        stop: function () {\\r\\n\\r\\n            this.getElapsedTime();\\r\\n            this.running = false;\\r\\n            this.autoStart = false;\\r\\n\\r\\n        },\\r\\n\\r\\n        getElapsedTime: function () {\\r\\n\\r\\n            this.getDelta();\\r\\n            return this.elapsedTime;\\r\\n\\r\\n        },\\r\\n\\r\\n        getDelta: function () {\\r\\n\\r\\n            var diff = 0;\\r\\n\\r\\n            if ( this.autoStart && ! this.running ) {\\r\\n\\r\\n                this.start();\\r\\n                return 0;\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.running ) {\\r\\n\\r\\n                var newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\\r\\n\\r\\n                diff = ( newTime - this.oldTime ) / 1000;\\r\\n                this.oldTime = newTime;\\r\\n\\r\\n                this.elapsedTime += diff;\\r\\n\\r\\n            }\\r\\n\\r\\n            return diff;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     *\\r\\n     * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\\r\\n     *\\r\\n     * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\\r\\n     * The azimuthal angle (theta) is measured from the positive z-axiz.\\r\\n     */\\r\\n\\r\\n    function Spherical( radius, phi, theta ) {\\r\\n\\r\\n        this.radius = ( radius !== undefined ) ? radius : 1.0;\\r\\n        this.phi = ( phi !== undefined ) ? phi : 0; // polar angle\\r\\n        this.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\\r\\n\\r\\n        return this;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Spherical.prototype, {\\r\\n\\r\\n        set: function ( radius, phi, theta ) {\\r\\n\\r\\n            this.radius = radius;\\r\\n            this.phi = phi;\\r\\n            this.theta = theta;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( other ) {\\r\\n\\r\\n            this.radius = other.radius;\\r\\n            this.phi = other.phi;\\r\\n            this.theta = other.theta;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        // restrict phi to be betwee EPS and PI-EPS\\r\\n        makeSafe: function () {\\r\\n\\r\\n            var EPS = 0.000001;\\r\\n            this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromVector3: function ( v ) {\\r\\n\\r\\n            return this.setFromCartesianCoords( v.x, v.y, v.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCartesianCoords: function ( x, y, z ) {\\r\\n\\r\\n            this.radius = Math.sqrt( x * x + y * y + z * z );\\r\\n\\r\\n            if ( this.radius === 0 ) {\\r\\n\\r\\n                this.theta = 0;\\r\\n                this.phi = 0;\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.theta = Math.atan2( x, z );\\r\\n                this.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     *\\r\\n     * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\\r\\n     *\\r\\n     */\\r\\n\\r\\n    function Cylindrical( radius, theta, y ) {\\r\\n\\r\\n        this.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\\r\\n        this.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\\r\\n        this.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\\r\\n\\r\\n        return this;\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Cylindrical.prototype, {\\r\\n\\r\\n        set: function ( radius, theta, y ) {\\r\\n\\r\\n            this.radius = radius;\\r\\n            this.theta = theta;\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( other ) {\\r\\n\\r\\n            this.radius = other.radius;\\r\\n            this.theta = other.theta;\\r\\n            this.y = other.y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromVector3: function ( v ) {\\r\\n\\r\\n            return this.setFromCartesianCoords( v.x, v.y, v.z );\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCartesianCoords: function ( x, y, z ) {\\r\\n\\r\\n            this.radius = Math.sqrt( x * x + z * z );\\r\\n            this.theta = Math.atan2( x, z );\\r\\n            this.y = y;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Box2( min, max ) {\\r\\n\\r\\n        this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\\r\\n        this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Box2.prototype, {\\r\\n\\r\\n        set: function ( min, max ) {\\r\\n\\r\\n            this.min.copy( min );\\r\\n            this.max.copy( max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromPoints: function ( points ) {\\r\\n\\r\\n            this.makeEmpty();\\r\\n\\r\\n            for ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n                this.expandByPoint( points[ i ] );\\r\\n\\r\\n            }\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        setFromCenterAndSize: function () {\\r\\n\\r\\n            var v1 = new Vector2();\\r\\n\\r\\n            return function setFromCenterAndSize( center, size ) {\\r\\n\\r\\n                var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\r\\n                this.min.copy( center ).sub( halfSize );\\r\\n                this.max.copy( center ).add( halfSize );\\r\\n\\r\\n                return this;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( box ) {\\r\\n\\r\\n            this.min.copy( box.min );\\r\\n            this.max.copy( box.max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        makeEmpty: function () {\\r\\n\\r\\n            this.min.x = this.min.y = + Infinity;\\r\\n            this.max.x = this.max.y = - Infinity;\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        isEmpty: function () {\\r\\n\\r\\n            // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\r\\n\\r\\n            return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\\r\\n\\r\\n        },\\r\\n\\r\\n        getCenter: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box2: .getCenter() target is now required' );\\r\\n                target = new Vector2();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\r\\n\\r\\n        },\\r\\n\\r\\n        getSize: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box2: .getSize() target is now required' );\\r\\n                target = new Vector2();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByPoint: function ( point ) {\\r\\n\\r\\n            this.min.min( point );\\r\\n            this.max.max( point );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByVector: function ( vector ) {\\r\\n\\r\\n            this.min.sub( vector );\\r\\n            this.max.add( vector );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        expandByScalar: function ( scalar ) {\\r\\n\\r\\n            this.min.addScalar( - scalar );\\r\\n            this.max.addScalar( scalar );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        containsPoint: function ( point ) {\\r\\n\\r\\n            return point.x < this.min.x || point.x > this.max.x ||\\r\\n            point.y < this.min.y || point.y > this.max.y ? false : true;\\r\\n\\r\\n        },\\r\\n\\r\\n        containsBox: function ( box ) {\\r\\n\\r\\n            return this.min.x <= box.min.x && box.max.x <= this.max.x &&\\r\\n                this.min.y <= box.min.y && box.max.y <= this.max.y;\\r\\n\\r\\n        },\\r\\n\\r\\n        getParameter: function ( point, target ) {\\r\\n\\r\\n            // This can potentially have a divide by zero if the box\\r\\n            // has a size dimension of 0.\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box2: .getParameter() target is now required' );\\r\\n                target = new Vector2();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.set(\\r\\n                ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\r\\n                ( point.y - this.min.y ) / ( this.max.y - this.min.y )\\r\\n            );\\r\\n\\r\\n        },\\r\\n\\r\\n        intersectsBox: function ( box ) {\\r\\n\\r\\n            // using 4 splitting planes to rule out intersections\\r\\n\\r\\n            return box.max.x < this.min.x || box.min.x > this.max.x ||\\r\\n            box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\\r\\n\\r\\n        },\\r\\n\\r\\n        clampPoint: function ( point, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Box2: .clampPoint() target is now required' );\\r\\n                target = new Vector2();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.copy( point ).clamp( this.min, this.max );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceToPoint: function () {\\r\\n\\r\\n            var v1 = new Vector2();\\r\\n\\r\\n            return function distanceToPoint( point ) {\\r\\n\\r\\n                var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\r\\n                return clampedPoint.sub( point ).length();\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        intersect: function ( box ) {\\r\\n\\r\\n            this.min.max( box.min );\\r\\n            this.max.min( box.max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        union: function ( box ) {\\r\\n\\r\\n            this.min.min( box.min );\\r\\n            this.max.max( box.max );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        translate: function ( offset ) {\\r\\n\\r\\n            this.min.add( offset );\\r\\n            this.max.add( offset );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( box ) {\\r\\n\\r\\n            return box.min.equals( this.min ) && box.max.equals( this.max );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author bhouston / http://clara.io\\r\\n     */\\r\\n\\r\\n    function Line3( start, end ) {\\r\\n\\r\\n        this.start = ( start !== undefined ) ? start : new Vector3();\\r\\n        this.end = ( end !== undefined ) ? end : new Vector3();\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( Line3.prototype, {\\r\\n\\r\\n        set: function ( start, end ) {\\r\\n\\r\\n            this.start.copy( start );\\r\\n            this.end.copy( end );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        clone: function () {\\r\\n\\r\\n            return new this.constructor().copy( this );\\r\\n\\r\\n        },\\r\\n\\r\\n        copy: function ( line ) {\\r\\n\\r\\n            this.start.copy( line.start );\\r\\n            this.end.copy( line.end );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        getCenter: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Line3: .getCenter() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\\r\\n\\r\\n        },\\r\\n\\r\\n        delta: function ( target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Line3: .delta() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return target.subVectors( this.end, this.start );\\r\\n\\r\\n        },\\r\\n\\r\\n        distanceSq: function () {\\r\\n\\r\\n            return this.start.distanceToSquared( this.end );\\r\\n\\r\\n        },\\r\\n\\r\\n        distance: function () {\\r\\n\\r\\n            return this.start.distanceTo( this.end );\\r\\n\\r\\n        },\\r\\n\\r\\n        at: function ( t, target ) {\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Line3: .at() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.delta( target ).multiplyScalar( t ).add( this.start );\\r\\n\\r\\n        },\\r\\n\\r\\n        closestPointToPointParameter: function () {\\r\\n\\r\\n            var startP = new Vector3();\\r\\n            var startEnd = new Vector3();\\r\\n\\r\\n            return function closestPointToPointParameter( point, clampToLine ) {\\r\\n\\r\\n                startP.subVectors( point, this.start );\\r\\n                startEnd.subVectors( this.end, this.start );\\r\\n\\r\\n                var startEnd2 = startEnd.dot( startEnd );\\r\\n                var startEnd_startP = startEnd.dot( startP );\\r\\n\\r\\n                var t = startEnd_startP / startEnd2;\\r\\n\\r\\n                if ( clampToLine ) {\\r\\n\\r\\n                    t = _Math.clamp( t, 0, 1 );\\r\\n\\r\\n                }\\r\\n\\r\\n                return t;\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n\\r\\n        closestPointToPoint: function ( point, clampToLine, target ) {\\r\\n\\r\\n            var t = this.closestPointToPointParameter( point, clampToLine );\\r\\n\\r\\n            if ( target === undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\\r\\n                target = new Vector3();\\r\\n\\r\\n            }\\r\\n\\r\\n            return this.delta( target ).multiplyScalar( t ).add( this.start );\\r\\n\\r\\n        },\\r\\n\\r\\n        applyMatrix4: function ( matrix ) {\\r\\n\\r\\n            this.start.applyMatrix4( matrix );\\r\\n            this.end.applyMatrix4( matrix );\\r\\n\\r\\n            return this;\\r\\n\\r\\n        },\\r\\n\\r\\n        equals: function ( line ) {\\r\\n\\r\\n            return line.start.equals( this.start ) && line.end.equals( this.end );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function ImmediateRenderObject( material ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.material = material;\\r\\n        this.render = function ( /* renderCallback */ ) {};\\r\\n\\r\\n    }\\r\\n\\r\\n    ImmediateRenderObject.prototype = Object.create( Object3D.prototype );\\r\\n    ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\\r\\n\\r\\n    ImmediateRenderObject.prototype.isImmediateRenderObject = true;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function VertexNormalsHelper( object, size, hex, linewidth ) {\\r\\n\\r\\n        this.object = object;\\r\\n\\r\\n        this.size = ( size !== undefined ) ? size : 1;\\r\\n\\r\\n        var color = ( hex !== undefined ) ? hex : 0xff0000;\\r\\n\\r\\n        var width = ( linewidth !== undefined ) ? linewidth : 1;\\r\\n\\r\\n        //\\r\\n\\r\\n        var nNormals = 0;\\r\\n\\r\\n        var objGeometry = this.object.geometry;\\r\\n\\r\\n        if ( objGeometry && objGeometry.isGeometry ) {\\r\\n\\r\\n            nNormals = objGeometry.faces.length * 3;\\r\\n\\r\\n        } else if ( objGeometry && objGeometry.isBufferGeometry ) {\\r\\n\\r\\n            nNormals = objGeometry.attributes.normal.count;\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\\r\\n\\r\\n        geometry.addAttribute( 'position', positions );\\r\\n\\r\\n        LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\\r\\n\\r\\n        //\\r\\n\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\\r\\n\\r\\n    VertexNormalsHelper.prototype.update = ( function () {\\r\\n\\r\\n        var v1 = new Vector3();\\r\\n        var v2 = new Vector3();\\r\\n        var normalMatrix = new Matrix3();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            var keys = [ 'a', 'b', 'c' ];\\r\\n\\r\\n            this.object.updateMatrixWorld( true );\\r\\n\\r\\n            normalMatrix.getNormalMatrix( this.object.matrixWorld );\\r\\n\\r\\n            var matrixWorld = this.object.matrixWorld;\\r\\n\\r\\n            var position = this.geometry.attributes.position;\\r\\n\\r\\n            //\\r\\n\\r\\n            var objGeometry = this.object.geometry;\\r\\n\\r\\n            if ( objGeometry && objGeometry.isGeometry ) {\\r\\n\\r\\n                var vertices = objGeometry.vertices;\\r\\n\\r\\n                var faces = objGeometry.faces;\\r\\n\\r\\n                var idx = 0;\\r\\n\\r\\n                for ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n                    var face = faces[ i ];\\r\\n\\r\\n                    for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n                        var vertex = vertices[ face[ keys[ j ] ] ];\\r\\n\\r\\n                        var normal = face.vertexNormals[ j ];\\r\\n\\r\\n                        v1.copy( vertex ).applyMatrix4( matrixWorld );\\r\\n\\r\\n                        v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n                        position.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n                        idx = idx + 1;\\r\\n\\r\\n                        position.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n                        idx = idx + 1;\\r\\n\\r\\n                    }\\r\\n\\r\\n                }\\r\\n\\r\\n            } else if ( objGeometry && objGeometry.isBufferGeometry ) {\\r\\n\\r\\n                var objPos = objGeometry.attributes.position;\\r\\n\\r\\n                var objNorm = objGeometry.attributes.normal;\\r\\n\\r\\n                var idx = 0;\\r\\n\\r\\n                // for simplicity, ignore index and drawcalls, and render every normal\\r\\n\\r\\n                for ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\\r\\n\\r\\n                    v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\\r\\n\\r\\n                    v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\\r\\n\\r\\n                    v2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n                    position.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n                    idx = idx + 1;\\r\\n\\r\\n                    position.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n                    idx = idx + 1;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            position.needsUpdate = true;\\r\\n\\r\\n        };\\r\\n\\r\\n    }() );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function SpotLightHelper( light, color ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.light = light;\\r\\n        this.light.updateMatrixWorld();\\r\\n\\r\\n        this.matrix = light.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.color = color;\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        var positions = [\\r\\n            0, 0, 0, \\t0, 0, 1,\\r\\n            0, 0, 0, \\t1, 0, 1,\\r\\n            0, 0, 0,\\t- 1, 0, 1,\\r\\n            0, 0, 0, \\t0, 1, 1,\\r\\n            0, 0, 0, \\t0, - 1, 1\\r\\n        ];\\r\\n\\r\\n        for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\\r\\n\\r\\n            var p1 = ( i / l ) * Math.PI * 2;\\r\\n            var p2 = ( j / l ) * Math.PI * 2;\\r\\n\\r\\n            positions.push(\\r\\n                Math.cos( p1 ), Math.sin( p1 ), 1,\\r\\n                Math.cos( p2 ), Math.sin( p2 ), 1\\r\\n            );\\r\\n\\r\\n        }\\r\\n\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { fog: false } );\\r\\n\\r\\n        this.cone = new LineSegments( geometry, material );\\r\\n        this.add( this.cone );\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    SpotLightHelper.prototype = Object.create( Object3D.prototype );\\r\\n    SpotLightHelper.prototype.constructor = SpotLightHelper;\\r\\n\\r\\n    SpotLightHelper.prototype.dispose = function () {\\r\\n\\r\\n        this.cone.geometry.dispose();\\r\\n        this.cone.material.dispose();\\r\\n\\r\\n    };\\r\\n\\r\\n    SpotLightHelper.prototype.update = function () {\\r\\n\\r\\n        var vector = new Vector3();\\r\\n        var vector2 = new Vector3();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            this.light.updateMatrixWorld();\\r\\n\\r\\n            var coneLength = this.light.distance ? this.light.distance : 1000;\\r\\n            var coneWidth = coneLength * Math.tan( this.light.angle );\\r\\n\\r\\n            this.cone.scale.set( coneWidth, coneWidth, coneLength );\\r\\n\\r\\n            vector.setFromMatrixPosition( this.light.matrixWorld );\\r\\n            vector2.setFromMatrixPosition( this.light.target.matrixWorld );\\r\\n\\r\\n            this.cone.lookAt( vector2.sub( vector ) );\\r\\n\\r\\n            if ( this.color !== undefined ) {\\r\\n\\r\\n                this.cone.material.color.set( this.color );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.cone.material.color.copy( this.light.color );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    /**\\r\\n     * @author Sean Griffin / http://twitter.com/sgrif\\r\\n     * @author Michael Guerrero / http://realitymeltdown.com\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author ikerr / http://verold.com\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function getBoneList( object ) {\\r\\n\\r\\n        var boneList = [];\\r\\n\\r\\n        if ( object && object.isBone ) {\\r\\n\\r\\n            boneList.push( object );\\r\\n\\r\\n        }\\r\\n\\r\\n        for ( var i = 0; i < object.children.length; i ++ ) {\\r\\n\\r\\n            boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\\r\\n\\r\\n        }\\r\\n\\r\\n        return boneList;\\r\\n\\r\\n    }\\r\\n\\r\\n    function SkeletonHelper( object ) {\\r\\n\\r\\n        var bones = getBoneList( object );\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        var vertices = [];\\r\\n        var colors = [];\\r\\n\\r\\n        var color1 = new Color( 0, 0, 1 );\\r\\n        var color2 = new Color( 0, 1, 0 );\\r\\n\\r\\n        for ( var i = 0; i < bones.length; i ++ ) {\\r\\n\\r\\n            var bone = bones[ i ];\\r\\n\\r\\n            if ( bone.parent && bone.parent.isBone ) {\\r\\n\\r\\n                vertices.push( 0, 0, 0 );\\r\\n                vertices.push( 0, 0, 0 );\\r\\n                colors.push( color1.r, color1.g, color1.b );\\r\\n                colors.push( color2.r, color2.g, color2.b );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\\r\\n\\r\\n        LineSegments.call( this, geometry, material );\\r\\n\\r\\n        this.root = object;\\r\\n        this.bones = bones;\\r\\n\\r\\n        this.matrix = object.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    SkeletonHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    SkeletonHelper.prototype.constructor = SkeletonHelper;\\r\\n\\r\\n    SkeletonHelper.prototype.updateMatrixWorld = function () {\\r\\n\\r\\n        var vector = new Vector3();\\r\\n\\r\\n        var boneMatrix = new Matrix4();\\r\\n        var matrixWorldInv = new Matrix4();\\r\\n\\r\\n        return function updateMatrixWorld( force ) {\\r\\n\\r\\n            var bones = this.bones;\\r\\n\\r\\n            var geometry = this.geometry;\\r\\n            var position = geometry.getAttribute( 'position' );\\r\\n\\r\\n            matrixWorldInv.getInverse( this.root.matrixWorld );\\r\\n\\r\\n            for ( var i = 0, j = 0; i < bones.length; i ++ ) {\\r\\n\\r\\n                var bone = bones[ i ];\\r\\n\\r\\n                if ( bone.parent && bone.parent.isBone ) {\\r\\n\\r\\n                    boneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\\r\\n                    vector.setFromMatrixPosition( boneMatrix );\\r\\n                    position.setXYZ( j, vector.x, vector.y, vector.z );\\r\\n\\r\\n                    boneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\\r\\n                    vector.setFromMatrixPosition( boneMatrix );\\r\\n                    position.setXYZ( j + 1, vector.x, vector.y, vector.z );\\r\\n\\r\\n                    j += 2;\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n            geometry.getAttribute( 'position' ).needsUpdate = true;\\r\\n\\r\\n            Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function PointLightHelper( light, sphereSize, color ) {\\r\\n\\r\\n        this.light = light;\\r\\n        this.light.updateMatrixWorld();\\r\\n\\r\\n        this.color = color;\\r\\n\\r\\n        var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\\r\\n        var material = new MeshBasicMaterial( { wireframe: true, fog: false } );\\r\\n\\r\\n        Mesh.call( this, geometry, material );\\r\\n\\r\\n        this.matrix = this.light.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.update();\\r\\n\\r\\n\\r\\n        /*\\r\\n\\t\\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\\r\\n\\t\\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\\r\\n\\r\\n\\t\\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\\r\\n\\t\\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\\r\\n\\r\\n\\t\\tvar d = light.distance;\\r\\n\\r\\n\\t\\tif ( d === 0.0 ) {\\r\\n\\r\\n\\t\\t\\tthis.lightDistance.visible = false;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.lightDistance.scale.set( d, d, d );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.add( this.lightDistance );\\r\\n\\t\\t*/\\r\\n\\r\\n    }\\r\\n\\r\\n    PointLightHelper.prototype = Object.create( Mesh.prototype );\\r\\n    PointLightHelper.prototype.constructor = PointLightHelper;\\r\\n\\r\\n    PointLightHelper.prototype.dispose = function () {\\r\\n\\r\\n        this.geometry.dispose();\\r\\n        this.material.dispose();\\r\\n\\r\\n    };\\r\\n\\r\\n    PointLightHelper.prototype.update = function () {\\r\\n\\r\\n        if ( this.color !== undefined ) {\\r\\n\\r\\n            this.material.color.set( this.color );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            this.material.color.copy( this.light.color );\\r\\n\\r\\n        }\\r\\n\\r\\n        /*\\r\\n\\t\\tvar d = this.light.distance;\\r\\n\\r\\n\\t\\tif ( d === 0.0 ) {\\r\\n\\r\\n\\t\\t\\tthis.lightDistance.visible = false;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.lightDistance.visible = true;\\r\\n\\t\\t\\tthis.lightDistance.scale.set( d, d, d );\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\t*/\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author abelnation / http://github.com/abelnation\\r\\n     * @author Mugen87 / http://github.com/Mugen87\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function RectAreaLightHelper( light, color ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.light = light;\\r\\n        this.light.updateMatrixWorld();\\r\\n\\r\\n        this.matrix = light.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.color = color;\\r\\n\\r\\n        var material = new LineBasicMaterial( { fog: false } );\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        geometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\\r\\n\\r\\n        this.line = new Line( geometry, material );\\r\\n        this.add( this.line );\\r\\n\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    RectAreaLightHelper.prototype = Object.create( Object3D.prototype );\\r\\n    RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\\r\\n\\r\\n    RectAreaLightHelper.prototype.dispose = function () {\\r\\n\\r\\n        this.children[ 0 ].geometry.dispose();\\r\\n        this.children[ 0 ].material.dispose();\\r\\n\\r\\n    };\\r\\n\\r\\n    RectAreaLightHelper.prototype.update = function () {\\r\\n\\r\\n        // calculate new dimensions of the helper\\r\\n\\r\\n        var hx = this.light.width * 0.5;\\r\\n        var hy = this.light.height * 0.5;\\r\\n\\r\\n        var position = this.line.geometry.attributes.position;\\r\\n        var array = position.array;\\r\\n\\r\\n        // update vertices\\r\\n\\r\\n        array[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\\r\\n        array[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\\r\\n        array[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\\r\\n        array[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\\r\\n        array[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\\r\\n\\r\\n        position.needsUpdate = true;\\r\\n\\r\\n        if ( this.color !== undefined ) {\\r\\n\\r\\n            this.line.material.color.set( this.color );\\r\\n\\r\\n        } else {\\r\\n\\r\\n            this.line.material.color.copy( this.light.color );\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function HemisphereLightHelper( light, size, color ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.light = light;\\r\\n        this.light.updateMatrixWorld();\\r\\n\\r\\n        this.matrix = light.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.color = color;\\r\\n\\r\\n        var geometry = new OctahedronBufferGeometry( size );\\r\\n        geometry.rotateY( Math.PI * 0.5 );\\r\\n\\r\\n        this.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\\r\\n        if ( this.color === undefined ) this.material.vertexColors = VertexColors;\\r\\n\\r\\n        var position = geometry.getAttribute( 'position' );\\r\\n        var colors = new Float32Array( position.count * 3 );\\r\\n\\r\\n        geometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        this.add( new Mesh( geometry, this.material ) );\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    HemisphereLightHelper.prototype = Object.create( Object3D.prototype );\\r\\n    HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\\r\\n\\r\\n    HemisphereLightHelper.prototype.dispose = function () {\\r\\n\\r\\n        this.children[ 0 ].geometry.dispose();\\r\\n        this.children[ 0 ].material.dispose();\\r\\n\\r\\n    };\\r\\n\\r\\n    HemisphereLightHelper.prototype.update = function () {\\r\\n\\r\\n        var vector = new Vector3();\\r\\n\\r\\n        var color1 = new Color();\\r\\n        var color2 = new Color();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            var mesh = this.children[ 0 ];\\r\\n\\r\\n            if ( this.color !== undefined ) {\\r\\n\\r\\n                this.material.color.set( this.color );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                var colors = mesh.geometry.getAttribute( 'color' );\\r\\n\\r\\n                color1.copy( this.light.color );\\r\\n                color2.copy( this.light.groundColor );\\r\\n\\r\\n                for ( var i = 0, l = colors.count; i < l; i ++ ) {\\r\\n\\r\\n                    var color = ( i < ( l / 2 ) ) ? color1 : color2;\\r\\n\\r\\n                    colors.setXYZ( i, color.r, color.g, color.b );\\r\\n\\r\\n                }\\r\\n\\r\\n                colors.needsUpdate = true;\\r\\n\\r\\n            }\\r\\n\\r\\n            mesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function GridHelper( size, divisions, color1, color2 ) {\\r\\n\\r\\n        size = size || 10;\\r\\n        divisions = divisions || 10;\\r\\n        color1 = new Color( color1 !== undefined ? color1 : 0x444444 );\\r\\n        color2 = new Color( color2 !== undefined ? color2 : 0x888888 );\\r\\n\\r\\n        var center = divisions / 2;\\r\\n        var step = size / divisions;\\r\\n        var halfSize = size / 2;\\r\\n\\r\\n        var vertices = [], colors = [];\\r\\n\\r\\n        for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\\r\\n\\r\\n            vertices.push( - halfSize, 0, k, halfSize, 0, k );\\r\\n            vertices.push( k, 0, - halfSize, k, 0, halfSize );\\r\\n\\r\\n            var color = i === center ? color1 : color2;\\r\\n\\r\\n            color.toArray( colors, j ); j += 3;\\r\\n            color.toArray( colors, j ); j += 3;\\r\\n            color.toArray( colors, j ); j += 3;\\r\\n            color.toArray( colors, j ); j += 3;\\r\\n\\r\\n        }\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { vertexColors: VertexColors } );\\r\\n\\r\\n        LineSegments.call( this, geometry, material );\\r\\n\\r\\n    }\\r\\n\\r\\n    GridHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    GridHelper.prototype.constructor = GridHelper;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / http://github.com/Mugen87\\r\\n     * @author Hectate / http://www.github.com/Hectate\\r\\n     */\\r\\n\\r\\n    function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\\r\\n\\r\\n        radius = radius || 10;\\r\\n        radials = radials || 16;\\r\\n        circles = circles || 8;\\r\\n        divisions = divisions || 64;\\r\\n        color1 = new Color( color1 !== undefined ? color1 : 0x444444 );\\r\\n        color2 = new Color( color2 !== undefined ? color2 : 0x888888 );\\r\\n\\r\\n        var vertices = [];\\r\\n        var colors = [];\\r\\n\\r\\n        var x, z;\\r\\n        var v, i, j, r, color;\\r\\n\\r\\n        // create the radials\\r\\n\\r\\n        for ( i = 0; i <= radials; i ++ ) {\\r\\n\\r\\n            v = ( i / radials ) * ( Math.PI * 2 );\\r\\n\\r\\n            x = Math.sin( v ) * radius;\\r\\n            z = Math.cos( v ) * radius;\\r\\n\\r\\n            vertices.push( 0, 0, 0 );\\r\\n            vertices.push( x, 0, z );\\r\\n\\r\\n            color = ( i & 1 ) ? color1 : color2;\\r\\n\\r\\n            colors.push( color.r, color.g, color.b );\\r\\n            colors.push( color.r, color.g, color.b );\\r\\n\\r\\n        }\\r\\n\\r\\n        // create the circles\\r\\n\\r\\n        for ( i = 0; i <= circles; i ++ ) {\\r\\n\\r\\n            color = ( i & 1 ) ? color1 : color2;\\r\\n\\r\\n            r = radius - ( radius / circles * i );\\r\\n\\r\\n            for ( j = 0; j < divisions; j ++ ) {\\r\\n\\r\\n                // first vertex\\r\\n\\r\\n                v = ( j / divisions ) * ( Math.PI * 2 );\\r\\n\\r\\n                x = Math.sin( v ) * r;\\r\\n                z = Math.cos( v ) * r;\\r\\n\\r\\n                vertices.push( x, 0, z );\\r\\n                colors.push( color.r, color.g, color.b );\\r\\n\\r\\n                // second vertex\\r\\n\\r\\n                v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\\r\\n\\r\\n                x = Math.sin( v ) * r;\\r\\n                z = Math.cos( v ) * r;\\r\\n\\r\\n                vertices.push( x, 0, z );\\r\\n                colors.push( color.r, color.g, color.b );\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { vertexColors: VertexColors } );\\r\\n\\r\\n        LineSegments.call( this, geometry, material );\\r\\n\\r\\n    }\\r\\n\\r\\n    PolarGridHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    PolarGridHelper.prototype.constructor = PolarGridHelper;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function FaceNormalsHelper( object, size, hex, linewidth ) {\\r\\n\\r\\n        // FaceNormalsHelper only supports THREE.Geometry\\r\\n\\r\\n        this.object = object;\\r\\n\\r\\n        this.size = ( size !== undefined ) ? size : 1;\\r\\n\\r\\n        var color = ( hex !== undefined ) ? hex : 0xffff00;\\r\\n\\r\\n        var width = ( linewidth !== undefined ) ? linewidth : 1;\\r\\n\\r\\n        //\\r\\n\\r\\n        var nNormals = 0;\\r\\n\\r\\n        var objGeometry = this.object.geometry;\\r\\n\\r\\n        if ( objGeometry && objGeometry.isGeometry ) {\\r\\n\\r\\n            nNormals = objGeometry.faces.length;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            console.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n        //\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\\r\\n\\r\\n        geometry.addAttribute( 'position', positions );\\r\\n\\r\\n        LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\\r\\n\\r\\n        //\\r\\n\\r\\n        this.matrixAutoUpdate = false;\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\\r\\n\\r\\n    FaceNormalsHelper.prototype.update = ( function () {\\r\\n\\r\\n        var v1 = new Vector3();\\r\\n        var v2 = new Vector3();\\r\\n        var normalMatrix = new Matrix3();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            this.object.updateMatrixWorld( true );\\r\\n\\r\\n            normalMatrix.getNormalMatrix( this.object.matrixWorld );\\r\\n\\r\\n            var matrixWorld = this.object.matrixWorld;\\r\\n\\r\\n            var position = this.geometry.attributes.position;\\r\\n\\r\\n            //\\r\\n\\r\\n            var objGeometry = this.object.geometry;\\r\\n\\r\\n            var vertices = objGeometry.vertices;\\r\\n\\r\\n            var faces = objGeometry.faces;\\r\\n\\r\\n            var idx = 0;\\r\\n\\r\\n            for ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n                var face = faces[ i ];\\r\\n\\r\\n                var normal = face.normal;\\r\\n\\r\\n                v1.copy( vertices[ face.a ] )\\r\\n                    .add( vertices[ face.b ] )\\r\\n                    .add( vertices[ face.c ] )\\r\\n                    .divideScalar( 3 )\\r\\n                    .applyMatrix4( matrixWorld );\\r\\n\\r\\n                v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n                position.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n                idx = idx + 1;\\r\\n\\r\\n                position.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n                idx = idx + 1;\\r\\n\\r\\n            }\\r\\n\\r\\n            position.needsUpdate = true;\\r\\n\\r\\n        };\\r\\n\\r\\n    }() );\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function DirectionalLightHelper( light, size, color ) {\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        this.light = light;\\r\\n        this.light.updateMatrixWorld();\\r\\n\\r\\n        this.matrix = light.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.color = color;\\r\\n\\r\\n        if ( size === undefined ) size = 1;\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( [\\r\\n            - size, size, 0,\\r\\n            size, size, 0,\\r\\n            size, - size, 0,\\r\\n            - size, - size, 0,\\r\\n            - size, size, 0\\r\\n        ], 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { fog: false } );\\r\\n\\r\\n        this.lightPlane = new Line( geometry, material );\\r\\n        this.add( this.lightPlane );\\r\\n\\r\\n        geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\\r\\n\\r\\n        this.targetLine = new Line( geometry, material );\\r\\n        this.add( this.targetLine );\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    DirectionalLightHelper.prototype = Object.create( Object3D.prototype );\\r\\n    DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\\r\\n\\r\\n    DirectionalLightHelper.prototype.dispose = function () {\\r\\n\\r\\n        this.lightPlane.geometry.dispose();\\r\\n        this.lightPlane.material.dispose();\\r\\n        this.targetLine.geometry.dispose();\\r\\n        this.targetLine.material.dispose();\\r\\n\\r\\n    };\\r\\n\\r\\n    DirectionalLightHelper.prototype.update = function () {\\r\\n\\r\\n        var v1 = new Vector3();\\r\\n        var v2 = new Vector3();\\r\\n        var v3 = new Vector3();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            v1.setFromMatrixPosition( this.light.matrixWorld );\\r\\n            v2.setFromMatrixPosition( this.light.target.matrixWorld );\\r\\n            v3.subVectors( v2, v1 );\\r\\n\\r\\n            this.lightPlane.lookAt( v3 );\\r\\n\\r\\n            if ( this.color !== undefined ) {\\r\\n\\r\\n                this.lightPlane.material.color.set( this.color );\\r\\n                this.targetLine.material.color.set( this.color );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                this.lightPlane.material.color.copy( this.light.color );\\r\\n                this.targetLine.material.color.copy( this.light.color );\\r\\n\\r\\n            }\\r\\n\\r\\n            this.targetLine.lookAt( v3 );\\r\\n            this.targetLine.scale.z = v3.length();\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     * @author Mugen87 / https://github.com/Mugen87\\r\\n     *\\r\\n     *\\t- shows frustum, line of sight and up of the camera\\r\\n     *\\t- suitable for fast updates\\r\\n     * \\t- based on frustum visualization in lightgl.js shadowmap example\\r\\n     *\\t\\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\\r\\n     */\\r\\n\\r\\n    function CameraHelper( camera ) {\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\\r\\n\\r\\n        var vertices = [];\\r\\n        var colors = [];\\r\\n\\r\\n        var pointMap = {};\\r\\n\\r\\n        // colors\\r\\n\\r\\n        var colorFrustum = new Color( 0xffaa00 );\\r\\n        var colorCone = new Color( 0xff0000 );\\r\\n        var colorUp = new Color( 0x00aaff );\\r\\n        var colorTarget = new Color( 0xffffff );\\r\\n        var colorCross = new Color( 0x333333 );\\r\\n\\r\\n        // near\\r\\n\\r\\n        addLine( 'n1', 'n2', colorFrustum );\\r\\n        addLine( 'n2', 'n4', colorFrustum );\\r\\n        addLine( 'n4', 'n3', colorFrustum );\\r\\n        addLine( 'n3', 'n1', colorFrustum );\\r\\n\\r\\n        // far\\r\\n\\r\\n        addLine( 'f1', 'f2', colorFrustum );\\r\\n        addLine( 'f2', 'f4', colorFrustum );\\r\\n        addLine( 'f4', 'f3', colorFrustum );\\r\\n        addLine( 'f3', 'f1', colorFrustum );\\r\\n\\r\\n        // sides\\r\\n\\r\\n        addLine( 'n1', 'f1', colorFrustum );\\r\\n        addLine( 'n2', 'f2', colorFrustum );\\r\\n        addLine( 'n3', 'f3', colorFrustum );\\r\\n        addLine( 'n4', 'f4', colorFrustum );\\r\\n\\r\\n        // cone\\r\\n\\r\\n        addLine( 'p', 'n1', colorCone );\\r\\n        addLine( 'p', 'n2', colorCone );\\r\\n        addLine( 'p', 'n3', colorCone );\\r\\n        addLine( 'p', 'n4', colorCone );\\r\\n\\r\\n        // up\\r\\n\\r\\n        addLine( 'u1', 'u2', colorUp );\\r\\n        addLine( 'u2', 'u3', colorUp );\\r\\n        addLine( 'u3', 'u1', colorUp );\\r\\n\\r\\n        // target\\r\\n\\r\\n        addLine( 'c', 't', colorTarget );\\r\\n        addLine( 'p', 'c', colorCross );\\r\\n\\r\\n        // cross\\r\\n\\r\\n        addLine( 'cn1', 'cn2', colorCross );\\r\\n        addLine( 'cn3', 'cn4', colorCross );\\r\\n\\r\\n        addLine( 'cf1', 'cf2', colorCross );\\r\\n        addLine( 'cf3', 'cf4', colorCross );\\r\\n\\r\\n        function addLine( a, b, color ) {\\r\\n\\r\\n            addPoint( a, color );\\r\\n            addPoint( b, color );\\r\\n\\r\\n        }\\r\\n\\r\\n        function addPoint( id, color ) {\\r\\n\\r\\n            vertices.push( 0, 0, 0 );\\r\\n            colors.push( color.r, color.g, color.b );\\r\\n\\r\\n            if ( pointMap[ id ] === undefined ) {\\r\\n\\r\\n                pointMap[ id ] = [];\\r\\n\\r\\n            }\\r\\n\\r\\n            pointMap[ id ].push( ( vertices.length / 3 ) - 1 );\\r\\n\\r\\n        }\\r\\n\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        LineSegments.call( this, geometry, material );\\r\\n\\r\\n        this.camera = camera;\\r\\n        if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\\r\\n\\r\\n        this.matrix = camera.matrixWorld;\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.pointMap = pointMap;\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    CameraHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    CameraHelper.prototype.constructor = CameraHelper;\\r\\n\\r\\n    CameraHelper.prototype.update = function () {\\r\\n\\r\\n        var geometry, pointMap;\\r\\n\\r\\n        var vector = new Vector3();\\r\\n        var camera = new Camera();\\r\\n\\r\\n        function setPoint( point, x, y, z ) {\\r\\n\\r\\n            vector.set( x, y, z ).unproject( camera );\\r\\n\\r\\n            var points = pointMap[ point ];\\r\\n\\r\\n            if ( points !== undefined ) {\\r\\n\\r\\n                var position = geometry.getAttribute( 'position' );\\r\\n\\r\\n                for ( var i = 0, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n                    position.setXYZ( points[ i ], vector.x, vector.y, vector.z );\\r\\n\\r\\n                }\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            geometry = this.geometry;\\r\\n            pointMap = this.pointMap;\\r\\n\\r\\n            var w = 1, h = 1;\\r\\n\\r\\n            // we need just camera projection matrix\\r\\n            // world matrix must be identity\\r\\n\\r\\n            camera.projectionMatrix.copy( this.camera.projectionMatrix );\\r\\n\\r\\n            // center / target\\r\\n\\r\\n            setPoint( 'c', 0, 0, - 1 );\\r\\n            setPoint( 't', 0, 0, 1 );\\r\\n\\r\\n            // near\\r\\n\\r\\n            setPoint( 'n1', - w, - h, - 1 );\\r\\n            setPoint( 'n2', w, - h, - 1 );\\r\\n            setPoint( 'n3', - w, h, - 1 );\\r\\n            setPoint( 'n4', w, h, - 1 );\\r\\n\\r\\n            // far\\r\\n\\r\\n            setPoint( 'f1', - w, - h, 1 );\\r\\n            setPoint( 'f2', w, - h, 1 );\\r\\n            setPoint( 'f3', - w, h, 1 );\\r\\n            setPoint( 'f4', w, h, 1 );\\r\\n\\r\\n            // up\\r\\n\\r\\n            setPoint( 'u1', w * 0.7, h * 1.1, - 1 );\\r\\n            setPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\\r\\n            setPoint( 'u3', 0, h * 2, - 1 );\\r\\n\\r\\n            // cross\\r\\n\\r\\n            setPoint( 'cf1', - w, 0, 1 );\\r\\n            setPoint( 'cf2', w, 0, 1 );\\r\\n            setPoint( 'cf3', 0, - h, 1 );\\r\\n            setPoint( 'cf4', 0, h, 1 );\\r\\n\\r\\n            setPoint( 'cn1', - w, 0, - 1 );\\r\\n            setPoint( 'cn2', w, 0, - 1 );\\r\\n            setPoint( 'cn3', 0, - h, - 1 );\\r\\n            setPoint( 'cn4', 0, h, - 1 );\\r\\n\\r\\n            geometry.getAttribute( 'position' ).needsUpdate = true;\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     * @author Mugen87 / http://github.com/Mugen87\\r\\n     */\\r\\n\\r\\n    function BoxHelper( object, color ) {\\r\\n\\r\\n        this.object = object;\\r\\n\\r\\n        if ( color === undefined ) color = 0xffff00;\\r\\n\\r\\n        var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\\r\\n        var positions = new Float32Array( 8 * 3 );\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.setIndex( new BufferAttribute( indices, 1 ) );\\r\\n        geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\\r\\n\\r\\n        LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n        this.matrixAutoUpdate = false;\\r\\n\\r\\n        this.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    BoxHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    BoxHelper.prototype.constructor = BoxHelper;\\r\\n\\r\\n    BoxHelper.prototype.update = ( function () {\\r\\n\\r\\n        var box = new Box3();\\r\\n\\r\\n        return function update( object ) {\\r\\n\\r\\n            if ( object !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( this.object !== undefined ) {\\r\\n\\r\\n                box.setFromObject( this.object );\\r\\n\\r\\n            }\\r\\n\\r\\n            if ( box.isEmpty() ) return;\\r\\n\\r\\n            var min = box.min;\\r\\n            var max = box.max;\\r\\n\\r\\n            /*\\r\\n\\t\\t\\t  5____4\\r\\n\\t\\t\\t1/___0/|\\r\\n\\t\\t\\t| 6__|_7\\r\\n\\t\\t\\t2/___3/\\r\\n\\r\\n\\t\\t\\t0: max.x, max.y, max.z\\r\\n\\t\\t\\t1: min.x, max.y, max.z\\r\\n\\t\\t\\t2: min.x, min.y, max.z\\r\\n\\t\\t\\t3: max.x, min.y, max.z\\r\\n\\t\\t\\t4: max.x, max.y, min.z\\r\\n\\t\\t\\t5: min.x, max.y, min.z\\r\\n\\t\\t\\t6: min.x, min.y, min.z\\r\\n\\t\\t\\t7: max.x, min.y, min.z\\r\\n\\t\\t\\t*/\\r\\n\\r\\n            var position = this.geometry.attributes.position;\\r\\n            var array = position.array;\\r\\n\\r\\n            array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\\r\\n            array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\\r\\n            array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\\r\\n            array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\\r\\n            array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\\r\\n            array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\\r\\n            array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\\r\\n            array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\\r\\n\\r\\n            position.needsUpdate = true;\\r\\n\\r\\n            this.geometry.computeBoundingSphere();\\r\\n\\r\\n        };\\r\\n\\r\\n    } )();\\r\\n\\r\\n    BoxHelper.prototype.setFromObject = function ( object ) {\\r\\n\\r\\n        this.object = object;\\r\\n        this.update();\\r\\n\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function Box3Helper( box, hex ) {\\r\\n\\r\\n        this.type = 'Box3Helper';\\r\\n\\r\\n        this.box = box;\\r\\n\\r\\n        var color = ( hex !== undefined ) ? hex : 0xffff00;\\r\\n\\r\\n        var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\\r\\n\\r\\n        var positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n\\r\\n        geometry.setIndex( new BufferAttribute( indices, 1 ) );\\r\\n\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\\r\\n\\r\\n        LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n        this.geometry.computeBoundingSphere();\\r\\n\\r\\n    }\\r\\n\\r\\n    Box3Helper.prototype = Object.create( LineSegments.prototype );\\r\\n    Box3Helper.prototype.constructor = Box3Helper;\\r\\n\\r\\n    Box3Helper.prototype.updateMatrixWorld = function ( force ) {\\r\\n\\r\\n        var box = this.box;\\r\\n\\r\\n        if ( box.isEmpty() ) return;\\r\\n\\r\\n        box.getCenter( this.position );\\r\\n\\r\\n        box.getSize( this.scale );\\r\\n\\r\\n        this.scale.multiplyScalar( 0.5 );\\r\\n\\r\\n        Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     */\\r\\n\\r\\n    function PlaneHelper( plane, size, hex ) {\\r\\n\\r\\n        this.type = 'PlaneHelper';\\r\\n\\r\\n        this.plane = plane;\\r\\n\\r\\n        this.size = ( size === undefined ) ? 1 : size;\\r\\n\\r\\n        var color = ( hex !== undefined ) ? hex : 0xffff00;\\r\\n\\r\\n        var positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\\r\\n        geometry.computeBoundingSphere();\\r\\n\\r\\n        Line.call( this, geometry, new LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n        //\\r\\n\\r\\n        var positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\\r\\n\\r\\n        var geometry2 = new BufferGeometry();\\r\\n        geometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\\r\\n        geometry2.computeBoundingSphere();\\r\\n\\r\\n        this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    PlaneHelper.prototype = Object.create( Line.prototype );\\r\\n    PlaneHelper.prototype.constructor = PlaneHelper;\\r\\n\\r\\n    PlaneHelper.prototype.updateMatrixWorld = function ( force ) {\\r\\n\\r\\n        var scale = - this.plane.constant;\\r\\n\\r\\n        if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\\r\\n\\r\\n        this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\\r\\n\\r\\n        this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\\r\\n\\r\\n        this.lookAt( this.plane.normal );\\r\\n\\r\\n        Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author WestLangley / http://github.com/WestLangley\\r\\n     * @author zz85 / http://github.com/zz85\\r\\n     * @author bhouston / http://clara.io\\r\\n     *\\r\\n     * Creates an arrow for visualizing directions\\r\\n     *\\r\\n     * Parameters:\\r\\n     *  dir - Vector3\\r\\n     *  origin - Vector3\\r\\n     *  length - Number\\r\\n     *  color - color in hex value\\r\\n     *  headLength - Number\\r\\n     *  headWidth - Number\\r\\n     */\\r\\n\\r\\n    var lineGeometry, coneGeometry;\\r\\n\\r\\n    function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\\r\\n\\r\\n        // dir is assumed to be normalized\\r\\n\\r\\n        Object3D.call( this );\\r\\n\\r\\n        if ( color === undefined ) color = 0xffff00;\\r\\n        if ( length === undefined ) length = 1;\\r\\n        if ( headLength === undefined ) headLength = 0.2 * length;\\r\\n        if ( headWidth === undefined ) headWidth = 0.2 * headLength;\\r\\n\\r\\n        if ( lineGeometry === undefined ) {\\r\\n\\r\\n            lineGeometry = new BufferGeometry();\\r\\n            lineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\\r\\n\\r\\n            coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\\r\\n            coneGeometry.translate( 0, - 0.5, 0 );\\r\\n\\r\\n        }\\r\\n\\r\\n        this.position.copy( origin );\\r\\n\\r\\n        this.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\\r\\n        this.line.matrixAutoUpdate = false;\\r\\n        this.add( this.line );\\r\\n\\r\\n        this.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\\r\\n        this.cone.matrixAutoUpdate = false;\\r\\n        this.add( this.cone );\\r\\n\\r\\n        this.setDirection( dir );\\r\\n        this.setLength( length, headLength, headWidth );\\r\\n\\r\\n    }\\r\\n\\r\\n    ArrowHelper.prototype = Object.create( Object3D.prototype );\\r\\n    ArrowHelper.prototype.constructor = ArrowHelper;\\r\\n\\r\\n    ArrowHelper.prototype.setDirection = ( function () {\\r\\n\\r\\n        var axis = new Vector3();\\r\\n        var radians;\\r\\n\\r\\n        return function setDirection( dir ) {\\r\\n\\r\\n            // dir is assumed to be normalized\\r\\n\\r\\n            if ( dir.y > 0.99999 ) {\\r\\n\\r\\n                this.quaternion.set( 0, 0, 0, 1 );\\r\\n\\r\\n            } else if ( dir.y < - 0.99999 ) {\\r\\n\\r\\n                this.quaternion.set( 1, 0, 0, 0 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                axis.set( dir.z, 0, - dir.x ).normalize();\\r\\n\\r\\n                radians = Math.acos( dir.y );\\r\\n\\r\\n                this.quaternion.setFromAxisAngle( axis, radians );\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }() );\\r\\n\\r\\n    ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\\r\\n\\r\\n        if ( headLength === undefined ) headLength = 0.2 * length;\\r\\n        if ( headWidth === undefined ) headWidth = 0.2 * headLength;\\r\\n\\r\\n        this.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\\r\\n        this.line.updateMatrix();\\r\\n\\r\\n        this.cone.scale.set( headWidth, headLength, headWidth );\\r\\n        this.cone.position.y = length;\\r\\n        this.cone.updateMatrix();\\r\\n\\r\\n    };\\r\\n\\r\\n    ArrowHelper.prototype.setColor = function ( color ) {\\r\\n\\r\\n        this.line.material.color.copy( color );\\r\\n        this.cone.material.color.copy( color );\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @author sroucheray / http://sroucheray.org/\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function AxesHelper( size ) {\\r\\n\\r\\n        size = size || 1;\\r\\n\\r\\n        var vertices = [\\r\\n            0, 0, 0,\\tsize, 0, 0,\\r\\n            0, 0, 0,\\t0, size, 0,\\r\\n            0, 0, 0,\\t0, 0, size\\r\\n        ];\\r\\n\\r\\n        var colors = [\\r\\n            1, 0, 0,\\t1, 0.6, 0,\\r\\n            0, 1, 0,\\t0.6, 1, 0,\\r\\n            0, 0, 1,\\t0, 0.6, 1\\r\\n        ];\\r\\n\\r\\n        var geometry = new BufferGeometry();\\r\\n        geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\\r\\n        geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\\r\\n\\r\\n        var material = new LineBasicMaterial( { vertexColors: VertexColors } );\\r\\n\\r\\n        LineSegments.call( this, geometry, material );\\r\\n\\r\\n    }\\r\\n\\r\\n    AxesHelper.prototype = Object.create( LineSegments.prototype );\\r\\n    AxesHelper.prototype.constructor = AxesHelper;\\r\\n\\r\\n    /**\\r\\n     * @author mrdoob / http://mrdoob.com/\\r\\n     */\\r\\n\\r\\n    function Face4( a, b, c, d, normal, color, materialIndex ) {\\r\\n\\r\\n        console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\\r\\n        return new Face3( a, b, c, normal, color, materialIndex );\\r\\n\\r\\n    }\\r\\n\\r\\n    var LineStrip = 0;\\r\\n\\r\\n    var LinePieces = 1;\\r\\n\\r\\n    function MeshFaceMaterial( materials ) {\\r\\n\\r\\n        console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\\r\\n        return materials;\\r\\n\\r\\n    }\\r\\n\\r\\n    function MultiMaterial( materials ) {\\r\\n\\r\\n        if ( materials === undefined ) materials = [];\\r\\n\\r\\n        console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\\r\\n        materials.isMultiMaterial = true;\\r\\n        materials.materials = materials;\\r\\n        materials.clone = function () {\\r\\n\\r\\n            return materials.slice();\\r\\n\\r\\n        };\\r\\n        return materials;\\r\\n\\r\\n    }\\r\\n\\r\\n    function PointCloud( geometry, material ) {\\r\\n\\r\\n        console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\\r\\n        return new Points( geometry, material );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Particle( material ) {\\r\\n\\r\\n        console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\\r\\n        return new Sprite( material );\\r\\n\\r\\n    }\\r\\n\\r\\n    function ParticleSystem( geometry, material ) {\\r\\n\\r\\n        console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\\r\\n        return new Points( geometry, material );\\r\\n\\r\\n    }\\r\\n\\r\\n    function PointCloudMaterial( parameters ) {\\r\\n\\r\\n        console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n        return new PointsMaterial( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    function ParticleBasicMaterial( parameters ) {\\r\\n\\r\\n        console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n        return new PointsMaterial( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    function ParticleSystemMaterial( parameters ) {\\r\\n\\r\\n        console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n        return new PointsMaterial( parameters );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Vertex( x, y, z ) {\\r\\n\\r\\n        console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\\r\\n        return new Vector3( x, y, z );\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    function DynamicBufferAttribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\\r\\n        return new BufferAttribute( array, itemSize ).setDynamic( true );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Int8Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\\r\\n        return new Int8BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Uint8Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\\r\\n        return new Uint8BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Uint8ClampedAttribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\\r\\n        return new Uint8ClampedBufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Int16Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\\r\\n        return new Int16BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Uint16Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\\r\\n        return new Uint16BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Int32Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\\r\\n        return new Int32BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Uint32Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\\r\\n        return new Uint32BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Float32Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\\r\\n        return new Float32BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    function Float64Attribute( array, itemSize ) {\\r\\n\\r\\n        console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\\r\\n        return new Float64BufferAttribute( array, itemSize );\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    Curve.create = function ( construct, getPoint ) {\\r\\n\\r\\n        console.log( 'THREE.Curve.create() has been deprecated' );\\r\\n\\r\\n        construct.prototype = Object.create( Curve.prototype );\\r\\n        construct.prototype.constructor = construct;\\r\\n        construct.prototype.getPoint = getPoint;\\r\\n\\r\\n        return construct;\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( CurvePath.prototype, {\\r\\n\\r\\n        createPointsGeometry: function ( divisions ) {\\r\\n\\r\\n            console.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\\r\\n\\r\\n            // generate geometry from path points (for Line or Points objects)\\r\\n\\r\\n            var pts = this.getPoints( divisions );\\r\\n            return this.createGeometry( pts );\\r\\n\\r\\n        },\\r\\n\\r\\n        createSpacedPointsGeometry: function ( divisions ) {\\r\\n\\r\\n            console.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\\r\\n\\r\\n            // generate geometry from equidistant sampling along the path\\r\\n\\r\\n            var pts = this.getSpacedPoints( divisions );\\r\\n            return this.createGeometry( pts );\\r\\n\\r\\n        },\\r\\n\\r\\n        createGeometry: function ( points ) {\\r\\n\\r\\n            console.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\\r\\n\\r\\n            var geometry = new Geometry();\\r\\n\\r\\n            for ( var i = 0, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n                var point = points[ i ];\\r\\n                geometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\\r\\n\\r\\n            }\\r\\n\\r\\n            return geometry;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( Path.prototype, {\\r\\n\\r\\n        fromPoints: function ( points ) {\\r\\n\\r\\n            console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\\r\\n            this.setFromPoints( points );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    function ClosedSplineCurve3( points ) {\\r\\n\\r\\n        console.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\\r\\n\\r\\n        CatmullRomCurve3.call( this, points );\\r\\n        this.type = 'catmullrom';\\r\\n        this.closed = true;\\r\\n\\r\\n    }\\r\\n\\r\\n    ClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\\r\\n\\r\\n    //\\r\\n\\r\\n    function SplineCurve3( points ) {\\r\\n\\r\\n        console.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\\r\\n\\r\\n        CatmullRomCurve3.call( this, points );\\r\\n        this.type = 'catmullrom';\\r\\n\\r\\n    }\\r\\n\\r\\n    SplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\\r\\n\\r\\n    //\\r\\n\\r\\n    function Spline( points ) {\\r\\n\\r\\n        console.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\\r\\n\\r\\n        CatmullRomCurve3.call( this, points );\\r\\n        this.type = 'catmullrom';\\r\\n\\r\\n    }\\r\\n\\r\\n    Spline.prototype = Object.create( CatmullRomCurve3.prototype );\\r\\n\\r\\n    Object.assign( Spline.prototype, {\\r\\n\\r\\n        initFromArray: function ( /* a */ ) {\\r\\n\\r\\n            console.error( 'THREE.Spline: .initFromArray() has been removed.' );\\r\\n\\r\\n        },\\r\\n        getControlPointsArray: function ( /* optionalTarget */ ) {\\r\\n\\r\\n            console.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\\r\\n\\r\\n        },\\r\\n        reparametrizeByArcLength: function ( /* samplingCoef */ ) {\\r\\n\\r\\n            console.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    function AxisHelper( size ) {\\r\\n\\r\\n        console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\\r\\n        return new AxesHelper( size );\\r\\n\\r\\n    }\\r\\n\\r\\n    function BoundingBoxHelper( object, color ) {\\r\\n\\r\\n        console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\\r\\n        return new BoxHelper( object, color );\\r\\n\\r\\n    }\\r\\n\\r\\n    function EdgesHelper( object, hex ) {\\r\\n\\r\\n        console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\\r\\n        return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    GridHelper.prototype.setColors = function () {\\r\\n\\r\\n        console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\\r\\n\\r\\n    };\\r\\n\\r\\n    SkeletonHelper.prototype.update = function () {\\r\\n\\r\\n        console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\\r\\n\\r\\n    };\\r\\n\\r\\n    function WireframeHelper( object, hex ) {\\r\\n\\r\\n        console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\\r\\n        return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( Loader.prototype, {\\r\\n\\r\\n        extractUrlBase: function ( url ) {\\r\\n\\r\\n            console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\\r\\n            return LoaderUtils.extractUrlBase( url );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    function XHRLoader( manager ) {\\r\\n\\r\\n        console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\\r\\n        return new FileLoader( manager );\\r\\n\\r\\n    }\\r\\n\\r\\n    function BinaryTextureLoader( manager ) {\\r\\n\\r\\n        console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\\r\\n        return new DataTextureLoader( manager );\\r\\n\\r\\n    }\\r\\n\\r\\n    Object.assign( JSONLoader.prototype, {\\r\\n\\r\\n        setTexturePath: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().' );\\r\\n            return this.setResourcePath( value );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( Box2.prototype, {\\r\\n\\r\\n        center: function ( optionalTarget ) {\\r\\n\\r\\n            console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\\r\\n            return this.getCenter( optionalTarget );\\r\\n\\r\\n        },\\r\\n        empty: function () {\\r\\n\\r\\n            console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\\r\\n            return this.isEmpty();\\r\\n\\r\\n        },\\r\\n        isIntersectionBox: function ( box ) {\\r\\n\\r\\n            console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n            return this.intersectsBox( box );\\r\\n\\r\\n        },\\r\\n        size: function ( optionalTarget ) {\\r\\n\\r\\n            console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\\r\\n            return this.getSize( optionalTarget );\\r\\n\\r\\n        }\\r\\n    } );\\r\\n\\r\\n    Object.assign( Box3.prototype, {\\r\\n\\r\\n        center: function ( optionalTarget ) {\\r\\n\\r\\n            console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\\r\\n            return this.getCenter( optionalTarget );\\r\\n\\r\\n        },\\r\\n        empty: function () {\\r\\n\\r\\n            console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\\r\\n            return this.isEmpty();\\r\\n\\r\\n        },\\r\\n        isIntersectionBox: function ( box ) {\\r\\n\\r\\n            console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n            return this.intersectsBox( box );\\r\\n\\r\\n        },\\r\\n        isIntersectionSphere: function ( sphere ) {\\r\\n\\r\\n            console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\r\\n            return this.intersectsSphere( sphere );\\r\\n\\r\\n        },\\r\\n        size: function ( optionalTarget ) {\\r\\n\\r\\n            console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\\r\\n            return this.getSize( optionalTarget );\\r\\n\\r\\n        }\\r\\n    } );\\r\\n\\r\\n    Line3.prototype.center = function ( optionalTarget ) {\\r\\n\\r\\n        console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\\r\\n        return this.getCenter( optionalTarget );\\r\\n\\r\\n    };\\r\\n\\r\\n    Object.assign( _Math, {\\r\\n\\r\\n        random16: function () {\\r\\n\\r\\n            console.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\\r\\n            return Math.random();\\r\\n\\r\\n        },\\r\\n\\r\\n        nearestPowerOfTwo: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\\r\\n            return _Math.floorPowerOfTwo( value );\\r\\n\\r\\n        },\\r\\n\\r\\n        nextPowerOfTwo: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\\r\\n            return _Math.ceilPowerOfTwo( value );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Matrix3.prototype, {\\r\\n\\r\\n        flattenToArrayOffset: function ( array, offset ) {\\r\\n\\r\\n            console.warn( \\\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\\\" );\\r\\n            return this.toArray( array, offset );\\r\\n\\r\\n        },\\r\\n        multiplyVector3: function ( vector ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\\r\\n            return vector.applyMatrix3( this );\\r\\n\\r\\n        },\\r\\n        multiplyVector3Array: function ( /* a */ ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\\r\\n\\r\\n        },\\r\\n        applyToBuffer: function ( buffer /*, offset, length */ ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\\r\\n            return this.applyToBufferAttribute( buffer );\\r\\n\\r\\n        },\\r\\n        applyToVector3Array: function ( /* array, offset, length */ ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Matrix4.prototype, {\\r\\n\\r\\n        extractPosition: function ( m ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\\r\\n            return this.copyPosition( m );\\r\\n\\r\\n        },\\r\\n        flattenToArrayOffset: function ( array, offset ) {\\r\\n\\r\\n            console.warn( \\\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\\\" );\\r\\n            return this.toArray( array, offset );\\r\\n\\r\\n        },\\r\\n        getPosition: function () {\\r\\n\\r\\n            var v1;\\r\\n\\r\\n            return function getPosition() {\\r\\n\\r\\n                if ( v1 === undefined ) v1 = new Vector3();\\r\\n                console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\\r\\n                return v1.setFromMatrixColumn( this, 3 );\\r\\n\\r\\n            };\\r\\n\\r\\n        }(),\\r\\n        setRotationFromQuaternion: function ( q ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\\r\\n            return this.makeRotationFromQuaternion( q );\\r\\n\\r\\n        },\\r\\n        multiplyToArray: function () {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\\r\\n\\r\\n        },\\r\\n        multiplyVector3: function ( vector ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\r\\n            return vector.applyMatrix4( this );\\r\\n\\r\\n        },\\r\\n        multiplyVector4: function ( vector ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\r\\n            return vector.applyMatrix4( this );\\r\\n\\r\\n        },\\r\\n        multiplyVector3Array: function ( /* a */ ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\\r\\n\\r\\n        },\\r\\n        rotateAxis: function ( v ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\\r\\n            v.transformDirection( this );\\r\\n\\r\\n        },\\r\\n        crossVector: function ( vector ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\r\\n            return vector.applyMatrix4( this );\\r\\n\\r\\n        },\\r\\n        translate: function () {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .translate() has been removed.' );\\r\\n\\r\\n        },\\r\\n        rotateX: function () {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .rotateX() has been removed.' );\\r\\n\\r\\n        },\\r\\n        rotateY: function () {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .rotateY() has been removed.' );\\r\\n\\r\\n        },\\r\\n        rotateZ: function () {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\\r\\n\\r\\n        },\\r\\n        rotateByAxis: function () {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\\r\\n\\r\\n        },\\r\\n        applyToBuffer: function ( buffer /*, offset, length */ ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\\r\\n            return this.applyToBufferAttribute( buffer );\\r\\n\\r\\n        },\\r\\n        applyToVector3Array: function ( /* array, offset, length */ ) {\\r\\n\\r\\n            console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\\r\\n\\r\\n        },\\r\\n        makeFrustum: function ( left, right, bottom, top, near, far ) {\\r\\n\\r\\n            console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\\r\\n            return this.makePerspective( left, right, top, bottom, near, far );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Plane.prototype.isIntersectionLine = function ( line ) {\\r\\n\\r\\n        console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\\r\\n        return this.intersectsLine( line );\\r\\n\\r\\n    };\\r\\n\\r\\n    Quaternion.prototype.multiplyVector3 = function ( vector ) {\\r\\n\\r\\n        console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\\r\\n        return vector.applyQuaternion( this );\\r\\n\\r\\n    };\\r\\n\\r\\n    Object.assign( Ray.prototype, {\\r\\n\\r\\n        isIntersectionBox: function ( box ) {\\r\\n\\r\\n            console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n            return this.intersectsBox( box );\\r\\n\\r\\n        },\\r\\n        isIntersectionPlane: function ( plane ) {\\r\\n\\r\\n            console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\\r\\n            return this.intersectsPlane( plane );\\r\\n\\r\\n        },\\r\\n        isIntersectionSphere: function ( sphere ) {\\r\\n\\r\\n            console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\r\\n            return this.intersectsSphere( sphere );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Triangle.prototype, {\\r\\n\\r\\n        area: function () {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\\r\\n            return this.getArea();\\r\\n\\r\\n        },\\r\\n        barycoordFromPoint: function ( point, target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\\r\\n            return this.getBarycoord( point, target );\\r\\n\\r\\n        },\\r\\n        midpoint: function ( target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\\r\\n            return this.getMidpoint( target );\\r\\n\\r\\n        },\\r\\n        normal: function ( target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\\r\\n            return this.getNormal( target );\\r\\n\\r\\n        },\\r\\n        plane: function ( target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\\r\\n            return this.getPlane( target );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Triangle, {\\r\\n\\r\\n        barycoordFromPoint: function ( point, a, b, c, target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\\r\\n            return Triangle.getBarycoord( point, a, b, c, target );\\r\\n\\r\\n        },\\r\\n        normal: function ( a, b, c, target ) {\\r\\n\\r\\n            console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\\r\\n            return Triangle.getNormal( a, b, c, target );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Shape.prototype, {\\r\\n\\r\\n        extractAllPoints: function ( divisions ) {\\r\\n\\r\\n            console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\\r\\n            return this.extractPoints( divisions );\\r\\n\\r\\n        },\\r\\n        extrude: function ( options ) {\\r\\n\\r\\n            console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\\r\\n            return new ExtrudeGeometry( this, options );\\r\\n\\r\\n        },\\r\\n        makeGeometry: function ( options ) {\\r\\n\\r\\n            console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\\r\\n            return new ShapeGeometry( this, options );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Vector2.prototype, {\\r\\n\\r\\n        fromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\\r\\n            return this.fromBufferAttribute( attribute, index, offset );\\r\\n\\r\\n        },\\r\\n        distanceToManhattan: function ( v ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\\r\\n            return this.manhattanDistanceTo( v );\\r\\n\\r\\n        },\\r\\n        lengthManhattan: function () {\\r\\n\\r\\n            console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\\r\\n            return this.manhattanLength();\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Vector3.prototype, {\\r\\n\\r\\n        setEulerFromRotationMatrix: function () {\\r\\n\\r\\n            console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\\r\\n\\r\\n        },\\r\\n        setEulerFromQuaternion: function () {\\r\\n\\r\\n            console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\\r\\n\\r\\n        },\\r\\n        getPositionFromMatrix: function ( m ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\\r\\n            return this.setFromMatrixPosition( m );\\r\\n\\r\\n        },\\r\\n        getScaleFromMatrix: function ( m ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\\r\\n            return this.setFromMatrixScale( m );\\r\\n\\r\\n        },\\r\\n        getColumnFromMatrix: function ( index, matrix ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\\r\\n            return this.setFromMatrixColumn( matrix, index );\\r\\n\\r\\n        },\\r\\n        applyProjection: function ( m ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\\r\\n            return this.applyMatrix4( m );\\r\\n\\r\\n        },\\r\\n        fromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\\r\\n            return this.fromBufferAttribute( attribute, index, offset );\\r\\n\\r\\n        },\\r\\n        distanceToManhattan: function ( v ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\\r\\n            return this.manhattanDistanceTo( v );\\r\\n\\r\\n        },\\r\\n        lengthManhattan: function () {\\r\\n\\r\\n            console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\\r\\n            return this.manhattanLength();\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Vector4.prototype, {\\r\\n\\r\\n        fromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n            console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\\r\\n            return this.fromBufferAttribute( attribute, index, offset );\\r\\n\\r\\n        },\\r\\n        lengthManhattan: function () {\\r\\n\\r\\n            console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\\r\\n            return this.manhattanLength();\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( Geometry.prototype, {\\r\\n\\r\\n        computeTangents: function () {\\r\\n\\r\\n            console.error( 'THREE.Geometry: .computeTangents() has been removed.' );\\r\\n\\r\\n        },\\r\\n        computeLineDistances: function () {\\r\\n\\r\\n            console.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( Object3D.prototype, {\\r\\n\\r\\n        getChildByName: function ( name ) {\\r\\n\\r\\n            console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\\r\\n            return this.getObjectByName( name );\\r\\n\\r\\n        },\\r\\n        renderDepth: function () {\\r\\n\\r\\n            console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\\r\\n\\r\\n        },\\r\\n        translate: function ( distance, axis ) {\\r\\n\\r\\n            console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\\r\\n            return this.translateOnAxis( axis, distance );\\r\\n\\r\\n        },\\r\\n        getWorldRotation: function () {\\r\\n\\r\\n            console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( Object3D.prototype, {\\r\\n\\r\\n        eulerOrder: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\r\\n                return this.rotation.order;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\r\\n                this.rotation.order = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        useQuaternion: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\r\\n\\r\\n            },\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( LOD.prototype, {\\r\\n\\r\\n        objects: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\\r\\n                return this.levels;\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperty( Skeleton.prototype, 'useVertexTexture', {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\\r\\n\\r\\n        },\\r\\n        set: function () {\\r\\n\\r\\n            console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperty( Curve.prototype, '__arcLengthDivisions', {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\\r\\n            return this.arcLengthDivisions;\\r\\n\\r\\n        },\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\\r\\n            this.arcLengthDivisions = value;\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\\r\\n\\r\\n        console.warn( \\\"THREE.PerspectiveCamera.setLens is deprecated. \\\" +\\r\\n            \\\"Use .setFocalLength and .filmGauge for a photographic setup.\\\" );\\r\\n\\r\\n        if ( filmGauge !== undefined ) this.filmGauge = filmGauge;\\r\\n        this.setFocalLength( focalLength );\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( Light.prototype, {\\r\\n        onlyShadow: {\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Light: .onlyShadow has been removed.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraFov: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\\r\\n                this.shadow.camera.fov = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraLeft: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\\r\\n                this.shadow.camera.left = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraRight: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\\r\\n                this.shadow.camera.right = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraTop: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\\r\\n                this.shadow.camera.top = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraBottom: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\\r\\n                this.shadow.camera.bottom = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraNear: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\\r\\n                this.shadow.camera.near = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraFar: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\\r\\n                this.shadow.camera.far = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowCameraVisible: {\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowBias: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\\r\\n                this.shadow.bias = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowDarkness: {\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowDarkness has been removed.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowMapWidth: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\\r\\n                this.shadow.mapSize.width = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowMapHeight: {\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\\r\\n                this.shadow.mapSize.height = value;\\r\\n\\r\\n            }\\r\\n        }\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( BufferAttribute.prototype, {\\r\\n\\r\\n        length: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\\r\\n                return this.array.length;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        copyIndicesArray: function ( /* indices */ ) {\\r\\n\\r\\n            console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.assign( BufferGeometry.prototype, {\\r\\n\\r\\n        addIndex: function ( index ) {\\r\\n\\r\\n            console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\\r\\n            this.setIndex( index );\\r\\n\\r\\n        },\\r\\n        addDrawCall: function ( start, count, indexOffset ) {\\r\\n\\r\\n            if ( indexOffset !== undefined ) {\\r\\n\\r\\n                console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\\r\\n\\r\\n            }\\r\\n            console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\\r\\n            this.addGroup( start, count );\\r\\n\\r\\n        },\\r\\n        clearDrawCalls: function () {\\r\\n\\r\\n            console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\\r\\n            this.clearGroups();\\r\\n\\r\\n        },\\r\\n        computeTangents: function () {\\r\\n\\r\\n            console.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\\r\\n\\r\\n        },\\r\\n        computeOffsets: function () {\\r\\n\\r\\n            console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( BufferGeometry.prototype, {\\r\\n\\r\\n        drawcalls: {\\r\\n            get: function () {\\r\\n\\r\\n                console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\\r\\n                return this.groups;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        offsets: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\\r\\n                return this.groups;\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( ExtrudeBufferGeometry.prototype, {\\r\\n\\r\\n        getArrays: function () {\\r\\n\\r\\n            console.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\\r\\n\\r\\n        },\\r\\n\\r\\n        addShapeList: function () {\\r\\n\\r\\n            console.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\\r\\n\\r\\n        },\\r\\n\\r\\n        addShape: function () {\\r\\n\\r\\n            console.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( Uniform.prototype, {\\r\\n\\r\\n        dynamic: {\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        onUpdate: {\\r\\n            value: function () {\\r\\n\\r\\n                console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\\r\\n                return this;\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( Material.prototype, {\\r\\n\\r\\n        wrapAround: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.Material: .wrapAround has been removed.' );\\r\\n\\r\\n            },\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.Material: .wrapAround has been removed.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        wrapRGB: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.Material: .wrapRGB has been removed.' );\\r\\n                return new Color();\\r\\n\\r\\n            }\\r\\n        },\\r\\n\\r\\n        shading: {\\r\\n            get: function () {\\r\\n\\r\\n                console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\\r\\n                this.flatShading = ( value === FlatShading );\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( MeshPhongMaterial.prototype, {\\r\\n\\r\\n        metal: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\\r\\n                return false;\\r\\n\\r\\n            },\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( ShaderMaterial.prototype, {\\r\\n\\r\\n        derivatives: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\r\\n                return this.extensions.derivatives;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\r\\n                this.extensions.derivatives = value;\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.assign( WebGLRenderer.prototype, {\\r\\n\\r\\n        clearTarget: function ( renderTarget, color, depth, stencil ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\\r\\n            this.setRenderTarget( renderTarget );\\r\\n            this.clear( color, depth, stencil );\\r\\n\\r\\n        },\\r\\n\\r\\n        animate: function ( callback ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\\r\\n            this.setAnimationLoop( callback );\\r\\n\\r\\n        },\\r\\n\\r\\n        getCurrentRenderTarget: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\\r\\n            return this.getRenderTarget();\\r\\n\\r\\n        },\\r\\n\\r\\n        getMaxAnisotropy: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\\r\\n            return this.capabilities.getMaxAnisotropy();\\r\\n\\r\\n        },\\r\\n\\r\\n        getPrecision: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\\r\\n            return this.capabilities.precision;\\r\\n\\r\\n        },\\r\\n\\r\\n        resetGLState: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\\r\\n            return this.state.reset();\\r\\n\\r\\n        },\\r\\n\\r\\n        supportsFloatTextures: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\\\'OES_texture_float\\\\' ).' );\\r\\n            return this.extensions.get( 'OES_texture_float' );\\r\\n\\r\\n        },\\r\\n        supportsHalfFloatTextures: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\\\'OES_texture_half_float\\\\' ).' );\\r\\n            return this.extensions.get( 'OES_texture_half_float' );\\r\\n\\r\\n        },\\r\\n        supportsStandardDerivatives: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\\\'OES_standard_derivatives\\\\' ).' );\\r\\n            return this.extensions.get( 'OES_standard_derivatives' );\\r\\n\\r\\n        },\\r\\n        supportsCompressedTextureS3TC: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\\\'WEBGL_compressed_texture_s3tc\\\\' ).' );\\r\\n            return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\\r\\n\\r\\n        },\\r\\n        supportsCompressedTexturePVRTC: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\\\'WEBGL_compressed_texture_pvrtc\\\\' ).' );\\r\\n            return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\r\\n\\r\\n        },\\r\\n        supportsBlendMinMax: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\\\'EXT_blend_minmax\\\\' ).' );\\r\\n            return this.extensions.get( 'EXT_blend_minmax' );\\r\\n\\r\\n        },\\r\\n        supportsVertexTextures: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\\r\\n            return this.capabilities.vertexTextures;\\r\\n\\r\\n        },\\r\\n        supportsInstancedArrays: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\\\'ANGLE_instanced_arrays\\\\' ).' );\\r\\n            return this.extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n        },\\r\\n        enableScissorTest: function ( boolean ) {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\\r\\n            this.setScissorTest( boolean );\\r\\n\\r\\n        },\\r\\n        initMaterial: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\\r\\n\\r\\n        },\\r\\n        addPrePlugin: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\\r\\n\\r\\n        },\\r\\n        addPostPlugin: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\\r\\n\\r\\n        },\\r\\n        updateShadowMap: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\\r\\n\\r\\n        },\\r\\n        setFaceCulling: function () {\\r\\n\\r\\n            console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\\r\\n\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( WebGLRenderer.prototype, {\\r\\n\\r\\n        shadowMapEnabled: {\\r\\n            get: function () {\\r\\n\\r\\n                return this.shadowMap.enabled;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\\r\\n                this.shadowMap.enabled = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowMapType: {\\r\\n            get: function () {\\r\\n\\r\\n                return this.shadowMap.type;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\\r\\n                this.shadowMap.type = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        shadowMapCullFace: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\\r\\n                return undefined;\\r\\n\\r\\n            },\\r\\n            set: function ( /* value */ ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\\r\\n\\r\\n            }\\r\\n        }\\r\\n    } );\\r\\n\\r\\n    Object.defineProperties( WebGLShadowMap.prototype, {\\r\\n\\r\\n        cullFace: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\\r\\n                return undefined;\\r\\n\\r\\n            },\\r\\n            set: function ( /* cullFace */ ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        renderReverseSided: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\\r\\n                return undefined;\\r\\n\\r\\n            },\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        renderSingleSided: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\\r\\n                return undefined;\\r\\n\\r\\n            },\\r\\n            set: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( WebGLRenderTarget.prototype, {\\r\\n\\r\\n        wrapS: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\r\\n                return this.texture.wrapS;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\r\\n                this.texture.wrapS = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        wrapT: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\r\\n                return this.texture.wrapT;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\r\\n                this.texture.wrapT = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        magFilter: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\r\\n                return this.texture.magFilter;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\r\\n                this.texture.magFilter = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        minFilter: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\r\\n                return this.texture.minFilter;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\r\\n                this.texture.minFilter = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        anisotropy: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\r\\n                return this.texture.anisotropy;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\r\\n                this.texture.anisotropy = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        offset: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\r\\n                return this.texture.offset;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\r\\n                this.texture.offset = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        repeat: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\r\\n                return this.texture.repeat;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\r\\n                this.texture.repeat = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        format: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\r\\n                return this.texture.format;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\r\\n                this.texture.format = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        type: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\r\\n                return this.texture.type;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\r\\n                this.texture.type = value;\\r\\n\\r\\n            }\\r\\n        },\\r\\n        generateMipmaps: {\\r\\n            get: function () {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\r\\n                return this.texture.generateMipmaps;\\r\\n\\r\\n            },\\r\\n            set: function ( value ) {\\r\\n\\r\\n                console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\r\\n                this.texture.generateMipmaps = value;\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Object.defineProperties( WebVRManager.prototype, {\\r\\n\\r\\n        standing: {\\r\\n            set: function ( /* value */ ) {\\r\\n\\r\\n                console.warn( 'THREE.WebVRManager: .standing has been removed.' );\\r\\n\\r\\n            }\\r\\n        },\\r\\n        userHeight: {\\r\\n            set: function ( /* value */ ) {\\r\\n\\r\\n                console.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\\r\\n\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } );\\r\\n\\r\\n    //\\r\\n\\r\\n    Audio.prototype.load = function ( file ) {\\r\\n\\r\\n        console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\\r\\n        var scope = this;\\r\\n        var audioLoader = new AudioLoader();\\r\\n        audioLoader.load( file, function ( buffer ) {\\r\\n\\r\\n            scope.setBuffer( buffer );\\r\\n\\r\\n        } );\\r\\n        return this;\\r\\n\\r\\n    };\\r\\n\\r\\n    AudioAnalyser.prototype.getData = function () {\\r\\n\\r\\n        console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\\r\\n        return this.getFrequencyData();\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\\r\\n\\r\\n        console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\\r\\n        return this.update( renderer, scene );\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    var GeometryUtils = {\\r\\n\\r\\n        merge: function ( geometry1, geometry2, materialIndexOffset ) {\\r\\n\\r\\n            console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\\r\\n            var matrix;\\r\\n\\r\\n            if ( geometry2.isMesh ) {\\r\\n\\r\\n                geometry2.matrixAutoUpdate && geometry2.updateMatrix();\\r\\n\\r\\n                matrix = geometry2.matrix;\\r\\n                geometry2 = geometry2.geometry;\\r\\n\\r\\n            }\\r\\n\\r\\n            geometry1.merge( geometry2, matrix, materialIndexOffset );\\r\\n\\r\\n        },\\r\\n\\r\\n        center: function ( geometry ) {\\r\\n\\r\\n            console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\\r\\n            return geometry.center();\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    ImageUtils.crossOrigin = undefined;\\r\\n\\r\\n    ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\\r\\n\\r\\n        console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\\r\\n\\r\\n        var loader = new TextureLoader();\\r\\n        loader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n        var texture = loader.load( url, onLoad, undefined, onError );\\r\\n\\r\\n        if ( mapping ) texture.mapping = mapping;\\r\\n\\r\\n        return texture;\\r\\n\\r\\n    };\\r\\n\\r\\n    ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\\r\\n\\r\\n        console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\\r\\n\\r\\n        var loader = new CubeTextureLoader();\\r\\n        loader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n        var texture = loader.load( urls, onLoad, undefined, onError );\\r\\n\\r\\n        if ( mapping ) texture.mapping = mapping;\\r\\n\\r\\n        return texture;\\r\\n\\r\\n    };\\r\\n\\r\\n    ImageUtils.loadCompressedTexture = function () {\\r\\n\\r\\n        console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\\r\\n\\r\\n    };\\r\\n\\r\\n    ImageUtils.loadCompressedTextureCube = function () {\\r\\n\\r\\n        console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    function Projector() {\\r\\n\\r\\n        console.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\\r\\n\\r\\n        this.projectVector = function ( vector, camera ) {\\r\\n\\r\\n            console.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\\r\\n            vector.project( camera );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.unprojectVector = function ( vector, camera ) {\\r\\n\\r\\n            console.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\\r\\n            vector.unproject( camera );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.pickingRay = function () {\\r\\n\\r\\n            console.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\\r\\n\\r\\n        };\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    function CanvasRenderer() {\\r\\n\\r\\n        console.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\\r\\n\\r\\n        this.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n        this.clear = function () {};\\r\\n        this.render = function () {};\\r\\n        this.setClearColor = function () {};\\r\\n        this.setSize = function () {};\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    var SceneUtils = {\\r\\n\\r\\n        createMultiMaterialObject: function ( /* geometry, materials */ ) {\\r\\n\\r\\n            console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\\r\\n\\r\\n        },\\r\\n\\r\\n        detach: function ( /* child, parent, scene */ ) {\\r\\n\\r\\n            console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\\r\\n\\r\\n        },\\r\\n\\r\\n        attach: function ( /* child, scene, parent */ ) {\\r\\n\\r\\n            console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\\r\\n\\r\\n        }\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n\\r\\n    function LensFlare() {\\r\\n\\r\\n        console.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\\r\\n\\r\\n    }\\r\\n\\r\\n    exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\\r\\n    exports.WebGLRenderTarget = WebGLRenderTarget;\\r\\n    exports.WebGLRenderer = WebGLRenderer;\\r\\n    exports.ShaderLib = ShaderLib;\\r\\n    exports.UniformsLib = UniformsLib;\\r\\n    exports.UniformsUtils = UniformsUtils;\\r\\n    exports.ShaderChunk = ShaderChunk;\\r\\n    exports.FogExp2 = FogExp2;\\r\\n    exports.Fog = Fog;\\r\\n    exports.Scene = Scene;\\r\\n    exports.Sprite = Sprite;\\r\\n    exports.LOD = LOD;\\r\\n    exports.SkinnedMesh = SkinnedMesh;\\r\\n    exports.Skeleton = Skeleton;\\r\\n    exports.Bone = Bone;\\r\\n    exports.Mesh = Mesh;\\r\\n    exports.LineSegments = LineSegments;\\r\\n    exports.LineLoop = LineLoop;\\r\\n    exports.Line = Line;\\r\\n    exports.Points = Points;\\r\\n    exports.Group = Group;\\r\\n    exports.VideoTexture = VideoTexture;\\r\\n    exports.DataTexture = DataTexture;\\r\\n    exports.DataTexture3D = DataTexture3D;\\r\\n    exports.CompressedTexture = CompressedTexture;\\r\\n    exports.CubeTexture = CubeTexture;\\r\\n    exports.CanvasTexture = CanvasTexture;\\r\\n    exports.DepthTexture = DepthTexture;\\r\\n    exports.Texture = Texture;\\r\\n    exports.CompressedTextureLoader = CompressedTextureLoader;\\r\\n    exports.DataTextureLoader = DataTextureLoader;\\r\\n    exports.CubeTextureLoader = CubeTextureLoader;\\r\\n    exports.TextureLoader = TextureLoader;\\r\\n    exports.ObjectLoader = ObjectLoader;\\r\\n    exports.MaterialLoader = MaterialLoader;\\r\\n    exports.BufferGeometryLoader = BufferGeometryLoader;\\r\\n    exports.DefaultLoadingManager = DefaultLoadingManager;\\r\\n    exports.LoadingManager = LoadingManager;\\r\\n    exports.JSONLoader = JSONLoader;\\r\\n    exports.ImageLoader = ImageLoader;\\r\\n    exports.ImageBitmapLoader = ImageBitmapLoader;\\r\\n    exports.FontLoader = FontLoader;\\r\\n    exports.FileLoader = FileLoader;\\r\\n    exports.Loader = Loader;\\r\\n    exports.LoaderUtils = LoaderUtils;\\r\\n    exports.Cache = Cache;\\r\\n    exports.AudioLoader = AudioLoader;\\r\\n    exports.SpotLightShadow = SpotLightShadow;\\r\\n    exports.SpotLight = SpotLight;\\r\\n    exports.PointLight = PointLight;\\r\\n    exports.RectAreaLight = RectAreaLight;\\r\\n    exports.HemisphereLight = HemisphereLight;\\r\\n    exports.DirectionalLightShadow = DirectionalLightShadow;\\r\\n    exports.DirectionalLight = DirectionalLight;\\r\\n    exports.AmbientLight = AmbientLight;\\r\\n    exports.LightShadow = LightShadow;\\r\\n    exports.Light = Light;\\r\\n    exports.StereoCamera = StereoCamera;\\r\\n    exports.PerspectiveCamera = PerspectiveCamera;\\r\\n    exports.OrthographicCamera = OrthographicCamera;\\r\\n    exports.CubeCamera = CubeCamera;\\r\\n    exports.ArrayCamera = ArrayCamera;\\r\\n    exports.Camera = Camera;\\r\\n    exports.AudioListener = AudioListener;\\r\\n    exports.PositionalAudio = PositionalAudio;\\r\\n    exports.AudioContext = AudioContext;\\r\\n    exports.AudioAnalyser = AudioAnalyser;\\r\\n    exports.Audio = Audio;\\r\\n    exports.VectorKeyframeTrack = VectorKeyframeTrack;\\r\\n    exports.StringKeyframeTrack = StringKeyframeTrack;\\r\\n    exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\\r\\n    exports.NumberKeyframeTrack = NumberKeyframeTrack;\\r\\n    exports.ColorKeyframeTrack = ColorKeyframeTrack;\\r\\n    exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\\r\\n    exports.PropertyMixer = PropertyMixer;\\r\\n    exports.PropertyBinding = PropertyBinding;\\r\\n    exports.KeyframeTrack = KeyframeTrack;\\r\\n    exports.AnimationUtils = AnimationUtils;\\r\\n    exports.AnimationObjectGroup = AnimationObjectGroup;\\r\\n    exports.AnimationMixer = AnimationMixer;\\r\\n    exports.AnimationClip = AnimationClip;\\r\\n    exports.Uniform = Uniform;\\r\\n    exports.InstancedBufferGeometry = InstancedBufferGeometry;\\r\\n    exports.BufferGeometry = BufferGeometry;\\r\\n    exports.Geometry = Geometry;\\r\\n    exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\\r\\n    exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\\r\\n    exports.InterleavedBuffer = InterleavedBuffer;\\r\\n    exports.InstancedBufferAttribute = InstancedBufferAttribute;\\r\\n    exports.Face3 = Face3;\\r\\n    exports.Object3D = Object3D;\\r\\n    exports.Raycaster = Raycaster;\\r\\n    exports.Layers = Layers;\\r\\n    exports.EventDispatcher = EventDispatcher;\\r\\n    exports.Clock = Clock;\\r\\n    exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\\r\\n    exports.LinearInterpolant = LinearInterpolant;\\r\\n    exports.DiscreteInterpolant = DiscreteInterpolant;\\r\\n    exports.CubicInterpolant = CubicInterpolant;\\r\\n    exports.Interpolant = Interpolant;\\r\\n    exports.Triangle = Triangle;\\r\\n    exports.Math = _Math;\\r\\n    exports.Spherical = Spherical;\\r\\n    exports.Cylindrical = Cylindrical;\\r\\n    exports.Plane = Plane;\\r\\n    exports.Frustum = Frustum;\\r\\n    exports.Sphere = Sphere;\\r\\n    exports.Ray = Ray;\\r\\n    exports.Matrix4 = Matrix4;\\r\\n    exports.Matrix3 = Matrix3;\\r\\n    exports.Box3 = Box3;\\r\\n    exports.Box2 = Box2;\\r\\n    exports.Line3 = Line3;\\r\\n    exports.Euler = Euler;\\r\\n    exports.Vector4 = Vector4;\\r\\n    exports.Vector3 = Vector3;\\r\\n    exports.Vector2 = Vector2;\\r\\n    exports.Quaternion = Quaternion;\\r\\n    exports.Color = Color;\\r\\n    exports.ImmediateRenderObject = ImmediateRenderObject;\\r\\n    exports.VertexNormalsHelper = VertexNormalsHelper;\\r\\n    exports.SpotLightHelper = SpotLightHelper;\\r\\n    exports.SkeletonHelper = SkeletonHelper;\\r\\n    exports.PointLightHelper = PointLightHelper;\\r\\n    exports.RectAreaLightHelper = RectAreaLightHelper;\\r\\n    exports.HemisphereLightHelper = HemisphereLightHelper;\\r\\n    exports.GridHelper = GridHelper;\\r\\n    exports.PolarGridHelper = PolarGridHelper;\\r\\n    exports.FaceNormalsHelper = FaceNormalsHelper;\\r\\n    exports.DirectionalLightHelper = DirectionalLightHelper;\\r\\n    exports.CameraHelper = CameraHelper;\\r\\n    exports.BoxHelper = BoxHelper;\\r\\n    exports.Box3Helper = Box3Helper;\\r\\n    exports.PlaneHelper = PlaneHelper;\\r\\n    exports.ArrowHelper = ArrowHelper;\\r\\n    exports.AxesHelper = AxesHelper;\\r\\n    exports.Shape = Shape;\\r\\n    exports.Path = Path;\\r\\n    exports.ShapePath = ShapePath;\\r\\n    exports.Font = Font;\\r\\n    exports.CurvePath = CurvePath;\\r\\n    exports.Curve = Curve;\\r\\n    exports.ImageUtils = ImageUtils;\\r\\n    exports.ShapeUtils = ShapeUtils;\\r\\n    exports.WebGLUtils = WebGLUtils;\\r\\n    exports.WireframeGeometry = WireframeGeometry;\\r\\n    exports.ParametricGeometry = ParametricGeometry;\\r\\n    exports.ParametricBufferGeometry = ParametricBufferGeometry;\\r\\n    exports.TetrahedronGeometry = TetrahedronGeometry;\\r\\n    exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\\r\\n    exports.OctahedronGeometry = OctahedronGeometry;\\r\\n    exports.OctahedronBufferGeometry = OctahedronBufferGeometry;\\r\\n    exports.IcosahedronGeometry = IcosahedronGeometry;\\r\\n    exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\\r\\n    exports.DodecahedronGeometry = DodecahedronGeometry;\\r\\n    exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\\r\\n    exports.PolyhedronGeometry = PolyhedronGeometry;\\r\\n    exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\\r\\n    exports.TubeGeometry = TubeGeometry;\\r\\n    exports.TubeBufferGeometry = TubeBufferGeometry;\\r\\n    exports.TorusKnotGeometry = TorusKnotGeometry;\\r\\n    exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\\r\\n    exports.TorusGeometry = TorusGeometry;\\r\\n    exports.TorusBufferGeometry = TorusBufferGeometry;\\r\\n    exports.TextGeometry = TextGeometry;\\r\\n    exports.TextBufferGeometry = TextBufferGeometry;\\r\\n    exports.SphereGeometry = SphereGeometry;\\r\\n    exports.SphereBufferGeometry = SphereBufferGeometry;\\r\\n    exports.RingGeometry = RingGeometry;\\r\\n    exports.RingBufferGeometry = RingBufferGeometry;\\r\\n    exports.PlaneGeometry = PlaneGeometry;\\r\\n    exports.PlaneBufferGeometry = PlaneBufferGeometry;\\r\\n    exports.LatheGeometry = LatheGeometry;\\r\\n    exports.LatheBufferGeometry = LatheBufferGeometry;\\r\\n    exports.ShapeGeometry = ShapeGeometry;\\r\\n    exports.ShapeBufferGeometry = ShapeBufferGeometry;\\r\\n    exports.ExtrudeGeometry = ExtrudeGeometry;\\r\\n    exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\\r\\n    exports.EdgesGeometry = EdgesGeometry;\\r\\n    exports.ConeGeometry = ConeGeometry;\\r\\n    exports.ConeBufferGeometry = ConeBufferGeometry;\\r\\n    exports.CylinderGeometry = CylinderGeometry;\\r\\n    exports.CylinderBufferGeometry = CylinderBufferGeometry;\\r\\n    exports.CircleGeometry = CircleGeometry;\\r\\n    exports.CircleBufferGeometry = CircleBufferGeometry;\\r\\n    exports.BoxGeometry = BoxGeometry;\\r\\n    exports.BoxBufferGeometry = BoxBufferGeometry;\\r\\n    exports.ShadowMaterial = ShadowMaterial;\\r\\n    exports.SpriteMaterial = SpriteMaterial;\\r\\n    exports.RawShaderMaterial = RawShaderMaterial;\\r\\n    exports.ShaderMaterial = ShaderMaterial;\\r\\n    exports.PointsMaterial = PointsMaterial;\\r\\n    exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\\r\\n    exports.MeshStandardMaterial = MeshStandardMaterial;\\r\\n    exports.MeshPhongMaterial = MeshPhongMaterial;\\r\\n    exports.MeshToonMaterial = MeshToonMaterial;\\r\\n    exports.MeshNormalMaterial = MeshNormalMaterial;\\r\\n    exports.MeshLambertMaterial = MeshLambertMaterial;\\r\\n    exports.MeshDepthMaterial = MeshDepthMaterial;\\r\\n    exports.MeshDistanceMaterial = MeshDistanceMaterial;\\r\\n    exports.MeshBasicMaterial = MeshBasicMaterial;\\r\\n    exports.MeshMatcapMaterial = MeshMatcapMaterial;\\r\\n    exports.LineDashedMaterial = LineDashedMaterial;\\r\\n    exports.LineBasicMaterial = LineBasicMaterial;\\r\\n    exports.Material = Material;\\r\\n    exports.Float64BufferAttribute = Float64BufferAttribute;\\r\\n    exports.Float32BufferAttribute = Float32BufferAttribute;\\r\\n    exports.Uint32BufferAttribute = Uint32BufferAttribute;\\r\\n    exports.Int32BufferAttribute = Int32BufferAttribute;\\r\\n    exports.Uint16BufferAttribute = Uint16BufferAttribute;\\r\\n    exports.Int16BufferAttribute = Int16BufferAttribute;\\r\\n    exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\\r\\n    exports.Uint8BufferAttribute = Uint8BufferAttribute;\\r\\n    exports.Int8BufferAttribute = Int8BufferAttribute;\\r\\n    exports.BufferAttribute = BufferAttribute;\\r\\n    exports.ArcCurve = ArcCurve;\\r\\n    exports.CatmullRomCurve3 = CatmullRomCurve3;\\r\\n    exports.CubicBezierCurve = CubicBezierCurve;\\r\\n    exports.CubicBezierCurve3 = CubicBezierCurve3;\\r\\n    exports.EllipseCurve = EllipseCurve;\\r\\n    exports.LineCurve = LineCurve;\\r\\n    exports.LineCurve3 = LineCurve3;\\r\\n    exports.QuadraticBezierCurve = QuadraticBezierCurve;\\r\\n    exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\\r\\n    exports.SplineCurve = SplineCurve;\\r\\n    exports.REVISION = REVISION;\\r\\n    exports.MOUSE = MOUSE;\\r\\n    exports.CullFaceNone = CullFaceNone;\\r\\n    exports.CullFaceBack = CullFaceBack;\\r\\n    exports.CullFaceFront = CullFaceFront;\\r\\n    exports.CullFaceFrontBack = CullFaceFrontBack;\\r\\n    exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\\r\\n    exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\\r\\n    exports.BasicShadowMap = BasicShadowMap;\\r\\n    exports.PCFShadowMap = PCFShadowMap;\\r\\n    exports.PCFSoftShadowMap = PCFSoftShadowMap;\\r\\n    exports.FrontSide = FrontSide;\\r\\n    exports.BackSide = BackSide;\\r\\n    exports.DoubleSide = DoubleSide;\\r\\n    exports.FlatShading = FlatShading;\\r\\n    exports.SmoothShading = SmoothShading;\\r\\n    exports.NoColors = NoColors;\\r\\n    exports.FaceColors = FaceColors;\\r\\n    exports.VertexColors = VertexColors;\\r\\n    exports.NoBlending = NoBlending;\\r\\n    exports.NormalBlending = NormalBlending;\\r\\n    exports.AdditiveBlending = AdditiveBlending;\\r\\n    exports.SubtractiveBlending = SubtractiveBlending;\\r\\n    exports.MultiplyBlending = MultiplyBlending;\\r\\n    exports.CustomBlending = CustomBlending;\\r\\n    exports.AddEquation = AddEquation;\\r\\n    exports.SubtractEquation = SubtractEquation;\\r\\n    exports.ReverseSubtractEquation = ReverseSubtractEquation;\\r\\n    exports.MinEquation = MinEquation;\\r\\n    exports.MaxEquation = MaxEquation;\\r\\n    exports.ZeroFactor = ZeroFactor;\\r\\n    exports.OneFactor = OneFactor;\\r\\n    exports.SrcColorFactor = SrcColorFactor;\\r\\n    exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\\r\\n    exports.SrcAlphaFactor = SrcAlphaFactor;\\r\\n    exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\\r\\n    exports.DstAlphaFactor = DstAlphaFactor;\\r\\n    exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\\r\\n    exports.DstColorFactor = DstColorFactor;\\r\\n    exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\\r\\n    exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\\r\\n    exports.NeverDepth = NeverDepth;\\r\\n    exports.AlwaysDepth = AlwaysDepth;\\r\\n    exports.LessDepth = LessDepth;\\r\\n    exports.LessEqualDepth = LessEqualDepth;\\r\\n    exports.EqualDepth = EqualDepth;\\r\\n    exports.GreaterEqualDepth = GreaterEqualDepth;\\r\\n    exports.GreaterDepth = GreaterDepth;\\r\\n    exports.NotEqualDepth = NotEqualDepth;\\r\\n    exports.MultiplyOperation = MultiplyOperation;\\r\\n    exports.MixOperation = MixOperation;\\r\\n    exports.AddOperation = AddOperation;\\r\\n    exports.NoToneMapping = NoToneMapping;\\r\\n    exports.LinearToneMapping = LinearToneMapping;\\r\\n    exports.ReinhardToneMapping = ReinhardToneMapping;\\r\\n    exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\\r\\n    exports.CineonToneMapping = CineonToneMapping;\\r\\n    exports.UVMapping = UVMapping;\\r\\n    exports.CubeReflectionMapping = CubeReflectionMapping;\\r\\n    exports.CubeRefractionMapping = CubeRefractionMapping;\\r\\n    exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\\r\\n    exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\\r\\n    exports.SphericalReflectionMapping = SphericalReflectionMapping;\\r\\n    exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\\r\\n    exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\\r\\n    exports.RepeatWrapping = RepeatWrapping;\\r\\n    exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\\r\\n    exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\\r\\n    exports.NearestFilter = NearestFilter;\\r\\n    exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\\r\\n    exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\\r\\n    exports.LinearFilter = LinearFilter;\\r\\n    exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\\r\\n    exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\\r\\n    exports.UnsignedByteType = UnsignedByteType;\\r\\n    exports.ByteType = ByteType;\\r\\n    exports.ShortType = ShortType;\\r\\n    exports.UnsignedShortType = UnsignedShortType;\\r\\n    exports.IntType = IntType;\\r\\n    exports.UnsignedIntType = UnsignedIntType;\\r\\n    exports.FloatType = FloatType;\\r\\n    exports.HalfFloatType = HalfFloatType;\\r\\n    exports.UnsignedShort4444Type = UnsignedShort4444Type;\\r\\n    exports.UnsignedShort5551Type = UnsignedShort5551Type;\\r\\n    exports.UnsignedShort565Type = UnsignedShort565Type;\\r\\n    exports.UnsignedInt248Type = UnsignedInt248Type;\\r\\n    exports.AlphaFormat = AlphaFormat;\\r\\n    exports.RGBFormat = RGBFormat;\\r\\n    exports.RGBAFormat = RGBAFormat;\\r\\n    exports.LuminanceFormat = LuminanceFormat;\\r\\n    exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\\r\\n    exports.RGBEFormat = RGBEFormat;\\r\\n    exports.DepthFormat = DepthFormat;\\r\\n    exports.DepthStencilFormat = DepthStencilFormat;\\r\\n    exports.RedFormat = RedFormat;\\r\\n    exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\\r\\n    exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\\r\\n    exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\\r\\n    exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\\r\\n    exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\\r\\n    exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\\r\\n    exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\\r\\n    exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\\r\\n    exports.RGB_ETC1_Format = RGB_ETC1_Format;\\r\\n    exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\\r\\n    exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\\r\\n    exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\\r\\n    exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\\r\\n    exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\\r\\n    exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\\r\\n    exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\\r\\n    exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\\r\\n    exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\\r\\n    exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\\r\\n    exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\\r\\n    exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\\r\\n    exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\\r\\n    exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\\r\\n    exports.LoopOnce = LoopOnce;\\r\\n    exports.LoopRepeat = LoopRepeat;\\r\\n    exports.LoopPingPong = LoopPingPong;\\r\\n    exports.InterpolateDiscrete = InterpolateDiscrete;\\r\\n    exports.InterpolateLinear = InterpolateLinear;\\r\\n    exports.InterpolateSmooth = InterpolateSmooth;\\r\\n    exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\\r\\n    exports.ZeroSlopeEnding = ZeroSlopeEnding;\\r\\n    exports.WrapAroundEnding = WrapAroundEnding;\\r\\n    exports.TrianglesDrawMode = TrianglesDrawMode;\\r\\n    exports.TriangleStripDrawMode = TriangleStripDrawMode;\\r\\n    exports.TriangleFanDrawMode = TriangleFanDrawMode;\\r\\n    exports.LinearEncoding = LinearEncoding;\\r\\n    exports.sRGBEncoding = sRGBEncoding;\\r\\n    exports.GammaEncoding = GammaEncoding;\\r\\n    exports.RGBEEncoding = RGBEEncoding;\\r\\n    exports.LogLuvEncoding = LogLuvEncoding;\\r\\n    exports.RGBM7Encoding = RGBM7Encoding;\\r\\n    exports.RGBM16Encoding = RGBM16Encoding;\\r\\n    exports.RGBDEncoding = RGBDEncoding;\\r\\n    exports.BasicDepthPacking = BasicDepthPacking;\\r\\n    exports.RGBADepthPacking = RGBADepthPacking;\\r\\n    exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\\r\\n    exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\\r\\n    exports.CubeGeometry = BoxGeometry;\\r\\n    exports.Face4 = Face4;\\r\\n    exports.LineStrip = LineStrip;\\r\\n    exports.LinePieces = LinePieces;\\r\\n    exports.MeshFaceMaterial = MeshFaceMaterial;\\r\\n    exports.MultiMaterial = MultiMaterial;\\r\\n    exports.PointCloud = PointCloud;\\r\\n    exports.Particle = Particle;\\r\\n    exports.ParticleSystem = ParticleSystem;\\r\\n    exports.PointCloudMaterial = PointCloudMaterial;\\r\\n    exports.ParticleBasicMaterial = ParticleBasicMaterial;\\r\\n    exports.ParticleSystemMaterial = ParticleSystemMaterial;\\r\\n    exports.Vertex = Vertex;\\r\\n    exports.DynamicBufferAttribute = DynamicBufferAttribute;\\r\\n    exports.Int8Attribute = Int8Attribute;\\r\\n    exports.Uint8Attribute = Uint8Attribute;\\r\\n    exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\\r\\n    exports.Int16Attribute = Int16Attribute;\\r\\n    exports.Uint16Attribute = Uint16Attribute;\\r\\n    exports.Int32Attribute = Int32Attribute;\\r\\n    exports.Uint32Attribute = Uint32Attribute;\\r\\n    exports.Float32Attribute = Float32Attribute;\\r\\n    exports.Float64Attribute = Float64Attribute;\\r\\n    exports.ClosedSplineCurve3 = ClosedSplineCurve3;\\r\\n    exports.SplineCurve3 = SplineCurve3;\\r\\n    exports.Spline = Spline;\\r\\n    exports.AxisHelper = AxisHelper;\\r\\n    exports.BoundingBoxHelper = BoundingBoxHelper;\\r\\n    exports.EdgesHelper = EdgesHelper;\\r\\n    exports.WireframeHelper = WireframeHelper;\\r\\n    exports.XHRLoader = XHRLoader;\\r\\n    exports.BinaryTextureLoader = BinaryTextureLoader;\\r\\n    exports.GeometryUtils = GeometryUtils;\\r\\n    exports.Projector = Projector;\\r\\n    exports.CanvasRenderer = CanvasRenderer;\\r\\n    exports.SceneUtils = SceneUtils;\\r\\n    exports.LensFlare = LensFlare;\\r\\n\\r\\n    Object.defineProperty(exports, '__esModule', { value: true });\\r\\n\\r\\n})));\",\"/**\\r\\n * @author qiao / https://github.com/qiao\\r\\n * @author mrdoob / http://mrdoob.com\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author erich666 / http://erichaines.com\\r\\n */\\r\\n\\r\\n// This set of controls performs orbiting, dollying (zooming), and panning.\\r\\n// Unlike TrackballControls, it maintains the \\\"up\\\" direction object.up (+Y by default).\\r\\n//\\r\\n//    Orbit - left mouse / touch: one-finger move\\r\\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\\r\\n//    Pan - right mouse, or left mouse + ctrl/metaKey, or arrow keys / touch: two-finger move\\r\\n\\r\\nTHREE.OrbitControls = function ( object, domElement ) {\\r\\n\\r\\n    this.object = object;\\r\\n\\r\\n    this.domElement = ( domElement !== undefined ) ? domElement : document;\\r\\n\\r\\n    // Set to false to disable this control\\r\\n    this.enabled = true;\\r\\n\\r\\n    // \\\"target\\\" sets the location of focus, where the object orbits around\\r\\n    this.target = new THREE.Vector3();\\r\\n\\r\\n    // How far you can dolly in and out ( PerspectiveCamera only )\\r\\n    this.minDistance = 0;\\r\\n    this.maxDistance = Infinity;\\r\\n\\r\\n    // How far you can zoom in and out ( OrthographicCamera only )\\r\\n    this.minZoom = 0;\\r\\n    this.maxZoom = Infinity;\\r\\n\\r\\n    // How far you can orbit vertically, upper and lower limits.\\r\\n    // Range is 0 to Math.PI radians.\\r\\n    this.minPolarAngle = 0; // radians\\r\\n    this.maxPolarAngle = Math.PI; // radians\\r\\n\\r\\n    // How far you can orbit horizontally, upper and lower limits.\\r\\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\\r\\n    this.minAzimuthAngle = - Infinity; // radians\\r\\n    this.maxAzimuthAngle = Infinity; // radians\\r\\n\\r\\n    // Set to true to enable damping (inertia)\\r\\n    // If damping is enabled, you must call controls.update() in your animation loop\\r\\n    this.enableDamping = false;\\r\\n    this.dampingFactor = 0.25;\\r\\n\\r\\n    // This option actually enables dollying in and out; left as \\\"zoom\\\" for backwards compatibility.\\r\\n    // Set to false to disable zooming\\r\\n    this.enableZoom = true;\\r\\n    this.zoomSpeed = 1.0;\\r\\n\\r\\n    // Set to false to disable rotating\\r\\n    this.enableRotate = true;\\r\\n    this.rotateSpeed = 1.0;\\r\\n\\r\\n    // Set to false to disable panning\\r\\n    this.enablePan = true;\\r\\n    this.panSpeed = 1.0;\\r\\n    this.screenSpacePanning = false; // if true, pan in screen-space\\r\\n    this.keyPanSpeed = 7.0;\\t// pixels moved per arrow key push\\r\\n\\r\\n    // Set to true to automatically rotate around the target\\r\\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\\r\\n    this.autoRotate = false;\\r\\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\\r\\n\\r\\n    // Set to false to disable use of the keys\\r\\n    this.enableKeys = true;\\r\\n\\r\\n    // The four arrow keys\\r\\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\\r\\n\\r\\n    // Mouse buttons\\r\\n    this.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\\r\\n\\r\\n    // for reset\\r\\n    this.target0 = this.target.clone();\\r\\n    this.position0 = this.object.position.clone();\\r\\n    this.zoom0 = this.object.zoom;\\r\\n\\r\\n    //\\r\\n    // public methods\\r\\n    //\\r\\n\\r\\n    this.getPolarAngle = function () {\\r\\n\\r\\n        return spherical.phi;\\r\\n\\r\\n    };\\r\\n\\r\\n    this.getAzimuthalAngle = function () {\\r\\n\\r\\n        return spherical.theta;\\r\\n\\r\\n    };\\r\\n\\r\\n    this.saveState = function () {\\r\\n\\r\\n        scope.target0.copy( scope.target );\\r\\n        scope.position0.copy( scope.object.position );\\r\\n        scope.zoom0 = scope.object.zoom;\\r\\n\\r\\n    };\\r\\n\\r\\n    this.reset = function () {\\r\\n\\r\\n        scope.target.copy( scope.target0 );\\r\\n        scope.object.position.copy( scope.position0 );\\r\\n        scope.object.zoom = scope.zoom0;\\r\\n\\r\\n        scope.object.updateProjectionMatrix();\\r\\n        scope.dispatchEvent( changeEvent );\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n        state = STATE.NONE;\\r\\n\\r\\n    };\\r\\n\\r\\n    // this method is exposed, but perhaps it would be better if we can make it private...\\r\\n    this.update = function () {\\r\\n\\r\\n        var offset = new THREE.Vector3();\\r\\n\\r\\n        // so camera.up is the orbit axis\\r\\n        var quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\\r\\n        var quatInverse = quat.clone().inverse();\\r\\n\\r\\n        var lastPosition = new THREE.Vector3();\\r\\n        var lastQuaternion = new THREE.Quaternion();\\r\\n\\r\\n        return function update() {\\r\\n\\r\\n            var position = scope.object.position;\\r\\n\\r\\n            offset.copy( position ).sub( scope.target );\\r\\n\\r\\n            // rotate offset to \\\"y-axis-is-up\\\" space\\r\\n            offset.applyQuaternion( quat );\\r\\n\\r\\n            // angle from z-axis around y-axis\\r\\n            spherical.setFromVector3( offset );\\r\\n\\r\\n            if ( scope.autoRotate && state === STATE.NONE ) {\\r\\n\\r\\n                rotateLeft( getAutoRotationAngle() );\\r\\n\\r\\n            }\\r\\n\\r\\n            spherical.theta += sphericalDelta.theta;\\r\\n            spherical.phi += sphericalDelta.phi;\\r\\n\\r\\n            // restrict theta to be between desired limits\\r\\n            spherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\\r\\n\\r\\n            // restrict phi to be between desired limits\\r\\n            spherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\\r\\n\\r\\n            spherical.makeSafe();\\r\\n\\r\\n\\r\\n            spherical.radius *= scale;\\r\\n\\r\\n            // restrict radius to be between desired limits\\r\\n            spherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\\r\\n\\r\\n            // move target to panned location\\r\\n            scope.target.add( panOffset );\\r\\n\\r\\n            offset.setFromSpherical( spherical );\\r\\n\\r\\n            // rotate offset back to \\\"camera-up-vector-is-up\\\" space\\r\\n            offset.applyQuaternion( quatInverse );\\r\\n\\r\\n            position.copy( scope.target ).add( offset );\\r\\n\\r\\n            scope.object.lookAt( scope.target );\\r\\n\\r\\n            if ( scope.enableDamping === true ) {\\r\\n\\r\\n                sphericalDelta.theta *= ( 1 - scope.dampingFactor );\\r\\n                sphericalDelta.phi *= ( 1 - scope.dampingFactor );\\r\\n\\r\\n                panOffset.multiplyScalar( 1 - scope.dampingFactor );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                sphericalDelta.set( 0, 0, 0 );\\r\\n\\r\\n                panOffset.set( 0, 0, 0 );\\r\\n\\r\\n            }\\r\\n\\r\\n            scale = 1;\\r\\n\\r\\n            // update condition is:\\r\\n            // min(camera displacement, camera rotation in radians)^2 > EPS\\r\\n            // using small-angle approximation cos(x/2) = 1 - x^2 / 8\\r\\n\\r\\n            if ( zoomChanged ||\\r\\n                lastPosition.distanceToSquared( scope.object.position ) > EPS ||\\r\\n                8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\\r\\n\\r\\n                scope.dispatchEvent( changeEvent );\\r\\n\\r\\n                lastPosition.copy( scope.object.position );\\r\\n                lastQuaternion.copy( scope.object.quaternion );\\r\\n                zoomChanged = false;\\r\\n\\r\\n                return true;\\r\\n\\r\\n            }\\r\\n\\r\\n            return false;\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    this.dispose = function () {\\r\\n\\r\\n        scope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\\r\\n        scope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\\r\\n        scope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\\r\\n\\r\\n        scope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\\r\\n        scope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\\r\\n        scope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\\r\\n\\r\\n        document.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n        document.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\r\\n        window.removeEventListener( 'keydown', onKeyDown, false );\\r\\n\\r\\n        //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\\r\\n\\r\\n    };\\r\\n\\r\\n    //\\r\\n    // internals\\r\\n    //\\r\\n\\r\\n    var scope = this;\\r\\n\\r\\n    var changeEvent = { type: 'change' };\\r\\n    var startEvent = { type: 'start' };\\r\\n    var endEvent = { type: 'end' };\\r\\n\\r\\n    var STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\\r\\n\\r\\n    var state = STATE.NONE;\\r\\n\\r\\n    var EPS = 0.000001;\\r\\n\\r\\n    // current position in spherical coordinates\\r\\n    var spherical = new THREE.Spherical();\\r\\n    var sphericalDelta = new THREE.Spherical();\\r\\n\\r\\n    var scale = 1;\\r\\n    var panOffset = new THREE.Vector3();\\r\\n    var zoomChanged = false;\\r\\n\\r\\n    var rotateStart = new THREE.Vector2();\\r\\n    var rotateEnd = new THREE.Vector2();\\r\\n    var rotateDelta = new THREE.Vector2();\\r\\n\\r\\n    var panStart = new THREE.Vector2();\\r\\n    var panEnd = new THREE.Vector2();\\r\\n    var panDelta = new THREE.Vector2();\\r\\n\\r\\n    var dollyStart = new THREE.Vector2();\\r\\n    var dollyEnd = new THREE.Vector2();\\r\\n    var dollyDelta = new THREE.Vector2();\\r\\n\\r\\n    function getAutoRotationAngle() {\\r\\n\\r\\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\\r\\n\\r\\n    }\\r\\n\\r\\n    function getZoomScale() {\\r\\n\\r\\n        return Math.pow( 0.95, scope.zoomSpeed );\\r\\n\\r\\n    }\\r\\n\\r\\n    function rotateLeft( angle ) {\\r\\n\\r\\n        sphericalDelta.theta -= angle;\\r\\n\\r\\n    }\\r\\n\\r\\n    function rotateUp( angle ) {\\r\\n\\r\\n        sphericalDelta.phi -= angle;\\r\\n\\r\\n    }\\r\\n\\r\\n    var panLeft = function () {\\r\\n\\r\\n        var v = new THREE.Vector3();\\r\\n\\r\\n        return function panLeft( distance, objectMatrix ) {\\r\\n\\r\\n            v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\\r\\n            v.multiplyScalar( - distance );\\r\\n\\r\\n            panOffset.add( v );\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    var panUp = function () {\\r\\n\\r\\n        var v = new THREE.Vector3();\\r\\n\\r\\n        return function panUp( distance, objectMatrix ) {\\r\\n\\r\\n            if ( scope.screenSpacePanning === true ) {\\r\\n\\r\\n                v.setFromMatrixColumn( objectMatrix, 1 );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                v.setFromMatrixColumn( objectMatrix, 0 );\\r\\n                v.crossVectors( scope.object.up, v );\\r\\n\\r\\n            }\\r\\n\\r\\n            v.multiplyScalar( distance );\\r\\n\\r\\n            panOffset.add( v );\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    // deltaX and deltaY are in pixels; right and down are positive\\r\\n    var pan = function () {\\r\\n\\r\\n        var offset = new THREE.Vector3();\\r\\n\\r\\n        return function pan( deltaX, deltaY ) {\\r\\n\\r\\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\r\\n\\r\\n            if ( scope.object.isPerspectiveCamera ) {\\r\\n\\r\\n                // perspective\\r\\n                var position = scope.object.position;\\r\\n                offset.copy( position ).sub( scope.target );\\r\\n                var targetDistance = offset.length();\\r\\n\\r\\n                // half of the fov is center to top of screen\\r\\n                targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\\r\\n\\r\\n                // we use only clientHeight here so aspect ratio does not distort speed\\r\\n                panLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\\r\\n                panUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\\r\\n\\r\\n            } else if ( scope.object.isOrthographicCamera ) {\\r\\n\\r\\n                // orthographic\\r\\n                panLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\\r\\n                panUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\\r\\n\\r\\n            } else {\\r\\n\\r\\n                // camera neither orthographic nor perspective\\r\\n                console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\\r\\n                scope.enablePan = false;\\r\\n\\r\\n            }\\r\\n\\r\\n        };\\r\\n\\r\\n    }();\\r\\n\\r\\n    function dollyIn( dollyScale ) {\\r\\n\\r\\n        if ( scope.object.isPerspectiveCamera ) {\\r\\n\\r\\n            scale /= dollyScale;\\r\\n\\r\\n        } else if ( scope.object.isOrthographicCamera ) {\\r\\n\\r\\n            scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\\r\\n            scope.object.updateProjectionMatrix();\\r\\n            zoomChanged = true;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\r\\n            scope.enableZoom = false;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function dollyOut( dollyScale ) {\\r\\n\\r\\n        if ( scope.object.isPerspectiveCamera ) {\\r\\n\\r\\n            scale *= dollyScale;\\r\\n\\r\\n        } else if ( scope.object.isOrthographicCamera ) {\\r\\n\\r\\n            scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\\r\\n            scope.object.updateProjectionMatrix();\\r\\n            zoomChanged = true;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\r\\n            scope.enableZoom = false;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n    // event callbacks - update the object state\\r\\n    //\\r\\n\\r\\n    function handleMouseDownRotate( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseDownRotate' );\\r\\n\\r\\n        rotateStart.set( event.clientX, event.clientY );\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseDownDolly( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseDownDolly' );\\r\\n\\r\\n        dollyStart.set( event.clientX, event.clientY );\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseDownPan( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseDownPan' );\\r\\n\\r\\n        panStart.set( event.clientX, event.clientY );\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseMoveRotate( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseMoveRotate' );\\r\\n\\r\\n        rotateEnd.set( event.clientX, event.clientY );\\r\\n\\r\\n        rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\\r\\n\\r\\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\r\\n\\r\\n        rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\\r\\n\\r\\n        rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\\r\\n\\r\\n        rotateStart.copy( rotateEnd );\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseMoveDolly( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseMoveDolly' );\\r\\n\\r\\n        dollyEnd.set( event.clientX, event.clientY );\\r\\n\\r\\n        dollyDelta.subVectors( dollyEnd, dollyStart );\\r\\n\\r\\n        if ( dollyDelta.y > 0 ) {\\r\\n\\r\\n            dollyIn( getZoomScale() );\\r\\n\\r\\n        } else if ( dollyDelta.y < 0 ) {\\r\\n\\r\\n            dollyOut( getZoomScale() );\\r\\n\\r\\n        }\\r\\n\\r\\n        dollyStart.copy( dollyEnd );\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseMovePan( event ) {\\r\\n\\r\\n        //console.log( 'handleMouseMovePan' );\\r\\n\\r\\n        panEnd.set( event.clientX, event.clientY );\\r\\n\\r\\n        panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\\r\\n\\r\\n        pan( panDelta.x, panDelta.y );\\r\\n\\r\\n        panStart.copy( panEnd );\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseUp( event ) {\\r\\n\\r\\n        // console.log( 'handleMouseUp' );\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleMouseWheel( event ) {\\r\\n\\r\\n        // console.log( 'handleMouseWheel' );\\r\\n\\r\\n        if ( event.deltaY < 0 ) {\\r\\n\\r\\n            dollyOut( getZoomScale() );\\r\\n\\r\\n        } else if ( event.deltaY > 0 ) {\\r\\n\\r\\n            dollyIn( getZoomScale() );\\r\\n\\r\\n        }\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleKeyDown( event ) {\\r\\n\\r\\n        //console.log( 'handleKeyDown' );\\r\\n\\r\\n        switch ( event.keyCode ) {\\r\\n\\r\\n            case scope.keys.UP:\\r\\n                pan( 0, scope.keyPanSpeed );\\r\\n                scope.update();\\r\\n                break;\\r\\n\\r\\n            case scope.keys.BOTTOM:\\r\\n                pan( 0, - scope.keyPanSpeed );\\r\\n                scope.update();\\r\\n                break;\\r\\n\\r\\n            case scope.keys.LEFT:\\r\\n                pan( scope.keyPanSpeed, 0 );\\r\\n                scope.update();\\r\\n                break;\\r\\n\\r\\n            case scope.keys.RIGHT:\\r\\n                pan( - scope.keyPanSpeed, 0 );\\r\\n                scope.update();\\r\\n                break;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleTouchStartRotate( event ) {\\r\\n\\r\\n        //console.log( 'handleTouchStartRotate' );\\r\\n\\r\\n        rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleTouchStartDollyPan( event ) {\\r\\n\\r\\n        //console.log( 'handleTouchStartDollyPan' );\\r\\n\\r\\n        if ( scope.enableZoom ) {\\r\\n\\r\\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\r\\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\r\\n\\r\\n            var distance = Math.sqrt( dx * dx + dy * dy );\\r\\n\\r\\n            dollyStart.set( 0, distance );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( scope.enablePan ) {\\r\\n\\r\\n            var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\\r\\n            var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\\r\\n\\r\\n            panStart.set( x, y );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleTouchMoveRotate( event ) {\\r\\n\\r\\n        //console.log( 'handleTouchMoveRotate' );\\r\\n\\r\\n        rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\r\\n\\r\\n        rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\\r\\n\\r\\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\r\\n\\r\\n        rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\\r\\n\\r\\n        rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\\r\\n\\r\\n        rotateStart.copy( rotateEnd );\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleTouchMoveDollyPan( event ) {\\r\\n\\r\\n        //console.log( 'handleTouchMoveDollyPan' );\\r\\n\\r\\n        if ( scope.enableZoom ) {\\r\\n\\r\\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\r\\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\r\\n\\r\\n            var distance = Math.sqrt( dx * dx + dy * dy );\\r\\n\\r\\n            dollyEnd.set( 0, distance );\\r\\n\\r\\n            dollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\\r\\n\\r\\n            dollyIn( dollyDelta.y );\\r\\n\\r\\n            dollyStart.copy( dollyEnd );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( scope.enablePan ) {\\r\\n\\r\\n            var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\\r\\n            var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\\r\\n\\r\\n            panEnd.set( x, y );\\r\\n\\r\\n            panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\\r\\n\\r\\n            pan( panDelta.x, panDelta.y );\\r\\n\\r\\n            panStart.copy( panEnd );\\r\\n\\r\\n        }\\r\\n\\r\\n        scope.update();\\r\\n\\r\\n    }\\r\\n\\r\\n    function handleTouchEnd( event ) {\\r\\n\\r\\n        //console.log( 'handleTouchEnd' );\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n    // event handlers - FSM: listen for events and reset state\\r\\n    //\\r\\n\\r\\n    function onMouseDown( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n\\r\\n        switch ( event.button ) {\\r\\n\\r\\n            case scope.mouseButtons.LEFT:\\r\\n\\r\\n                if ( event.ctrlKey || event.metaKey ) {\\r\\n\\r\\n                    if ( scope.enablePan === false ) return;\\r\\n\\r\\n                    handleMouseDownPan( event );\\r\\n\\r\\n                    state = STATE.PAN;\\r\\n\\r\\n                } else {\\r\\n\\r\\n                    if ( scope.enableRotate === false ) return;\\r\\n\\r\\n                    handleMouseDownRotate( event );\\r\\n\\r\\n                    state = STATE.ROTATE;\\r\\n\\r\\n                }\\r\\n\\r\\n                break;\\r\\n\\r\\n            case scope.mouseButtons.MIDDLE:\\r\\n\\r\\n                if ( scope.enableZoom === false ) return;\\r\\n\\r\\n                handleMouseDownDolly( event );\\r\\n\\r\\n                state = STATE.DOLLY;\\r\\n\\r\\n                break;\\r\\n\\r\\n            case scope.mouseButtons.RIGHT:\\r\\n\\r\\n                if ( scope.enablePan === false ) return;\\r\\n\\r\\n                handleMouseDownPan( event );\\r\\n\\r\\n                state = STATE.PAN;\\r\\n\\r\\n                break;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( state !== STATE.NONE ) {\\r\\n\\r\\n            document.addEventListener( 'mousemove', onMouseMove, false );\\r\\n            document.addEventListener( 'mouseup', onMouseUp, false );\\r\\n\\r\\n            scope.dispatchEvent( startEvent );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function onMouseMove( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n\\r\\n        switch ( state ) {\\r\\n\\r\\n            case STATE.ROTATE:\\r\\n\\r\\n                if ( scope.enableRotate === false ) return;\\r\\n\\r\\n                handleMouseMoveRotate( event );\\r\\n\\r\\n                break;\\r\\n\\r\\n            case STATE.DOLLY:\\r\\n\\r\\n                if ( scope.enableZoom === false ) return;\\r\\n\\r\\n                handleMouseMoveDolly( event );\\r\\n\\r\\n                break;\\r\\n\\r\\n            case STATE.PAN:\\r\\n\\r\\n                if ( scope.enablePan === false ) return;\\r\\n\\r\\n                handleMouseMovePan( event );\\r\\n\\r\\n                break;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function onMouseUp( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        handleMouseUp( event );\\r\\n\\r\\n        document.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n        document.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\r\\n        scope.dispatchEvent( endEvent );\\r\\n\\r\\n        state = STATE.NONE;\\r\\n\\r\\n    }\\r\\n\\r\\n    function onMouseWheel( event ) {\\r\\n\\r\\n        if ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        scope.dispatchEvent( startEvent );\\r\\n\\r\\n        handleMouseWheel( event );\\r\\n\\r\\n        scope.dispatchEvent( endEvent );\\r\\n\\r\\n    }\\r\\n\\r\\n    function onKeyDown( event ) {\\r\\n\\r\\n        if ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\\r\\n\\r\\n        handleKeyDown( event );\\r\\n\\r\\n    }\\r\\n\\r\\n    function onTouchStart( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n\\r\\n        switch ( event.touches.length ) {\\r\\n\\r\\n            case 1:\\t// one-fingered touch: rotate\\r\\n\\r\\n                if ( scope.enableRotate === false ) return;\\r\\n\\r\\n                handleTouchStartRotate( event );\\r\\n\\r\\n                state = STATE.TOUCH_ROTATE;\\r\\n\\r\\n                break;\\r\\n\\r\\n            case 2:\\t// two-fingered touch: dolly-pan\\r\\n\\r\\n                if ( scope.enableZoom === false && scope.enablePan === false ) return;\\r\\n\\r\\n                handleTouchStartDollyPan( event );\\r\\n\\r\\n                state = STATE.TOUCH_DOLLY_PAN;\\r\\n\\r\\n                break;\\r\\n\\r\\n            default:\\r\\n\\r\\n                state = STATE.NONE;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( state !== STATE.NONE ) {\\r\\n\\r\\n            scope.dispatchEvent( startEvent );\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function onTouchMove( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        switch ( event.touches.length ) {\\r\\n\\r\\n            case 1: // one-fingered touch: rotate\\r\\n\\r\\n                if ( scope.enableRotate === false ) return;\\r\\n                if ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\\r\\n\\r\\n                handleTouchMoveRotate( event );\\r\\n\\r\\n                break;\\r\\n\\r\\n            case 2: // two-fingered touch: dolly-pan\\r\\n\\r\\n                if ( scope.enableZoom === false && scope.enablePan === false ) return;\\r\\n                if ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\\r\\n\\r\\n                handleTouchMoveDollyPan( event );\\r\\n\\r\\n                break;\\r\\n\\r\\n            default:\\r\\n\\r\\n                state = STATE.NONE;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function onTouchEnd( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        handleTouchEnd( event );\\r\\n\\r\\n        scope.dispatchEvent( endEvent );\\r\\n\\r\\n        state = STATE.NONE;\\r\\n\\r\\n    }\\r\\n\\r\\n    function onContextMenu( event ) {\\r\\n\\r\\n        if ( scope.enabled === false ) return;\\r\\n\\r\\n        event.preventDefault();\\r\\n\\r\\n    }\\r\\n\\r\\n    //\\r\\n\\r\\n    scope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\\r\\n\\r\\n    scope.domElement.addEventListener( 'mousedown', onMouseDown, false );\\r\\n    scope.domElement.addEventListener( 'wheel', onMouseWheel, false );\\r\\n\\r\\n    scope.domElement.addEventListener( 'touchstart', onTouchStart, false );\\r\\n    scope.domElement.addEventListener( 'touchend', onTouchEnd, false );\\r\\n    scope.domElement.addEventListener( 'touchmove', onTouchMove, false );\\r\\n\\r\\n    window.addEventListener( 'keydown', onKeyDown, false );\\r\\n\\r\\n    // force an update at start\\r\\n\\r\\n    this.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\\r\\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\\r\\n\\r\\nObject.defineProperties( THREE.OrbitControls.prototype, {\\r\\n\\r\\n    center: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\\r\\n            return this.target;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    // backward compatibility\\r\\n\\r\\n    noZoom: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\r\\n            return ! this.enableZoom;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\r\\n            this.enableZoom = ! value;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    noRotate: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\r\\n            return ! this.enableRotate;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\r\\n            this.enableRotate = ! value;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    noPan: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\r\\n            return ! this.enablePan;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\r\\n            this.enablePan = ! value;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    noKeys: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\r\\n            return ! this.enableKeys;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\r\\n            this.enableKeys = ! value;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    staticMoving: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\r\\n            return ! this.enableDamping;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\r\\n            this.enableDamping = ! value;\\r\\n\\r\\n        }\\r\\n\\r\\n    },\\r\\n\\r\\n    dynamicDampingFactor: {\\r\\n\\r\\n        get: function () {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\r\\n            return this.dampingFactor;\\r\\n\\r\\n        },\\r\\n\\r\\n        set: function ( value ) {\\r\\n\\r\\n            console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\r\\n            this.dampingFactor = value;\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n} );\"]}","code":"!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){\"use strict\";var r,i,a,o;function s(){r.aspect=window.innerWidth/window.innerHeight,r.updateProjectionMatrix(),o.setSize(window.innerWidth,window.innerHeight)}n(2),n(3),n(4),!1===WEBGL.isWebGLAvailable()&&document.body.appendChild(WEBGL.getWebGLErrorMessage()),function(){(a=new THREE.Scene).background=new THREE.Color(16777215),a.fog=new THREE.FogExp2(13421772,.002),(o=new THREE.WebGLRenderer({antialias:!0})).setPixelRatio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(o.domElement),(r=new THREE.PerspectiveCamera(90,window.innerWidth/window.innerHeight,.1,1e3)).position.set(-170,170,40),(i=new THREE.OrbitControls(r,o.domElement)).enableDamping=!0,i.dampingFactor=.25,i.screenSpacePanning=!1,i.minDistance=10,i.maxDistance=50,i.maxPolarAngle=Math.PI/2;var t=new THREE.CylinderBufferGeometry(0,10,30,4,1),e=new THREE.SphereGeometry(4,12*Math.random(),12*Math.random()),n=new THREE.CubeGeometry(4,4,4),c=new THREE.MeshPhongMaterial({color:16777215,flatShading:!0}),h=document.querySelector(\".create\"),l=document.querySelector(\"#figure-type\"),u={cube:\"cube\",sphere:\"sphere\",pyramid:\"pyramid\"},p=document.querySelector(\"#scale\"),d=document.querySelector(\".list\"),f=document.querySelectorAll(\".list-item\");h.addEventListener(\"click\",function(r){var i;r.preventDefault(),l.value===u.cube?(p.value&&(n.scale(p.value,p.value,p.value),p.value=1),i=new THREE.Mesh(n,c)):l.value===u.sphere?(p.value&&(e.scale(p.value,p.value,p.value),p.value=1),i=new THREE.Mesh(e,c)):(p.value&&(t.scale(p.value,p.value,p.value),p.value=1),i=new THREE.Mesh(t,c)),i.position.x=300*Math.random(),i.position.y=0,i.position.z=300*Math.random(),i.updateMatrix(),i.matrixAutoUpdate=!1,a.add(i);var o=document.createElement(\"li\");o.setAttribute(\"id\",i.uuid),o.innerHTML=\"<span>\"+i.uuid+'</span><div class=\"close\">X</div>',d.appendChild(o),(f=document.querySelectorAll(\".list li\"))[f.length-1].querySelector(\".close\").addEventListener(\"click\",function(){this.parentElement.remove(),a.remove(i)})}),(m=new THREE.DirectionalLight(16777215)).position.set(1,1,1),a.add(m),(m=new THREE.DirectionalLight(8840)).position.set(-1,-1,-1),a.add(m);var m=new THREE.AmbientLight(2236962);a.add(m),window.addEventListener(\"resize\",s,!1)}(),function t(){requestAnimationFrame(t);i.update();o.render(a,r)}()},function(t,e,n){\"use strict\";var r,i,a,o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};!function(n,s){\"object\"===o(e)&&void 0!==t?s(e):(i=[e],void 0===(a=\"function\"==typeof(r=s)?r.apply(e,i):r)||(t.exports=a))}(0,function(t){function e(){}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),\"name\"in Function.prototype==!1&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var e=Object(t),n=1;n<arguments.length;n++){var r=arguments[n];if(void 0!==r&&null!==r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e}),Object.assign(e.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var n=this._listeners[t];if(void 0!==n){var r=n.indexOf(e);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var n=e.slice(0),r=0,i=n.length;r<i;r++)n[r].call(this,t)}}}});var n=\"97\",r=0,i=1,a=2,s=1,c=2,h=0,l=1,u=2,p=0,d=1,f=2,m=0,g=1,v=2,y=3,x=4,b=5,_=100,w=101,M=102,E=103,T=104,S=200,A=201,L=202,R=203,P=204,C=205,O=206,I=207,N=208,D=209,U=210,B=0,F=1,z=2,H=3,G=4,V=5,k=6,j=7,W=0,X=1,q=2,Y=0,Z=1,J=2,Q=3,K=4,$=301,tt=302,et=303,nt=304,rt=305,it=306,at=307,ot=1e3,st=1001,ct=1002,ht=1003,lt=1004,ut=1005,pt=1006,dt=1007,ft=1008,mt=1009,gt=1010,vt=1011,yt=1012,xt=1013,bt=1014,_t=1015,wt=1016,Mt=1017,Et=1018,Tt=1019,St=1020,At=1021,Lt=1022,Rt=1023,Pt=1024,Ct=1025,Ot=Rt,It=1026,Nt=1027,Dt=1028,Ut=33776,Bt=33777,Ft=33778,zt=33779,Ht=35840,Gt=35841,Vt=35842,kt=35843,jt=36196,Wt=37808,Xt=37809,qt=37810,Yt=37811,Zt=37812,Jt=37813,Qt=37814,Kt=37815,$t=37816,te=37817,ee=37818,ne=37819,re=37820,ie=37821,ae=2201,oe=2400,se=0,ce=1,he=2,le=3e3,ue=3001,pe=3007,de=3002,fe=3004,me=3005,ge=3006,ve=3200,ye=3201,xe=0,be=1,_e={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?\"0\":\"\")+e.toString(16);return function(){var e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+\"-\"+t[255&n]+t[n>>8&255]+\"-\"+t[n>>16&15|64]+t[n>>24&255]+\"-\"+t[63&r|128]+t[r>>8&255]+\"-\"+t[r>>16&255]+t[r>>24&255]+t[255&i]+t[i>>8&255]+t[i>>16&255]+t[i>>24&255]).toUpperCase()}}(),clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*_e.DEG2RAD},radToDeg:function(t){return t*_e.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function we(t,e){this.x=t||0,this.y=e||0}function Me(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")}function Ee(t,e,n,r){this._x=t||0,this._y=e||0,this._z=n||0,this._w=void 0!==r?r:1}function Te(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}function Se(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")}Object.defineProperties(we.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(we.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error(\"index is out of range: \"+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error(\"index is out of range: \"+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new we,e=new we;return function(n,r){return t.set(n,n),e.set(r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,a=this.y-t.y;return this.x=i*n-a*r+t.x,this.y=i*r+a*n+t.y,this}}),Object.assign(Me.prototype,{isMatrix4:!0,set:function(t,e,n,r,i,a,o,s,c,h,l,u,p,d,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=h,g[10]=l,g[14]=u,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Me).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(){var t=new Te;return function(e){var n=this.elements,r=e.elements,i=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[3]=0,n[4]=r[4]*a,n[5]=r[5]*a,n[6]=r[6]*a,n[7]=0,n[8]=r[8]*o,n[9]=r[9]*o,n[10]=r[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error(\"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var e=this.elements,n=t.x,r=t.y,i=t.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),c=Math.sin(r),h=Math.cos(i),l=Math.sin(i);if(\"XYZ\"===t.order){var u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=p+d*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=d+p*c,e[10]=a*s}else if(\"YXZ\"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m+y*o,e[4]=v*o-g,e[8]=a*c,e[1]=a*l,e[5]=a*h,e[9]=-o,e[2]=g*o-v,e[6]=y+m*o,e[10]=a*s}else if(\"ZXY\"===t.order){m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m-y*o,e[4]=-a*l,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*h,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if(\"ZYX\"===t.order){u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=d*c-p,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=p*c-d,e[2]=-c,e[6]=o*s,e[10]=a*s}else if(\"YZX\"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=w-x*l,e[8]=_*l+b,e[1]=l,e[5]=a*h,e[9]=-o*h,e[2]=-c*h,e[6]=b*l+_,e[10]=x-w*l}else if(\"XZY\"===t.order){x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=a*h,e[9]=b*l-_,e[2]=_*l-b,e[6]=o*h,e[10]=w*l+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(){var t=new Te(0,0,0),e=new Te(1,1,1);return function(n){return this.compose(t,n,e)}}(),lookAt:function(){var t=new Te,e=new Te,n=new Te;return function(r,i,a){var o=this.elements;return n.subVectors(r,i),0===n.lengthSq()&&(n.z=1),n.normalize(),t.crossVectors(a,n),0===t.lengthSq()&&(1===Math.abs(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),t.crossVectors(a,n)),t.normalize(),e.crossVectors(n,t),o[0]=t.x,o[4]=e.x,o[8]=n.x,o[1]=t.y,o[5]=e.y,o[9]=n.y,o[2]=t.z,o[6]=e.z,o[10]=n.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,a=n[0],o=n[4],s=n[8],c=n[12],h=n[1],l=n[5],u=n[9],p=n[13],d=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],b=n[15],_=r[0],w=r[4],M=r[8],E=r[12],T=r[1],S=r[5],A=r[9],L=r[13],R=r[2],P=r[6],C=r[10],O=r[14],I=r[3],N=r[7],D=r[11],U=r[15];return i[0]=a*_+o*T+s*R+c*I,i[4]=a*w+o*S+s*P+c*N,i[8]=a*M+o*A+s*C+c*D,i[12]=a*E+o*L+s*O+c*U,i[1]=h*_+l*T+u*R+p*I,i[5]=h*w+l*S+u*P+p*N,i[9]=h*M+l*A+u*C+p*D,i[13]=h*E+l*L+u*O+p*U,i[2]=d*_+f*T+m*R+g*I,i[6]=d*w+f*S+m*P+g*N,i[10]=d*M+f*A+m*C+g*D,i[14]=d*E+f*L+m*O+g*U,i[3]=v*_+y*T+x*R+b*I,i[7]=v*w+y*S+x*P+b*N,i[11]=v*M+y*A+x*C+b*D,i[15]=v*E+y*L+x*O+b*U,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new Te;return function(e){for(var n=0,r=e.count;n<r;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.applyMatrix4(this),e.setXYZ(n,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],a=t[1],o=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],p=t[14];return t[3]*(+i*s*l-r*c*l-i*o*u+n*c*u+r*o*p-n*s*p)+t[7]*(+e*s*p-e*c*u+i*a*u-r*a*p+r*c*h-i*s*h)+t[11]*(+e*c*l-e*o*p-i*a*l+n*a*p+i*o*h-n*c*h)+t[15]*(-r*o*h-e*s*l+e*o*u+r*a*l-n*a*u+n*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,r=t.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],h=r[5],l=r[6],u=r[7],p=r[8],d=r[9],f=r[10],m=r[11],g=r[12],v=r[13],y=r[14],x=r[15],b=d*y*u-v*f*u+v*l*m-h*y*m-d*l*x+h*f*x,_=g*f*u-p*y*u-g*l*m+c*y*m+p*l*x-c*f*x,w=p*v*u-g*d*u+g*h*m-c*v*m-p*h*x+c*d*x,M=g*d*l-p*v*l-g*h*f+c*v*f+p*h*y-c*d*y,E=i*b+a*_+o*w+s*M;if(0===E){var T=\"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return n[0]=b*S,n[1]=(v*f*s-d*y*s-v*o*m+a*y*m+d*o*x-a*f*x)*S,n[2]=(h*y*s-v*l*s+v*o*u-a*y*u-h*o*x+a*l*x)*S,n[3]=(d*l*s-h*f*s-d*o*u+a*f*u+h*o*m-a*l*m)*S,n[4]=_*S,n[5]=(p*y*s-g*f*s+g*o*m-i*y*m-p*o*x+i*f*x)*S,n[6]=(g*l*s-c*y*s-g*o*u+i*y*u+c*o*x-i*l*x)*S,n[7]=(c*f*s-p*l*s+p*o*u-i*f*u-c*o*m+i*l*m)*S,n[8]=w*S,n[9]=(g*d*s-p*v*s-g*a*m+i*v*m+p*a*x-i*d*x)*S,n[10]=(c*v*s-g*h*s+g*a*u-i*v*u-c*a*x+i*h*x)*S,n[11]=(p*h*s-c*d*s-p*a*u+i*d*u+c*a*m-i*h*m)*S,n[12]=M*S,n[13]=(p*v*o-g*d*o+g*a*f-i*v*f-p*a*y+i*d*y)*S,n[14]=(g*h*o-c*v*o-g*a*l+i*v*l+c*a*y-i*h*y)*S,n[15]=(c*d*o-p*h*o+p*a*l-i*d*l-c*a*f+i*h*f)*S,this},scale:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=1-n,a=t.x,o=t.y,s=t.z,c=i*a,h=i*o;return this.set(c*a+n,c*o-r*s,c*s+r*o,0,c*o+r*s,h*o+n,h*s-r*a,0,c*s-r*o,h*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){var r=this.elements,i=e._x,a=e._y,o=e._z,s=e._w,c=i+i,h=a+a,l=o+o,u=i*c,p=i*h,d=i*l,f=a*h,m=a*l,g=o*l,v=s*c,y=s*h,x=s*l,b=n.x,_=n.y,w=n.z;return r[0]=(1-(f+g))*b,r[1]=(p+x)*b,r[2]=(d-y)*b,r[3]=0,r[4]=(p-x)*_,r[5]=(1-(u+g))*_,r[6]=(m+v)*_,r[7]=0,r[8]=(d+y)*w,r[9]=(m-v)*w,r[10]=(1-(u+f))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this},decompose:function(){var t=new Te,e=new Me;return function(n,r,i){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),c=t.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),n.x=a[12],n.y=a[13],n.z=a[14],e.copy(this);var h=1/o,l=1/s,u=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,r.setFromRotationMatrix(e),i.x=o,i.y=s,i.z=c,this}}(),makePerspective:function(t,e,n,r,i,a){void 0===a&&console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");var o=this.elements,s=2*i/(e-t),c=2*i/(n-r),h=(e+t)/(e-t),l=(n+r)/(n-r),u=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,n,r,i,a){var o=this.elements,s=1/(e-t),c=1/(n-r),h=1/(a-i),l=(e+t)*s,u=(n+r)*c,p=(a+i)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}),Object.assign(Ee,{slerp:function(t,e,n,r){return n.copy(t).slerp(e,r)},slerpFlat:function(t,e,n,r,i,a,o){var s=n[r+0],c=n[r+1],h=n[r+2],l=n[r+3],u=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(l!==f||s!==u||c!==p||h!==d){var m=1-o,g=s*u+c*p+h*d+l*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,g*v);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var _=o*v;if(s=s*m+u*_,c=c*m+p*_,h=h*m+d*_,l=l*m+f*_,m===1-o){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),Object.defineProperties(Ee.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(Ee.prototype,{isQuaternion:!0,set:function(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");var n=t._x,r=t._y,i=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(n/2),h=o(r/2),l=o(i/2),u=s(n/2),p=s(r/2),d=s(i/2);return\"XYZ\"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):\"YXZ\"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):\"ZXY\"===a?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):\"ZYX\"===a?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):\"YZX\"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l-u*p*d):\"XZY\"===a&&(this._x=u*h*l-c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l+u*p*d),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,n=t.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],c=n[9],h=n[2],l=n[6],u=n[10],p=r+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(l-c)*e,this._y=(a-h)*e,this._z=(o-i)*e):r>s&&r>u?(e=2*Math.sqrt(1+r-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(i+o)/e,this._z=(a+h)/e):s>u?(e=2*Math.sqrt(1+s-r-u),this._w=(a-h)/e,this._x=(i+o)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-r-s),this._w=(o-i)/e,this._x=(a+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new Te;return function(n,r){return void 0===e&&(e=new Te),(t=n.dot(r)+1)<1e-6?(t=0,Math.abs(n.x)>Math.abs(n.z)?e.set(-n.y,n.x,0):e.set(0,-n.z,n.y)):e.crossVectors(n,r),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),angleTo:function(t){return 2*Math.acos(Math.abs(_e.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var n=this.angleTo(t);if(0===n)return this;var r=Math.min(1,e/n);return this.slerp(t,r),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,r=t._y,i=t._z,a=t._w,o=e._x,s=e._y,c=e._z,h=e._w;return this._x=n*h+a*o+r*c-i*s,this._y=r*h+a*s+i*o-n*c,this._z=i*h+a*c+n*s-r*o,this._w=a*h-n*o-r*s-i*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*t._w+n*t._x+r*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var c=1-e;return this._w=c*a+e*this._w,this._x=c*n+e*this._x,this._y=c*r+e*this._y,this._z=c*i+e*this._z,this.normalize()}var h=Math.sqrt(s),l=Math.atan2(h,o),u=Math.sin((1-e)*l)/h,p=Math.sin(e*l)/h;return this._w=a*u+this._w*p,this._x=n*u+this._x*p,this._y=r*u+this._y*p,this._z=i*u+this._z*p,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(Te.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error(\"index is out of range: \"+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\"index is out of range: \"+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new Ee;return function(e){return e&&e.isEuler||console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new Ee;return function(e,n){return this.applyQuaternion(t.setFromAxisAngle(e,n))}}(),applyMatrix3:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements,a=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(t){var e=this.x,n=this.y,r=this.z,i=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*r-o*n,h=s*n+o*e-i*r,l=s*r+i*n-a*e,u=-i*e-a*n-o*r;return this.x=c*s+u*-i+h*-o-l*-a,this.y=h*s+u*-a+l*-i-c*-o,this.z=l*s+u*-o+c*-a-h*-i,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(){var t=new Me;return function(e){return this.applyMatrix4(t.getInverse(e.projectionMatrix)).applyMatrix4(e.matrixWorld)}}(),transformDirection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new Te,e=new Te;return function(n,r){return t.set(n,n,n),e.set(r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var n=t.x,r=t.y,i=t.z,a=e.x,o=e.y,s=e.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new Te;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new Te;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(_e.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){var r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(Se.prototype,{isMatrix3:!0,set:function(t,e,n,r,i,a,o,s,c){var h=this.elements;return h[0]=t,h[1]=r,h[2]=o,h[3]=e,h[4]=i,h[5]=s,h[6]=n,h[7]=a,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new Te;return function(e){for(var n=0,r=e.count;n<r;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.applyMatrix3(this),e.setXYZ(n,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,a=n[0],o=n[3],s=n[6],c=n[1],h=n[4],l=n[7],u=n[2],p=n[5],d=n[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],b=r[2],_=r[5],w=r[8];return i[0]=a*f+o*v+s*b,i[3]=a*m+o*y+s*_,i[6]=a*g+o*x+s*w,i[1]=c*f+h*v+l*b,i[4]=c*m+h*y+l*_,i[7]=c*g+h*x+l*w,i[2]=u*f+p*v+d*b,i[5]=u*m+p*y+d*_,i[8]=u*g+p*x+d*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],o=t[5],s=t[6],c=t[7],h=t[8];return e*a*h-e*o*c-n*i*h+n*o*s+r*i*c-r*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");var n=t.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],h=n[5],l=n[6],u=n[7],p=n[8],d=p*c-h*u,f=h*l-p*s,m=u*s-c*l,g=i*d+a*f+o*m;if(0===g){var v=\"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return r[0]=d*y,r[1]=(o*u-p*a)*y,r[2]=(h*a-o*c)*y,r[3]=f*y,r[4]=(p*i-o*l)*y,r[5]=(o*s-h*i)*y,r[6]=m*y,r[7]=(a*l-u*i)*y,r[8]=(c*i-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,r,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(n*s,n*c,-n*(s*a+c*o)+a+t,-r*c,r*s,-r*(-c*a+s*o)+o+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],c=r[4],h=r[7];return r[0]=e*i+n*s,r[3]=e*a+n*c,r[6]=e*o+n*h,r[1]=-n*i+e*s,r[4]=-n*a+e*c,r[7]=-n*o+e*h,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});var Ae={getDataURL:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{(e=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\")).width=t.width,e.height=t.height;var n=e.getContext(\"2d\");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL(\"image/jpeg\",.6):e.toDataURL(\"image/png\")}},Le=0;function Re(t,e,n,r,i,a,o,s,c,h){Object.defineProperty(this,\"id\",{value:Le++}),this.uuid=_e.generateUUID(),this.name=\"\",this.image=void 0!==t?t:Re.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:Re.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:st,this.wrapT=void 0!==r?r:st,this.magFilter=void 0!==i?i:pt,this.minFilter=void 0!==a?a:ft,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:Rt,this.type=void 0!==s?s:mt,this.offset=new we(0,0),this.repeat=new we(1,1),this.center=new we(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Se,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==h?h:le,this.version=0,this.onUpdate=null}function Pe(t,e,n,r){this.x=t||0,this.y=e||0,this.z=n||0,this.w=void 0!==r?r:1}function Ce(t,e,n){this.width=t,this.height=e,this.scissor=new Pe(0,0,t,e),this.scissorTest=!1,this.viewport=new Pe(0,0,t,e),void 0===(n=n||{}).minFilter&&(n.minFilter=pt),this.texture=new Re(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.generateMipmaps=void 0===n.generateMipmaps||n.generateMipmaps,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function Oe(t,e,n){Ce.call(this,t,e,n),this.activeCubeFace=0,this.activeMipMapLevel=0}function Ie(t,e,n,r,i,a,o,s,c,h,l,u){Re.call(this,null,a,o,s,c,h,r,i,l,u),this.image={data:t,width:e,height:n},this.magFilter=void 0!==c?c:ht,this.minFilter=void 0!==h?h:ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function Ne(t,e){this.min=void 0!==t?t:new Te(1/0,1/0,1/0),this.max=void 0!==e?e:new Te(-1/0,-1/0,-1/0)}function De(t,e){this.center=void 0!==t?t:new Te,this.radius=void 0!==e?e:0}function Ue(t,e){this.normal=void 0!==t?t:new Te(1,0,0),this.constant=void 0!==e?e:0}function Be(t,e,n,r,i,a){this.planes=[void 0!==t?t:new Ue,void 0!==e?e:new Ue,void 0!==n?n:new Ue,void 0!==r?r:new Ue,void 0!==i?i:new Ue,void 0!==a?a:new Ue]}Re.DEFAULT_IMAGE=void 0,Re.DEFAULT_MAPPING=300,Re.prototype=Object.assign(Object.create(e.prototype),{constructor:Re,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||\"string\"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var n={metadata:{version:4.5,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var r=this.image;if(void 0===r.uuid&&(r.uuid=_e.generateUUID()),!e&&void 0===t.images[r.uuid]){var i;if(Array.isArray(r)){i=[];for(var a=0,o=r.length;a<o;a++)i.push(Ae.getDataURL(r[a]))}else i=Ae.getDataURL(r);t.images[r.uuid]={uuid:r.uuid,url:i}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:\"dispose\"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ot:t.x=t.x-Math.floor(t.x);break;case st:t.x=t.x<0?0:1;break;case ct:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ot:t.y=t.y-Math.floor(t.y);break;case st:t.y=t.y<0?0:1;break;case ct:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(Re.prototype,\"needsUpdate\",{set:function(t){!0===t&&this.version++}}),Object.assign(Pe.prototype,{isVector4:!0,set:function(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error(\"index is out of range: \"+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error(\"index is out of range: \"+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*e+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*e+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*e+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,r,i,a=t.elements,o=a[0],s=a[4],c=a[8],h=a[1],l=a[5],u=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(c-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(s+h)<.1&&Math.abs(c+p)<.1&&Math.abs(u+d)<.1&&Math.abs(o+l+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(o+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+h)/4,x=(c+p)/4,b=(u+d)/4;return m>g&&m>v?m<.01?(n=0,r=.707106781,i=.707106781):(r=y/(n=Math.sqrt(m)),i=x/n):g>v?g<.01?(n=.707106781,r=0,i=.707106781):(n=y/(r=Math.sqrt(g)),i=b/r):v<.01?(n=.707106781,r=.707106781,i=0):(n=x/(i=Math.sqrt(v)),r=b/i),this.set(n,r,i,e),this}var _=Math.sqrt((d-u)*(d-u)+(c-p)*(c-p)+(h-s)*(h-s));return Math.abs(_)<.001&&(_=1),this.x=(d-u)/_,this.y=(c-p)/_,this.z=(h-s)/_,this.w=Math.acos((o+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(n,r){return void 0===t&&(t=new Pe,e=new Pe),t.set(n,n,n,n),e.set(r,r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Ce.prototype=Object.assign(Object.create(e.prototype),{constructor:Ce,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Oe.prototype=Object.create(Ce.prototype),Oe.prototype.constructor=Oe,Oe.prototype.isWebGLRenderTargetCube=!0,Ie.prototype=Object.create(Re.prototype),Ie.prototype.constructor=Ie,Ie.prototype.isDataTexture=!0,Object.assign(Ne.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<n&&(n=l),u<r&&(r=u),h>i&&(i=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<n&&(n=l),u<r&&(r=u),h>i&&(i=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(i,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new Te;return function(e,n){var r=t.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn(\"THREE.Box3: .getCenter() target is now required\"),t=new Te),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn(\"THREE.Box3: .getSize() target is now required\"),t=new Te),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t,e,n,r=new Te;function i(i){var a=i.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(e=0,n=o.length;e<n;e++)r.copy(o[e]),r.applyMatrix4(i.matrixWorld),t.expandByPoint(r)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(e=0,n=s.count;e<n;e++)r.fromBufferAttribute(s,e).applyMatrix4(i.matrixWorld),t.expandByPoint(r)}}return function(e){return t=this,e.updateMatrixWorld(!0),e.traverse(i),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn(\"THREE.Box3: .getParameter() target is now required\"),e=new Te),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new Te;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(){var t=new Te,e=new Te,n=new Te,r=new Te,i=new Te,a=new Te,o=new Te,s=new Te,c=new Te,h=new Te;function l(r){var i,a;for(i=0,a=r.length-3;i<=a;i+=3){o.fromArray(r,i);var s=c.x*Math.abs(o.x)+c.y*Math.abs(o.y)+c.z*Math.abs(o.z),h=t.dot(o),l=e.dot(o),u=n.dot(o);if(Math.max(-Math.max(h,l,u),Math.min(h,l,u))>s)return!1}return!0}return function(o){if(this.isEmpty())return!1;this.getCenter(s),c.subVectors(this.max,s),t.subVectors(o.a,s),e.subVectors(o.b,s),n.subVectors(o.c,s),r.subVectors(e,t),i.subVectors(n,e),a.subVectors(t,n);var u=[0,-r.z,r.y,0,-i.z,i.y,0,-a.z,a.y,r.z,0,-r.x,i.z,0,-i.x,a.z,0,-a.x,-r.y,r.x,0,-i.y,i.x,0,-a.y,a.x,0];return!!l(u)&&(!!l(u=[1,0,0,0,1,0,0,0,1])&&(h.crossVectors(r,i),l(u=[h.x,h.y,h.z])))}}(),clampPoint:function(t,e){return void 0===e&&(console.warn(\"THREE.Box3: .clampPoint() target is now required\"),e=new Te),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new Te;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new Te;return function(e){return void 0===e&&(console.warn(\"THREE.Box3: .getBoundingSphere() target is now required\"),e=new De),this.getCenter(e.center),e.radius=.5*this.getSize(t).length(),e}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new Te,new Te,new Te,new Te,new Te,new Te,new Te,new Te];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(De.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new Ne;return function(e,n){var r=this.center;void 0!==n?r.copy(n):t.setFromPoints(e).getCenter(r);for(var i=0,a=0,o=e.length;a<o;a++)i=Math.max(i,r.distanceToSquared(e[a]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t);return void 0===e&&(console.warn(\"THREE.Sphere: .clampPoint() target is now required\"),e=new Te),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn(\"THREE.Sphere: .getBoundingBox() target is now required\"),t=new Ne),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(Ue.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new Te,e=new Te;return function(n,r,i){var a=t.subVectors(i,r).cross(e.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn(\"THREE.Plane: .projectPoint() target is now required\"),e=new Te),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new Te;return function(e,n){void 0===n&&(console.warn(\"THREE.Plane: .intersectLine() target is now required\"),n=new Te);var r=e.delta(t),i=this.normal.dot(r);if(0===i)return 0===this.distanceToPoint(e.start)?n.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/i;return a<0||a>1?void 0:n.copy(r).multiplyScalar(a).add(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn(\"THREE.Plane: .coplanarPoint() target is now required\"),t=new Te),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new Te,e=new Se;return function(n,r){var i=r||e.getNormalMatrix(n),a=this.coplanarPoint(t).applyMatrix4(n),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(Be.prototype,{set:function(t,e,n,r,i,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],c=n[5],h=n[6],l=n[7],u=n[8],p=n[9],d=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(o-r,l-s,f-u,y-m).normalize(),e[1].setComponents(o+r,l+s,f+u,y+m).normalize(),e[2].setComponents(o+i,l+c,f+p,y+g).normalize(),e[3].setComponents(o-i,l-c,f-p,y-g).normalize(),e[4].setComponents(o-a,l-h,f-d,y-v).normalize(),e[5].setComponents(o+a,l+h,f+d,y+v).normalize(),this},intersectsObject:function(){var t=new De;return function(e){var n=e.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),t.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new De;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,n=t.center,r=-t.radius,i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:function(){var t=new Te;return function(e){for(var n=this.planes,r=0;r<6;r++){var i=n[r];if(t.x=i.normal.x>0?e.max.x:e.min.x,t.y=i.normal.y>0?e.max.y:e.min.y,t.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(t)<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});var Fe={alphamap_fragment:\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\",alphamap_pars_fragment:\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\",alphatest_fragment:\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\",aomap_fragment:\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\",aomap_pars_fragment:\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",begin_vertex:\"\\nvec3 transformed = vec3( position );\\n\",beginnormal_vertex:\"\\nvec3 objectNormal = vec3( normal );\\n\",bsdfs:\"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\",bumpmap_pars_fragment:\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\",clipping_planes_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\",clipping_planes_pars_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\",clipping_planes_pars_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\",clipping_planes_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\",color_fragment:\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",color_pars_fragment:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\",color_pars_vertex:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\",common:\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\",cube_uv_reflection_fragment:\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\",defaultnormal_vertex:\"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\",displacementmap_pars_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\",displacementmap_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\",emissivemap_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\",emissivemap_pars_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\",encodings_fragment:\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\",encodings_pars_fragment:\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\",envmap_fragment:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\",envmap_pars_fragment:\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\",envmap_pars_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\",envmap_physical_pars_fragment:\"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\",envmap_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\",fog_vertex:\"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\",fog_pars_vertex:\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\",fog_fragment:\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\",fog_pars_fragment:\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\",gradientmap_pars_fragment:\"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\",lightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",lights_lambert_vertex:\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",lights_pars_begin:\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\",lights_phong_fragment:\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\",lights_phong_pars_fragment:\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\",lights_physical_fragment:\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\",lights_physical_pars_fragment:\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\",lights_fragment_begin:\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\",lights_fragment_maps:\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\",lights_fragment_end:\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\",logdepthbuf_fragment:\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\",logdepthbuf_pars_fragment:\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\",logdepthbuf_pars_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\",logdepthbuf_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\",map_fragment:\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\",map_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\",map_particle_fragment:\"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\",map_particle_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\",metalnessmap_fragment:\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\",metalnessmap_pars_fragment:\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\",morphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\",normal_fragment_begin:\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\",normal_fragment_maps:\"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\",normalmap_pars_fragment:\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",packing:\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\",premultiplied_alpha_fragment:\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\",project_vertex:\"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\",dithering_fragment:\"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\",dithering_pars_fragment:\"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\",roughnessmap_fragment:\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\",roughnessmap_pars_fragment:\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",shadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",shadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\",shadowmask_pars_fragment:\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\",skinbase_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",skinning_vertex:\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\",skinnormal_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\",specularmap_fragment:\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",specularmap_pars_fragment:\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",tonemapping_fragment:\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\",tonemapping_pars_fragment:\"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\",uv_pars_fragment:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\",uv_pars_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\",uv_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\",uv2_pars_fragment:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_pars_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\",worldpos_vertex:\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\",background_frag:\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\",background_vert:\"varying vec2 vUv;\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\",cube_frag:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\",cube_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\",depth_frag:\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\",depth_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",distanceRGBA_frag:\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\",distanceRGBA_vert:\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\",equirect_frag:\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\",equirect_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",linedashed_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",linedashed_vert:\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshbasic_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",meshbasic_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshlambert_frag:\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshlambert_vert:\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshmatcap_frag:\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",meshmatcap_vert:\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\",meshphong_frag:\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshphong_vert:\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshphysical_frag:\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshphysical_vert:\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",normal_frag:\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\",normal_vert:\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\",points_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",points_vert:\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",shadow_frag:\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\",shadow_vert:\"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",sprite_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",sprite_vert:\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\"},ze={merge:function(t){for(var e={},n=0;n<t.length;n++){var r=this.clone(t[n]);for(var i in r)e[i]=r[i]}return e},clone:function(t){var e={};for(var n in t)for(var r in e[n]={},t[n]){var i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}return e}},He={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Ge(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}Object.assign(Ge.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):\"number\"==typeof t?this.setHex(t):\"string\"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(){function t(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}return function(e,n,r){if(e=_e.euclideanModulo(e,1),n=_e.clamp(n,0,1),r=_e.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+n):r+n-r*n,a=2*r-i;this.r=t(a,i,e+1/3),this.g=t(a,i,e),this.b=t(a,i,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn(\"THREE.Color: Alpha component of \"+t+\" will be ignored.\")}var n;if(n=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(t)){var r,i=n[1],a=n[2];switch(i){case\"rgb\":case\"rgba\":if(r=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,e(r[5]),this;if(r=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,e(r[5]),this;break;case\"hsl\":case\"hsla\":if(r=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return e(r[5]),this.setHSL(o,s,c)}}}else if(n=/^\\#([A-Fa-f0-9]+)$/.exec(t)){var h,l=(h=n[1]).length;if(3===l)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}t&&t.length>0&&(void 0!==(h=He[t])?this.setHex(h):console.warn(\"THREE.Color: Unknown color \"+t));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(){function t(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}return function(e){return this.r=t(e.r),this.g=t(e.g),this.b=t(e.b),this}}(),copyLinearToSRGB:function(){function t(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}return function(e){return this.r=t(e.r),this.g=t(e.g),this.b=t(e.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn(\"THREE.Color: .getHSL() target is now required\"),t={h:0,s:0,l:0});var e,n,r=this.r,i=this.g,a=this.b,o=Math.max(r,i,a),s=Math.min(r,i,a),c=(s+o)/2;if(s===o)e=0,n=0;else{var h=o-s;switch(n=c<=.5?h/(o+s):h/(2-o-s),o){case r:e=(i-a)/h+(i<a?6:0);break;case i:e=(a-r)/h+2;break;case a:e=(r-i)/h+4}e/=6}return t.h=e,t.s=n,t.l=c,t},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(){var t={};return function(e,n,r){return this.getHSL(t),t.h+=e,t.s+=n,t.l+=r,this.setHSL(t.h,t.s,t.l),this}}(),add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(){var t={h:0,s:0,l:0},e={h:0,s:0,l:0};return function(n,r){this.getHSL(t),n.getHSL(e);var i=_e.lerp(t.h,e.h,r),a=_e.lerp(t.s,e.s,r),o=_e.lerp(t.l,e.l,r);return this.setHSL(i,a,o),this}}(),equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var Ve={common:{diffuse:{value:new Ge(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Se},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new we(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Ge(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Se}},sprite:{diffuse:{value:new Ge(15658734)},opacity:{value:1},center:{value:new we(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new Se}}},ke={basic:{uniforms:ze.merge([Ve.common,Ve.specularmap,Ve.envmap,Ve.aomap,Ve.lightmap,Ve.fog]),vertexShader:Fe.meshbasic_vert,fragmentShader:Fe.meshbasic_frag},lambert:{uniforms:ze.merge([Ve.common,Ve.specularmap,Ve.envmap,Ve.aomap,Ve.lightmap,Ve.emissivemap,Ve.fog,Ve.lights,{emissive:{value:new Ge(0)}}]),vertexShader:Fe.meshlambert_vert,fragmentShader:Fe.meshlambert_frag},phong:{uniforms:ze.merge([Ve.common,Ve.specularmap,Ve.envmap,Ve.aomap,Ve.lightmap,Ve.emissivemap,Ve.bumpmap,Ve.normalmap,Ve.displacementmap,Ve.gradientmap,Ve.fog,Ve.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:Fe.meshphong_vert,fragmentShader:Fe.meshphong_frag},standard:{uniforms:ze.merge([Ve.common,Ve.envmap,Ve.aomap,Ve.lightmap,Ve.emissivemap,Ve.bumpmap,Ve.normalmap,Ve.displacementmap,Ve.roughnessmap,Ve.metalnessmap,Ve.fog,Ve.lights,{emissive:{value:new Ge(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Fe.meshphysical_vert,fragmentShader:Fe.meshphysical_frag},matcap:{uniforms:ze.merge([Ve.common,Ve.bumpmap,Ve.normalmap,Ve.displacementmap,Ve.fog,{matcap:{value:null}}]),vertexShader:Fe.meshmatcap_vert,fragmentShader:Fe.meshmatcap_frag},points:{uniforms:ze.merge([Ve.points,Ve.fog]),vertexShader:Fe.points_vert,fragmentShader:Fe.points_frag},dashed:{uniforms:ze.merge([Ve.common,Ve.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Fe.linedashed_vert,fragmentShader:Fe.linedashed_frag},depth:{uniforms:ze.merge([Ve.common,Ve.displacementmap]),vertexShader:Fe.depth_vert,fragmentShader:Fe.depth_frag},normal:{uniforms:ze.merge([Ve.common,Ve.bumpmap,Ve.normalmap,Ve.displacementmap,{opacity:{value:1}}]),vertexShader:Fe.normal_vert,fragmentShader:Fe.normal_frag},sprite:{uniforms:ze.merge([Ve.sprite,Ve.fog]),vertexShader:Fe.sprite_vert,fragmentShader:Fe.sprite_frag},background:{uniforms:{t2D:{value:null}},vertexShader:Fe.background_vert,fragmentShader:Fe.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Fe.cube_vert,fragmentShader:Fe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Fe.equirect_vert,fragmentShader:Fe.equirect_frag},distanceRGBA:{uniforms:ze.merge([Ve.common,Ve.displacementmap,{referencePosition:{value:new Te},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Fe.distanceRGBA_vert,fragmentShader:Fe.distanceRGBA_frag},shadow:{uniforms:ze.merge([Ve.lights,Ve.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:Fe.shadow_vert,fragmentShader:Fe.shadow_frag}};function je(){var t=null,e=!1,n=null;function r(i,a){!1!==e&&(n(i,a),t.requestAnimationFrame(r))}return{start:function(){!0!==e&&null!==n&&(t.requestAnimationFrame(r),e=!0)},stop:function(){e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function We(t){var e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var r=e.get(n);r&&(t.deleteBuffer(r.buffer),e.delete(n))},update:function(n,r){n.isInterleavedBufferAttribute&&(n=n.data);var i=e.get(n);void 0===i?e.set(n,function(e,n){var r=e.array,i=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(n,a),t.bufferData(n,r,i),e.onUploadCallback();var o=t.FLOAT;return r instanceof Float32Array?o=t.FLOAT:r instanceof Float64Array?console.warn(\"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\"):r instanceof Uint16Array?o=t.UNSIGNED_SHORT:r instanceof Int16Array?o=t.SHORT:r instanceof Uint32Array?o=t.UNSIGNED_INT:r instanceof Int32Array?o=t.INT:r instanceof Int8Array?o=t.BYTE:r instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(n,r)):i.version<n.version&&(function(e,n,r){var i=n.array,a=n.updateRange;t.bindBuffer(r,e),!1===n.dynamic?t.bufferData(r,i,t.STATIC_DRAW):-1===a.count?t.bufferSubData(r,0,i):0===a.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):(t.bufferSubData(r,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,n,r),i.version=n.version)}}}function Xe(t,e,n,r,i,a){this.a=t,this.b=e,this.c=n,this.normal=r&&r.isVector3?r:new Te,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new Ge,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}function qe(t,e,n,r){this._x=t||0,this._y=e||0,this._z=n||0,this._order=r||qe.DefaultOrder}function Ye(){this.mask=1}ke.physical={uniforms:ze.merge([ke.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Fe.meshphysical_vert,fragmentShader:Fe.meshphysical_frag},Object.assign(Xe.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}}),qe.RotationOrders=[\"XYZ\",\"YZX\",\"ZXY\",\"XZY\",\"YXZ\",\"ZYX\"],qe.DefaultOrder=\"XYZ\",Object.defineProperties(qe.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(qe.prototype,{isEuler:!0,set:function(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var r=_e.clamp,i=t.elements,a=i[0],o=i[4],s=i[8],c=i[1],h=i[5],l=i[9],u=i[2],p=i[6],d=i[10];return\"XYZ\"===(e=e||this._order)?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,h),this._z=0)):\"YXZ\"===e?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,a),this._z=0)):\"ZXY\"===e?(this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,a))):\"ZYX\"===e?(this._y=Math.asin(-r(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,h))):\"YZX\"===e?(this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,d))):\"XZY\"===e?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+e),this._order=e,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new Me;return function(e,n,r){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,n,r)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new Ee;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new Te(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(Ye.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});var Ze=0;function Je(){Object.defineProperty(this,\"id\",{value:Ze++}),this.uuid=_e.generateUUID(),this.name=\"\",this.type=\"Object3D\",this.parent=null,this.children=[],this.up=Je.DefaultUp.clone();var t=new Te,e=new qe,n=new Ee,r=new Te(1,1,1);e.onChange(function(){n.setFromEuler(e,!1)}),n.onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new Me},normalMatrix:{value:new Se}}),this.matrix=new Me,this.matrixWorld=new Me,this.matrixAutoUpdate=Je.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ye,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Je.DefaultUp=new Te(0,1,0),Je.DefaultMatrixAutoUpdate=!0,Je.prototype=Object.assign(Object.create(e.prototype),{constructor:Je,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new Ee;return function(e,n){return t.setFromAxisAngle(e,n),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new Ee;return function(e,n){return t.setFromAxisAngle(e,n),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new Te(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new Te(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new Te(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new Te;return function(e,n){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(n)),this}}(),translateX:function(){var t=new Te(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new Te(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new Te(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new Me;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new Ee,e=new Me,n=new Te,r=new Te;return function(i,a,o){i.isVector3?n.copy(i):n.set(i,a,o);var s=this.parent;this.updateWorldMatrix(!0,!1),r.setFromMatrixPosition(this.matrixWorld),this.isCamera?e.lookAt(r,n,this.up):e.lookAt(n,r,this.up),this.quaternion.setFromRotationMatrix(e),s&&(e.extractRotation(s.matrixWorld),t.setFromRotationMatrix(e),this.quaternion.premultiply(t.inverse()))}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:\"added\"}),this.children.push(t)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return-1!==n&&(t.parent=null,t.dispatchEvent({type:\"removed\"}),this.children.splice(n,1)),this},getObjectById:function(t){return this.getObjectByProperty(\"id\",t)},getObjectByName:function(t){return this.getObjectByProperty(\"name\",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn(\"THREE.Object3D: .getWorldPosition() target is now required\"),t=new Te),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new Te,e=new Te;return function(n){return void 0===n&&(console.warn(\"THREE.Object3D: .getWorldQuaternion() target is now required\"),n=new Ee),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,n,e),n}}(),getWorldScale:function(){var t=new Te,e=new Ee;return function(n){return void 0===n&&(console.warn(\"THREE.Object3D: .getWorldScale() target is now required\"),n=new Te),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(t){void 0===t&&(console.warn(\"THREE.Object3D: .getWorldDirection() target is now required\"),t=new Te),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var r=this.children,i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=void 0===t||\"string\"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:\"Object\",generator:\"Object3D.toJSON\"});var r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,\"\"!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),\"{}\"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,c=o.length;s<c;s++){var h=o[s];i(t.shapes,h)}else i(t.shapes,o)}}if(void 0!==this.material)if(Array.isArray(this.material)){var l=[];for(s=0,c=this.material.length;s<c;s++)l.push(i(t.materials,this.material[s]));r.material=l}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(t).object)}if(e){var u=m(t.geometries),p=m(t.materials),d=m(t.textures),f=m(t.images);o=m(t.shapes);u.length>0&&(n.geometries=u),p.length>0&&(n.materials=p),d.length>0&&(n.textures=d),f.length>0&&(n.images=f),o.length>0&&(n.shapes=o)}return n.object=r,n;function m(t){var e=[];for(var n in t){var r=t[n];delete r.metadata,e.push(r)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var n=0;n<t.children.length;n++){var r=t.children[n];this.add(r.clone())}return this}});var Qe=0;function Ke(){Object.defineProperty(this,\"id\",{value:Qe+=2}),this.uuid=_e.generateUUID(),this.name=\"\",this.type=\"Geometry\",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function $e(t,e,n){if(Array.isArray(t))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");this.name=\"\",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function tn(t,e,n){$e.call(this,new Int8Array(t),e,n)}function en(t,e,n){$e.call(this,new Uint8Array(t),e,n)}function nn(t,e,n){$e.call(this,new Uint8ClampedArray(t),e,n)}function rn(t,e,n){$e.call(this,new Int16Array(t),e,n)}function an(t,e,n){$e.call(this,new Uint16Array(t),e,n)}function on(t,e,n){$e.call(this,new Int32Array(t),e,n)}function sn(t,e,n){$e.call(this,new Uint32Array(t),e,n)}function cn(t,e,n){$e.call(this,new Float32Array(t),e,n)}function hn(t,e,n){$e.call(this,new Float64Array(t),e,n)}function ln(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function un(t){if(0===t.length)return-1/0;for(var e=t[0],n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}Ke.prototype=Object.assign(Object.create(e.prototype),{constructor:Ke,isGeometry:!0,applyMatrix:function(t){for(var e=(new Se).getNormalMatrix(t),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(t)}for(n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(e).normalize();for(var a=0,o=i.vertexNormals.length;a<o;a++)i.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new Me;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new Me;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new Me;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new Me;return function(e,n,r){return t.makeTranslation(e,n,r),this.applyMatrix(t),this}}(),scale:function(){var t=new Me;return function(e,n,r){return t.makeScale(e,n,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new Je;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){var e=this,n=null!==t.index?t.index.array:void 0,r=t.attributes,i=r.position.array,a=void 0!==r.normal?r.normal.array:void 0,o=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,c=void 0!==r.uv2?r.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var h=[],l=[],u=[],p=0,d=0;p<i.length;p+=3,d+=2)e.vertices.push(new Te(i[p],i[p+1],i[p+2])),void 0!==a&&h.push(new Te(a[p],a[p+1],a[p+2])),void 0!==o&&e.colors.push(new Ge(o[p],o[p+1],o[p+2])),void 0!==s&&l.push(new we(s[d],s[d+1])),void 0!==c&&u.push(new we(c[d],c[d+1]));function f(t,n,r,i){var p=new Xe(t,n,r,void 0!==a?[h[t].clone(),h[n].clone(),h[r].clone()]:[],void 0!==o?[e.colors[t].clone(),e.colors[n].clone(),e.colors[r].clone()]:[],i);e.faces.push(p),void 0!==s&&e.faceVertexUvs[0].push([l[t].clone(),l[n].clone(),l[r].clone()]),void 0!==c&&e.faceVertexUvs[1].push([u[t].clone(),u[n].clone(),u[r].clone()])}var m=t.groups;if(m.length>0)for(p=0;p<m.length;p++)for(var g=m[p],v=g.start,y=(d=v,v+g.count);d<y;d+=3)void 0!==n?f(n[d],n[d+1],n[d+2],g.materialIndex):f(d,d+1,d+2,g.materialIndex);else if(void 0!==n)for(p=0;p<n.length;p+=3)f(n[p],n[p+1],n[p+2]);else for(p=0;p<i.length/3;p+=3)f(p,p+1,p+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){var t=new Te;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,r=new Me;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var t=new Te,e=new Te,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){var e,n,r,i,a,o;for(void 0===t&&(t=!0),o=new Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)o[e]=new Te;if(t){var s,c,h,l=new Te,u=new Te;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],c=this.vertices[a.b],h=this.vertices[a.c],l.subVectors(h,c),u.subVectors(s,c),l.cross(u),o[a.a].add(l),o[a.b].add(l),o[a.c].add(l)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)o[(a=this.faces[r]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(e=0,n=this.vertices.length;e<n;e++)o[e].normalize();for(r=0,i=this.faces.length;r<i;r++){var p=(a=this.faces[r]).vertexNormals;3===p.length?(p[0].copy(o[a.a]),p[1].copy(o[a.b]),p[2].copy(o[a.c])):(p[0]=o[a.a].clone(),p[1]=o[a.b].clone(),p[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var r=(n=this.faces[t]).vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for((i=this.faces[n]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),t=0,e=i.vertexNormals.length;t<e;t++)i.__originalVertexNormals[t]?i.__originalVertexNormals[t].copy(i.vertexNormals[t]):i.__originalVertexNormals[t]=i.vertexNormals[t].clone();var a=new Ke;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var o=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)c=new Te,h={a:new Te,b:new Te,c:new Te},o.push(c),s.push(h)}var c,h,l=this.morphNormals[t];for(a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals(),n=0,r=this.faces.length;n<r;n++)i=this.faces[n],c=l.faceNormals[n],h=l.vertexNormals[n],c.copy(i.normal),h.a.copy(i.vertexNormals[0]),h.b.copy(i.vertexNormals[1]),h.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)(i=this.faces[n]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Ne),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new De),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(t&&t.isGeometry){var r,i=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,c=t.faces,h=this.faceVertexUvs[0],l=t.faceVertexUvs[0],u=this.colors,p=t.colors;void 0===n&&(n=0),void 0!==e&&(r=(new Se).getNormalMatrix(e));for(var d=0,f=o.length;d<f;d++){var m=o[d].clone();void 0!==e&&m.applyMatrix4(e),a.push(m)}for(d=0,f=p.length;d<f;d++)u.push(p[d].clone());for(d=0,f=c.length;d<f;d++){var g,v,y,x=c[d],b=x.vertexNormals,_=x.vertexColors;(g=new Xe(x.a+i,x.b+i,x.c+i)).normal.copy(x.normal),void 0!==r&&g.normal.applyMatrix3(r).normalize();for(var w=0,M=b.length;w<M;w++)v=b[w].clone(),void 0!==r&&v.applyMatrix3(r).normalize(),g.vertexNormals.push(v);g.color.copy(x.color);for(w=0,M=_.length;w<M;w++)y=_[w],g.vertexColors.push(y.clone());g.materialIndex=x.materialIndex+n,s.push(g)}for(d=0,f=l.length;d<f;d++){var E=l[d],T=[];if(void 0!==E){for(w=0,M=E.length;w<M;w++)T.push(E[w].clone());h.push(T)}}}else console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",t)},mergeVertices:function(){var t,e,n,r,i,a,o,s,c={},h=[],l=[],u=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)t=this.vertices[n],void 0===c[e=Math.round(t.x*u)+\"_\"+Math.round(t.y*u)+\"_\"+Math.round(t.z*u)]?(c[e]=n,h.push(this.vertices[n]),l[n]=h.length-1):l[n]=l[c[e]];var p=[];for(n=0,r=this.faces.length;n<r;n++){(i=this.faces[n]).a=l[i.a],i.b=l[i.b],i.c=l[i.c],a=[i.a,i.b,i.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(n);break}}for(n=p.length-1;n>=0;n--){var f=p[n];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-h.length;return this.vertices=h,m},setFromPoints:function(t){this.vertices=[];for(var e=0,n=t.length;e<n;e++){var r=t[e];this.vertices.push(new Te(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var r,i,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(r=[]),o&&o.length===e&&(i=[]);for(n=0;n<e;n++){var s=t[n]._id;r&&r.push(a[s]),i&&i.push(o[s])}r&&(this.faceVertexUvs[0]=r),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var t={metadata:{version:4.5,type:\"Geometry\",generator:\"Geometry.toJSON\"}};if(t.uuid=this.uuid,t.type=this.type,\"\"!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var n in e)void 0!==e[n]&&(t[n]=e[n]);return t}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z)}var o=[],s=[],c={},h=[],l={},u=[],p={};for(i=0;i<this.faces.length;i++){var d=this.faces[i],f=void 0!==this.faceVertexUvs[0][i],m=d.normal.length()>0,g=d.vertexNormals.length>0,v=1!==d.color.r||1!==d.color.g||1!==d.color.b,y=d.vertexColors.length>0,x=0;if(x=M(x=M(x=M(x=M(x=M(x=M(x=M(x=M(x,0,0),1,!0),2,!1),3,f),4,m),5,g),6,v),7,y),o.push(x),o.push(d.a,d.b,d.c),o.push(d.materialIndex),f){var b=this.faceVertexUvs[0][i];o.push(S(b[0]),S(b[1]),S(b[2]))}if(m&&o.push(E(d.normal)),g){var _=d.vertexNormals;o.push(E(_[0]),E(_[1]),E(_[2]))}if(v&&o.push(T(d.color)),y){var w=d.vertexColors;o.push(T(w[0]),T(w[1]),T(w[2]))}}function M(t,e,n){return n?t|1<<e:t&~(1<<e)}function E(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==c[e]?c[e]:(c[e]=s.length/3,s.push(t.x,t.y,t.z),c[e])}function T(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==l[e]?l[e]:(l[e]=h.length,h.push(t.getHex()),l[e])}function S(t){var e=t.x.toString()+t.y.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/2,u.push(t.x,t.y),p[e])}return t.data={},t.data.vertices=r,t.data.normals=s,h.length>0&&(t.data.colors=h),u.length>0&&(t.data.uvs=[u]),t.data.faces=o,t},clone:function(){return(new Ke).copy(this)},copy:function(t){var e,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,n=s.length;e<n;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,n=c.length;e<n;e++)this.colors.push(c[e].clone());var h=t.faces;for(e=0,n=h.length;e<n;e++)this.faces.push(h[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),r=0,i=l.length;r<i;r++){var u=l[r],p=[];for(a=0,o=u.length;a<o;a++){var d=u[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,n=f.length;e<n;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],r=0,i=f[e].vertices.length;r<i;r++)m.vertices.push(f[e].vertices[r].clone());if(void 0!==f[e].normals)for(m.normals=[],r=0,i=f[e].normals.length;r<i;r++)m.normals.push(f[e].normals[r].clone());this.morphTargets.push(m)}var g=t.morphNormals;for(e=0,n=g.length;e<n;e++){var v={};if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],r=0,i=g[e].vertexNormals.length;r<i;r++){var y=g[e].vertexNormals[r],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}if(void 0!==g[e].faceNormals)for(v.faceNormals=[],r=0,i=g[e].faceNormals.length;r<i;r++)v.faceNormals.push(g[e].faceNormals[r].clone());this.morphNormals.push(v)}var b=t.skinWeights;for(e=0,n=b.length;e<n;e++)this.skinWeights.push(b[e].clone());var _=t.skinIndices;for(e=0,n=_.length;e<n;e++)this.skinIndices.push(_[e].clone());var w=t.lineDistances;for(e=0,n=w.length;e<n;e++)this.lineDistances.push(w[e]);var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());var E=t.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Object.defineProperty($e.prototype,\"needsUpdate\",{set:function(t){!0===t&&this.version++}}),Object.assign($e.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");return this.count=void 0!==t?t.length/this.itemSize:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var a=t[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",r),a=new Ge),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var a=t[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",r),a=new we),e[n++]=a.x,e[n++]=a.y}return this},copyVector3sArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var a=t[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",r),a=new Te),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var a=t[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",r),a=new Pe),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),tn.prototype=Object.create($e.prototype),tn.prototype.constructor=tn,en.prototype=Object.create($e.prototype),en.prototype.constructor=en,nn.prototype=Object.create($e.prototype),nn.prototype.constructor=nn,rn.prototype=Object.create($e.prototype),rn.prototype.constructor=rn,an.prototype=Object.create($e.prototype),an.prototype.constructor=an,on.prototype=Object.create($e.prototype),on.prototype.constructor=on,sn.prototype=Object.create($e.prototype),sn.prototype.constructor=sn,cn.prototype=Object.create($e.prototype),cn.prototype.constructor=cn,hn.prototype=Object.create($e.prototype),hn.prototype.constructor=hn,Object.assign(ln.prototype,{computeGroups:function(t){for(var e,n=[],r=void 0,i=t.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,n.push(e)),e={start:3*a,materialIndex:r})}void 0!==e&&(e.count=3*a-e.start,n.push(e)),this.groups=n},fromGeometry:function(t){var e,n=t.faces,r=t.vertices,i=t.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=t.morphTargets,c=s.length;if(c>0){e=[];for(var h=0;h<c;h++)e[h]={name:s[h].name,data:[]};this.morphTargets.position=e}var l,u=t.morphNormals,p=u.length;if(p>0){l=[];for(h=0;h<p;h++)l[h]={name:u[h].name,data:[]};this.morphTargets.normal=l}var d=t.skinIndices,f=t.skinWeights,m=d.length===r.length,g=f.length===r.length;r.length>0&&0===n.length&&console.error(\"THREE.DirectGeometry: Faceless geometries are not supported.\");for(h=0;h<n.length;h++){var v=n[h];this.vertices.push(r[v.a],r[v.b],r[v.c]);var y=v.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=v.normal;this.normals.push(x,x,x)}var b,_=v.vertexColors;if(3===_.length)this.colors.push(_[0],_[1],_[2]);else{var w=v.color;this.colors.push(w,w,w)}if(!0===a)void 0!==(b=i[0][h])?this.uvs.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",h),this.uvs.push(new we,new we,new we));if(!0===o)void 0!==(b=i[1][h])?this.uvs2.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",h),this.uvs2.push(new we,new we,new we));for(var M=0;M<c;M++){var E=s[M].vertices;e[M].data.push(E[v.a],E[v.b],E[v.c])}for(M=0;M<p;M++){var T=u[M].vertexNormals[h];l[M].data.push(T.a,T.b,T.c)}m&&this.skinIndices.push(d[v.a],d[v.b],d[v.c]),g&&this.skinWeights.push(f[v.a],f[v.b],f[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var pn=1;function dn(){Object.defineProperty(this,\"id\",{value:pn+=2}),this.uuid=_e.generateUUID(),this.name=\"\",this.type=\"BufferGeometry\",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}function fn(t,e,n,r,i,a){Ke.call(this),this.type=\"BoxGeometry\",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new mn(t,e,n,r,i,a)),this.mergeVertices()}function mn(t,e,n,r,i,a){dn.call(this),this.type=\"BoxBufferGeometry\",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};var o=this;t=t||1,e=e||1,n=n||1,r=Math.floor(r)||1,i=Math.floor(i)||1;var s=[],c=[],h=[],l=[],u=0,p=0;function d(t,e,n,r,i,a,d,f,m,g,v){var y,x,b=a/m,_=d/g,w=a/2,M=d/2,E=f/2,T=m+1,S=g+1,A=0,L=0,R=new Te;for(x=0;x<S;x++){var P=x*_-M;for(y=0;y<T;y++){var C=y*b-w;R[t]=C*r,R[e]=P*i,R[n]=E,c.push(R.x,R.y,R.z),R[t]=0,R[e]=0,R[n]=f>0?1:-1,h.push(R.x,R.y,R.z),l.push(y/m),l.push(1-x/g),A+=1}}for(x=0;x<g;x++)for(y=0;y<m;y++){var O=u+y+T*x,I=u+y+T*(x+1),N=u+(y+1)+T*(x+1),D=u+(y+1)+T*x;s.push(O,I,D),s.push(I,N,D),L+=6}o.addGroup(p,L,v),p+=L,u+=A}d(\"z\",\"y\",\"x\",-1,-1,n,e,t,a=Math.floor(a)||1,i,0),d(\"z\",\"y\",\"x\",1,-1,n,e,-t,a,i,1),d(\"x\",\"z\",\"y\",1,1,t,n,e,r,a,2),d(\"x\",\"z\",\"y\",1,-1,t,n,-e,r,a,3),d(\"x\",\"y\",\"z\",1,-1,t,e,n,r,i,4),d(\"x\",\"y\",\"z\",-1,-1,t,e,-n,r,i,5),this.setIndex(s),this.addAttribute(\"position\",new cn(c,3)),this.addAttribute(\"normal\",new cn(h,3)),this.addAttribute(\"uv\",new cn(l,2))}function gn(t,e,n,r){Ke.call(this),this.type=\"PlaneGeometry\",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new vn(t,e,n,r)),this.mergeVertices()}function vn(t,e,n,r){dn.call(this),this.type=\"PlaneBufferGeometry\",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};var i,a,o=(t=t||1)/2,s=(e=e||1)/2,c=Math.floor(n)||1,h=Math.floor(r)||1,l=c+1,u=h+1,p=t/c,d=e/h,f=[],m=[],g=[],v=[];for(a=0;a<u;a++){var y=a*d-s;for(i=0;i<l;i++){var x=i*p-o;m.push(x,-y,0),g.push(0,0,1),v.push(i/c),v.push(1-a/h)}}for(a=0;a<h;a++)for(i=0;i<c;i++){var b=i+l*a,_=i+l*(a+1),w=i+1+l*(a+1),M=i+1+l*a;f.push(b,_,M),f.push(_,w,M)}this.setIndex(f),this.addAttribute(\"position\",new cn(m,3)),this.addAttribute(\"normal\",new cn(g,3)),this.addAttribute(\"uv\",new cn(v,2))}dn.prototype=Object.assign(Object.create(e.prototype),{constructor:dn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(un(t)>65535?sn:an)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?\"index\"===t?(console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),this.setIndex(e),this):(this.attributes[t]=e,this):(console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(t,new $e(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var n=this.attributes.normal;void 0!==n&&((new Se).getNormalMatrix(t).applyToBufferAttribute(n),n.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new Me;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new Me;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new Me;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new Me;return function(e,n,r){return t.makeTranslation(e,n,r),this.applyMatrix(t),this}}(),scale:function(){var t=new Me;return function(e,n,r){return t.makeScale(e,n,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new Je;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){var t=new Te;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new cn(3*e.vertices.length,3),r=new cn(3*e.colors.length,3);if(this.addAttribute(\"position\",n.copyVector3sArray(e.vertices)),this.addAttribute(\"color\",r.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var i=new cn(e.lineDistances.length,1);this.addAttribute(\"lineDistance\",i.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n];e.push(i.x,i.y,i.z||0)}return this.addAttribute(\"position\",new cn(e,3)),this},updateFromObject:function(t){var e,n=t.geometry;if(t.isMesh){var r=n.__directGeometry;if(!0===n.elementsNeedUpdate&&(r=void 0,n.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(n);r.verticesNeedUpdate=n.verticesNeedUpdate,r.normalsNeedUpdate=n.normalsNeedUpdate,r.colorsNeedUpdate=n.colorsNeedUpdate,r.uvsNeedUpdate=n.uvsNeedUpdate,r.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=r}return!0===n.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(n.vertices),e.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(n.normals),e.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(n.colors),e.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(n.uvs),e.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(n.lineDistances),e.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(t.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new ln).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute(\"position\",new $e(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var n=new Float32Array(3*t.normals.length);this.addAttribute(\"normal\",new $e(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var r=new Float32Array(3*t.colors.length);this.addAttribute(\"color\",new $e(r,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var i=new Float32Array(2*t.uvs.length);this.addAttribute(\"uv\",new $e(i,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute(\"uv2\",new $e(a,2).copyVector2sArray(t.uvs2))}for(var o in this.groups=t.groups,t.morphTargets){for(var s=[],c=t.morphTargets[o],h=0,l=c.length;h<l;h++){var u=c[h],p=new cn(3*u.data.length,3);p.name=u.name,s.push(p.copyVector3sArray(u.data))}this.morphAttributes[o]=s}if(t.skinIndices.length>0){var d=new cn(4*t.skinIndices.length,4);this.addAttribute(\"skinIndex\",d.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var f=new cn(4*t.skinWeights.length,4);this.addAttribute(\"skinWeight\",f.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Ne);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new Ne,e=new Te;return function(){null===this.boundingSphere&&(this.boundingSphere=new De);var n=this.attributes.position;if(n){var r=this.boundingSphere.center;t.setFromBufferAttribute(n),t.getCenter(r);for(var i=0,a=0,o=n.count;a<o;a++)e.x=n.getX(a),e.y=n.getY(a),e.z=n.getZ(a),i=Math.max(i,r.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute(\"normal\",new $e(new Float32Array(n.length),3));else for(var r=e.normal.array,i=0,a=r.length;i<a;i++)r[i]=0;var o,s,c,h=e.normal.array,l=new Te,u=new Te,p=new Te,d=new Te,f=new Te;if(t){var m=t.array;for(i=0,a=t.count;i<a;i+=3)o=3*m[i+0],s=3*m[i+1],c=3*m[i+2],l.fromArray(n,o),u.fromArray(n,s),p.fromArray(n,c),d.subVectors(p,u),f.subVectors(l,u),d.cross(f),h[o]+=d.x,h[o+1]+=d.y,h[o+2]+=d.z,h[s]+=d.x,h[s+1]+=d.y,h[s+2]+=d.z,h[c]+=d.x,h[c+1]+=d.y,h[c+2]+=d.z}else for(i=0,a=n.length;i<a;i+=9)l.fromArray(n,i),u.fromArray(n,i+3),p.fromArray(n,i+6),d.subVectors(p,u),f.subVectors(l,u),d.cross(f),h[i]=d.x,h[i+1]=d.y,h[i+2]=d.z,h[i+3]=d.x,h[i+4]=d.y,h[i+5]=d.z,h[i+6]=d.x,h[i+7]=d.y,h[i+8]=d.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn(\"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"));var n=this.attributes;for(var r in n)if(void 0!==t.attributes[r])for(var i=n[r].array,a=t.attributes[r],o=a.array,s=0,c=a.itemSize*e;s<o.length;s++,c++)i[c]=o[s];return this}console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",t)},normalizeNormals:function(){var t=new Te;return function(){for(var e=this.attributes.normal,n=0,r=e.count;n<r;n++)t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.normalize(),e.setXYZ(n,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var t=new dn,e=this.index.array,n=this.attributes;for(var r in n){for(var i=n[r],a=i.array,o=i.itemSize,s=new a.constructor(e.length*o),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*o;for(var p=0;p<o;p++)s[h++]=a[c++]}t.addAttribute(r,new $e(s,o))}var d=this.groups;for(l=0,u=d.length;l<u;l++){var f=d[l];t.addGroup(f.start,f.count,f.materialIndex)}return t},toJSON:function(){var t={metadata:{version:4.5,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};if(t.uuid=this.uuid,t.type=this.type,\"\"!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};var r=this.index;if(null!==r){var i=Array.prototype.slice.call(r.array);t.data.index={type:r.array.constructor.name,array:i}}var a=this.attributes;for(var n in a){var o=a[n];i=Array.prototype.slice.call(o.array);t.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){return(new dn).copy(this)},copy:function(t){var e,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var i=t.index;null!==i&&this.setIndex(i.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var c=[],h=s[e];for(n=0,r=h.length;n<r;n++)c.push(h[n].clone());this.morphAttributes[e]=c}var l=t.groups;for(n=0,r=l.length;n<r;n++){var u=l[n];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),fn.prototype=Object.create(Ke.prototype),fn.prototype.constructor=fn,mn.prototype=Object.create(dn.prototype),mn.prototype.constructor=mn,gn.prototype=Object.create(Ke.prototype),gn.prototype.constructor=gn,vn.prototype=Object.create(dn.prototype),vn.prototype.constructor=vn;var yn=0;function xn(){Object.defineProperty(this,\"id\",{value:yn++}),this.uuid=_e.generateUUID(),this.name=\"\",this.type=\"Material\",this.fog=!0,this.lights=!0,this.blending=g,this.side=h,this.flatShading=!1,this.vertexColors=p,this.opacity=1,this.transparent=!1,this.blendSrc=P,this.blendDst=C,this.blendEquation=_,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=H,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function bn(t){xn.call(this),this.type=\"ShaderMaterial\",this.defines={},this.uniforms={},this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(t))}function _n(t,e){this.origin=void 0!==t?t:new Te,this.direction=void 0!==e?e:new Te}function wn(t,e,n){this.a=void 0!==t?t:new Te,this.b=void 0!==e?e:new Te,this.c=void 0!==n?n:new Te}function Mn(t){xn.call(this),this.type=\"MeshBasicMaterial\",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function En(t,e){Je.call(this),this.type=\"Mesh\",this.geometry=void 0!==t?t:new dn,this.material=void 0!==e?e:new Mn({color:16777215*Math.random()}),this.drawMode=se,this.updateMorphTargets()}function Tn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Sn(t,e,n,r,i,a,o,s,c,h){t=void 0!==t?t:[],e=void 0!==e?e:$,Re.call(this,t,e,n,r,i,a,o,s,c,h),this.flipY=!1}function An(t,e,n,r){Re.call(this,null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ht,this.minFilter=ht,this.generateMipmaps=!1,this.flipY=!1}xn.prototype=Object.assign(Object.create(e.prototype),{constructor:xn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var n=t[e];if(void 0!==n)if(\"shading\"!==e){var r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=\"overdraw\"===e?Number(n):n:console.warn(\"THREE.\"+this.type+\": '\"+e+\"' is not a property of this material.\")}else console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=1===n;else console.warn(\"THREE.Material: '\"+e+\"' parameter is undefined.\")}},toJSON:function(t){var e=void 0===t||\"string\"==typeof t;e&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:\"Material\",generator:\"Material.toJSON\"}};function r(t){var e=[];for(var n in t){var r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,\"\"!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==g&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==h&&(n.side=this.side),this.vertexColors!==p&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),\"round\"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),\"round\"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),\"{}\"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){var i=r(t.textures),a=r(t.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,n=null;if(null!==e){var r=e.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.shadowSide=t.shadowSide,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),bn.prototype=Object.create(xn.prototype),bn.prototype.constructor=bn,bn.prototype.isShaderMaterial=!0,bn.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ze.clone(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},bn.prototype.toJSON=function(t){var e=xn.prototype.toJSON.call(this,t);for(var n in e.uniforms={},this.uniforms){var r=this.uniforms[n].value;r.isTexture?e.uniforms[n]={type:\"t\",value:r.toJSON(t).uuid}:r.isColor?e.uniforms[n]={type:\"c\",value:r.getHex()}:r.isVector2?e.uniforms[n]={type:\"v2\",value:r.toArray()}:r.isVector3?e.uniforms[n]={type:\"v3\",value:r.toArray()}:r.isVector4?e.uniforms[n]={type:\"v4\",value:r.toArray()}:r.isMatrix4?e.uniforms[n]={type:\"m4\",value:r.toArray()}:e.uniforms[n]={value:r}}return Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},Object.assign(_n.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn(\"THREE.Ray: .at() target is now required\"),e=new Te),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new Te;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){void 0===e&&(console.warn(\"THREE.Ray: .closestPointToPoint() target is now required\"),e=new Te),e.subVectors(t,this.origin);var n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new Te;return function(e){var n=t.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(n).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new Te,e=new Te,n=new Te;return function(r,i,a,o){t.copy(r).add(i).multiplyScalar(.5),e.copy(i).sub(r).normalize(),n.copy(this.origin).sub(t);var s,c,h,l,u=.5*r.distanceTo(i),p=-this.direction.dot(e),d=n.dot(this.direction),f=-n.dot(e),m=n.lengthSq(),g=Math.abs(1-p*p);if(g>0)if(c=p*d-f,l=u*g,(s=p*f-d)>=0)if(c>=-l)if(c<=l){var v=1/g;h=(s*=v)*(s+p*(c*=v)+2*d)+c*(p*s+c+2*f)+m}else c=u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c=-u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c<=-l?h=-(s=Math.max(0,-(-p*u+d)))*s+(c=s>0?-u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m:c<=l?(s=0,h=(c=Math.min(Math.max(-u,-f),u))*(c+2*f)+m):h=-(s=Math.max(0,-(p*u+d)))*s+(c=s>0?u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m;else c=p>0?-u:u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new Te;return function(e,n){t.subVectors(e.center,this.origin);var r=t.dot(this.direction),i=t.dot(t)-r*r,a=e.radius*e.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=r-o,c=r+o;return s<0&&c<0?null:s<0?this.at(c,n):this.at(s,n)}}(),intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return null===n?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var n,r,i,a,o,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,r=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,r=(t.min.x-u.x)*c),h>=0?(i=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(i=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),n>s||o>r?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),r<0?null:this.at(n>=0?n:r,e)))},intersectsBox:function(){var t=new Te;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new Te,e=new Te,n=new Te,r=new Te;return function(i,a,o,s,c){e.subVectors(a,i),n.subVectors(o,i),r.crossVectors(e,n);var h,l=this.direction.dot(r);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,i);var u=h*this.direction.dot(n.crossVectors(t,n));if(u<0)return null;var p=h*this.direction.dot(e.cross(t));if(p<0)return null;if(u+p>l)return null;var d=-h*t.dot(r);return d<0?null:this.at(d/l,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(wn,{getNormal:function(){var t=new Te;return function(e,n,r,i){void 0===i&&(console.warn(\"THREE.Triangle: .getNormal() target is now required\"),i=new Te),i.subVectors(r,n),t.subVectors(e,n),i.cross(t);var a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}}(),getBarycoord:function(){var t=new Te,e=new Te,n=new Te;return function(r,i,a,o,s){t.subVectors(o,i),e.subVectors(a,i),n.subVectors(r,i);var c=t.dot(t),h=t.dot(e),l=t.dot(n),u=e.dot(e),p=e.dot(n),d=c*u-h*h;if(void 0===s&&(console.warn(\"THREE.Triangle: .getBarycoord() target is now required\"),s=new Te),0===d)return s.set(-2,-1,-1);var f=1/d,m=(u*l-h*p)*f,g=(c*p-h*l)*f;return s.set(1-m-g,g,m)}}(),containsPoint:function(){var t=new Te;return function(e,n,r,i){return wn.getBarycoord(e,n,r,i,t),t.x>=0&&t.y>=0&&t.x+t.y<=1}}(),getUV:function(){var t=new Te;return function(e,n,r,i,a,o,s,c){return this.getBarycoord(e,n,r,i,t),c.set(0,0),c.addScaledVector(a,t.x),c.addScaledVector(o,t.y),c.addScaledVector(s,t.z),c}}()}),Object.assign(wn.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){var t=new Te,e=new Te;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),getMidpoint:function(t){return void 0===t&&(console.warn(\"THREE.Triangle: .getMidpoint() target is now required\"),t=new Te),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return wn.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn(\"THREE.Triangle: .getPlane() target is now required\"),t=new Te),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return wn.getBarycoord(t,this.a,this.b,this.c,e)},containsPoint:function(t){return wn.containsPoint(t,this.a,this.b,this.c)},getUV:function(t,e,n,r,i){return wn.getUV(t,this.a,this.b,this.c,e,n,r,i)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(){var t=new Te,e=new Te,n=new Te,r=new Te,i=new Te,a=new Te;return function(o,s){void 0===s&&(console.warn(\"THREE.Triangle: .closestPointToPoint() target is now required\"),s=new Te);var c,h,l=this.a,u=this.b,p=this.c;t.subVectors(u,l),e.subVectors(p,l),r.subVectors(o,l);var d=t.dot(r),f=e.dot(r);if(d<=0&&f<=0)return s.copy(l);i.subVectors(o,u);var m=t.dot(i),g=e.dot(i);if(m>=0&&g<=m)return s.copy(u);var v=d*g-m*f;if(v<=0&&d>=0&&m<=0)return c=d/(d-m),s.copy(l).addScaledVector(t,c);a.subVectors(o,p);var y=t.dot(a),x=e.dot(a);if(x>=0&&y<=x)return s.copy(p);var b=y*f-d*x;if(b<=0&&f>=0&&x<=0)return h=f/(f-x),s.copy(l).addScaledVector(e,h);var _=m*x-y*g;if(_<=0&&g-m>=0&&y-x>=0)return n.subVectors(p,u),h=(g-m)/(g-m+(y-x)),s.copy(u).addScaledVector(n,h);var w=1/(_+b+v);return c=b*w,h=v*w,s.copy(l).addScaledVector(t,c).addScaledVector(e,h)}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Mn.prototype=Object.create(xn.prototype),Mn.prototype.constructor=Mn,Mn.prototype.isMeshBasicMaterial=!0,Mn.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},En.prototype=Object.assign(Object.create(Je.prototype),{constructor:En,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return Je.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)n=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}else{var s=r.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)n=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}},raycast:function(){var t=new Me,e=new _n,n=new De,r=new Te,i=new Te,a=new Te,o=new Te,s=new Te,c=new Te,h=new we,p=new we,d=new we,f=new Te,m=new Te;function g(t,e,n,r,i,a,o,s){if(null===(e.side===l?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,e.side!==u,s)))return null;m.copy(s),m.applyMatrix4(t.matrixWorld);var c=n.ray.origin.distanceTo(m);return c<n.near||c>n.far?null:{distance:c,point:m.clone(),object:t}}function v(t,e,n,o,s,c,l,u,m){r.fromBufferAttribute(s,l),i.fromBufferAttribute(s,u),a.fromBufferAttribute(s,m);var v=g(t,e,n,o,r,i,a,f);if(v){c&&(h.fromBufferAttribute(c,l),p.fromBufferAttribute(c,u),d.fromBufferAttribute(c,m),v.uv=wn.getUV(f,r,i,a,h,p,d,new we));var y=new Xe(l,u,m);wn.getNormal(r,i,a,y.normal),v.face=y}return v}return function(l,u){var m,y=this.geometry,x=this.material,b=this.matrixWorld;if(void 0!==x&&(null===y.boundingSphere&&y.computeBoundingSphere(),n.copy(y.boundingSphere),n.applyMatrix4(b),!1!==l.ray.intersectsSphere(n)&&(t.getInverse(b),e.copy(l.ray).applyMatrix4(t),null===y.boundingBox||!1!==e.intersectsBox(y.boundingBox))))if(y.isBufferGeometry){var _,w,M,E,T,S,A,L,R,P=y.index,C=y.attributes.position,O=y.attributes.uv,I=y.groups,N=y.drawRange;if(null!==P)if(Array.isArray(x))for(E=0,S=I.length;E<S;E++)for(R=x[(L=I[E]).materialIndex],T=Math.max(L.start,N.start),A=Math.min(L.start+L.count,N.start+N.count);T<A;T+=3)_=P.getX(T),w=P.getX(T+1),M=P.getX(T+2),(m=v(this,R,l,e,C,O,_,w,M))&&(m.faceIndex=Math.floor(T/3),u.push(m));else for(E=Math.max(0,N.start),S=Math.min(P.count,N.start+N.count);E<S;E+=3)_=P.getX(E),w=P.getX(E+1),M=P.getX(E+2),(m=v(this,x,l,e,C,O,_,w,M))&&(m.faceIndex=Math.floor(E/3),u.push(m));else if(void 0!==C)if(Array.isArray(x))for(E=0,S=I.length;E<S;E++)for(R=x[(L=I[E]).materialIndex],T=Math.max(L.start,N.start),A=Math.min(L.start+L.count,N.start+N.count);T<A;T+=3)(m=v(this,R,l,e,C,O,_=T,w=T+1,M=T+2))&&(m.faceIndex=Math.floor(T/3),u.push(m));else for(E=Math.max(0,N.start),S=Math.min(C.count,N.start+N.count);E<S;E+=3)(m=v(this,x,l,e,C,O,_=E,w=E+1,M=E+2))&&(m.faceIndex=Math.floor(E/3),u.push(m))}else if(y.isGeometry){var D,U,B,F,z=Array.isArray(x),H=y.vertices,G=y.faces,V=y.faceVertexUvs[0];V.length>0&&(F=V);for(var k=0,j=G.length;k<j;k++){var W=G[k],X=z?x[W.materialIndex]:x;if(void 0!==X){if(D=H[W.a],U=H[W.b],B=H[W.c],!0===X.morphTargets){var q=y.morphTargets,Y=this.morphTargetInfluences;r.set(0,0,0),i.set(0,0,0),a.set(0,0,0);for(var Z=0,J=q.length;Z<J;Z++){var Q=Y[Z];if(0!==Q){var K=q[Z].vertices;r.addScaledVector(o.subVectors(K[W.a],D),Q),i.addScaledVector(s.subVectors(K[W.b],U),Q),a.addScaledVector(c.subVectors(K[W.c],B),Q)}}r.add(D),i.add(U),a.add(B),D=r,U=i,B=a}if(m=g(this,X,l,e,D,U,B,f)){if(F&&F[k]){var $=F[k];h.copy($[0]),p.copy($[1]),d.copy($[2]),m.uv=wn.getUV(f,D,U,B,h,p,d,new we)}m.face=W,m.faceIndex=k,u.push(m)}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Sn.prototype=Object.create(Re.prototype),Sn.prototype.constructor=Sn,Sn.prototype.isCubeTexture=!0,Object.defineProperty(Sn.prototype,\"images\",{get:function(){return this.image},set:function(t){this.image=t}}),An.prototype=Object.create(Re.prototype),An.prototype.constructor=An,An.prototype.isDataTexture3D=!0;var Ln=new Re,Rn=new An,Pn=new Sn;function Cn(){this.seq=[],this.map={}}var On=[],In=[],Nn=new Float32Array(16),Dn=new Float32Array(9),Un=new Float32Array(4);function Bn(t,e,n){var r=t[0];if(r<=0||r>0)return t;var i=e*n,a=On[i];if(void 0===a&&(a=new Float32Array(i),On[i]=a),0!==e){r.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=n,t[o].toArray(a,s)}return a}function Fn(t,e){if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function zn(t,e){for(var n=0,r=e.length;n<r;n++)t[n]=e[n]}function Hn(t,e){var n=In[e];void 0===n&&(n=new Int32Array(e),In[e]=n);for(var r=0;r!==e;++r)n[r]=t.allocTextureUnit();return n}function Gn(t,e){var n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Vn(t,e){var n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function kn(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Fn(n,e))return;t.uniform2fv(this.addr,e),zn(n,e)}}function jn(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Fn(n,e))return;t.uniform3fv(this.addr,e),zn(n,e)}}function Wn(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Fn(n,e))return;t.uniform4fv(this.addr,e),zn(n,e)}}function Xn(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Fn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),zn(n,e)}else{if(Fn(n,r))return;Un.set(r),t.uniformMatrix2fv(this.addr,!1,Un),zn(n,r)}}function qn(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Fn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),zn(n,e)}else{if(Fn(n,r))return;Dn.set(r),t.uniformMatrix3fv(this.addr,!1,Dn),zn(n,r)}}function Yn(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Fn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),zn(n,e)}else{if(Fn(n,r))return;Nn.set(r),t.uniformMatrix4fv(this.addr,!1,Nn),zn(n,r)}}function Zn(t,e,n){var r=this.cache,i=n.allocTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(e||Ln,i)}function Jn(t,e,n){var r=this.cache,i=n.allocTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||Rn,i)}function Qn(t,e,n){var r=this.cache,i=n.allocTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(e||Pn,i)}function Kn(t,e){var n=this.cache;Fn(n,e)||(t.uniform2iv(this.addr,e),zn(n,e))}function $n(t,e){var n=this.cache;Fn(n,e)||(t.uniform3iv(this.addr,e),zn(n,e))}function tr(t,e){var n=this.cache;Fn(n,e)||(t.uniform4iv(this.addr,e),zn(n,e))}function er(t,e){var n=this.cache;Fn(n,e)||(t.uniform1fv(this.addr,e),zn(n,e))}function nr(t,e){var n=this.cache;Fn(n,e)||(t.uniform1iv(this.addr,e),zn(n,e))}function rr(t,e){var n=this.cache,r=Bn(e,this.size,2);Fn(n,r)||(t.uniform2fv(this.addr,r),this.updateCache(r))}function ir(t,e){var n=this.cache,r=Bn(e,this.size,3);Fn(n,r)||(t.uniform3fv(this.addr,r),this.updateCache(r))}function ar(t,e){var n=this.cache,r=Bn(e,this.size,4);Fn(n,r)||(t.uniform4fv(this.addr,r),this.updateCache(r))}function or(t,e){var n=this.cache,r=Bn(e,this.size,4);Fn(n,r)||(t.uniformMatrix2fv(this.addr,!1,r),this.updateCache(r))}function sr(t,e){var n=this.cache,r=Bn(e,this.size,9);Fn(n,r)||(t.uniformMatrix3fv(this.addr,!1,r),this.updateCache(r))}function cr(t,e){var n=this.cache,r=Bn(e,this.size,16);Fn(n,r)||(t.uniformMatrix4fv(this.addr,!1,r),this.updateCache(r))}function hr(t,e,n){var r=this.cache,i=e.length,a=Hn(n,i);!1===Fn(r,a)&&(t.uniform1iv(this.addr,a),zn(r,a));for(var o=0;o!==i;++o)n.setTexture2D(e[o]||Ln,a[o])}function lr(t,e,n){var r=this.cache,i=e.length,a=Hn(n,i);!1===Fn(r,a)&&(t.uniform1iv(this.addr,a),zn(r,a));for(var o=0;o!==i;++o)n.setTextureCube(e[o]||Pn,a[o])}function ur(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Gn;case 35664:return kn;case 35665:return jn;case 35666:return Wn;case 35674:return Xn;case 35675:return qn;case 35676:return Yn;case 35678:case 36198:return Zn;case 35679:return Jn;case 35680:return Qn;case 5124:case 35670:return Vn;case 35667:case 35671:return Kn;case 35668:case 35672:return $n;case 35669:case 35673:return tr}}(e.type)}function pr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return er;case 35664:return rr;case 35665:return ir;case 35666:return ar;case 35674:return or;case 35675:return sr;case 35676:return cr;case 35678:return hr;case 35680:return lr;case 5124:case 35670:return nr;case 35667:case 35671:return Kn;case 35668:case 35672:return $n;case 35669:case 35673:return tr}}(e.type)}function dr(t){this.id=t,Cn.call(this)}pr.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),zn(e,t)},dr.prototype.setValue=function(t,e,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(t,e[o.id],n)}};var fr=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g;function mr(t,e){t.seq.push(e),t.map[e.id]=e}function gr(t,e,n){var r=t.name,i=r.length;for(fr.lastIndex=0;;){var a=fr.exec(r),o=fr.lastIndex,s=a[1],c=\"]\"===a[2],h=a[3];if(c&&(s|=0),void 0===h||\"[\"===h&&o+2===i){mr(n,void 0===h?new ur(s,t,e):new pr(s,t,e));break}var l=n.map[s];void 0===l&&mr(n,l=new dr(s)),n=l}}function vr(t,e,n){Cn.call(this),this.renderer=n;for(var r=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),i=0;i<r;++i){var a=t.getActiveUniform(e,i);gr(a,t.getUniformLocation(e,a.name),this)}}function yr(t,e,n){var r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\"),\"\"!==t.getShaderInfoLog(r)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",e===t.VERTEX_SHADER?\"vertex\":\"fragment\",t.getShaderInfoLog(r),function(t){for(var e=t.split(\"\\n\"),n=0;n<e.length;n++)e[n]=n+1+\": \"+e[n];return e.join(\"\\n\")}(n)),r}vr.prototype.setValue=function(t,e,n){var r=this.map[e];void 0!==r&&r.setValue(t,n,this.renderer)},vr.prototype.setOptional=function(t,e,n){var r=e[n];void 0!==r&&this.setValue(t,n,r)},vr.upload=function(t,e,n,r){for(var i=0,a=e.length;i!==a;++i){var o=e[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,r)}},vr.seqWithValue=function(t,e){for(var n=[],r=0,i=t.length;r!==i;++r){var a=t[r];a.id in e&&n.push(a)}return n};var xr=0;function br(t){switch(t){case le:return[\"Linear\",\"( value )\"];case ue:return[\"sRGB\",\"( value )\"];case de:return[\"RGBE\",\"( value )\"];case fe:return[\"RGBM\",\"( value, 7.0 )\"];case me:return[\"RGBM\",\"( value, 16.0 )\"];case ge:return[\"RGBD\",\"( value, 256.0 )\"];case pe:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw new Error(\"unsupported encoding: \"+t)}}function _r(t,e){var n=br(e);return\"vec4 \"+t+\"( vec4 value ) { return \"+n[0]+\"ToLinear\"+n[1]+\"; }\"}function wr(t){return\"\"!==t}function Mr(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Er(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function Tr(t){return t.replace(/^[ \\t]*#include +<([\\w\\d./]+)>/gm,function(t,e){var n=Fe[e];if(void 0===n)throw new Error(\"Can not resolve #include <\"+e+\">\");return Tr(n)})}function Sr(t){return t.replace(/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(t,e,n,r){for(var i=\"\",a=parseInt(e);a<parseInt(n);a++)i+=r.replace(/\\[ i \\]/g,\"[ \"+a+\" ]\");return i})}function Ar(t,e,n,r,i,a,o){var h=t.context,l=r.defines,u=i.vertexShader,p=i.fragmentShader,d=\"SHADOWMAP_TYPE_BASIC\";a.shadowMapType===s?d=\"SHADOWMAP_TYPE_PCF\":a.shadowMapType===c&&(d=\"SHADOWMAP_TYPE_PCF_SOFT\");var f=\"ENVMAP_TYPE_CUBE\",m=\"ENVMAP_MODE_REFLECTION\",g=\"ENVMAP_BLENDING_MULTIPLY\";if(a.envMap){switch(r.envMap.mapping){case $:case tt:f=\"ENVMAP_TYPE_CUBE\";break;case it:case at:f=\"ENVMAP_TYPE_CUBE_UV\";break;case et:case nt:f=\"ENVMAP_TYPE_EQUIREC\";break;case rt:f=\"ENVMAP_TYPE_SPHERE\"}switch(r.envMap.mapping){case tt:case nt:m=\"ENVMAP_MODE_REFRACTION\"}switch(r.combine){case W:g=\"ENVMAP_BLENDING_MULTIPLY\";break;case X:g=\"ENVMAP_BLENDING_MIX\";break;case q:g=\"ENVMAP_BLENDING_ADD\"}}var v,y,x=t.gammaFactor>0?t.gammaFactor:1,b=o.isWebGL2?\"\":function(t,e,n){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap&&!e.objectSpaceNormalMap||e.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(t.fragDepth||e.logarithmicDepthBuffer)&&n.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",t.drawBuffers&&n.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(t.shaderTextureLOD||e.envMap)&&n.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\"\"].filter(wr).join(\"\\n\")}(r.extensions,a,e),_=function(t){var e=[];for(var n in t){var r=t[n];!1!==r&&e.push(\"#define \"+n+\" \"+r)}return e.join(\"\\n\")}(l),w=h.createProgram();if(r.isRawShaderMaterial?((v=[_].filter(wr).join(\"\\n\")).length>0&&(v+=\"\\n\"),(y=[b,_].filter(wr).join(\"\\n\")).length>0&&(y+=\"\\n\")):(v=[\"precision \"+a.precision+\" float;\",\"precision \"+a.precision+\" int;\",\"#define SHADER_NAME \"+i.name,_,a.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+x,\"#define MAX_BONES \"+a.maxBones,a.useFog&&a.fog?\"#define USE_FOG\":\"\",a.useFog&&a.fogExp?\"#define FOG_EXP2\":\"\",a.map?\"#define USE_MAP\":\"\",a.envMap?\"#define USE_ENVMAP\":\"\",a.envMap?\"#define \"+m:\"\",a.lightMap?\"#define USE_LIGHTMAP\":\"\",a.aoMap?\"#define USE_AOMAP\":\"\",a.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",a.bumpMap?\"#define USE_BUMPMAP\":\"\",a.normalMap?\"#define USE_NORMALMAP\":\"\",a.normalMap&&a.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",a.displacementMap&&a.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",a.specularMap?\"#define USE_SPECULARMAP\":\"\",a.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",a.metalnessMap?\"#define USE_METALNESSMAP\":\"\",a.alphaMap?\"#define USE_ALPHAMAP\":\"\",a.vertexColors?\"#define USE_COLOR\":\"\",a.flatShading?\"#define FLAT_SHADED\":\"\",a.skinning?\"#define USE_SKINNING\":\"\",a.useVertexTexture?\"#define BONE_TEXTURE\":\"\",a.morphTargets?\"#define USE_MORPHTARGETS\":\"\",a.morphNormals&&!1===a.flatShading?\"#define USE_MORPHNORMALS\":\"\",a.doubleSided?\"#define DOUBLE_SIDED\":\"\",a.flipSided?\"#define FLIP_SIDED\":\"\",a.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",a.shadowMapEnabled?\"#define \"+d:\"\",a.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",a.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get(\"EXT_frag_depth\"))?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(wr).join(\"\\n\"),y=[b,\"precision \"+a.precision+\" float;\",\"precision \"+a.precision+\" int;\",\"#define SHADER_NAME \"+i.name,_,a.alphaTest?\"#define ALPHATEST \"+a.alphaTest+(a.alphaTest%1?\"\":\".0\"):\"\",\"#define GAMMA_FACTOR \"+x,a.useFog&&a.fog?\"#define USE_FOG\":\"\",a.useFog&&a.fogExp?\"#define FOG_EXP2\":\"\",a.map?\"#define USE_MAP\":\"\",a.envMap?\"#define USE_ENVMAP\":\"\",a.envMap?\"#define \"+f:\"\",a.envMap?\"#define \"+m:\"\",a.envMap?\"#define \"+g:\"\",a.lightMap?\"#define USE_LIGHTMAP\":\"\",a.aoMap?\"#define USE_AOMAP\":\"\",a.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",a.bumpMap?\"#define USE_BUMPMAP\":\"\",a.normalMap?\"#define USE_NORMALMAP\":\"\",a.normalMap&&a.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",a.specularMap?\"#define USE_SPECULARMAP\":\"\",a.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",a.metalnessMap?\"#define USE_METALNESSMAP\":\"\",a.alphaMap?\"#define USE_ALPHAMAP\":\"\",a.vertexColors?\"#define USE_COLOR\":\"\",a.gradientMap?\"#define USE_GRADIENTMAP\":\"\",a.flatShading?\"#define FLAT_SHADED\":\"\",a.doubleSided?\"#define DOUBLE_SIDED\":\"\",a.flipSided?\"#define FLIP_SIDED\":\"\",a.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",a.shadowMapEnabled?\"#define \"+d:\"\",a.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",a.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",a.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get(\"EXT_frag_depth\"))?\"#define USE_LOGDEPTHBUF_EXT\":\"\",a.envMap&&(o.isWebGL2||e.get(\"EXT_shader_texture_lod\"))?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",a.toneMapping!==Y?\"#define TONE_MAPPING\":\"\",a.toneMapping!==Y?Fe.tonemapping_pars_fragment:\"\",a.toneMapping!==Y?function(t,e){var n;switch(e){case Z:n=\"Linear\";break;case J:n=\"Reinhard\";break;case Q:n=\"Uncharted2\";break;case K:n=\"OptimizedCineon\";break;default:throw new Error(\"unsupported toneMapping: \"+e)}return\"vec3 \"+t+\"( vec3 color ) { return \"+n+\"ToneMapping( color ); }\"}(\"toneMapping\",a.toneMapping):\"\",a.dithering?\"#define DITHERING\":\"\",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding?Fe.encodings_pars_fragment:\"\",a.mapEncoding?_r(\"mapTexelToLinear\",a.mapEncoding):\"\",a.matcapEncoding?_r(\"matcapTexelToLinear\",a.matcapEncoding):\"\",a.envMapEncoding?_r(\"envMapTexelToLinear\",a.envMapEncoding):\"\",a.emissiveMapEncoding?_r(\"emissiveMapTexelToLinear\",a.emissiveMapEncoding):\"\",a.outputEncoding?function(t,e){var n=br(e);return\"vec4 \"+t+\"( vec4 value ) { return LinearTo\"+n[0]+n[1]+\"; }\"}(\"linearToOutputTexel\",a.outputEncoding):\"\",a.depthPacking?\"#define DEPTH_PACKING \"+r.depthPacking:\"\",\"\\n\"].filter(wr).join(\"\\n\")),u=Er(u=Mr(u=Tr(u),a),a),p=Er(p=Mr(p=Tr(p),a),a),u=Sr(u),p=Sr(p),o.isWebGL2&&!r.isRawShaderMaterial){var M=!1,E=/^\\s*#version\\s+300\\s+es\\s*\\n/;r.isShaderMaterial&&null!==u.match(E)&&null!==p.match(E)&&(M=!0,u=u.replace(E,\"\"),p=p.replace(E,\"\")),v=[\"#version 300 es\\n\",\"#define attribute in\",\"#define varying out\",\"#define texture2D texture\"].join(\"\\n\")+\"\\n\"+v,y=[\"#version 300 es\\n\",\"#define varying in\",M?\"\":\"out highp vec4 pc_fragColor;\",M?\"\":\"#define gl_FragColor pc_fragColor\",\"#define gl_FragDepthEXT gl_FragDepth\",\"#define texture2D texture\",\"#define textureCube texture\",\"#define texture2DProj textureProj\",\"#define texture2DLodEXT textureLod\",\"#define texture2DProjLodEXT textureProjLod\",\"#define textureCubeLodEXT textureLod\",\"#define texture2DGradEXT textureGrad\",\"#define texture2DProjGradEXT textureProjGrad\",\"#define textureCubeGradEXT textureGrad\"].join(\"\\n\")+\"\\n\"+y}var T=v+u,S=y+p,A=yr(h,h.VERTEX_SHADER,T),L=yr(h,h.FRAGMENT_SHADER,S);h.attachShader(w,A),h.attachShader(w,L),void 0!==r.index0AttributeName?h.bindAttribLocation(w,0,r.index0AttributeName):!0===a.morphTargets&&h.bindAttribLocation(w,0,\"position\"),h.linkProgram(w);var R,P,C=h.getProgramInfoLog(w).trim(),O=h.getShaderInfoLog(A).trim(),I=h.getShaderInfoLog(L).trim(),N=!0,D=!0;return!1===h.getProgramParameter(w,h.LINK_STATUS)?(N=!1,console.error(\"THREE.WebGLProgram: shader error: \",h.getError(),\"gl.VALIDATE_STATUS\",h.getProgramParameter(w,h.VALIDATE_STATUS),\"gl.getProgramInfoLog\",C,O,I)):\"\"!==C?console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",C):\"\"!==O&&\"\"!==I||(D=!1),D&&(this.diagnostics={runnable:N,material:r,programLog:C,vertexShader:{log:O,prefix:v},fragmentShader:{log:I,prefix:y}}),h.deleteShader(A),h.deleteShader(L),this.getUniforms=function(){return void 0===R&&(R=new vr(h,w,t)),R},this.getAttributes=function(){return void 0===P&&(P=function(t,e){for(var n={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),i=0;i<r;i++){var a=t.getActiveAttrib(e,i).name;n[a]=t.getAttribLocation(e,a)}return n}(h,w)),P},this.destroy=function(){h.deleteProgram(w),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\"),this.getUniforms()}},attributes:{get:function(){return console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\"),this.getAttributes()}}}),this.name=i.name,this.id=xr++,this.code=n,this.usedTimes=1,this.program=w,this.vertexShader=A,this.fragmentShader=L,this}function Lr(t,e,n){var r=[],i={MeshDepthMaterial:\"depth\",MeshDistanceMaterial:\"distanceRGBA\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshToonMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",MeshMatcapMaterial:\"matcap\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\",ShadowMaterial:\"shadow\",SpriteMaterial:\"sprite\"},a=[\"precision\",\"supportsVertexTextures\",\"map\",\"mapEncoding\",\"matcapEncoding\",\"envMap\",\"envMapMode\",\"envMapEncoding\",\"lightMap\",\"aoMap\",\"emissiveMap\",\"emissiveMapEncoding\",\"bumpMap\",\"normalMap\",\"objectSpaceNormalMap\",\"displacementMap\",\"specularMap\",\"roughnessMap\",\"metalnessMap\",\"gradientMap\",\"alphaMap\",\"combine\",\"vertexColors\",\"fog\",\"useFog\",\"fogExp\",\"flatShading\",\"sizeAttenuation\",\"logarithmicDepthBuffer\",\"skinning\",\"maxBones\",\"useVertexTexture\",\"morphTargets\",\"morphNormals\",\"maxMorphTargets\",\"maxMorphNormals\",\"premultipliedAlpha\",\"numDirLights\",\"numPointLights\",\"numSpotLights\",\"numHemiLights\",\"numRectAreaLights\",\"shadowMapEnabled\",\"shadowMapType\",\"toneMapping\",\"physicallyCorrectLights\",\"alphaTest\",\"doubleSided\",\"flipSided\",\"numClippingPlanes\",\"numClipIntersection\",\"depthPacking\",\"dithering\"];function o(t,e){var n;return t?t.isTexture?n=t.encoding:t.isWebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),n=t.texture.encoding):n=le,n===le&&e&&(n=pe),n}this.getParameters=function(e,r,a,s,c,h,p){var d=i[e.type],f=p.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(n.floatVertexTextures)return 1024;var r=n.maxVertexUniforms,i=Math.floor((r-20)/4),a=Math.min(i,e.length);return a<e.length?(console.warn(\"THREE.WebGLRenderer: Skeleton has \"+e.length+\" bones. This GPU supports \"+a+\".\"),0):a}(p):0,m=n.precision;null!==e.precision&&(m=n.getMaxPrecision(e.precision))!==e.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",e.precision,\"not supported, using\",m,\"instead.\");var g=t.getRenderTarget();return{shaderID:d,precision:m,supportsVertexTextures:n.vertexTextures,outputEncoding:o(g?g.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:o(e.map,t.gammaInput),matcap:!!e.matcap,matcapEncoding:o(e.matcap,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:o(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===it||e.envMap.mapping===at),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:o(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===be,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:e.skinning&&f>0,maxBones:f,useVertexTexture:n.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:c,numClipIntersection:h,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.receiveShadow&&a.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===u,flipSided:e.side===l,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,n){var r=[];if(n.shaderID?r.push(n.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var i in e.defines)r.push(i),r.push(e.defines[i]);for(var o=0;o<a.length;o++)r.push(n[a[o]]);return r.push(e.onBeforeCompile.toString()),r.push(t.gammaOutput),r.join()},this.acquireProgram=function(i,a,o,s){for(var c,h=0,l=r.length;h<l;h++){var u=r[h];if(u.code===s){++(c=u).usedTimes;break}}return void 0===c&&(c=new Ar(t,e,s,i,a,o,n),r.push(c)),c},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r}function Rr(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Pr(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Cr(){var t={};return{get:function(e,n){var r=e.id+\",\"+n.id,i=t[r];return void 0===i&&(i=new function(){var t=[],e=0,n=[],r=[];return{opaque:n,transparent:r,init:function(){e=0,n.length=0,r.length=0},push:function(i,a,o,s,c){var h=t[e];void 0===h?(h={id:i.id,object:i,geometry:a,material:o,program:o.program,renderOrder:i.renderOrder,z:s,group:c},t[e]=h):(h.id=i.id,h.object=i,h.geometry=a,h.material=o,h.program=o.program,h.renderOrder=i.renderOrder,h.z=s,h.group=c),(!0===o.transparent?r:n).push(h),e++},sort:function(){n.length>1&&n.sort(Rr),r.length>1&&r.sort(Pr)}}},t[r]=i),i},dispose:function(){t={}}}}var Or,Ir=0;function Nr(){var t=new function(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var n;switch(e.type){case\"DirectionalLight\":n={direction:new Te,color:new Ge,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new we};break;case\"SpotLight\":n={position:new Te,direction:new Te,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new we};break;case\"PointLight\":n={position:new Te,color:new Ge,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new we,shadowCameraNear:1,shadowCameraFar:1e3};break;case\"HemisphereLight\":n={direction:new Te,skyColor:new Ge,groundColor:new Ge};break;case\"RectAreaLight\":n={color:new Ge,position:new Te,halfWidth:new Te,halfHeight:new Te}}return t[e.id]=n,n}}},e={id:Ir++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new Te,r=new Me,i=new Me;return{setup:function(a,o,s){for(var c=0,h=0,l=0,u=0,p=0,d=0,f=0,m=0,g=s.matrixWorldInverse,v=0,y=a.length;v<y;v++){var x=a[v],b=x.color,_=x.intensity,w=x.distance,M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,h+=b.g*_,l+=b.b*_;else if(x.isDirectionalLight){if((T=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(n),T.direction.transformDirection(g),T.shadow=x.castShadow,x.castShadow){var E=x.shadow;T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize}e.directionalShadowMap[u]=M,e.directionalShadowMatrix[u]=x.shadow.matrix,e.directional[u]=T,u++}else if(x.isSpotLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(b).multiplyScalar(_),T.distance=w,T.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(n),T.direction.transformDirection(g),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),e.spotShadowMap[d]=M,e.spotShadowMatrix[d]=x.shadow.matrix,e.spot[d]=T,d++;else if(x.isRectAreaLight)(T=t.get(x)).color.copy(b).multiplyScalar(_),T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),i.identity(),r.copy(x.matrixWorld),r.premultiply(g),i.extractRotation(r),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(i),T.halfHeight.applyMatrix4(i),e.rectArea[f]=T,f++;else if(x.isPointLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize,T.shadowCameraNear=E.camera.near,T.shadowCameraFar=E.camera.far),e.pointShadowMap[p]=M,e.pointShadowMatrix[p]=x.shadow.matrix,e.point[p]=T,p++;else if(x.isHemisphereLight){var T;(T=t.get(x)).direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(g),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(_),T.groundColor.copy(x.groundColor).multiplyScalar(_),e.hemi[m]=T,m++}}e.ambient[0]=c,e.ambient[1]=h,e.ambient[2]=l,e.directional.length=u,e.spot.length=d,e.rectArea.length=f,e.point.length=p,e.hemi.length=m,e.hash.stateID=e.id,e.hash.directionalLength=u,e.hash.pointLength=p,e.hash.spotLength=d,e.hash.rectAreaLength=f,e.hash.hemiLength=m,e.hash.shadowsLength=o.length},state:e}}function Dr(){var t=new Nr,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(r){t.setup(e,n,r)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function Ur(t){xn.call(this),this.type=\"MeshDepthMaterial\",this.depthPacking=ve,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function Br(t){xn.call(this),this.type=\"MeshDistanceMaterial\",this.referencePosition=new Te,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}function Fr(t,e,n){for(var r=new Be,i=new Me,a=new we,o=new we(n,n),c=new Te,p=new Te,d=1,f=2,m=1+(d|f),g=new Array(m),v=new Array(m),y={},x={0:l,1:h,2:u},b=[new Te(1,0,0),new Te(-1,0,0),new Te(0,0,1),new Te(0,0,-1),new Te(0,1,0),new Te(0,-1,0)],_=[new Te(0,1,0),new Te(0,1,0),new Te(0,1,0),new Te(0,1,0),new Te(0,0,1),new Te(0,0,-1)],w=[new Pe,new Pe,new Pe,new Pe,new Pe,new Pe],M=0;M!==m;++M){var E=0!=(M&d),T=0!=(M&f),S=new Ur({depthPacking:ye,morphTargets:E,skinning:T});g[M]=S;var A=new Br({morphTargets:E,skinning:T});v[M]=A}var L=this;function R(e,n,r,i,a,o){var s=e.geometry,c=null,h=g,l=e.customDepthMaterial;if(r&&(h=v,l=e.customDistanceMaterial),l)c=l;else{var u=!1;n.morphTargets&&(s&&s.isBufferGeometry?u=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(u=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&!1===n.skinning&&console.warn(\"THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:\",e);var p=e.isSkinnedMesh&&n.skinning,m=0;u&&(m|=d),p&&(m|=f),c=h[m]}if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var b=c.uuid,_=n.uuid,w=y[b];void 0===w&&(w={},y[b]=w);var M=w[_];void 0===M&&(M=c.clone(),w[_]=M),c=M}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=null!=n.shadowSide?n.shadowSide:x[n.side],c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,r&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(i),c.nearDistance=a,c.farDistance=o),c}function P(n,i,a,o){if(!1!==n.visible){if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&n.castShadow&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var s=e.update(n),c=n.material;if(Array.isArray(c))for(var h=s.groups,l=0,u=h.length;l<u;l++){var d=h[l],f=c[d.materialIndex];if(f&&f.visible){var m=R(n,f,o,p,a.near,a.far);t.renderBufferDirect(a,null,s,m,n,d)}}else if(c.visible){m=R(n,c,o,p,a.near,a.far);t.renderBufferDirect(a,null,s,m,n,null)}}for(var g=n.children,v=0,y=g.length;v<y;v++)P(g[v],i,a,o)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s,this.render=function(e,n,s){if(!1!==L.enabled&&(!1!==L.autoUpdate||!1!==L.needsUpdate)&&0!==e.length){var h,l=t.context,u=t.state;u.disable(l.BLEND),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);for(var d=0,f=e.length;d<f;d++){var m=e[d],g=m.shadow,v=m&&m.isPointLight;if(void 0!==g){var y=g.camera;if(a.copy(g.mapSize),a.min(o),v){var x=a.x,M=a.y;w[0].set(2*x,M,x,M),w[1].set(0,M,x,M),w[2].set(3*x,M,x,M),w[3].set(x,M,x,M),w[4].set(3*x,0,x,M),w[5].set(x,0,x,M),a.x*=4,a.y*=2}if(null===g.map){var E={minFilter:ht,magFilter:ht,format:Rt};g.map=new Ce(a.x,a.y,E),g.map.texture.name=m.name+\".shadowMap\",y.updateProjectionMatrix()}g.isSpotLightShadow&&g.update(m);var T=g.map,S=g.matrix;p.setFromMatrixPosition(m.matrixWorld),y.position.copy(p),v?(h=6,S.makeTranslation(-p.x,-p.y,-p.z)):(h=1,c.setFromMatrixPosition(m.target.matrixWorld),y.lookAt(c),y.updateMatrixWorld(),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiply(y.projectionMatrix),S.multiply(y.matrixWorldInverse)),t.setRenderTarget(T),t.clear();for(var A=0;A<h;A++){if(v){c.copy(y.position),c.add(b[A]),y.up.copy(_[A]),y.lookAt(c),y.updateMatrixWorld();var R=w[A];u.viewport(R)}i.multiplyMatrices(y.projectionMatrix,y.matrixWorldInverse),r.setFromMatrix(i),P(n,s,y,v)}}else console.warn(\"THREE.WebGLShadowMap:\",m,\"has no shadow.\")}L.needsUpdate=!1}}}function zr(t,e,n,r,i,a,o){var s,c={};function h(t,e){if(t.width>e||t.height>e){if(\"data\"in t)return void console.warn(\"THREE.WebGLRenderer: image in DataTexture is too big (\"+t.width+\"x\"+t.height+\").\");var n=e/Math.max(t.width,t.height),r=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");return r.width=Math.floor(t.width*n),r.height=Math.floor(t.height*n),r.getContext(\"2d\").drawImage(t,0,0,t.width,t.height,0,0,r.width,r.height),console.warn(\"THREE.WebGLRenderer: image is too big (\"+t.width+\"x\"+t.height+\"). Resized to \"+r.width+\"x\"+r.height),r}return t}function l(t){return _e.isPowerOfTwo(t.width)&&_e.isPowerOfTwo(t.height)}function u(t,e){return t.generateMipmaps&&e&&t.minFilter!==ht&&t.minFilter!==pt}function p(e,n,i,a){t.generateMipmap(e),r.get(n).__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function d(e,n){if(!i.isWebGL2)return e;if(e===t.RED){if(n===t.FLOAT)return t.R32F;if(n===t.HALF_FLOAT)return t.R16F;if(n===t.UNSIGNED_BYTE)return t.R8}if(e===t.RGB){if(n===t.FLOAT)return t.RGB32F;if(n===t.HALF_FLOAT)return t.RGB16F;if(n===t.UNSIGNED_BYTE)return t.RGB8}if(e===t.RGBA){if(n===t.FLOAT)return t.RGBA32F;if(n===t.HALF_FLOAT)return t.RGBA16F;if(n===t.UNSIGNED_BYTE)return t.RGBA8}return e}function f(e){return e===ht||e===lt||e===ut?t.NEAREST:t.LINEAR}function m(e){var n=e.target;n.removeEventListener(\"dispose\",m),function(e){var n=r.get(e);if(e.image&&n.__image__webglTextureCube)t.deleteTexture(n.__image__webglTextureCube);else{if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture)}r.remove(e)}(n),n.isVideoTexture&&delete c[n.id],o.memory.textures--}function g(e){var n=e.target;n.removeEventListener(\"dispose\",g),function(e){var n=r.get(e),i=r.get(e.texture);if(!e)return;void 0!==i.__webglTexture&&t.deleteTexture(i.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(n.__webglFramebuffer[a]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[a]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer);r.remove(e.texture),r.remove(e)}(n),o.memory.textures--}function v(e,i){var a=r.get(e);if(e.isVideoTexture&&function(t){var e=t.id,n=o.render.frame;c[e]!==n&&(c[e]=n,t.update())}(e),e.version>0&&a.__version!==e.version){var s=e.image;if(void 0===s)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\");else{if(!1!==s.complete)return void x(a,e,i);console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\")}}n.activeTexture(t.TEXTURE0+i),n.bindTexture(t.TEXTURE_2D,a.__webglTexture)}function y(n,o,s){var c;if(s?(t.texParameteri(n,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(n,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(n,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS===st&&o.wrapT===st||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\"),t.texParameteri(n,t.TEXTURE_MAG_FILTER,f(o.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,f(o.minFilter)),o.minFilter!==ht&&o.minFilter!==pt&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\")),c=e.get(\"EXT_texture_filter_anisotropic\")){if(o.type===_t&&null===e.get(\"OES_texture_float_linear\"))return;if(o.type===wt&&null===(i.isWebGL2||e.get(\"OES_texture_half_float_linear\")))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function x(e,r,c){var f;f=r.isDataTexture3D?t.TEXTURE_3D:t.TEXTURE_2D,void 0===e.__webglInit&&(e.__webglInit=!0,r.addEventListener(\"dispose\",m),e.__webglTexture=t.createTexture(),o.memory.textures++),n.activeTexture(t.TEXTURE0+c),n.bindTexture(f,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,r.unpackAlignment);var g=h(r.image,i.maxTextureSize);(function(t){return!i.isWebGL2&&(t.wrapS!==st||t.wrapT!==st||t.minFilter!==ht&&t.minFilter!==pt)})(r)&&!1===l(g)&&(g=function(t){return t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageBitmap?(void 0===s&&(s=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\")),s.width=_e.floorPowerOfTwo(t.width),s.height=_e.floorPowerOfTwo(t.height),s.getContext(\"2d\").drawImage(t,0,0,s.width,s.height),console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+t.width+\"x\"+t.height+\"). Resized to \"+s.width+\"x\"+s.height),s):t}(g));var v=l(g),x=a.convert(r.format),b=a.convert(r.type),_=d(x,b);y(f,r,v);var w,M=r.mipmaps;if(r.isDepthTexture){if(_=t.DEPTH_COMPONENT,r.type===_t){if(!i.isWebGL2)throw new Error(\"Float Depth Texture only supported in WebGL2.0\");_=t.DEPTH_COMPONENT32F}else i.isWebGL2&&(_=t.DEPTH_COMPONENT16);r.format===It&&_===t.DEPTH_COMPONENT&&r.type!==yt&&r.type!==bt&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"),r.type=yt,b=a.convert(r.type)),r.format===Nt&&(_=t.DEPTH_STENCIL,r.type!==St&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"),r.type=St,b=a.convert(r.type))),n.texImage2D(t.TEXTURE_2D,0,_,g.width,g.height,0,x,b,null)}else if(r.isDataTexture)if(M.length>0&&v){for(var E=0,T=M.length;E<T;E++)w=M[E],n.texImage2D(t.TEXTURE_2D,E,_,w.width,w.height,0,x,b,w.data);r.generateMipmaps=!1,e.__maxMipLevel=M.length-1}else n.texImage2D(t.TEXTURE_2D,0,_,g.width,g.height,0,x,b,g.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(E=0,T=M.length;E<T;E++)w=M[E],r.format!==Rt&&r.format!==Lt?n.getCompressedTextureFormats().indexOf(x)>-1?n.compressedTexImage2D(t.TEXTURE_2D,E,_,w.width,w.height,0,w.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):n.texImage2D(t.TEXTURE_2D,E,_,w.width,w.height,0,x,b,w.data);e.__maxMipLevel=M.length-1}else if(r.isDataTexture3D)n.texImage3D(t.TEXTURE_3D,0,_,g.width,g.height,g.depth,0,x,b,g.data),e.__maxMipLevel=0;else if(M.length>0&&v){for(E=0,T=M.length;E<T;E++)w=M[E],n.texImage2D(t.TEXTURE_2D,E,_,x,b,w);r.generateMipmaps=!1,e.__maxMipLevel=M.length-1}else n.texImage2D(t.TEXTURE_2D,0,_,x,b,g),e.__maxMipLevel=0;u(r,v)&&p(t.TEXTURE_2D,r,g.width,g.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function b(e,i,o,s){var c=a.convert(i.texture.format),h=a.convert(i.texture.type),l=d(c,h);n.texImage2D(s,0,l,i.width,i.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,r.get(i.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function _(e,n){t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):n.depthBuffer&&n.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,n.width,n.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function w(e){var n=r.get(e),i=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(i)throw new Error(\"target.depthTexture not supported in Cube render targets\");!function(e,n){if(n&&n.isWebGLRenderTargetCube)throw new Error(\"Depth Texture with cube render targets is not supported\");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),v(n.depthTexture,0);var i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===It)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,i,0);else{if(n.depthTexture.format!==Nt)throw new Error(\"Unknown depthTexture format\");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,i,0)}}(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=t.createRenderbuffer(),_(n.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),_(n.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}this.setTexture2D=v,this.setTexture3D=function(e,i){var a=r.get(e);e.version>0&&a.__version!==e.version?x(a,e,i):(n.activeTexture(t.TEXTURE0+i),n.bindTexture(t.TEXTURE_3D,a.__webglTexture))},this.setTextureCube=function(e,s){var c=r.get(e);if(6===e.image.length)if(e.version>0&&c.__version!==e.version){c.__image__webglTextureCube||(e.addEventListener(\"dispose\",m),c.__image__webglTextureCube=t.createTexture(),o.memory.textures++),n.activeTexture(t.TEXTURE0+s),n.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var f=e&&e.isCompressedTexture,g=e.image[0]&&e.image[0].isDataTexture,v=[],x=0;x<6;x++)v[x]=f||g?g?e.image[x].image:e.image[x]:h(e.image[x],i.maxCubemapSize);var b=v[0],_=l(b),w=a.convert(e.format),M=a.convert(e.type),E=d(w,M);for(y(t.TEXTURE_CUBE_MAP,e,_),x=0;x<6;x++)if(f)for(var T,S=v[x].mipmaps,A=0,L=S.length;A<L;A++)T=S[A],e.format!==Rt&&e.format!==Lt?n.getCompressedTextureFormats().indexOf(w)>-1?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+x,A,E,T.width,T.height,0,T.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+x,A,E,T.width,T.height,0,w,M,T.data);else g?n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+x,0,E,v[x].width,v[x].height,0,w,M,v[x].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+x,0,E,w,M,v[x]);c.__maxMipLevel=f?S.length-1:0,u(e,_)&&p(t.TEXTURE_CUBE_MAP,e,b.width,b.height),c.__version=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(t.TEXTURE0+s),n.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,i){n.activeTexture(t.TEXTURE0+i),n.bindTexture(t.TEXTURE_CUBE_MAP,r.get(e).__webglTexture)},this.setupRenderTarget=function(e){var i=r.get(e),a=r.get(e.texture);e.addEventListener(\"dispose\",g),a.__webglTexture=t.createTexture(),o.memory.textures++;var s=!0===e.isWebGLRenderTargetCube,c=l(e);if(s){i.__webglFramebuffer=[];for(var h=0;h<6;h++)i.__webglFramebuffer[h]=t.createFramebuffer()}else i.__webglFramebuffer=t.createFramebuffer();if(s){for(n.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),y(t.TEXTURE_CUBE_MAP,e.texture,c),h=0;h<6;h++)b(i.__webglFramebuffer[h],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+h);u(e.texture,c)&&p(t.TEXTURE_CUBE_MAP,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else n.bindTexture(t.TEXTURE_2D,a.__webglTexture),y(t.TEXTURE_2D,e.texture,c),b(i.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),u(e.texture,c)&&p(t.TEXTURE_2D,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&w(e)},this.updateRenderTargetMipmap=function(e){var i=e.texture;if(u(i,l(e))){var a=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=r.get(i).__webglTexture;n.bindTexture(a,o),p(a,i,e.width,e.height),n.bindTexture(a,null)}}}function Hr(t,e,n){return{convert:function(r){var i;if(r===ot)return t.REPEAT;if(r===st)return t.CLAMP_TO_EDGE;if(r===ct)return t.MIRRORED_REPEAT;if(r===ht)return t.NEAREST;if(r===lt)return t.NEAREST_MIPMAP_NEAREST;if(r===ut)return t.NEAREST_MIPMAP_LINEAR;if(r===pt)return t.LINEAR;if(r===dt)return t.LINEAR_MIPMAP_NEAREST;if(r===ft)return t.LINEAR_MIPMAP_LINEAR;if(r===mt)return t.UNSIGNED_BYTE;if(r===Mt)return t.UNSIGNED_SHORT_4_4_4_4;if(r===Et)return t.UNSIGNED_SHORT_5_5_5_1;if(r===Tt)return t.UNSIGNED_SHORT_5_6_5;if(r===gt)return t.BYTE;if(r===vt)return t.SHORT;if(r===yt)return t.UNSIGNED_SHORT;if(r===xt)return t.INT;if(r===bt)return t.UNSIGNED_INT;if(r===_t)return t.FLOAT;if(r===wt){if(n.isWebGL2)return t.HALF_FLOAT;if(null!==(i=e.get(\"OES_texture_half_float\")))return i.HALF_FLOAT_OES}if(r===At)return t.ALPHA;if(r===Lt)return t.RGB;if(r===Rt)return t.RGBA;if(r===Pt)return t.LUMINANCE;if(r===Ct)return t.LUMINANCE_ALPHA;if(r===It)return t.DEPTH_COMPONENT;if(r===Nt)return t.DEPTH_STENCIL;if(r===Dt)return t.RED;if(r===_)return t.FUNC_ADD;if(r===w)return t.FUNC_SUBTRACT;if(r===M)return t.FUNC_REVERSE_SUBTRACT;if(r===S)return t.ZERO;if(r===A)return t.ONE;if(r===L)return t.SRC_COLOR;if(r===R)return t.ONE_MINUS_SRC_COLOR;if(r===P)return t.SRC_ALPHA;if(r===C)return t.ONE_MINUS_SRC_ALPHA;if(r===O)return t.DST_ALPHA;if(r===I)return t.ONE_MINUS_DST_ALPHA;if(r===N)return t.DST_COLOR;if(r===D)return t.ONE_MINUS_DST_COLOR;if(r===U)return t.SRC_ALPHA_SATURATE;if((r===Ut||r===Bt||r===Ft||r===zt)&&null!==(i=e.get(\"WEBGL_compressed_texture_s3tc\"))){if(r===Ut)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Bt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ft)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===zt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((r===Ht||r===Gt||r===Vt||r===kt)&&null!==(i=e.get(\"WEBGL_compressed_texture_pvrtc\"))){if(r===Ht)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Gt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Vt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===kt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(r===jt&&null!==(i=e.get(\"WEBGL_compressed_texture_etc1\")))return i.COMPRESSED_RGB_ETC1_WEBGL;if((r===Wt||r===Xt||r===qt||r===Yt||r===Zt||r===Jt||r===Qt||r===Kt||r===$t||r===te||r===ee||r===ne||r===re||r===ie)&&null!==(i=e.get(\"WEBGL_compressed_texture_astc\")))return r;if(r===E||r===T){if(n.isWebGL2){if(r===E)return t.MIN;if(r===T)return t.MAX}if(null!==(i=e.get(\"EXT_blend_minmax\"))){if(r===E)return i.MIN_EXT;if(r===T)return i.MAX_EXT}}if(r===St){if(n.isWebGL2)return t.UNSIGNED_INT_24_8;if(null!==(i=e.get(\"WEBGL_depth_texture\")))return i.UNSIGNED_INT_24_8_WEBGL}return 0}}}function Gr(){Je.call(this),this.type=\"Group\"}function Vr(){Je.call(this),this.type=\"Camera\",this.matrixWorldInverse=new Me,this.projectionMatrix=new Me,this.projectionMatrixInverse=new Me}function kr(t,e,n,r){Vr.call(this),this.type=\"PerspectiveCamera\",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function jr(t){kr.call(this),this.cameras=t||[]}function Wr(t){var e=this,n=null,r=null,i=null,a=[],o=new Me,s=new Me,c=\"stage\";\"undefined\"!=typeof window&&\"VRFrameData\"in window&&(r=new window.VRFrameData,window.addEventListener(\"vrdisplaypresentchange\",y,!1));var h=new Me,l=new Ee,u=new Te,p=new kr;p.bounds=new Pe(0,0,.5,1),p.layers.enable(1);var d=new kr;d.bounds=new Pe(.5,0,.5,1),d.layers.enable(2);var f,m,g=new jr([p,d]);function v(){return null!==n&&!0===n.isPresenting}function y(){if(v()){var r=n.getEyeParameters(\"left\"),i=r.renderWidth,a=r.renderHeight;m=t.getPixelRatio(),f=t.getSize(),t.setDrawingBufferSize(2*i,a,1),_.start()}else e.enabled&&t.setDrawingBufferSize(f.width,f.height,m),_.stop()}g.layers.enable(1),g.layers.enable(2);var x=[];function b(t){for(var e=navigator.getGamepads&&navigator.getGamepads(),n=0,r=0,i=e.length;n<i;n++){var a=e[n];if(a&&(\"Daydream Controller\"===a.id||\"Gear VR Controller\"===a.id||\"Oculus Go Controller\"===a.id||\"OpenVR Gamepad\"===a.id||a.id.startsWith(\"Oculus Touch\")||a.id.startsWith(\"Spatial Controller\"))){if(r===t)return a;r++}}}this.enabled=!1,this.getController=function(t){var e=a[t];return void 0===e&&((e=new Gr).matrixAutoUpdate=!1,e.visible=!1,a[t]=e),e},this.getDevice=function(){return n},this.setDevice=function(t){void 0!==t&&(n=t),_.setContext(t)},this.setFrameOfReferenceType=function(t){c=t},this.setPoseTarget=function(t){void 0!==t&&(i=t)},this.getCamera=function(t){var e=\"stage\"===c?1.6:0;if(null===n)return t.position.set(0,e,0),t;if(n.depthNear=t.near,n.depthFar=t.far,n.getFrameData(r),\"stage\"===c){var f=n.stageParameters;f?o.fromArray(f.sittingToStandingTransform):o.makeTranslation(0,e,0)}var m=r.pose,v=null!==i?i:t;if(v.matrix.copy(o),v.matrix.decompose(v.position,v.quaternion,v.scale),null!==m.orientation&&(l.fromArray(m.orientation),v.quaternion.multiply(l)),null!==m.position&&(l.setFromRotationMatrix(o),u.fromArray(m.position),u.applyQuaternion(l),v.position.add(u)),v.updateMatrixWorld(),!1===n.isPresenting)return t;p.near=t.near,d.near=t.near,p.far=t.far,d.far=t.far,g.matrixWorld.copy(t.matrixWorld),g.matrixWorldInverse.copy(t.matrixWorldInverse),p.matrixWorldInverse.fromArray(r.leftViewMatrix),d.matrixWorldInverse.fromArray(r.rightViewMatrix),s.getInverse(o),\"stage\"===c&&(p.matrixWorldInverse.multiply(s),d.matrixWorldInverse.multiply(s));var y=v.parent;null!==y&&(h.getInverse(y.matrixWorld),p.matrixWorldInverse.multiply(h),d.matrixWorldInverse.multiply(h)),p.matrixWorld.getInverse(p.matrixWorldInverse),d.matrixWorld.getInverse(d.matrixWorldInverse),p.projectionMatrix.fromArray(r.leftProjectionMatrix),d.projectionMatrix.fromArray(r.rightProjectionMatrix),g.projectionMatrix.copy(p.projectionMatrix);var _=n.getLayers();if(_.length){var w=_[0];null!==w.leftBounds&&4===w.leftBounds.length&&p.bounds.fromArray(w.leftBounds),null!==w.rightBounds&&4===w.rightBounds.length&&d.bounds.fromArray(w.rightBounds)}return function(){for(var t=0;t<a.length;t++){var e=a[t],n=b(t);if(void 0!==n&&void 0!==n.pose){if(null===n.pose)return;var r=n.pose;!1===r.hasPosition&&e.position.set(.2,-.6,-.05),null!==r.position&&e.position.fromArray(r.position),null!==r.orientation&&e.quaternion.fromArray(r.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(o),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var i=\"Daydream Controller\"===n.id?0:1;x[t]!==n.buttons[i].pressed&&(x[t]=n.buttons[i].pressed,!0===x[t]?e.dispatchEvent({type:\"selectstart\"}):(e.dispatchEvent({type:\"selectend\"}),e.dispatchEvent({type:\"select\"})))}else e.visible=!1}}(),g},this.getStandingMatrix=function(){return o},this.isPresenting=v;var _=new je;this.setAnimationLoop=function(t){_.setAnimationLoop(t)},this.submitFrame=function(){v()&&n.submitFrame()},this.dispose=function(){\"undefined\"!=typeof window&&window.removeEventListener(\"vrdisplaypresentchange\",y)}}function Xr(t){console.log(\"THREE.WebGLRenderer\",n);var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),o=void 0!==t.context?t.context:null,s=void 0!==t.alpha&&t.alpha,c=void 0===t.depth||t.depth,p=void 0===t.stencil||t.stencil,d=void 0!==t.antialias&&t.antialias,f=void 0===t.premultipliedAlpha||t.premultipliedAlpha,w=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,M=void 0!==t.powerPreference?t.powerPreference:\"default\",E=null,T=null;this.domElement=e,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var S,A,L,R,P,C,O,I,N,D,U,W,X,q,Y,J,Q,K,$=this,tt=!1,et=null,nt=null,rt=null,it=-1,at={geometry:null,program:null,wireframe:!1},ot=null,st=null,ct=new Pe,ht=new Pe,lt=null,ut=0,pt=e.width,dt=e.height,ft=1,gt=new Pe(0,0,pt,dt),vt=new Pe(0,0,pt,dt),yt=!1,xt=new Be,bt=new function(){var t=this,e=null,n=0,r=!1,i=!1,a=new Ue,o=new Se,s={value:null,needsUpdate:!1};function c(){s.value!==e&&(s.value=e,s.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(e,n,r,i){var c=null!==e?e.length:0,h=null;if(0!==c){if(h=s.value,!0!==i||null===h){var l=r+4*c,u=n.matrixWorldInverse;o.getNormalMatrix(u),(null===h||h.length<l)&&(h=new Float32Array(l));for(var p=0,d=r;p!==c;++p,d+=4)a.copy(e[p]).applyMatrix4(u,o),a.normal.toArray(h,d),h[d+3]=a.constant}s.value=h,s.needsUpdate=!0}return t.numPlanes=c,h}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,a){var o=0!==t.length||i||0!==n||r;return r=i,e=h(t,a,0),n=t.length,o},this.beginShadows=function(){i=!0,h(null)},this.endShadows=function(){i=!1,c()},this.setState=function(t,a,o,l,u,p){if(!r||null===t||0===t.length||i&&!o)i?h(null):c();else{var d=i?0:n,f=4*d,m=u.clippingState||null;s.value=m,m=h(t,l,f,p);for(var g=0;g!==f;++g)m[g]=e[g];u.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=d}}},Mt=!1,Et=!1,Tt=new Me,St=new Te;function At(){return null===nt?ft:1}try{var Lt={alpha:s,depth:c,stencil:p,antialias:d,premultipliedAlpha:f,preserveDrawingBuffer:w,powerPreference:M};if(e.addEventListener(\"webglcontextlost\",It,!1),e.addEventListener(\"webglcontextrestored\",Nt,!1),null===(S=o||e.getContext(\"webgl\",Lt)||e.getContext(\"experimental-webgl\",Lt)))throw null!==e.getContext(\"webgl\")?new Error(\"Error creating WebGL context with your selected attributes.\"):new Error(\"Error creating WebGL context.\");void 0===S.getShaderPrecisionFormat&&(S.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){console.error(\"THREE.WebGLRenderer: \"+t.message)}function Pt(){A=new function(t){var e={};return{get:function(n){if(void 0!==e[n])return e[n];var r;switch(n){case\"WEBGL_depth_texture\":r=t.getExtension(\"WEBGL_depth_texture\")||t.getExtension(\"MOZ_WEBGL_depth_texture\")||t.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case\"EXT_texture_filter_anisotropic\":r=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case\"WEBGL_compressed_texture_s3tc\":r=t.getExtension(\"WEBGL_compressed_texture_s3tc\")||t.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||t.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case\"WEBGL_compressed_texture_pvrtc\":r=t.getExtension(\"WEBGL_compressed_texture_pvrtc\")||t.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:r=t.getExtension(n)}return null===r&&console.warn(\"THREE.WebGLRenderer: \"+n+\" extension not supported.\"),e[n]=r,r}}}(S),(L=new function(t,e,n){var r;function i(e){if(\"highp\"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return\"highp\";e=\"mediump\"}return\"mediump\"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?\"mediump\":\"lowp\"}var a=\"undefined\"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext,o=void 0!==n.precision?n.precision:\"highp\",s=i(o);s!==o&&(console.warn(\"THREE.WebGLRenderer:\",o,\"not supported, using\",s,\"instead.\"),o=s);var c=!0===n.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=l>0,y=a||!!e.get(\"OES_texture_float\");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;var n=e.get(\"EXT_texture_filter_anisotropic\");return r=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:l,maxTextureSize:u,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y}}(S,A,t)).isWebGL2||(A.get(\"WEBGL_depth_texture\"),A.get(\"OES_texture_float\"),A.get(\"OES_texture_half_float\"),A.get(\"OES_texture_half_float_linear\"),A.get(\"OES_standard_derivatives\"),A.get(\"OES_element_index_uint\"),A.get(\"ANGLE_instanced_arrays\")),A.get(\"OES_texture_float_linear\"),K=new Hr(S,A,L),(R=new function(t,e,n,o){var s=new function(){var e=!1,n=new Pe,r=null,i=new Pe(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,a,o,s){!0===s&&(e*=o,r*=o,a*=o),n.set(e,r,a,o),!1===i.equals(n)&&(t.clearColor(e,r,a,o),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},c=new function(){var e=!1,n=null,r=null,i=null;return{setTest:function(e){e?at(t.DEPTH_TEST):ot(t.DEPTH_TEST)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case B:t.depthFunc(t.NEVER);break;case F:t.depthFunc(t.ALWAYS);break;case z:t.depthFunc(t.LESS);break;case H:t.depthFunc(t.LEQUAL);break;case G:t.depthFunc(t.EQUAL);break;case V:t.depthFunc(t.GEQUAL);break;case k:t.depthFunc(t.GREATER);break;case j:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},h=new function(){var e=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,h=null;return{setTest:function(e){e?at(t.STENCIL_TEST):ot(t.STENCIL_TEST)},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,o){r===e&&i===n&&a===o||(t.stencilFunc(e,n,o),r=e,i=n,a=o)},setOp:function(e,n,r){o===e&&s===n&&c===r||(t.stencilOp(e,n,r),o=e,s=n,c=r)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,h=null}}},p=t.getParameter(t.MAX_VERTEX_ATTRIBS),d=new Uint8Array(p),f=new Uint8Array(p),w=new Uint8Array(p),M={},E=null,T=null,S=null,A=null,L=null,R=null,P=null,C=null,O=null,I=null,N=!1,D=null,U=null,W=null,X=null,q=null,Y=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),Z=!1,J=0,Q=t.getParameter(t.VERSION);-1!==Q.indexOf(\"WebGL\")?(J=parseFloat(/^WebGL\\ ([0-9])/.exec(Q)[1]),Z=J>=1):-1!==Q.indexOf(\"OpenGL ES\")&&(J=parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(Q)[1]),Z=J>=2);var K=null,$={},tt=new Pe,et=new Pe;function nt(e,n,r){var i=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<r;o++)t.texImage2D(n+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,i);return a}var rt={};function it(n,r){d[n]=1,0===f[n]&&(t.enableVertexAttribArray(n),f[n]=1),w[n]!==r&&((o.isWebGL2?t:e.get(\"ANGLE_instanced_arrays\"))[o.isWebGL2?\"vertexAttribDivisor\":\"vertexAttribDivisorANGLE\"](n,r),w[n]=r)}function at(e){!0!==M[e]&&(t.enable(e),M[e]=!0)}function ot(e){!1!==M[e]&&(t.disable(e),M[e]=!1)}function st(e,r,i,a,o,s,c,h){if(e!==m){if(S||(at(t.BLEND),S=!0),e===b)o=o||r,s=s||i,c=c||a,r===L&&o===C||(t.blendEquationSeparate(n.convert(r),n.convert(o)),L=r,C=o),i===R&&a===P&&s===O&&c===I||(t.blendFuncSeparate(n.convert(i),n.convert(a),n.convert(s),n.convert(c)),R=i,P=a,O=s,I=c),A=e,N=null;else if(e!==A||h!==N){if(L===_&&C===_||(t.blendEquation(t.FUNC_ADD),L=_,C=_),h)switch(e){case g:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case v:t.blendFunc(t.ONE,t.ONE);break;case y:t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA);break;case x:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error(\"THREE.WebGLState: Invalid blending: \",e)}else switch(e){case g:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case v:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case y:t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR);break;case x:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error(\"THREE.WebGLState: Invalid blending: \",e)}R=null,P=null,O=null,I=null,A=e,N=h}}else S&&(ot(t.BLEND),S=!1)}function ct(e){D!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),D=e)}function ht(e){e!==r?(at(t.CULL_FACE),e!==U&&(e===i?t.cullFace(t.BACK):e===a?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):ot(t.CULL_FACE),U=e}function lt(e,n,r){e?(at(t.POLYGON_OFFSET_FILL),X===n&&q===r||(t.polygonOffset(n,r),X=n,q=r)):ot(t.POLYGON_OFFSET_FILL)}function ut(e){void 0===e&&(e=t.TEXTURE0+Y-1),K!==e&&(t.activeTexture(e),K=e)}return rt[t.TEXTURE_2D]=nt(t.TEXTURE_2D,t.TEXTURE_2D,1),rt[t.TEXTURE_CUBE_MAP]=nt(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),s.setClear(0,0,0,1),c.setClear(1),h.setClear(0),at(t.DEPTH_TEST),c.setFunc(H),ct(!1),ht(i),at(t.CULL_FACE),st(m),{buffers:{color:s,depth:c,stencil:h},initAttributes:function(){for(var t=0,e=d.length;t<e;t++)d[t]=0},enableAttribute:function(t){it(t,0)},enableAttributeAndDivisor:it,disableUnusedAttributes:function(){for(var e=0,n=f.length;e!==n;++e)f[e]!==d[e]&&(t.disableVertexAttribArray(e),f[e]=0)},enable:at,disable:ot,getCompressedTextureFormats:function(){if(null===E&&(E=[],e.get(\"WEBGL_compressed_texture_pvrtc\")||e.get(\"WEBGL_compressed_texture_s3tc\")||e.get(\"WEBGL_compressed_texture_etc1\")||e.get(\"WEBGL_compressed_texture_astc\")))for(var n=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)E.push(n[r]);return E},useProgram:function(e){return T!==e&&(t.useProgram(e),T=e,!0)},setBlending:st,setMaterial:function(e,n){e.side===u?ot(t.CULL_FACE):at(t.CULL_FACE);var r=e.side===l;n&&(r=!r),ct(r),e.blending===g&&!1===e.transparent?st(m):st(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),c.setFunc(e.depthFunc),c.setTest(e.depthTest),c.setMask(e.depthWrite),s.setMask(e.colorWrite),lt(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:ct,setCullFace:ht,setLineWidth:function(e){e!==W&&(Z&&t.lineWidth(e),W=e)},setPolygonOffset:lt,setScissorTest:function(e){e?at(t.SCISSOR_TEST):ot(t.SCISSOR_TEST)},activeTexture:ut,bindTexture:function(e,n){null===K&&ut();var r=$[K];void 0===r&&(r={type:void 0,texture:void 0},$[K]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||rt[e]),r.type=e,r.texture=n)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},scissor:function(e){!1===tt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),tt.copy(e))},viewport:function(e){!1===et.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),et.copy(e))},reset:function(){for(var e=0;e<f.length;e++)1===f[e]&&(t.disableVertexAttribArray(e),f[e]=0);M={},E=null,K=null,$={},T=null,A=null,D=null,U=null,s.reset(),c.reset(),h.reset()}}}(S,A,K,L)).scissor(ht.copy(vt).multiplyScalar(ft)),R.viewport(ct.copy(gt).multiplyScalar(ft)),P=new function(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,r,i){switch(i=i||1,e.calls++,r){case t.TRIANGLES:e.triangles+=i*(n/3);break;case t.TRIANGLE_STRIP:case t.TRIANGLE_FAN:e.triangles+=i*(n-2);break;case t.LINES:e.lines+=i*(n/2);break;case t.LINE_STRIP:e.lines+=i*(n-1);break;case t.LINE_LOOP:e.lines+=i*n;break;case t.POINTS:e.points+=i*n;break;default:console.error(\"THREE.WebGLInfo: Unknown draw mode:\",r)}}}}(S),C=new function(){var t=new WeakMap;return{get:function(e){var n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}},O=new zr(S,A,R,C,L,K,P),I=new We(S),N=new function(t,e,n){var r={},i={};function a(t){var o=t.target,s=r[o.id];for(var c in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[c]);o.removeEventListener(\"dispose\",a),delete r[o.id];var h=i[s.id];h&&(e.remove(h),delete i[s.id]),n.memory.geometries--}return{get:function(t,e){var i=r[e.id];return i||(e.addEventListener(\"dispose\",a),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new dn).setFromObject(t)),i=e._bufferGeometry),r[e.id]=i,n.memory.geometries++,i)},update:function(n){var r=n.index,i=n.attributes;for(var a in null!==r&&e.update(r,t.ELEMENT_ARRAY_BUFFER),i)e.update(i[a],t.ARRAY_BUFFER);var o=n.morphAttributes;for(var a in o)for(var s=o[a],c=0,h=s.length;c<h;c++)e.update(s[c],t.ARRAY_BUFFER)},getWireframeAttribute:function(n){var r=i[n.id];if(r)return r;var a,o=[],s=n.index,c=n.attributes;if(null!==s)for(var h=0,l=(a=s.array).length;h<l;h+=3){var u=a[h+0],p=a[h+1],d=a[h+2];o.push(u,p,p,d,d,u)}else for(h=0,l=(a=c.position.array).length/3-1;h<l;h+=3)u=h+0,p=h+1,d=h+2,o.push(u,p,p,d,d,u);return r=new(un(o)>65535?sn:an)(o,1),e.update(r,t.ELEMENT_ARRAY_BUFFER),i[n.id]=r,r}}}(S,I,P),D=new function(t,e){var n={};return{update:function(r){var i=e.render.frame,a=r.geometry,o=t.get(r,a);return n[o.id]!==i&&(a.isGeometry&&o.updateFromObject(r),t.update(o),n[o.id]=i),o},dispose:function(){n={}}}}(N,P),Y=new function(t){var e={},n=new Float32Array(8);return{update:function(r,i,a,o){var s=r.morphTargetInfluences,c=s.length,h=e[i.id];if(void 0===h){h=[];for(var l=0;l<c;l++)h[l]=[l,0];e[i.id]=h}var u=a.morphTargets&&i.morphAttributes.position,p=a.morphNormals&&i.morphAttributes.normal;for(l=0;l<c;l++)0!==(d=h[l])[1]&&(u&&i.removeAttribute(\"morphTarget\"+l),p&&i.removeAttribute(\"morphNormal\"+l));for(l=0;l<c;l++)(d=h[l])[0]=l,d[1]=s[l];for(h.sort(Tn),l=0;l<8;l++){var d;if(d=h[l]){var f=d[0],m=d[1];if(m){u&&i.addAttribute(\"morphTarget\"+l,u[f]),p&&i.addAttribute(\"morphNormal\"+l,p[f]),n[l]=m;continue}}n[l]=0}o.getUniforms().setValue(t,\"morphTargetInfluences\",n)}}}(S),U=new Lr($,A,L),W=new Cr,X=new function(){var t={};return{get:function(e,n){var r;return void 0===t[e.id]?(r=new Dr,t[e.id]={},t[e.id][n.id]=r):void 0===t[e.id][n.id]?(r=new Dr,t[e.id][n.id]=r):r=t[e.id][n.id],r},dispose:function(){t={}}}},q=new function(t,e,n,r){var i,a,o=new Ge(0),s=0;function c(t,n){e.buffers.color.setClear(t.r,t.g,t.b,n,r)}return{getClearColor:function(){return o},setClearColor:function(t,e){o.set(t),c(o,s=void 0!==e?e:1)},getClearAlpha:function(){return s},setClearAlpha:function(t){c(o,s=t)},render:function(e,r,u,p){var d=r.background;null===d?c(o,s):d&&d.isColor&&(c(d,1),p=!0),(t.autoClear||p)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),d&&d.isCubeTexture?(void 0===a&&((a=new En(new mn(1,1,1),new bn({uniforms:ze.clone(ke.cube.uniforms),vertexShader:ke.cube.vertexShader,fragmentShader:ke.cube.fragmentShader,side:l,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute(\"normal\"),a.geometry.removeAttribute(\"uv\"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},n.update(a)),a.material.uniforms.tCube.value=d,e.push(a,a.geometry,a.material,0,null)):d&&d.isTexture&&(void 0===i&&((i=new En(new vn(2,2),new bn({uniforms:ze.clone(ke.background.uniforms),vertexShader:ke.background.vertexShader,fragmentShader:ke.background.fragmentShader,side:h,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute(\"normal\"),n.update(i)),i.material.uniforms.t2D.value=d,e.push(i,i.geometry,i.material,0,null))}}}($,R,D,f),J=new function(t,e,n,r){var i;this.setMode=function(t){i=t},this.render=function(e,r){t.drawArrays(i,e,r),n.update(r,i)},this.renderInstances=function(a,o,s){var c;if(r.isWebGL2)c=t;else if(null===(c=e.get(\"ANGLE_instanced_arrays\")))return void console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");c[r.isWebGL2?\"drawArraysInstanced\":\"drawArraysInstancedANGLE\"](i,o,s,a.maxInstancedCount),n.update(s,i,a.maxInstancedCount)}}(S,A,P,L),Q=new function(t,e,n,r){var i,a,o;this.setMode=function(t){i=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,r){t.drawElements(i,r,a,e*o),n.update(r,i)},this.renderInstances=function(s,c,h){var l;if(r.isWebGL2)l=t;else if(null===(l=e.get(\"ANGLE_instanced_arrays\")))return void console.error(\"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");l[r.isWebGL2?\"drawElementsInstanced\":\"drawElementsInstancedANGLE\"](i,h,a,c*o,s.maxInstancedCount),n.update(h,i,s.maxInstancedCount)}}(S,A,P,L),P.programs=U.programs,$.context=S,$.capabilities=L,$.extensions=A,$.properties=C,$.renderLists=W,$.state=R,$.info=P}Pt();var Ct=null;\"undefined\"!=typeof navigator&&(Ct=\"xr\"in navigator?new function(t){var e=t.context,n=null,r=null,i=null,a=\"stage\",o=null,s=[],c=[];function h(){return null!==r&&null!==i}var l=new kr;l.layers.enable(1),l.viewport=new Pe;var u=new kr;u.layers.enable(2),u.viewport=new Pe;var p=new jr([l,u]);function d(t){var e=s[c.indexOf(t.inputSource)];e&&e.dispatchEvent({type:t.type})}function f(){t.setFramebuffer(null),v.stop()}function m(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}p.layers.enable(1),p.layers.enable(2),this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new Gr).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.getDevice=function(){return n},this.setDevice=function(t){void 0!==t&&(n=t),t instanceof XRDevice&&e.setCompatibleXRDevice(t)},this.setFrameOfReferenceType=function(t){a=t},this.setSession=function(n){null!==(r=n)&&(r.addEventListener(\"select\",d),r.addEventListener(\"selectstart\",d),r.addEventListener(\"selectend\",d),r.addEventListener(\"end\",f),r.baseLayer=new XRWebGLLayer(r,e),r.requestFrameOfReference(a).then(function(e){i=e,t.setFramebuffer(r.baseLayer.framebuffer),v.setContext(r),v.start()}),c=r.getInputSources(),r.addEventListener(\"inputsourceschange\",function(){c=r.getInputSources(),console.log(c)}))},this.getCamera=function(t){if(h()){var e=t.parent,n=p.cameras;m(p,e);for(var r=0;r<n.length;r++)m(n[r],e);t.matrixWorld.copy(p.matrixWorld);for(var i=t.children,a=(r=0,i.length);r<a;r++)i[r].updateMatrixWorld(!0);return p}return t},this.isPresenting=h;var g=null,v=new je;v.setAnimationLoop(function(t,e){if(null!==(o=e.getDevicePose(i)))for(var n=r.baseLayer,a=e.views,h=0;h<a.length;h++){var l=a[h],u=n.getViewport(l),d=o.getViewMatrix(l),f=p.cameras[h];f.matrix.fromArray(d).getInverse(f.matrix),f.projectionMatrix.fromArray(l.projectionMatrix),f.viewport.set(u.x,u.y,u.width,u.height),0===h&&(p.matrix.copy(f.matrix),p.projectionMatrix.copy(f.projectionMatrix))}for(h=0;h<s.length;h++){var m=s[h],v=c[h];if(v){var y=e.getInputPose(v,i);if(null!==y){\"targetRay\"in y?m.matrix.elements=y.targetRay.transformMatrix:\"pointerMatrix\"in y&&(m.matrix.elements=y.pointerMatrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.visible=!0;continue}}m.visible=!1}g&&g(t)}),this.setAnimationLoop=function(t){g=t},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn(\"THREE.WebXRManager: getStandingMatrix() is no longer needed.\"),new THREE.Matrix4},this.submitFrame=function(){}}($):new Wr($)),this.vr=Ct;var Ot=new Fr($,D,L.maxTextureSize);function It(t){t.preventDefault(),console.log(\"THREE.WebGLRenderer: Context Lost.\"),tt=!0}function Nt(){console.log(\"THREE.WebGLRenderer: Context Restored.\"),tt=!1,Pt()}function Dt(t){var e=t.target;e.removeEventListener(\"dispose\",Dt),function(t){Ut(t),C.remove(t)}(e)}function Ut(t){var e=C.get(t).program;t.program=void 0,void 0!==e&&U.releaseProgram(e)}this.shadowMap=Ot,this.getContext=function(){return S},this.getContextAttributes=function(){return S.getContextAttributes()},this.forceContextLoss=function(){var t=A.get(\"WEBGL_lose_context\");t&&t.loseContext()},this.forceContextRestore=function(){var t=A.get(\"WEBGL_lose_context\");t&&t.restoreContext()},this.getPixelRatio=function(){return ft},this.setPixelRatio=function(t){void 0!==t&&(ft=t,this.setSize(pt,dt,!1))},this.getSize=function(){return{width:pt,height:dt}},this.setSize=function(t,n,r){Ct.isPresenting()?console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\"):(pt=t,dt=n,e.width=t*ft,e.height=n*ft,!1!==r&&(e.style.width=t+\"px\",e.style.height=n+\"px\"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(){return{width:pt*ft,height:dt*ft}},this.setDrawingBufferSize=function(t,n,r){pt=t,dt=n,ft=r,e.width=t*r,e.height=n*r,this.setViewport(0,0,t,n)},this.getCurrentViewport=function(){return ct},this.setViewport=function(t,e,n,r){gt.set(t,dt-e-r,n,r),R.viewport(ct.copy(gt).multiplyScalar(ft))},this.setScissor=function(t,e,n,r){vt.set(t,dt-e-r,n,r),R.scissor(ht.copy(vt).multiplyScalar(ft))},this.setScissorTest=function(t){R.setScissorTest(yt=t)},this.getClearColor=function(){return q.getClearColor()},this.setClearColor=function(){q.setClearColor.apply(q,arguments)},this.getClearAlpha=function(){return q.getClearAlpha()},this.setClearAlpha=function(){q.setClearAlpha.apply(q,arguments)},this.clear=function(t,e,n){var r=0;(void 0===t||t)&&(r|=S.COLOR_BUFFER_BIT),(void 0===e||e)&&(r|=S.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=S.STENCIL_BUFFER_BIT),S.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener(\"webglcontextlost\",It,!1),e.removeEventListener(\"webglcontextrestored\",Nt,!1),W.dispose(),X.dispose(),C.dispose(),D.dispose(),Ct.dispose(),Ft.stop()},this.renderBufferImmediate=function(t,e){R.initAttributes();var n=C.get(t);t.hasPositions&&!n.position&&(n.position=S.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=S.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=S.createBuffer()),t.hasColors&&!n.color&&(n.color=S.createBuffer());var r=e.getAttributes();t.hasPositions&&(S.bindBuffer(S.ARRAY_BUFFER,n.position),S.bufferData(S.ARRAY_BUFFER,t.positionArray,S.DYNAMIC_DRAW),R.enableAttribute(r.position),S.vertexAttribPointer(r.position,3,S.FLOAT,!1,0,0)),t.hasNormals&&(S.bindBuffer(S.ARRAY_BUFFER,n.normal),S.bufferData(S.ARRAY_BUFFER,t.normalArray,S.DYNAMIC_DRAW),R.enableAttribute(r.normal),S.vertexAttribPointer(r.normal,3,S.FLOAT,!1,0,0)),t.hasUvs&&(S.bindBuffer(S.ARRAY_BUFFER,n.uv),S.bufferData(S.ARRAY_BUFFER,t.uvArray,S.DYNAMIC_DRAW),R.enableAttribute(r.uv),S.vertexAttribPointer(r.uv,2,S.FLOAT,!1,0,0)),t.hasColors&&(S.bindBuffer(S.ARRAY_BUFFER,n.color),S.bufferData(S.ARRAY_BUFFER,t.colorArray,S.DYNAMIC_DRAW),R.enableAttribute(r.color),S.vertexAttribPointer(r.color,3,S.FLOAT,!1,0,0)),R.disableUnusedAttributes(),S.drawArrays(S.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,r,i,a){var o=i.isMesh&&i.normalMatrix.determinant()<0;R.setMaterial(r,o);var s=Vt(t,e,r,i),c=!1;at.geometry===n.id&&at.program===s.id&&at.wireframe===(!0===r.wireframe)||(at.geometry=n.id,at.program=s.id,at.wireframe=!0===r.wireframe,c=!0),i.morphTargetInfluences&&(Y.update(i,n,r,s),c=!0);var h,l=n.index,u=n.attributes.position,p=1;!0===r.wireframe&&(l=N.getWireframeAttribute(n),p=2);var d=J;null!==l&&(h=I.get(l),(d=Q).setIndex(h)),c&&(!function(t,e,n){if(n&&n.isInstancedBufferGeometry&!L.isWebGL2&&null===A.get(\"ANGLE_instanced_arrays\"))return void console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");R.initAttributes();var r=n.attributes,i=e.getAttributes(),a=t.defaultAttributeValues;for(var o in i){var s=i[o];if(s>=0){var c=r[o];if(void 0!==c){var h=c.normalized,l=c.itemSize,u=I.get(c);if(void 0===u)continue;var p=u.buffer,d=u.type,f=u.bytesPerElement;if(c.isInterleavedBufferAttribute){var m=c.data,g=m.stride,v=c.offset;m&&m.isInstancedInterleavedBuffer?(R.enableAttributeAndDivisor(s,m.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=m.meshPerAttribute*m.count)):R.enableAttribute(s),S.bindBuffer(S.ARRAY_BUFFER,p),S.vertexAttribPointer(s,l,d,h,g*f,v*f)}else c.isInstancedBufferAttribute?(R.enableAttributeAndDivisor(s,c.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=c.meshPerAttribute*c.count)):R.enableAttribute(s),S.bindBuffer(S.ARRAY_BUFFER,p),S.vertexAttribPointer(s,l,d,h,0,0)}else if(void 0!==a){var y=a[o];if(void 0!==y)switch(y.length){case 2:S.vertexAttrib2fv(s,y);break;case 3:S.vertexAttrib3fv(s,y);break;case 4:S.vertexAttrib4fv(s,y);break;default:S.vertexAttrib1fv(s,y)}}}}R.disableUnusedAttributes()}(r,s,n),null!==l&&S.bindBuffer(S.ELEMENT_ARRAY_BUFFER,h.buffer));var f=1/0;null!==l?f=l.count:void 0!==u&&(f=u.count);var m=n.drawRange.start*p,g=n.drawRange.count*p,v=null!==a?a.start*p:0,y=null!==a?a.count*p:1/0,x=Math.max(m,v),b=Math.min(f,m+g,v+y)-1,_=Math.max(0,b-x+1);if(0!==_){if(i.isMesh)if(!0===r.wireframe)R.setLineWidth(r.wireframeLinewidth*At()),d.setMode(S.LINES);else switch(i.drawMode){case se:d.setMode(S.TRIANGLES);break;case ce:d.setMode(S.TRIANGLE_STRIP);break;case he:d.setMode(S.TRIANGLE_FAN)}else if(i.isLine){var w=r.linewidth;void 0===w&&(w=1),R.setLineWidth(w*At()),i.isLineSegments?d.setMode(S.LINES):i.isLineLoop?d.setMode(S.LINE_LOOP):d.setMode(S.LINE_STRIP)}else i.isPoints?d.setMode(S.POINTS):i.isSprite&&d.setMode(S.TRIANGLES);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&d.renderInstances(n,x,_):d.render(x,_)}},this.compile=function(t,e){(T=X.get(t,e)).init(),t.traverse(function(t){t.isLight&&(T.pushLight(t),t.castShadow&&T.pushShadow(t))}),T.setupLights(e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var n=0;n<e.material.length;n++)Gt(e.material[n],t.fog,e);else Gt(e.material,t.fog,e)})};var Bt=null;var Ft=new je;function zt(t,e,n,r){for(var i=0,a=t.length;i<a;i++){var o=t[i],s=o.object,c=o.geometry,h=void 0===r?o.material:r,l=o.group;if(n.isArrayCamera){st=n;for(var u=n.cameras,p=0,d=u.length;p<d;p++){var f=u[p];if(s.layers.test(f.layers)){if(\"viewport\"in f)R.viewport(ct.copy(f.viewport));else{var m=f.bounds,g=m.x*pt,v=m.y*dt,y=m.z*pt,x=m.w*dt;R.viewport(ct.set(g,v,y,x).multiplyScalar(ft))}T.setupLights(f),Ht(s,e,f,c,h,l)}}}else st=null,Ht(s,e,n,c,h,l)}}function Ht(t,e,n,r,i,a){if(t.onBeforeRender($,e,n,r,i,a),T=X.get(e,st||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){R.setMaterial(i);var o=Vt(n,e.fog,i,t);at.geometry=null,at.program=null,at.wireframe=!1,function(t,e){t.render(function(t){$.renderBufferImmediate(t,e)})}(t,o)}else $.renderBufferDirect(n,e.fog,r,i,t,a);t.onAfterRender($,e,n,r,i,a),T=X.get(e,st||n)}function Gt(t,e,n){var r=C.get(t),i=T.state.lights,a=T.state.shadowsArray,o=r.lightsHash,s=i.state.hash,c=U.getParameters(t,i.state,a,e,bt.numPlanes,bt.numIntersection,n),h=U.getProgramCode(t,c),l=r.program,u=!0;if(void 0===l)t.addEventListener(\"dispose\",Dt);else if(l.code!==h)Ut(t);else if(o.stateID!==s.stateID||o.directionalLength!==s.directionalLength||o.pointLength!==s.pointLength||o.spotLength!==s.spotLength||o.rectAreaLength!==s.rectAreaLength||o.hemiLength!==s.hemiLength||o.shadowsLength!==s.shadowsLength)o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,u=!1;else{if(void 0!==c.shaderID)return;u=!1}if(u){if(c.shaderID){var p=ke[c.shaderID];r.shader={name:t.type,uniforms:ze.clone(p.uniforms),vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}}else r.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(r.shader,$),h=U.getProgramCode(t,c),l=U.acquireProgram(t,r.shader,c,h),r.program=l,t.program=l}var d=l.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var f=0;f<$.maxMorphTargets;f++)d[\"morphTarget\"+f]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(f=0;f<$.maxMorphNormals;f++)d[\"morphNormal\"+f]>=0&&t.numSupportedMorphNormals++}var m=r.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(r.numClippingPlanes=bt.numPlanes,r.numIntersection=bt.numIntersection,m.clippingPlanes=bt.uniform),r.fog=e,void 0===o&&(r.lightsHash=o={}),o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,t.lights&&(m.ambientLightColor.value=i.state.ambient,m.directionalLights.value=i.state.directional,m.spotLights.value=i.state.spot,m.rectAreaLights.value=i.state.rectArea,m.pointLights.value=i.state.point,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotShadowMatrix.value=i.state.spotShadowMatrix,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix);var g=r.program.getUniforms(),v=vr.seqWithValue(g.seq,m);r.uniformsList=v}function Vt(t,e,n,r){ut=0;var i=C.get(n),a=T.state.lights,o=i.lightsHash,s=a.state.hash;if(Mt&&(Et||t!==ot)){var c=t===ot&&n.id===it;bt.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,t,i,c)}!1===n.needsUpdate&&(void 0===i.program?n.needsUpdate=!0:n.fog&&i.fog!==e?n.needsUpdate=!0:(!n.lights||o.stateID===s.stateID&&o.directionalLength===s.directionalLength&&o.pointLength===s.pointLength&&o.spotLength===s.spotLength&&o.rectAreaLength===s.rectAreaLength&&o.hemiLength===s.hemiLength&&o.shadowsLength===s.shadowsLength)&&(void 0===i.numClippingPlanes||i.numClippingPlanes===bt.numPlanes&&i.numIntersection===bt.numIntersection)||(n.needsUpdate=!0)),n.needsUpdate&&(Gt(n,e,r),n.needsUpdate=!1);var h=!1,u=!1,p=!1,d=i.program,f=d.getUniforms(),m=i.shader.uniforms;if(R.useProgram(d.program)&&(h=!0,u=!0,p=!0),n.id!==it&&(it=n.id,u=!0),h||ot!==t){if(f.setValue(S,\"projectionMatrix\",t.projectionMatrix),L.logarithmicDepthBuffer&&f.setValue(S,\"logDepthBufFC\",2/(Math.log(t.far+1)/Math.LN2)),ot!==t&&(ot=t,u=!0,p=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var g=f.map.cameraPosition;void 0!==g&&g.setValue(S,St.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&f.setValue(S,\"viewMatrix\",t.matrixWorldInverse)}if(n.skinning){f.setOptional(S,r,\"bindMatrix\"),f.setOptional(S,r,\"bindMatrixInverse\");var v=r.skeleton;if(v){var y=v.bones;if(L.floatVertexTextures){if(void 0===v.boneTexture){var x=Math.sqrt(4*y.length);x=_e.ceilPowerOfTwo(x),x=Math.max(x,4);var b=new Float32Array(x*x*4);b.set(v.boneMatrices);var _=new Ie(b,x,x,Rt,_t);_.needsUpdate=!0,v.boneMatrices=b,v.boneTexture=_,v.boneTextureSize=x}f.setValue(S,\"boneTexture\",v.boneTexture),f.setValue(S,\"boneTextureSize\",v.boneTextureSize)}else f.setOptional(S,v,\"boneMatrices\")}}return u&&(f.setValue(S,\"toneMappingExposure\",$.toneMappingExposure),f.setValue(S,\"toneMappingWhitePoint\",$.toneMappingWhitePoint),n.lights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(m,p),e&&n.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(m,e),n.isMeshBasicMaterial?kt(m,n):n.isMeshLambertMaterial?(kt(m,n),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(m,n)):n.isMeshPhongMaterial?(kt(m,n),n.isMeshToonMaterial?function(t,e){jt(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(m,n):jt(m,n)):n.isMeshStandardMaterial?(kt(m,n),n.isMeshPhysicalMaterial?function(t,e){Wt(t,e),t.reflectivity.value=e.reflectivity,t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness}(m,n):Wt(m,n)):n.isMeshMatcapMaterial?(kt(m,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===l&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===l&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(m,n)):n.isMeshDepthMaterial?(kt(m,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(m,n)):n.isMeshDistanceMaterial?(kt(m,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(m,n)):n.isMeshNormalMaterial?(kt(m,n),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===l&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===l&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(m,n)):n.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(m,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(m,n)):n.isPointsMaterial?function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*ft,t.scale.value=.5*dt,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(m,n):n.isSpriteMaterial?function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity,t.rotation.value=e.rotation,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(m,n):n.isShadowMaterial&&(m.color.value=n.color,m.opacity.value=n.opacity),void 0!==m.ltc_1&&(m.ltc_1.value=Ve.LTC_1),void 0!==m.ltc_2&&(m.ltc_2.value=Ve.LTC_2),vr.upload(S,i.uniformsList,m,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(vr.upload(S,i.uniformsList,m,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&f.setValue(S,\"center\",r.center),f.setValue(S,\"modelViewMatrix\",r.modelViewMatrix),f.setValue(S,\"normalMatrix\",r.normalMatrix),f.setValue(S,\"modelMatrix\",r.matrixWorld),d}function kt(t,e){var n;t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=C.get(e.envMap).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?n=e.map:e.specularMap?n=e.specularMap:e.displacementMap?n=e.displacementMap:e.normalMap?n=e.normalMap:e.bumpMap?n=e.bumpMap:e.roughnessMap?n=e.roughnessMap:e.metalnessMap?n=e.metalnessMap:e.alphaMap?n=e.alphaMap:e.emissiveMap&&(n=e.emissiveMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function jt(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===l&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===l&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function Wt(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===l&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===l&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}Ft.setAnimationLoop(function(t){Ct.isPresenting()||Bt&&Bt(t)}),\"undefined\"!=typeof window&&Ft.setContext(window),this.setAnimationLoop=function(t){Bt=t,Ct.setAnimationLoop(t),Ft.start()},this.render=function(t,e,n,r){if(e&&e.isCamera){if(!tt){at.geometry=null,at.program=null,at.wireframe=!1,it=-1,ot=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),Ct.enabled&&(e=Ct.getCamera(e)),(T=X.get(t,e)).init(),t.onBeforeRender($,t,e,n),Tt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),xt.setFromMatrix(Tt),Et=this.localClippingEnabled,Mt=bt.init(this.clippingPlanes,Et,e),(E=W.get(t,e)).init(),function t(e,n,r){if(!1===e.visible)return;var i=e.layers.test(n.layers);if(i)if(e.isLight)T.pushLight(e),e.castShadow&&T.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||xt.intersectsSprite(e)){r&&St.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Tt);var a=D.update(e),o=e.material;E.push(e,a,o,St.z,null)}}else if(e.isImmediateRenderObject)r&&St.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Tt),E.push(e,null,e.material,St.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||xt.intersectsObject(e))){r&&St.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Tt);var a=D.update(e),o=e.material;if(Array.isArray(o))for(var s=a.groups,c=0,h=s.length;c<h;c++){var l=s[c],u=o[l.materialIndex];u&&u.visible&&E.push(e,a,u,St.z,l)}else o.visible&&E.push(e,a,o,St.z,null)}var p=e.children;for(var c=0,h=p.length;c<h;c++)t(p[c],n,r)}(t,e,$.sortObjects),!0===$.sortObjects&&E.sort(),Mt&&bt.beginShadows();var i=T.state.shadowsArray;Ot.render(i,t,e),T.setupLights(e),Mt&&bt.endShadows(),this.info.autoReset&&this.info.reset(),void 0===n&&(n=null),this.setRenderTarget(n),q.render(E,t,e,r);var a=E.opaque,o=E.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;a.length&&zt(a,t,e,s),o.length&&zt(o,t,e,s)}else a.length&&zt(a,t,e),o.length&&zt(o,t,e);n&&O.updateRenderTargetMipmap(n),R.buffers.depth.setTest(!0),R.buffers.depth.setMask(!0),R.buffers.color.setMask(!0),R.setPolygonOffset(!1),t.onAfterRender($,t,e),Ct.enabled&&Ct.submitFrame(),E=null,T=null}}else console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\")},this.allocTextureUnit=function(){var t=ut;return t>=L.maxTextures&&console.warn(\"THREE.WebGLRenderer: Trying to use \"+t+\" texture units while this GPU supports only \"+L.maxTextures),ut+=1,t},this.setTexture2D=function(){var t=!1;return function(e,n){e&&e.isWebGLRenderTarget&&(t||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),t=!0),e=e.texture),O.setTexture2D(e,n)}}(),this.setTexture3D=function(t,e){O.setTexture3D(t,e)},this.setTexture=function(){var t=!1;return function(e,n){t||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),t=!0),O.setTexture2D(e,n)}}(),this.setTextureCube=function(){var t=!1;return function(e,n){e&&e.isWebGLRenderTargetCube&&(t||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?O.setTextureCube(e,n):O.setTextureCubeDynamic(e,n)}}(),this.setFramebuffer=function(t){et=t},this.getRenderTarget=function(){return nt},this.setRenderTarget=function(t){nt=t,t&&void 0===C.get(t).__webglFramebuffer&&O.setupRenderTarget(t);var e=et,n=!1;if(t){var r=C.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=r[t.activeCubeFace],n=!0):e=r,ct.copy(t.viewport),ht.copy(t.scissor),lt=t.scissorTest}else ct.copy(gt).multiplyScalar(ft),ht.copy(vt).multiplyScalar(ft),lt=yt;if(rt!==e&&(S.bindFramebuffer(S.FRAMEBUFFER,e),rt=e),R.viewport(ct),R.scissor(ht),R.setScissorTest(lt),n){var i=C.get(t.texture);S.framebufferTexture2D(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,i.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,n,r,i,a){if(t&&t.isWebGLRenderTarget){var o=C.get(t).__webglFramebuffer;if(o){var s=!1;o!==rt&&(S.bindFramebuffer(S.FRAMEBUFFER,o),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==Rt&&K.convert(h)!==S.getParameter(S.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");if(!(l===mt||K.convert(l)===S.getParameter(S.IMPLEMENTATION_COLOR_READ_TYPE)||l===_t&&(L.isWebGL2||A.get(\"OES_texture_float\")||A.get(\"WEBGL_color_buffer_float\"))||l===wt&&(L.isWebGL2?A.get(\"EXT_color_buffer_float\"):A.get(\"EXT_color_buffer_half_float\"))))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");S.checkFramebufferStatus(S.FRAMEBUFFER)===S.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&S.readPixels(e,n,r,i,K.convert(h),K.convert(l),a):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\")}finally{s&&S.bindFramebuffer(S.FRAMEBUFFER,rt)}}}else console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\")},this.copyFramebufferToTexture=function(t,e,n){var r=e.image.width,i=e.image.height,a=K.convert(e.format);this.setTexture2D(e,0),S.copyTexImage2D(S.TEXTURE_2D,n||0,a,t.x,t.y,r,i,0)},this.copyTextureToTexture=function(t,e,n,r){var i=e.image.width,a=e.image.height,o=K.convert(n.format),s=K.convert(n.type);this.setTexture2D(n,0),e.isDataTexture?S.texSubImage2D(S.TEXTURE_2D,r||0,t.x,t.y,i,a,o,s,e.image.data):S.texSubImage2D(S.TEXTURE_2D,r||0,t.x,t.y,o,s,e.image)}}function qr(t,e){this.name=\"\",this.color=new Ge(t),this.density=void 0!==e?e:25e-5}function Yr(t,e,n){this.name=\"\",this.color=new Ge(t),this.near=void 0!==e?e:1,this.far=void 0!==n?n:1e3}function Zr(){Je.call(this),this.type=\"Scene\",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function Jr(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Qr(t,e,n,r){this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}function Kr(t){xn.call(this),this.type=\"SpriteMaterial\",this.color=new Ge(16777215),this.map=null,this.rotation=0,this.sizeAttenuation=!0,this.lights=!1,this.transparent=!0,this.setValues(t)}function $r(t){if(Je.call(this),this.type=\"Sprite\",void 0===Or){Or=new dn;var e=new Jr(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Or.setIndex([0,1,2,0,2,3]),Or.addAttribute(\"position\",new Qr(e,3,0,!1)),Or.addAttribute(\"uv\",new Qr(e,2,3,!1))}this.geometry=Or,this.material=void 0!==t?t:new Kr,this.center=new we(.5,.5)}function ti(){Je.call(this),this.type=\"LOD\",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function ei(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn(\"THREE.Skeleton boneInverses is the wrong length.\"),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new Me)}}function ni(){Je.call(this),this.type=\"Bone\"}function ri(t,e){En.call(this,t,e),this.type=\"SkinnedMesh\",this.bindMode=\"attached\",this.bindMatrix=new Me,this.bindMatrixInverse=new Me;var n=new ei(this.initBones());this.bind(n,this.matrixWorld),this.normalizeSkinWeights()}function ii(t){xn.call(this),this.type=\"LineBasicMaterial\",this.color=new Ge(16777215),this.linewidth=1,this.linecap=\"round\",this.linejoin=\"round\",this.lights=!1,this.setValues(t)}function ai(t,e,n){1===n&&console.error(\"THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.\"),Je.call(this),this.type=\"Line\",this.geometry=void 0!==t?t:new dn,this.material=void 0!==e?e:new ii({color:16777215*Math.random()})}function oi(t,e){ai.call(this,t,e),this.type=\"LineSegments\"}function si(t,e){ai.call(this,t,e),this.type=\"LineLoop\"}function ci(t){xn.call(this),this.type=\"PointsMaterial\",this.color=new Ge(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function hi(t,e){Je.call(this),this.type=\"Points\",this.geometry=void 0!==t?t:new dn,this.material=void 0!==e?e:new ci({color:16777215*Math.random()})}function li(t,e,n,r,i,a,o,s,c){Re.call(this,t,e,n,r,i,a,o,s,c),this.generateMipmaps=!1}function ui(t,e,n,r,i,a,o,s,c,h,l,u){Re.call(this,null,a,o,s,c,h,r,i,l,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function pi(t,e,n,r,i,a,o,s,c){Re.call(this,t,e,n,r,i,a,o,s,c),this.needsUpdate=!0}function di(t,e,n,r,i,a,o,s,c,h){if((h=void 0!==h?h:It)!==It&&h!==Nt)throw new Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");void 0===n&&h===It&&(n=yt),void 0===n&&h===Nt&&(n=St),Re.call(this,null,r,i,a,o,s,h,n,c),this.image={width:t,height:e},this.magFilter=void 0!==o?o:ht,this.minFilter=void 0!==s?s:ht,this.flipY=!1,this.generateMipmaps=!1}function fi(t){dn.call(this),this.type=\"WireframeGeometry\";var e,n,r,i,a,o,s,c,h,l,u=[],p=[0,0],d={},f=[\"a\",\"b\",\"c\"];if(t&&t.isGeometry){var m=t.faces;for(e=0,r=m.length;e<r;e++){var g=m[e];for(n=0;n<3;n++)s=g[f[n]],c=g[f[(n+1)%3]],p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[h=p[0]+\",\"+p[1]]&&(d[h]={index1:p[0],index2:p[1]})}for(h in d)o=d[h],l=t.vertices[o.index1],u.push(l.x,l.y,l.z),l=t.vertices[o.index2],u.push(l.x,l.y,l.z)}else if(t&&t.isBufferGeometry){var v,y,x,b,_,w,M;if(l=new Te,null!==t.index){for(v=t.attributes.position,y=t.index,0===(x=t.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),i=0,a=x.length;i<a;++i)for(e=_=(b=x[i]).start,r=_+b.count;e<r;e+=3)for(n=0;n<3;n++)s=y.getX(e+n),c=y.getX(e+(n+1)%3),p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[h=p[0]+\",\"+p[1]]&&(d[h]={index1:p[0],index2:p[1]});for(h in d)o=d[h],l.fromBufferAttribute(v,o.index1),u.push(l.x,l.y,l.z),l.fromBufferAttribute(v,o.index2),u.push(l.x,l.y,l.z)}else for(e=0,r=(v=t.attributes.position).count/3;e<r;e++)for(n=0;n<3;n++)w=3*e+n,l.fromBufferAttribute(v,w),u.push(l.x,l.y,l.z),M=3*e+(n+1)%3,l.fromBufferAttribute(v,M),u.push(l.x,l.y,l.z)}this.addAttribute(\"position\",new cn(u,3))}function mi(t,e,n){Ke.call(this),this.type=\"ParametricGeometry\",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new gi(t,e,n)),this.mergeVertices()}function gi(t,e,n){dn.call(this),this.type=\"ParametricBufferGeometry\",this.parameters={func:t,slices:e,stacks:n};var r,i,a=[],o=[],s=[],c=[],h=new Te,l=new Te,u=new Te,p=new Te,d=new Te;t.length<3&&console.error(\"THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.\");var f=e+1;for(r=0;r<=n;r++){var m=r/n;for(i=0;i<=e;i++){var g=i/e;t(g,m,l),o.push(l.x,l.y,l.z),g-1e-5>=0?(t(g-1e-5,m,u),p.subVectors(l,u)):(t(g+1e-5,m,u),p.subVectors(u,l)),m-1e-5>=0?(t(g,m-1e-5,u),d.subVectors(l,u)):(t(g,m+1e-5,u),d.subVectors(u,l)),h.crossVectors(p,d).normalize(),s.push(h.x,h.y,h.z),c.push(g,m)}}for(r=0;r<n;r++)for(i=0;i<e;i++){var v=r*f+i,y=r*f+i+1,x=(r+1)*f+i+1,b=(r+1)*f+i;a.push(v,y,b),a.push(y,x,b)}this.setIndex(a),this.addAttribute(\"position\",new cn(o,3)),this.addAttribute(\"normal\",new cn(s,3)),this.addAttribute(\"uv\",new cn(c,2))}function vi(t,e,n,r){Ke.call(this),this.type=\"PolyhedronGeometry\",this.parameters={vertices:t,indices:e,radius:n,detail:r},this.fromBufferGeometry(new yi(t,e,n,r)),this.mergeVertices()}function yi(t,e,n,r){dn.call(this),this.type=\"PolyhedronBufferGeometry\",this.parameters={vertices:t,indices:e,radius:n,detail:r},n=n||1;var i=[],a=[];function o(t,e,n,r){var i,a,o=Math.pow(2,r),c=[];for(i=0;i<=o;i++){c[i]=[];var h=t.clone().lerp(n,i/o),l=e.clone().lerp(n,i/o),u=o-i;for(a=0;a<=u;a++)c[i][a]=0===a&&i===o?h:h.clone().lerp(l,a/u)}for(i=0;i<o;i++)for(a=0;a<2*(o-i)-1;a++){var p=Math.floor(a/2);a%2==0?(s(c[i][p+1]),s(c[i+1][p]),s(c[i][p])):(s(c[i][p+1]),s(c[i+1][p+1]),s(c[i+1][p]))}}function s(t){i.push(t.x,t.y,t.z)}function c(e,n){var r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function h(t,e,n,r){r<0&&1===t.x&&(a[e]=t.x-1),0===n.x&&0===n.z&&(a[e]=r/2/Math.PI+.5)}function l(t){return Math.atan2(t.z,-t.x)}function u(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}!function(t){for(var n=new Te,r=new Te,i=new Te,a=0;a<e.length;a+=3)c(e[a+0],n),c(e[a+1],r),c(e[a+2],i),o(n,r,i,t)}(r=r||0),function(t){for(var e=new Te,n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){for(var t=new Te,e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];var n=l(t)/2/Math.PI+.5,r=u(t)/Math.PI+.5;a.push(n,1-r)}(function(){for(var t=new Te,e=new Te,n=new Te,r=new Te,o=new we,s=new we,c=new we,u=0,p=0;u<i.length;u+=9,p+=6){t.set(i[u+0],i[u+1],i[u+2]),e.set(i[u+3],i[u+4],i[u+5]),n.set(i[u+6],i[u+7],i[u+8]),o.set(a[p+0],a[p+1]),s.set(a[p+2],a[p+3]),c.set(a[p+4],a[p+5]),r.copy(t).add(e).add(n).divideScalar(3);var d=l(r);h(o,p+0,t,d),h(s,p+2,e,d),h(c,p+4,n,d)}})(),function(){for(var t=0;t<a.length;t+=6){var e=a[t+0],n=a[t+2],r=a[t+4],i=Math.max(e,n,r),o=Math.min(e,n,r);i>.9&&o<.1&&(e<.2&&(a[t+0]+=1),n<.2&&(a[t+2]+=1),r<.2&&(a[t+4]+=1))}}()}(),this.addAttribute(\"position\",new cn(i,3)),this.addAttribute(\"normal\",new cn(i.slice(),3)),this.addAttribute(\"uv\",new cn(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}function xi(t,e){Ke.call(this),this.type=\"TetrahedronGeometry\",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new bi(t,e)),this.mergeVertices()}function bi(t,e){yi.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type=\"TetrahedronBufferGeometry\",this.parameters={radius:t,detail:e}}function _i(t,e){Ke.call(this),this.type=\"OctahedronGeometry\",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new wi(t,e)),this.mergeVertices()}function wi(t,e){yi.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type=\"OctahedronBufferGeometry\",this.parameters={radius:t,detail:e}}function Mi(t,e){Ke.call(this),this.type=\"IcosahedronGeometry\",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ei(t,e)),this.mergeVertices()}function Ei(t,e){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];yi.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type=\"IcosahedronBufferGeometry\",this.parameters={radius:t,detail:e}}function Ti(t,e){Ke.call(this),this.type=\"DodecahedronGeometry\",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Si(t,e)),this.mergeVertices()}function Si(t,e){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r];yi.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type=\"DodecahedronBufferGeometry\",this.parameters={radius:t,detail:e}}function Ai(t,e,n,r,i,a){Ke.call(this),this.type=\"TubeGeometry\",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i},void 0!==a&&console.warn(\"THREE.TubeGeometry: taper has been removed.\");var o=new Li(t,e,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function Li(t,e,n,r,i){dn.call(this),this.type=\"TubeBufferGeometry\",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i},e=e||64,n=n||1,r=r||8,i=i||!1;var a=t.computeFrenetFrames(e,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o,s,c=new Te,h=new Te,l=new we,u=new Te,p=[],d=[],f=[],m=[];function g(i){u=t.getPointAt(i/e,u);var o=a.normals[i],l=a.binormals[i];for(s=0;s<=r;s++){var f=s/r*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);h.x=g*o.x+m*l.x,h.y=g*o.y+m*l.y,h.z=g*o.z+m*l.z,h.normalize(),d.push(h.x,h.y,h.z),c.x=u.x+n*h.x,c.y=u.y+n*h.y,c.z=u.z+n*h.z,p.push(c.x,c.y,c.z)}}!function(){for(o=0;o<e;o++)g(o);g(!1===i?e:0),function(){for(o=0;o<=e;o++)for(s=0;s<=r;s++)l.x=o/e,l.y=s/r,f.push(l.x,l.y)}(),function(){for(s=1;s<=e;s++)for(o=1;o<=r;o++){var t=(r+1)*(s-1)+(o-1),n=(r+1)*s+(o-1),i=(r+1)*s+o,a=(r+1)*(s-1)+o;m.push(t,n,a),m.push(n,i,a)}}()}(),this.setIndex(m),this.addAttribute(\"position\",new cn(p,3)),this.addAttribute(\"normal\",new cn(d,3)),this.addAttribute(\"uv\",new cn(f,2))}function Ri(t,e,n,r,i,a,o){Ke.call(this),this.type=\"TorusKnotGeometry\",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:a},void 0!==o&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\"),this.fromBufferGeometry(new Pi(t,e,n,r,i,a)),this.mergeVertices()}function Pi(t,e,n,r,i,a){dn.call(this),this.type=\"TorusKnotBufferGeometry\",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:a},t=t||1,e=e||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;var o,s,c=[],h=[],l=[],u=[],p=new Te,d=new Te,f=new Te,m=new Te,g=new Te,v=new Te,y=new Te;for(o=0;o<=n;++o){var x=o/n*i*Math.PI*2;for(A(x,i,a,t,f),A(x+.01,i,a,t,m),v.subVectors(m,f),y.addVectors(m,f),g.crossVectors(v,y),y.crossVectors(g,v),g.normalize(),y.normalize(),s=0;s<=r;++s){var b=s/r*Math.PI*2,_=-e*Math.cos(b),w=e*Math.sin(b);p.x=f.x+(_*y.x+w*g.x),p.y=f.y+(_*y.y+w*g.y),p.z=f.z+(_*y.z+w*g.z),h.push(p.x,p.y,p.z),d.subVectors(p,f).normalize(),l.push(d.x,d.y,d.z),u.push(o/n),u.push(s/r)}}for(s=1;s<=n;s++)for(o=1;o<=r;o++){var M=(r+1)*(s-1)+(o-1),E=(r+1)*s+(o-1),T=(r+1)*s+o,S=(r+1)*(s-1)+o;c.push(M,E,S),c.push(E,T,S)}function A(t,e,n,r,i){var a=Math.cos(t),o=Math.sin(t),s=n/e*t,c=Math.cos(s);i.x=r*(2+c)*.5*a,i.y=r*(2+c)*o*.5,i.z=r*Math.sin(s)*.5}this.setIndex(c),this.addAttribute(\"position\",new cn(h,3)),this.addAttribute(\"normal\",new cn(l,3)),this.addAttribute(\"uv\",new cn(u,2))}function Ci(t,e,n,r,i){Ke.call(this),this.type=\"TorusGeometry\",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new Oi(t,e,n,r,i)),this.mergeVertices()}function Oi(t,e,n,r,i){dn.call(this),this.type=\"TorusBufferGeometry\",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},t=t||1,e=e||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||2*Math.PI;var a,o,s=[],c=[],h=[],l=[],u=new Te,p=new Te,d=new Te;for(a=0;a<=n;a++)for(o=0;o<=r;o++){var f=o/r*i,m=a/n*Math.PI*2;p.x=(t+e*Math.cos(m))*Math.cos(f),p.y=(t+e*Math.cos(m))*Math.sin(f),p.z=e*Math.sin(m),c.push(p.x,p.y,p.z),u.x=t*Math.cos(f),u.y=t*Math.sin(f),d.subVectors(p,u).normalize(),h.push(d.x,d.y,d.z),l.push(o/r),l.push(a/n)}for(a=1;a<=n;a++)for(o=1;o<=r;o++){var g=(r+1)*a+o-1,v=(r+1)*(a-1)+o-1,y=(r+1)*(a-1)+o,x=(r+1)*a+o;s.push(g,v,x),s.push(v,y,x)}this.setIndex(s),this.addAttribute(\"position\",new cn(c,3)),this.addAttribute(\"normal\",new cn(h,3)),this.addAttribute(\"uv\",new cn(l,2))}Ur.prototype=Object.create(xn.prototype),Ur.prototype.constructor=Ur,Ur.prototype.isMeshDepthMaterial=!0,Ur.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},Br.prototype=Object.create(xn.prototype),Br.prototype.constructor=Br,Br.prototype.isMeshDistanceMaterial=!0,Br.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Gr.prototype=Object.assign(Object.create(Je.prototype),{constructor:Gr,isGroup:!0}),Vr.prototype=Object.assign(Object.create(Je.prototype),{constructor:Vr,isCamera:!0,copy:function(t,e){return Je.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn(\"THREE.Camera: .getWorldDirection() target is now required\"),t=new Te),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Je.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),kr.prototype=Object.assign(Object.create(Vr.prototype),{constructor:kr,isPerspectiveCamera:!0,copy:function(t,e){return Vr.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*_e.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*_e.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*_e.RAD2DEG*Math.atan(Math.tan(.5*_e.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,r,i,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*_e.DEG2RAD*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,e-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var c=this.filmOffset;0!==c&&(i+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Je.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),jr.prototype=Object.assign(Object.create(kr.prototype),{constructor:jr,isArrayCamera:!0}),qr.prototype.isFogExp2=!0,qr.prototype.clone=function(){return new qr(this.color,this.density)},qr.prototype.toJSON=function(){return{type:\"FogExp2\",color:this.color.getHex(),density:this.density}},Yr.prototype.isFog=!0,Yr.prototype.clone=function(){return new Yr(this.color,this.near,this.far)},Yr.prototype.toJSON=function(){return{type:\"Fog\",color:this.color.getHex(),near:this.near,far:this.far}},Zr.prototype=Object.assign(Object.create(Je.prototype),{constructor:Zr,copy:function(t,e){return Je.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=Je.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),Object.defineProperty(Jr.prototype,\"needsUpdate\",{set:function(t){!0===t&&this.version++}}),Object.assign(Jr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");return this.count=void 0!==t?t.length/this.stride:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(var r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),Object.defineProperties(Qr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Qr.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}}),Kr.prototype=Object.create(xn.prototype),Kr.prototype.constructor=Kr,Kr.prototype.isSpriteMaterial=!0,Kr.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this},$r.prototype=Object.assign(Object.create(Je.prototype),{constructor:$r,isSprite:!0,raycast:function(){var t=new Te,e=new Te,n=new Te,r=new we,i=new we,a=new Me,o=new Te,s=new Te,c=new Te,h=new we,l=new we,u=new we;function p(t,e,n,o,s,c){r.subVectors(t,n).addScalar(.5).multiply(o),void 0!==s?(i.x=c*r.x-s*r.y,i.y=s*r.x+c*r.y):i.copy(r),t.copy(e),t.x+=i.x,t.y+=i.y,t.applyMatrix4(a)}return function(r,i){e.setFromMatrixScale(this.matrixWorld),a.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld),n.setFromMatrixPosition(this.modelViewMatrix);var d,f,m=this.material.rotation;0!==m&&(f=Math.cos(m),d=Math.sin(m));var g=this.center;p(o.set(-.5,-.5,0),n,g,e,d,f),p(s.set(.5,-.5,0),n,g,e,d,f),p(c.set(.5,.5,0),n,g,e,d,f),h.set(0,0),l.set(1,0),u.set(1,1);var v=r.ray.intersectTriangle(o,s,c,!1,t);if(null!==v||(p(s.set(-.5,.5,0),n,g,e,d,f),l.set(0,1),null!==(v=r.ray.intersectTriangle(o,c,s,!1,t)))){var y=r.ray.origin.distanceTo(t);y<r.near||y>r.far||i.push({distance:y,point:t.clone(),uv:wn.getUV(t,o,s,c,h,l,u,new we),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return Je.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}}),ti.prototype=Object.assign(Object.create(Je.prototype),{constructor:ti,copy:function(t){Je.prototype.copy.call(this,t,!1);for(var e=t.levels,n=0,r=e.length;n<r;n++){var i=e[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var n=this.levels,r=0;r<n.length&&!(e<n[r].distance);r++);n.splice(r,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object},raycast:function(){var t=new Te;return function(e,n){t.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(t);this.getObjectForDistance(r).raycast(e,n)}}(),update:function(){var t=new Te,e=new Te;return function(n){var r=this.levels;if(r.length>1){t.setFromMatrixPosition(n.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var i=t.distanceTo(e);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&i>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(t){var e=Je.prototype.toJSON.call(this,t);e.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(ei.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new Me;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,n;for(e=0,n=this.bones.length;e<n;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,n=this.bones.length;e<n;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new Me,e=new Me;return function(){for(var n=this.bones,r=this.boneInverses,i=this.boneMatrices,a=this.boneTexture,o=0,s=n.length;o<s;o++){var c=n[o]?n[o].matrixWorld:e;t.multiplyMatrices(c,r[o]),t.toArray(i,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new ei(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,n=this.bones.length;e<n;e++){var r=this.bones[e];if(r.name===t)return r}}}),ni.prototype=Object.assign(Object.create(Je.prototype),{constructor:ni,isBone:!0}),ri.prototype=Object.assign(Object.create(En.prototype),{constructor:ri,isSkinnedMesh:!0,initBones:function(){var t,e,n,r,i=[];if(this.geometry&&void 0!==this.geometry.bones){for(n=0,r=this.geometry.bones.length;n<r;n++)e=this.geometry.bones[n],t=new ni,i.push(t),t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);for(n=0,r=this.geometry.bones.length;n<r;n++)-1!==(e=this.geometry.bones[n]).parent&&null!==e.parent&&void 0!==i[e.parent]?i[e.parent].add(i[n]):this.add(i[n])}return this.updateMatrixWorld(!0),i},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var n=this.geometry.skinWeights[e];(t=1/n.manhattanLength())!==1/0?n.multiplyScalar(t):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var r=new Pe,i=this.geometry.attributes.skinWeight;for(e=0;e<i.count;e++)r.x=i.getX(e),r.y=i.getY(e),r.z=i.getZ(e),r.w=i.getW(e),(t=1/r.manhattanLength())!==1/0?r.multiplyScalar(t):r.set(1,0,0,0),i.setXYZW(e,r.x,r.y,r.z,r.w)}},updateMatrixWorld:function(t){En.prototype.updateMatrixWorld.call(this,t),\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh: Unrecognized bindMode: \"+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),ii.prototype=Object.create(xn.prototype),ii.prototype.constructor=ii,ii.prototype.isLineBasicMaterial=!0,ii.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},ai.prototype=Object.assign(Object.create(Je.prototype),{constructor:ai,isLine:!0,computeLineDistances:function(){var t=new Te,e=new Te;return function(){var n=this.geometry;if(n.isBufferGeometry)if(null===n.index){for(var r=n.attributes.position,i=[0],a=1,o=r.count;a<o;a++)t.fromBufferAttribute(r,a-1),e.fromBufferAttribute(r,a),i[a]=i[a-1],i[a]+=t.distanceTo(e);n.addAttribute(\"lineDistance\",new cn(i,1))}else console.warn(\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else if(n.isGeometry){var s=n.vertices;(i=n.lineDistances)[0]=0;for(a=1,o=s.length;a<o;a++)i[a]=i[a-1],i[a]+=s[a-1].distanceTo(s[a])}return this}}(),raycast:function(){var t=new Me,e=new _n,n=new De;return function(r,i){var a=r.linePrecision,o=this.geometry,s=this.matrixWorld;if(null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(s),n.radius+=a,!1!==r.ray.intersectsSphere(n)){t.getInverse(s),e.copy(r.ray).applyMatrix4(t);var c=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,l=new Te,u=new Te,p=new Te,d=new Te,f=this&&this.isLineSegments?2:1;if(o.isBufferGeometry){var m=o.index,g=o.attributes.position.array;if(null!==m)for(var v=m.array,y=0,x=v.length-1;y<x;y+=f){var b=v[y],_=v[y+1];if(l.fromArray(g,3*b),u.fromArray(g,3*_),!(e.distanceSqToSegment(l,u,d,p)>h))d.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(d))<r.near||E>r.far||i.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}else for(y=0,x=g.length/3-1;y<x;y+=f){if(l.fromArray(g,3*y),u.fromArray(g,3*y+3),!(e.distanceSqToSegment(l,u,d,p)>h))d.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(d))<r.near||E>r.far||i.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(o.isGeometry){var w=o.vertices,M=w.length;for(y=0;y<M-1;y+=f){var E;if(!(e.distanceSqToSegment(w[y],w[y+1],d,p)>h))d.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(d))<r.near||E>r.far||i.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),oi.prototype=Object.assign(Object.create(ai.prototype),{constructor:oi,isLineSegments:!0,computeLineDistances:function(){var t=new Te,e=new Te;return function(){var n=this.geometry;if(n.isBufferGeometry)if(null===n.index){for(var r=n.attributes.position,i=[],a=0,o=r.count;a<o;a+=2)t.fromBufferAttribute(r,a),e.fromBufferAttribute(r,a+1),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+t.distanceTo(e);n.addAttribute(\"lineDistance\",new cn(i,1))}else console.warn(\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else if(n.isGeometry){var s=n.vertices;for(i=n.lineDistances,a=0,o=s.length;a<o;a+=2)t.copy(s[a]),e.copy(s[a+1]),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+t.distanceTo(e)}return this}}()}),si.prototype=Object.assign(Object.create(ai.prototype),{constructor:si,isLineLoop:!0}),ci.prototype=Object.create(xn.prototype),ci.prototype.constructor=ci,ci.prototype.isPointsMaterial=!0,ci.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this},hi.prototype=Object.assign(Object.create(Je.prototype),{constructor:hi,isPoints:!0,raycast:function(){var t=new Me,e=new _n,n=new De;return function(r,i){var a=this,o=this.geometry,s=this.matrixWorld,c=r.params.Points.threshold;if(null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(s),n.radius+=c,!1!==r.ray.intersectsSphere(n)){t.getInverse(s),e.copy(r.ray).applyMatrix4(t);var h=c/((this.scale.x+this.scale.y+this.scale.z)/3),l=h*h,u=new Te,p=new Te;if(o.isBufferGeometry){var d=o.index,f=o.attributes.position.array;if(null!==d)for(var m=d.array,g=0,v=m.length;g<v;g++){var y=m[g];u.fromArray(f,3*y),_(u,y)}else{g=0;for(var x=f.length/3;g<x;g++)u.fromArray(f,3*g),_(u,g)}}else{var b=o.vertices;for(g=0,x=b.length;g<x;g++)_(b[g],g)}}function _(t,n){var o=e.distanceSqToPoint(t);if(o<l){e.closestPointToPoint(t,p),p.applyMatrix4(s);var c=r.ray.origin.distanceTo(p);if(c<r.near||c>r.far)return;i.push({distance:c,distanceToRay:Math.sqrt(o),point:p.clone(),index:n,face:null,object:a})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),li.prototype=Object.assign(Object.create(Re.prototype),{constructor:li,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),ui.prototype=Object.create(Re.prototype),ui.prototype.constructor=ui,ui.prototype.isCompressedTexture=!0,pi.prototype=Object.create(Re.prototype),pi.prototype.constructor=pi,pi.prototype.isCanvasTexture=!0,di.prototype=Object.create(Re.prototype),di.prototype.constructor=di,di.prototype.isDepthTexture=!0,fi.prototype=Object.create(dn.prototype),fi.prototype.constructor=fi,mi.prototype=Object.create(Ke.prototype),mi.prototype.constructor=mi,gi.prototype=Object.create(dn.prototype),gi.prototype.constructor=gi,vi.prototype=Object.create(Ke.prototype),vi.prototype.constructor=vi,yi.prototype=Object.create(dn.prototype),yi.prototype.constructor=yi,xi.prototype=Object.create(Ke.prototype),xi.prototype.constructor=xi,bi.prototype=Object.create(yi.prototype),bi.prototype.constructor=bi,_i.prototype=Object.create(Ke.prototype),_i.prototype.constructor=_i,wi.prototype=Object.create(yi.prototype),wi.prototype.constructor=wi,Mi.prototype=Object.create(Ke.prototype),Mi.prototype.constructor=Mi,Ei.prototype=Object.create(yi.prototype),Ei.prototype.constructor=Ei,Ti.prototype=Object.create(Ke.prototype),Ti.prototype.constructor=Ti,Si.prototype=Object.create(yi.prototype),Si.prototype.constructor=Si,Ai.prototype=Object.create(Ke.prototype),Ai.prototype.constructor=Ai,Li.prototype=Object.create(dn.prototype),Li.prototype.constructor=Li,Ri.prototype=Object.create(Ke.prototype),Ri.prototype.constructor=Ri,Pi.prototype=Object.create(dn.prototype),Pi.prototype.constructor=Pi,Ci.prototype=Object.create(Ke.prototype),Ci.prototype.constructor=Ci,Oi.prototype=Object.create(dn.prototype),Oi.prototype.constructor=Oi;var Ii=function(t,e,n){n=n||2;var r,i,a,o,s,c,h,l=e&&e.length,u=l?e[0]*n:t.length,p=Ni(t,0,u,n,!0),d=[];if(!p)return d;if(l&&(p=function(t,e,n,r){var i,a,o,s,c,h=[];for(i=0,a=e.length;i<a;i++)o=e[i]*r,s=i<a-1?e[i+1]*r:t.length,(c=Ni(t,o,s,r,!1))===c.next&&(c.steiner=!0),h.push(ji(c));for(h.sort(Gi),i=0;i<h.length;i++)Vi(h[i],n),n=Di(n,n.next);return n}(t,e,p,n)),t.length>80*n){r=a=t[0],i=o=t[1];for(var f=n;f<u;f+=n)s=t[f],c=t[f+1],s<r&&(r=s),c<i&&(i=c),s>a&&(a=s),c>o&&(o=c);h=0!==(h=Math.max(a-r,o-i))?1/h:0}return Ui(p,d,n,r,i,h),d};function Ni(t,e,n,r,i){var a,o;if(i===function(t,e,n,r){for(var i=0,a=e,o=n-r;a<n;a+=r)i+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return i}(t,e,n,r)>0)for(a=e;a<n;a+=r)o=Ki(a,t[a],t[a+1],o);else for(a=n-r;a>=e;a-=r)o=Ki(a,t[a],t[a+1],o);return o&&Yi(o,o.next)&&($i(o),o=o.next),o}function Di(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!Yi(r,r.next)&&0!==qi(r.prev,r,r.next))r=r.next;else{if($i(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function Ui(t,e,n,r,i,a,o){if(t){!o&&a&&function(t,e,n,r){var i=t;do{null===i.z&&(i.z=ki(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,a,o,s,c,h=1;do{for(n=t,t=null,a=null,o=0;n;){for(o++,r=n,s=0,e=0;e<h&&(s++,r=r.nextZ);e++);for(c=h;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:t=i,i.prevZ=a,a=i;n=r}a.nextZ=null,h*=2}while(o>1)}(i)}(t,r,i,a);for(var s,c,h=t;t.prev!==t.next;)if(s=t.prev,c=t.next,a?Fi(t,r,i,a):Bi(t))e.push(s.i/n),e.push(t.i/n),e.push(c.i/n),$i(t),t=c.next,h=c.next;else if((t=c)===h){o?1===o?Ui(t=zi(t,e,n),e,n,r,i,a,2):2===o&&Hi(t,e,n,r,i,a):Ui(Di(t),e,n,r,i,a,1);break}}}function Bi(t){var e=t.prev,n=t,r=t.next;if(qi(e,n,r)>=0)return!1;for(var i=t.next.next;i!==t.prev;){if(Wi(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&qi(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Fi(t,e,n,r){var i=t.prev,a=t,o=t.next;if(qi(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,h=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,l=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,u=ki(s,c,e,n,r),p=ki(h,l,e,n,r),d=t.nextZ;d&&d.z<=p;){if(d!==t.prev&&d!==t.next&&Wi(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&qi(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=t.prevZ;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&Wi(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&qi(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function zi(t,e,n){var r=t;do{var i=r.prev,a=r.next.next;!Yi(i,a)&&Zi(i,r,r.next,a)&&Ji(i,a)&&Ji(a,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(a.i/n),$i(r),$i(r.next),r=t=a),r=r.next}while(r!==t);return r}function Hi(t,e,n,r,i,a){var o=t;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&Xi(o,s)){var c=Qi(o,s);return o=Di(o,o.next),c=Di(c,c.next),Ui(o,e,n,r,i,a),void Ui(c,e,n,r,i,a)}s=s.next}o=o.next}while(o!==t)}function Gi(t,e){return t.x-e.x}function Vi(t,e){if(e=function(t,e){var n,r=e,i=t.x,a=t.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!n)return null;if(i===o)return n.prev;var c,h=n,l=n.x,u=n.y,p=1/0;r=n.next;for(;r!==h;)i>=r.x&&r.x>=l&&i!==r.x&&Wi(a<u?i:o,a,l,u,a<u?o:i,a,r.x,r.y)&&((c=Math.abs(a-r.y)/(i-r.x))<p||c===p&&r.x>n.x)&&Ji(r,t)&&(n=r,p=c),r=r.next;return n}(t,e)){var n=Qi(e,t);Di(n,n.next)}}function ki(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function ji(t){var e=t,n=t;do{e.x<n.x&&(n=e),e=e.next}while(e!==t);return n}function Wi(t,e,n,r,i,a,o,s){return(i-o)*(e-s)-(t-o)*(a-s)>=0&&(t-o)*(r-s)-(n-o)*(e-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function Xi(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Zi(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&Ji(t,e)&&Ji(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)}function qi(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Yi(t,e){return t.x===e.x&&t.y===e.y}function Zi(t,e,n,r){return!!(Yi(t,e)&&Yi(n,r)||Yi(t,r)&&Yi(n,e))||qi(t,e,n)>0!=qi(t,e,r)>0&&qi(n,r,t)>0!=qi(n,r,e)>0}function Ji(t,e){return qi(t.prev,t,t.next)<0?qi(t,e,t.next)>=0&&qi(t,t.prev,e)>=0:qi(t,e,t.prev)<0||qi(t,t.next,e)<0}function Qi(t,e){var n=new ta(t.i,t.x,t.y),r=new ta(e.i,e.x,e.y),i=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function Ki(t,e,n,r){var i=new ta(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function $i(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ta(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var ea={area:function(t){for(var e=t.length,n=0,r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n},isClockWise:function(t){return ea.area(t)<0},triangulateShape:function(t,e){var n=[],r=[],i=[];na(t),ra(n,t);var a=t.length;e.forEach(na);for(var o=0;o<e.length;o++)r.push(a),a+=e[o].length,ra(n,e[o]);var s=Ii(n,r);for(o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}};function na(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function ra(t,e){for(var n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function ia(t,e){Ke.call(this),this.type=\"ExtrudeGeometry\",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new aa(t,e)),this.mergeVertices()}function aa(t,e){dn.call(this),this.type=\"ExtrudeBufferGeometry\",this.parameters={shapes:t,options:e};for(var n=this,r=[],i=[],a=0,o=(t=Array.isArray(t)?t:[t]).length;a<o;a++){s(t[a])}function s(t){var a=[],o=void 0!==e.curveSegments?e.curveSegments:12,s=void 0!==e.steps?e.steps:1,c=void 0!==e.depth?e.depth:100,h=void 0===e.bevelEnabled||e.bevelEnabled,l=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:l-2,p=void 0!==e.bevelSegments?e.bevelSegments:3,d=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:oa;void 0!==e.amount&&(console.warn(\"THREE.ExtrudeBufferGeometry: amount has been renamed to depth.\"),c=e.amount);var m,g,v,y,x,b,_,w,M=!1;d&&(m=d.getSpacedPoints(s),M=!0,h=!1,g=d.computeFrenetFrames(s,!1),v=new Te,y=new Te,x=new Te),h||(p=0,l=0,u=0);var E=t.extractPoints(o),T=E.shape,S=E.holes;if(!ea.isClockWise(T))for(T=T.reverse(),_=0,w=S.length;_<w;_++)b=S[_],ea.isClockWise(b)&&(S[_]=b.reverse());var A=ea.triangulateShape(T,S),L=T;for(_=0,w=S.length;_<w;_++)b=S[_],T=T.concat(b);function R(t,e,n){return e||console.error(\"THREE.ExtrudeGeometry: vec does not exist\"),e.clone().multiplyScalar(n).add(t)}var P,C,O,I,N,D,U=T.length,B=A.length;function F(t,e,n){var r,i,a,o=t.x-e.x,s=t.y-e.y,c=n.x-t.x,h=n.y-t.y,l=o*o+s*s,u=o*h-s*c;if(Math.abs(u)>Number.EPSILON){var p=Math.sqrt(l),d=Math.sqrt(c*c+h*h),f=e.x-s/p,m=e.y+o/p,g=((n.x-h/d-f)*h-(n.y+c/d-m)*c)/(o*h-s*c),v=(r=f+o*g-t.x)*r+(i=m+s*g-t.y)*i;if(v<=2)return new we(r,i);a=Math.sqrt(v/2)}else{var y=!1;o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(h)&&(y=!0),y?(r=-s,i=o,a=Math.sqrt(l)):(r=o,i=s,a=Math.sqrt(l/2))}return new we(r/a,i/a)}for(var z=[],H=0,G=L.length,V=G-1,k=H+1;H<G;H++,V++,k++)V===G&&(V=0),k===G&&(k=0),z[H]=F(L[H],L[V],L[k]);var j,W,X=[],q=z.concat();for(_=0,w=S.length;_<w;_++){for(b=S[_],j=[],H=0,V=(G=b.length)-1,k=H+1;H<G;H++,V++,k++)V===G&&(V=0),k===G&&(k=0),j[H]=F(b[H],b[V],b[k]);X.push(j),q=q.concat(j)}for(P=0;P<p;P++){for(O=P/p,I=l*Math.cos(O*Math.PI/2),C=u*Math.sin(O*Math.PI/2),H=0,G=L.length;H<G;H++)Z((N=R(L[H],z[H],C)).x,N.y,-I);for(_=0,w=S.length;_<w;_++)for(b=S[_],j=X[_],H=0,G=b.length;H<G;H++)Z((N=R(b[H],j[H],C)).x,N.y,-I)}for(C=u,H=0;H<U;H++)N=h?R(T[H],q[H],C):T[H],M?(y.copy(g.normals[0]).multiplyScalar(N.x),v.copy(g.binormals[0]).multiplyScalar(N.y),x.copy(m[0]).add(y).add(v),Z(x.x,x.y,x.z)):Z(N.x,N.y,0);for(W=1;W<=s;W++)for(H=0;H<U;H++)N=h?R(T[H],q[H],C):T[H],M?(y.copy(g.normals[W]).multiplyScalar(N.x),v.copy(g.binormals[W]).multiplyScalar(N.y),x.copy(m[W]).add(y).add(v),Z(x.x,x.y,x.z)):Z(N.x,N.y,c/s*W);for(P=p-1;P>=0;P--){for(O=P/p,I=l*Math.cos(O*Math.PI/2),C=u*Math.sin(O*Math.PI/2),H=0,G=L.length;H<G;H++)Z((N=R(L[H],z[H],C)).x,N.y,c+I);for(_=0,w=S.length;_<w;_++)for(b=S[_],j=X[_],H=0,G=b.length;H<G;H++)N=R(b[H],j[H],C),M?Z(N.x,N.y+m[s-1].y,m[s-1].x+I):Z(N.x,N.y,c+I)}function Y(t,e){var n,r;for(H=t.length;--H>=0;){n=H,(r=H-1)<0&&(r=t.length-1);var i=0,a=s+2*p;for(i=0;i<a;i++){var o=U*i,c=U*(i+1);Q(e+n+o,e+r+o,e+r+c,e+n+c)}}}function Z(t,e,n){a.push(t),a.push(e),a.push(n)}function J(t,e,i){K(t),K(e),K(i);var a=r.length/3,o=f.generateTopUV(n,r,a-3,a-2,a-1);$(o[0]),$(o[1]),$(o[2])}function Q(t,e,i,a){K(t),K(e),K(a),K(e),K(i),K(a);var o=r.length/3,s=f.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);$(s[0]),$(s[1]),$(s[3]),$(s[1]),$(s[2]),$(s[3])}function K(t){r.push(a[3*t+0]),r.push(a[3*t+1]),r.push(a[3*t+2])}function $(t){i.push(t.x),i.push(t.y)}!function(){var t=r.length/3;if(h){var e=0,i=U*e;for(H=0;H<B;H++)J((D=A[H])[2]+i,D[1]+i,D[0]+i);for(i=U*(e=s+2*p),H=0;H<B;H++)J((D=A[H])[0]+i,D[1]+i,D[2]+i)}else{for(H=0;H<B;H++)J((D=A[H])[2],D[1],D[0]);for(H=0;H<B;H++)J((D=A[H])[0]+U*s,D[1]+U*s,D[2]+U*s)}n.addGroup(t,r.length/3-t,0)}(),function(){var t=r.length/3,e=0;for(Y(L,e),e+=L.length,_=0,w=S.length;_<w;_++)Y(b=S[_],e),e+=b.length;n.addGroup(t,r.length/3-t,1)}()}this.addAttribute(\"position\",new cn(r,3)),this.addAttribute(\"uv\",new cn(i,2)),this.computeVertexNormals()}ia.prototype=Object.create(Ke.prototype),ia.prototype.constructor=ia,ia.prototype.toJSON=function(){var t=Ke.prototype.toJSON.call(this);return sa(this.parameters.shapes,this.parameters.options,t)},aa.prototype=Object.create(dn.prototype),aa.prototype.constructor=aa,aa.prototype.toJSON=function(){var t=dn.prototype.toJSON.call(this);return sa(this.parameters.shapes,this.parameters.options,t)};var oa={generateTopUV:function(t,e,n,r,i){var a=e[3*n],o=e[3*n+1],s=e[3*r],c=e[3*r+1],h=e[3*i],l=e[3*i+1];return[new we(a,o),new we(s,c),new we(h,l)]},generateSideWallUV:function(t,e,n,r,i,a){var o=e[3*n],s=e[3*n+1],c=e[3*n+2],h=e[3*r],l=e[3*r+1],u=e[3*r+2],p=e[3*i],d=e[3*i+1],f=e[3*i+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(s-l)<.01?[new we(o,1-c),new we(h,1-u),new we(p,1-f),new we(m,1-v)]:[new we(s,1-c),new we(l,1-u),new we(d,1-f),new we(g,1-v)]}};function sa(t,e,n){if(n.shapes=[],Array.isArray(t))for(var r=0,i=t.length;r<i;r++){var a=t[r];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function ca(t,e){Ke.call(this),this.type=\"TextGeometry\",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new ha(t,e)),this.mergeVertices()}function ha(t,e){var n=(e=e||{}).font;if(!n||!n.isFont)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new Ke;var r=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),aa.call(this,r,e),this.type=\"TextBufferGeometry\"}function la(t,e,n,r,i,a,o){Ke.call(this),this.type=\"SphereGeometry\",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new ua(t,e,n,r,i,a,o)),this.mergeVertices()}function ua(t,e,n,r,i,a,o){dn.call(this),this.type=\"SphereBufferGeometry\",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var s,c,h=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),l=0,u=[],p=new Te,d=new Te,f=[],m=[],g=[],v=[];for(c=0;c<=n;c++){var y=[],x=c/n;for(s=0;s<=e;s++){var b=s/e;p.x=-t*Math.cos(r+b*i)*Math.sin(a+x*o),p.y=t*Math.cos(a+x*o),p.z=t*Math.sin(r+b*i)*Math.sin(a+x*o),m.push(p.x,p.y,p.z),d.set(p.x,p.y,p.z).normalize(),g.push(d.x,d.y,d.z),v.push(b,1-x),y.push(l++)}u.push(y)}for(c=0;c<n;c++)for(s=0;s<e;s++){var _=u[c][s+1],w=u[c][s],M=u[c+1][s],E=u[c+1][s+1];(0!==c||a>0)&&f.push(_,w,E),(c!==n-1||h<Math.PI)&&f.push(w,M,E)}this.setIndex(f),this.addAttribute(\"position\",new cn(m,3)),this.addAttribute(\"normal\",new cn(g,3)),this.addAttribute(\"uv\",new cn(v,2))}function pa(t,e,n,r,i,a){Ke.call(this),this.type=\"RingGeometry\",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new da(t,e,n,r,i,a)),this.mergeVertices()}function da(t,e,n,r,i,a){dn.call(this),this.type=\"RingBufferGeometry\",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},t=t||.5,e=e||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8;var o,s,c,h=[],l=[],u=[],p=[],d=t,f=(e-t)/(r=void 0!==r?Math.max(1,r):1),m=new Te,g=new we;for(s=0;s<=r;s++){for(c=0;c<=n;c++)o=i+c/n*a,m.x=d*Math.cos(o),m.y=d*Math.sin(o),l.push(m.x,m.y,m.z),u.push(0,0,1),g.x=(m.x/e+1)/2,g.y=(m.y/e+1)/2,p.push(g.x,g.y);d+=f}for(s=0;s<r;s++){var v=s*(n+1);for(c=0;c<n;c++){var y=o=c+v,x=o+n+1,b=o+n+2,_=o+1;h.push(y,x,_),h.push(x,b,_)}}this.setIndex(h),this.addAttribute(\"position\",new cn(l,3)),this.addAttribute(\"normal\",new cn(u,3)),this.addAttribute(\"uv\",new cn(p,2))}function fa(t,e,n,r){Ke.call(this),this.type=\"LatheGeometry\",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},this.fromBufferGeometry(new ma(t,e,n,r)),this.mergeVertices()}function ma(t,e,n,r){dn.call(this),this.type=\"LatheBufferGeometry\",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e)||12,n=n||0,r=r||2*Math.PI,r=_e.clamp(r,0,2*Math.PI);var i,a,o,s=[],c=[],h=[],l=1/e,u=new Te,p=new we;for(a=0;a<=e;a++){var d=n+a*l*r,f=Math.sin(d),m=Math.cos(d);for(o=0;o<=t.length-1;o++)u.x=t[o].x*f,u.y=t[o].y,u.z=t[o].x*m,c.push(u.x,u.y,u.z),p.x=a/e,p.y=o/(t.length-1),h.push(p.x,p.y)}for(a=0;a<e;a++)for(o=0;o<t.length-1;o++){var g=i=o+a*t.length,v=i+t.length,y=i+t.length+1,x=i+1;s.push(g,v,x),s.push(v,y,x)}if(this.setIndex(s),this.addAttribute(\"position\",new cn(c,3)),this.addAttribute(\"uv\",new cn(h,2)),this.computeVertexNormals(),r===2*Math.PI){var b=this.attributes.normal.array,_=new Te,w=new Te,M=new Te;for(i=e*t.length*3,a=0,o=0;a<t.length;a++,o+=3)_.x=b[o+0],_.y=b[o+1],_.z=b[o+2],w.x=b[i+o+0],w.y=b[i+o+1],w.z=b[i+o+2],M.addVectors(_,w).normalize(),b[o+0]=b[i+o+0]=M.x,b[o+1]=b[i+o+1]=M.y,b[o+2]=b[i+o+2]=M.z}}function ga(t,e){Ke.call(this),this.type=\"ShapeGeometry\",\"object\"===(void 0===e?\"undefined\":o(e))&&(console.warn(\"THREE.ShapeGeometry: Options parameter has been removed.\"),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new va(t,e)),this.mergeVertices()}function va(t,e){dn.call(this),this.type=\"ShapeBufferGeometry\",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],r=[],i=[],a=[],o=0,s=0;if(!1===Array.isArray(t))h(t);else for(var c=0;c<t.length;c++)h(t[c]),this.addGroup(o,s,c),o+=s,s=0;function h(t){var o,c,h,l=r.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;if(!1===ea.isClockWise(p))for(p=p.reverse(),o=0,c=d.length;o<c;o++)h=d[o],!0===ea.isClockWise(h)&&(d[o]=h.reverse());var f=ea.triangulateShape(p,d);for(o=0,c=d.length;o<c;o++)h=d[o],p=p.concat(h);for(o=0,c=p.length;o<c;o++){var m=p[o];r.push(m.x,m.y,0),i.push(0,0,1),a.push(m.x,m.y)}for(o=0,c=f.length;o<c;o++){var g=f[o],v=g[0]+l,y=g[1]+l,x=g[2]+l;n.push(v,y,x),s+=3}}this.setIndex(n),this.addAttribute(\"position\",new cn(r,3)),this.addAttribute(\"normal\",new cn(i,3)),this.addAttribute(\"uv\",new cn(a,2))}function ya(t,e){if(e.shapes=[],Array.isArray(t))for(var n=0,r=t.length;n<r;n++){var i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}function xa(t,e){dn.call(this),this.type=\"EdgesGeometry\",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var n,r,i,a,o=[],s=Math.cos(_e.DEG2RAD*e),c=[0,0],h={},l=[\"a\",\"b\",\"c\"];t.isBufferGeometry?(a=new Ke).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var u=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],g=0;g<3;g++)n=m[l[g]],r=m[l[(g+1)%3]],c[0]=Math.min(n,r),c[1]=Math.max(n,r),void 0===h[i=c[0]+\",\"+c[1]]?h[i]={index1:c[0],index2:c[1],face1:d,face2:void 0}:h[i].face2=d;for(i in h){var v=h[i];if(void 0===v.face2||p[v.face1].normal.dot(p[v.face2].normal)<=s){var y=u[v.index1];o.push(y.x,y.y,y.z),y=u[v.index2],o.push(y.x,y.y,y.z)}}this.addAttribute(\"position\",new cn(o,3))}function ba(t,e,n,r,i,a,o,s){Ke.call(this),this.type=\"CylinderGeometry\",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new _a(t,e,n,r,i,a,o,s)),this.mergeVertices()}function _a(t,e,n,r,i,a,o,s){dn.call(this),this.type=\"CylinderBufferGeometry\",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;t=void 0!==t?t:1,e=void 0!==e?e:1,n=n||1,r=Math.floor(r)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var h=[],l=[],u=[],p=[],d=0,f=[],m=n/2,g=0;function v(n){var i,a,f,v=new we,y=new Te,x=0,b=!0===n?t:e,_=!0===n?1:-1;for(a=d,i=1;i<=r;i++)l.push(0,m*_,0),u.push(0,_,0),p.push(.5,.5),d++;for(f=d,i=0;i<=r;i++){var w=i/r*s+o,M=Math.cos(w),E=Math.sin(w);y.x=b*E,y.y=m*_,y.z=b*M,l.push(y.x,y.y,y.z),u.push(0,_,0),v.x=.5*M+.5,v.y=.5*E*_+.5,p.push(v.x,v.y),d++}for(i=0;i<r;i++){var T=a+i,S=f+i;!0===n?h.push(S,S+1,T):h.push(S+1,S,T),x+=3}c.addGroup(g,x,!0===n?1:2),g+=x}!function(){var a,v,y=new Te,x=new Te,b=0,_=(e-t)/n;for(v=0;v<=i;v++){var w=[],M=v/i,E=M*(e-t)+t;for(a=0;a<=r;a++){var T=a/r,S=T*s+o,A=Math.sin(S),L=Math.cos(S);x.x=E*A,x.y=-M*n+m,x.z=E*L,l.push(x.x,x.y,x.z),y.set(A,_,L).normalize(),u.push(y.x,y.y,y.z),p.push(T,1-M),w.push(d++)}f.push(w)}for(a=0;a<r;a++)for(v=0;v<i;v++){var R=f[v][a],P=f[v+1][a],C=f[v+1][a+1],O=f[v][a+1];h.push(R,P,O),h.push(P,C,O),b+=6}c.addGroup(g,b,0),g+=b}(),!1===a&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(h),this.addAttribute(\"position\",new cn(l,3)),this.addAttribute(\"normal\",new cn(u,3)),this.addAttribute(\"uv\",new cn(p,2))}function wa(t,e,n,r,i,a,o){ba.call(this,0,t,e,n,r,i,a,o),this.type=\"ConeGeometry\",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function Ma(t,e,n,r,i,a,o){_a.call(this,0,t,e,n,r,i,a,o),this.type=\"ConeBufferGeometry\",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function Ea(t,e,n,r){Ke.call(this),this.type=\"CircleGeometry\",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new Ta(t,e,n,r)),this.mergeVertices()}function Ta(t,e,n,r){dn.call(this),this.type=\"CircleBufferGeometry\",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},t=t||1,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var i,a,o=[],s=[],c=[],h=[],l=new Te,u=new we;for(s.push(0,0,0),c.push(0,0,1),h.push(.5,.5),a=0,i=3;a<=e;a++,i+=3){var p=n+a/e*r;l.x=t*Math.cos(p),l.y=t*Math.sin(p),s.push(l.x,l.y,l.z),c.push(0,0,1),u.x=(s[i]/t+1)/2,u.y=(s[i+1]/t+1)/2,h.push(u.x,u.y)}for(i=1;i<=e;i++)o.push(i,i+1,0);this.setIndex(o),this.addAttribute(\"position\",new cn(s,3)),this.addAttribute(\"normal\",new cn(c,3)),this.addAttribute(\"uv\",new cn(h,2))}ca.prototype=Object.create(Ke.prototype),ca.prototype.constructor=ca,ha.prototype=Object.create(aa.prototype),ha.prototype.constructor=ha,la.prototype=Object.create(Ke.prototype),la.prototype.constructor=la,ua.prototype=Object.create(dn.prototype),ua.prototype.constructor=ua,pa.prototype=Object.create(Ke.prototype),pa.prototype.constructor=pa,da.prototype=Object.create(dn.prototype),da.prototype.constructor=da,fa.prototype=Object.create(Ke.prototype),fa.prototype.constructor=fa,ma.prototype=Object.create(dn.prototype),ma.prototype.constructor=ma,ga.prototype=Object.create(Ke.prototype),ga.prototype.constructor=ga,ga.prototype.toJSON=function(){var t=Ke.prototype.toJSON.call(this);return ya(this.parameters.shapes,t)},va.prototype=Object.create(dn.prototype),va.prototype.constructor=va,va.prototype.toJSON=function(){var t=dn.prototype.toJSON.call(this);return ya(this.parameters.shapes,t)},xa.prototype=Object.create(dn.prototype),xa.prototype.constructor=xa,ba.prototype=Object.create(Ke.prototype),ba.prototype.constructor=ba,_a.prototype=Object.create(dn.prototype),_a.prototype.constructor=_a,wa.prototype=Object.create(ba.prototype),wa.prototype.constructor=wa,Ma.prototype=Object.create(_a.prototype),Ma.prototype.constructor=Ma,Ea.prototype=Object.create(Ke.prototype),Ea.prototype.constructor=Ea,Ta.prototype=Object.create(dn.prototype),Ta.prototype.constructor=Ta;var Sa=Object.freeze({WireframeGeometry:fi,ParametricGeometry:mi,ParametricBufferGeometry:gi,TetrahedronGeometry:xi,TetrahedronBufferGeometry:bi,OctahedronGeometry:_i,OctahedronBufferGeometry:wi,IcosahedronGeometry:Mi,IcosahedronBufferGeometry:Ei,DodecahedronGeometry:Ti,DodecahedronBufferGeometry:Si,PolyhedronGeometry:vi,PolyhedronBufferGeometry:yi,TubeGeometry:Ai,TubeBufferGeometry:Li,TorusKnotGeometry:Ri,TorusKnotBufferGeometry:Pi,TorusGeometry:Ci,TorusBufferGeometry:Oi,TextGeometry:ca,TextBufferGeometry:ha,SphereGeometry:la,SphereBufferGeometry:ua,RingGeometry:pa,RingBufferGeometry:da,PlaneGeometry:gn,PlaneBufferGeometry:vn,LatheGeometry:fa,LatheBufferGeometry:ma,ShapeGeometry:ga,ShapeBufferGeometry:va,ExtrudeGeometry:ia,ExtrudeBufferGeometry:aa,EdgesGeometry:xa,ConeGeometry:wa,ConeBufferGeometry:Ma,CylinderGeometry:ba,CylinderBufferGeometry:_a,CircleGeometry:Ea,CircleBufferGeometry:Ta,BoxGeometry:fn,BoxBufferGeometry:mn});function Aa(t){xn.call(this),this.type=\"ShadowMaterial\",this.color=new Ge(0),this.transparent=!0,this.setValues(t)}function La(t){bn.call(this,t),this.type=\"RawShaderMaterial\"}function Ra(t){xn.call(this),this.defines={STANDARD:\"\"},this.type=\"MeshStandardMaterial\",this.color=new Ge(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xe,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Pa(t){Ra.call(this),this.defines={PHYSICAL:\"\"},this.type=\"MeshPhysicalMaterial\",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}function Ca(t){xn.call(this),this.type=\"MeshPhongMaterial\",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xe,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Oa(t){Ca.call(this),this.defines={TOON:\"\"},this.type=\"MeshToonMaterial\",this.gradientMap=null,this.setValues(t)}function Ia(t){xn.call(this),this.type=\"MeshNormalMaterial\",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xe,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Na(t){xn.call(this),this.type=\"MeshLambertMaterial\",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Da(t){if(xn.call(this),this.defines={MATCAP:\"\"},this.type=\"MeshMatcapMaterial\",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xe,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.lights=!1,this.setValues(t),null===this.matcap){var e=document.createElement(\"canvas\");e.width=1,e.height=1;var n=e.getContext(\"2d\");n.fillStyle=\"#fff\",n.fillRect(0,0,1,1),this.matcap=new THREE.CanvasTexture(e)}}function Ua(t){ii.call(this),this.type=\"LineDashedMaterial\",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Aa.prototype=Object.create(xn.prototype),Aa.prototype.constructor=Aa,Aa.prototype.isShadowMaterial=!0,Aa.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this},La.prototype=Object.create(bn.prototype),La.prototype.constructor=La,La.prototype.isRawShaderMaterial=!0,Ra.prototype=Object.create(xn.prototype),Ra.prototype.constructor=Ra,Ra.prototype.isMeshStandardMaterial=!0,Ra.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.defines={STANDARD:\"\"},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Pa.prototype=Object.create(Ra.prototype),Pa.prototype.constructor=Pa,Pa.prototype.isMeshPhysicalMaterial=!0,Pa.prototype.copy=function(t){return Ra.prototype.copy.call(this,t),this.defines={PHYSICAL:\"\"},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},Ca.prototype=Object.create(xn.prototype),Ca.prototype.constructor=Ca,Ca.prototype.isMeshPhongMaterial=!0,Ca.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Oa.prototype=Object.create(Ca.prototype),Oa.prototype.constructor=Oa,Oa.prototype.isMeshToonMaterial=!0,Oa.prototype.copy=function(t){return Ca.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},Ia.prototype=Object.create(xn.prototype),Ia.prototype.constructor=Ia,Ia.prototype.isMeshNormalMaterial=!0,Ia.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Na.prototype=Object.create(xn.prototype),Na.prototype.constructor=Na,Na.prototype.isMeshLambertMaterial=!0,Na.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Da.prototype=Object.create(xn.prototype),Da.prototype.constructor=Da,Da.prototype.isMeshMatcapMaterial=!0,Da.prototype.copy=function(t){return xn.prototype.copy.call(this,t),this.defines={MATCAP:\"\"},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Ua.prototype=Object.create(ii.prototype),Ua.prototype.constructor=Ua,Ua.prototype.isLineDashedMaterial=!0,Ua.prototype.copy=function(t){return ii.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Ba=Object.freeze({ShadowMaterial:Aa,SpriteMaterial:Kr,RawShaderMaterial:La,ShaderMaterial:bn,PointsMaterial:ci,MeshPhysicalMaterial:Pa,MeshStandardMaterial:Ra,MeshPhongMaterial:Ca,MeshToonMaterial:Oa,MeshNormalMaterial:Ia,MeshLambertMaterial:Na,MeshDepthMaterial:Ur,MeshDistanceMaterial:Br,MeshBasicMaterial:Mn,MeshMatcapMaterial:Da,LineDashedMaterial:Ua,LineBasicMaterial:ii,Material:xn}),Fa={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function za(t,e,n){var r=this,i=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===i&&void 0!==r.onStart&&r.onStart(t,a,o),i=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this}}var Ha=new za,Ga={};function Va(t){this.manager=void 0!==t?t:Ha}function ka(t){this.manager=void 0!==t?t:Ha,this._parser=null}function ja(t){this.manager=void 0!==t?t:Ha,this._parser=null}function Wa(t){this.manager=void 0!==t?t:Ha}function Xa(t){this.manager=void 0!==t?t:Ha}function qa(t){this.manager=void 0!==t?t:Ha}function Ya(){this.type=\"Curve\",this.arcLengthDivisions=200}function Za(t,e,n,r,i,a,o,s){Ya.call(this),this.type=\"EllipseCurve\",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Ja(t,e,n,r,i,a){Za.call(this,t,e,n,n,r,i,a),this.type=\"ArcCurve\"}function Qa(){var t=0,e=0,n=0,r=0;function i(i,a,o,s){t=i,e=o,n=-3*i+3*a-2*o-s,r=2*i-2*a+o+s}return{initCatmullRom:function(t,e,n,r,a){i(e,n,a*(n-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,a,o,s){var c=(e-t)/a-(n-t)/(a+o)+(n-e)/o,h=(n-e)/o-(r-e)/(o+s)+(r-n)/s;i(e,n,c*=o,h*=o)},calc:function(i){var a=i*i;return t+e*i+n*a+r*(a*i)}}}Object.assign(Va.prototype,{load:function(t,e,n,r){void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=Fa.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;if(void 0===Ga[t]){var o=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){var s=o[1],c=!!o[2],h=o[3];h=window.decodeURIComponent(h),c&&(h=window.atob(h));try{var l,u=(this.responseType||\"\").toLowerCase();switch(u){case\"arraybuffer\":case\"blob\":for(var p=new Uint8Array(h.length),d=0;d<h.length;d++)p[d]=h.charCodeAt(d);l=\"blob\"===u?new Blob([p.buffer],{type:s}):p.buffer;break;case\"document\":var f=new DOMParser;l=f.parseFromString(h,s);break;case\"json\":l=JSON.parse(h);break;default:l=h}window.setTimeout(function(){e&&e(l),i.manager.itemEnd(t)},0)}catch(e){window.setTimeout(function(){r&&r(e),i.manager.itemEnd(t),i.manager.itemError(t)},0)}}else{Ga[t]=[],Ga[t].push({onLoad:e,onProgress:n,onError:r});var m=new XMLHttpRequest;for(var g in m.open(\"GET\",t,!0),m.addEventListener(\"load\",function(e){var n=this.response;Fa.add(t,n);var r=Ga[t];if(delete Ga[t],200===this.status||0===this.status){0===this.status&&console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");for(var a=0,o=r.length;a<o;a++){(s=r[a]).onLoad&&s.onLoad(n)}i.manager.itemEnd(t)}else{for(a=0,o=r.length;a<o;a++){var s;(s=r[a]).onError&&s.onError(e)}i.manager.itemEnd(t),i.manager.itemError(t)}},!1),m.addEventListener(\"progress\",function(e){for(var n=Ga[t],r=0,i=n.length;r<i;r++){var a=n[r];a.onProgress&&a.onProgress(e)}},!1),m.addEventListener(\"error\",function(e){var n=Ga[t];delete Ga[t];for(var r=0,a=n.length;r<a;r++){var o=n[r];o.onError&&o.onError(e)}i.manager.itemEnd(t),i.manager.itemError(t)},!1),m.addEventListener(\"abort\",function(e){var n=Ga[t];delete Ga[t];for(var r=0,a=n.length;r<a;r++){var o=n[r];o.onError&&o.onError(e)}i.manager.itemEnd(t),i.manager.itemError(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:\"text/plain\"),this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return i.manager.itemStart(t),m}Ga[t].push({onLoad:e,onProgress:n,onError:r})},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(ka.prototype,{load:function(t,e,n,r){var i=this,a=[],o=new ui;o.image=a;var s=new Va(this.manager);function c(c){s.load(t[c],function(t){var n=i._parser(t,!0);a[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(h+=1)&&(1===n.mipmapCount&&(o.minFilter=pt),o.format=n.format,o.needsUpdate=!0,e&&e(o))},n,r)}if(s.setPath(this.path),s.setResponseType(\"arraybuffer\"),Array.isArray(t))for(var h=0,l=0,u=t.length;l<u;++l)c(l);else s.load(t,function(t){var n=i._parser(t,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,s=0;s<r;s++){a[s]={mipmaps:[]};for(var c=0;c<n.mipmapCount;c++)a[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+c]),a[s].format=n.format,a[s].width=n.width,a[s].height=n.height}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=pt),o.format=n.format,o.needsUpdate=!0,e&&e(o)},n,r);return o},setPath:function(t){return this.path=t,this}}),Object.assign(ja.prototype,{load:function(t,e,n,r){var i=this,a=new Ie,o=new Va(this.manager);return o.setResponseType(\"arraybuffer\"),o.load(t,function(t){var n=i._parser(t);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:st,a.wrapT=void 0!==n.wrapT?n.wrapT:st,a.magFilter=void 0!==n.magFilter?n.magFilter:pt,a.minFilter=void 0!==n.minFilter?n.minFilter:ft,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps),1===n.mipmapCount&&(a.minFilter=pt),a.needsUpdate=!0,e&&e(a,n))},n,r),a}}),Object.assign(Wa.prototype,{crossOrigin:\"anonymous\",load:function(t,e,n,r){void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=Fa.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;var o=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");function s(){o.removeEventListener(\"load\",s,!1),o.removeEventListener(\"error\",c,!1),Fa.add(t,this),e&&e(this),i.manager.itemEnd(t)}function c(e){o.removeEventListener(\"load\",s,!1),o.removeEventListener(\"error\",c,!1),r&&r(e),i.manager.itemEnd(t),i.manager.itemError(t)}return o.addEventListener(\"load\",s,!1),o.addEventListener(\"error\",c,!1),\"data:\"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Xa.prototype,{crossOrigin:\"anonymous\",load:function(t,e,n,r){var i=new Sn,a=new Wa(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(n){a.load(t[n],function(t){i.images[n]=t,6===++o&&(i.needsUpdate=!0,e&&e(i))},void 0,r)}for(var c=0;c<t.length;++c)s(c);return i},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(qa.prototype,{crossOrigin:\"anonymous\",load:function(t,e,n,r){var i=new Re,a=new Wa(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(n){i.image=n;var r=t.search(/\\.jpe?g$/i)>0||0===t.search(/^data\\:image\\/jpeg/);i.format=r?Lt:Rt,i.needsUpdate=!0,void 0!==e&&e(i)},n,r),i},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Ya.prototype,{getPoint:function(){return console.warn(\"THREE.Curve: .getPoint() not implemented.\"),null},getPointAt:function(t,e){var n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;n<=t;n++)a+=(e=this.getPoint(n/t)).distanceTo(i),r.push(a),i=e;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var n,r=this.getLengths(),i=0,a=r.length;n=e||t*r[a-1];for(var o,s=0,c=a-1;s<=c;)if((o=r[i=Math.floor(s+(c-s)/2)]-n)<0)s=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(r[i=c]===n)return i/(a-1);var h=r[i];return(i+(n-h)/(r[i+1]-h))/(a-1)},getTangent:function(t){var e=t-1e-4,n=t+1e-4;e<0&&(e=0),n>1&&(n=1);var r=this.getPoint(e);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var n,r,i,a=new Te,o=[],s=[],c=[],h=new Te,l=new Me;for(n=0;n<=t;n++)r=n/t,o[n]=this.getTangentAt(r),o[n].normalize();s[0]=new Te,c[0]=new Te;var u=Number.MAX_VALUE,p=Math.abs(o[0].x),d=Math.abs(o[0].y),f=Math.abs(o[0].z);for(p<=u&&(u=p,a.set(1,0,0)),d<=u&&(u=d,a.set(0,1,0)),f<=u&&a.set(0,0,1),h.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],h),c[0].crossVectors(o[0],s[0]),n=1;n<=t;n++)s[n]=s[n-1].clone(),c[n]=c[n-1].clone(),h.crossVectors(o[n-1],o[n]),h.length()>Number.EPSILON&&(h.normalize(),i=Math.acos(_e.clamp(o[n-1].dot(o[n]),-1,1)),s[n].applyMatrix4(l.makeRotationAxis(h,i))),c[n].crossVectors(o[n],s[n]);if(!0===e)for(i=Math.acos(_e.clamp(s[0].dot(s[t]),-1,1)),i/=t,o[0].dot(h.crossVectors(s[0],s[t]))>0&&(i=-i),n=1;n<=t;n++)s[n].applyMatrix4(l.makeRotationAxis(o[n],i*n)),c[n].crossVectors(o[n],s[n]);return{tangents:o,normals:s,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:\"Curve\",generator:\"Curve.toJSON\"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Za.prototype=Object.create(Ya.prototype),Za.prototype.constructor=Za,Za.prototype.isEllipseCurve=!0,Za.prototype.getPoint=function(t,e){for(var n=e||new we,r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);var o=this.aStartAngle+t*i,s=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var h=Math.cos(this.aRotation),l=Math.sin(this.aRotation),u=s-this.aX,p=c-this.aY;s=u*h-p*l+this.aX,c=u*l+p*h+this.aY}return n.set(s,c)},Za.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Za.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Za.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ja.prototype=Object.create(Za.prototype),Ja.prototype.constructor=Ja,Ja.prototype.isArcCurve=!0;var Ka=new Te,$a=new Qa,to=new Qa,eo=new Qa;function no(t,e,n,r){Ya.call(this),this.type=\"CatmullRomCurve3\",this.points=t||[],this.closed=e||!1,this.curveType=n||\"centripetal\",this.tension=r||.5}function ro(t,e,n,r,i){var a=.5*(r-e),o=.5*(i-n),s=t*t;return(2*n-2*r+a+o)*(t*s)+(-3*n+3*r-2*a-o)*s+a*t+n}function io(t,e,n,r){return function(t,e){var n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function ao(t,e,n,r,i){return function(t,e){var n=1-t;return n*n*n*e}(t,e)+function(t,e){var n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}function oo(t,e,n,r){Ya.call(this),this.type=\"CubicBezierCurve\",this.v0=t||new we,this.v1=e||new we,this.v2=n||new we,this.v3=r||new we}function so(t,e,n,r){Ya.call(this),this.type=\"CubicBezierCurve3\",this.v0=t||new Te,this.v1=e||new Te,this.v2=n||new Te,this.v3=r||new Te}function co(t,e){Ya.call(this),this.type=\"LineCurve\",this.v1=t||new we,this.v2=e||new we}function ho(t,e){Ya.call(this),this.type=\"LineCurve3\",this.v1=t||new Te,this.v2=e||new Te}function lo(t,e,n){Ya.call(this),this.type=\"QuadraticBezierCurve\",this.v0=t||new we,this.v1=e||new we,this.v2=n||new we}function uo(t,e,n){Ya.call(this),this.type=\"QuadraticBezierCurve3\",this.v0=t||new Te,this.v1=e||new Te,this.v2=n||new Te}function po(t){Ya.call(this),this.type=\"SplineCurve\",this.points=t||[]}no.prototype=Object.create(Ya.prototype),no.prototype.constructor=no,no.prototype.isCatmullRomCurve3=!0,no.prototype.getPoint=function(t,e){var n,r,i,a,o=e||new Te,s=this.points,c=s.length,h=(c-(this.closed?0:1))*t,l=Math.floor(h),u=h-l;if(this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/c)+1)*c:0===u&&l===c-1&&(l=c-2,u=1),this.closed||l>0?n=s[(l-1)%c]:(Ka.subVectors(s[0],s[1]).add(s[0]),n=Ka),r=s[l%c],i=s[(l+1)%c],this.closed||l+2<c?a=s[(l+2)%c]:(Ka.subVectors(s[c-1],s[c-2]).add(s[c-1]),a=Ka),\"centripetal\"===this.curveType||\"chordal\"===this.curveType){var p=\"chordal\"===this.curveType?.5:.25,d=Math.pow(n.distanceToSquared(r),p),f=Math.pow(r.distanceToSquared(i),p),m=Math.pow(i.distanceToSquared(a),p);f<1e-4&&(f=1),d<1e-4&&(d=f),m<1e-4&&(m=f),$a.initNonuniformCatmullRom(n.x,r.x,i.x,a.x,d,f,m),to.initNonuniformCatmullRom(n.y,r.y,i.y,a.y,d,f,m),eo.initNonuniformCatmullRom(n.z,r.z,i.z,a.z,d,f,m)}else\"catmullrom\"===this.curveType&&($a.initCatmullRom(n.x,r.x,i.x,a.x,this.tension),to.initCatmullRom(n.y,r.y,i.y,a.y,this.tension),eo.initCatmullRom(n.z,r.z,i.z,a.z,this.tension));return o.set($a.calc(u),to.calc(u),eo.calc(u)),o},no.prototype.copy=function(t){Ya.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push(r.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},no.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var r=this.points[e];t.points.push(r.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},no.prototype.fromJSON=function(t){Ya.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push((new Te).fromArray(r))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},oo.prototype=Object.create(Ya.prototype),oo.prototype.constructor=oo,oo.prototype.isCubicBezierCurve=!0,oo.prototype.getPoint=function(t,e){var n=e||new we,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(ao(t,r.x,i.x,a.x,o.x),ao(t,r.y,i.y,a.y,o.y)),n},oo.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},oo.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},oo.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},so.prototype=Object.create(Ya.prototype),so.prototype.constructor=so,so.prototype.isCubicBezierCurve3=!0,so.prototype.getPoint=function(t,e){var n=e||new Te,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(ao(t,r.x,i.x,a.x,o.x),ao(t,r.y,i.y,a.y,o.y),ao(t,r.z,i.z,a.z,o.z)),n},so.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},so.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},so.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},co.prototype=Object.create(Ya.prototype),co.prototype.constructor=co,co.prototype.isLineCurve=!0,co.prototype.getPoint=function(t,e){var n=e||new we;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},co.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},co.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},co.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},co.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},co.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},ho.prototype=Object.create(Ya.prototype),ho.prototype.constructor=ho,ho.prototype.isLineCurve3=!0,ho.prototype.getPoint=function(t,e){var n=e||new Te;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},ho.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},ho.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},ho.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},ho.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},lo.prototype=Object.create(Ya.prototype),lo.prototype.constructor=lo,lo.prototype.isQuadraticBezierCurve=!0,lo.prototype.getPoint=function(t,e){var n=e||new we,r=this.v0,i=this.v1,a=this.v2;return n.set(io(t,r.x,i.x,a.x),io(t,r.y,i.y,a.y)),n},lo.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},lo.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},lo.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},uo.prototype=Object.create(Ya.prototype),uo.prototype.constructor=uo,uo.prototype.isQuadraticBezierCurve3=!0,uo.prototype.getPoint=function(t,e){var n=e||new Te,r=this.v0,i=this.v1,a=this.v2;return n.set(io(t,r.x,i.x,a.x),io(t,r.y,i.y,a.y),io(t,r.z,i.z,a.z)),n},uo.prototype.copy=function(t){return Ya.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},uo.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},uo.prototype.fromJSON=function(t){return Ya.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},po.prototype=Object.create(Ya.prototype),po.prototype.constructor=po,po.prototype.isSplineCurve=!0,po.prototype.getPoint=function(t,e){var n=e||new we,r=this.points,i=(r.length-1)*t,a=Math.floor(i),o=i-a,s=r[0===a?a:a-1],c=r[a],h=r[a>r.length-2?r.length-1:a+1],l=r[a>r.length-3?r.length-1:a+2];return n.set(ro(o,s.x,c.x,h.x,l.x),ro(o,s.y,c.y,h.y,l.y)),n},po.prototype.copy=function(t){Ya.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push(r.clone())}return this},po.prototype.toJSON=function(){var t=Ya.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var r=this.points[e];t.points.push(r.toArray())}return t},po.prototype.fromJSON=function(t){Ya.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push((new we).fromArray(r))}return this};var fo=Object.freeze({ArcCurve:Ja,CatmullRomCurve3:no,CubicBezierCurve:oo,CubicBezierCurve3:so,EllipseCurve:Za,LineCurve:co,LineCurve3:ho,QuadraticBezierCurve:lo,QuadraticBezierCurve3:uo,SplineCurve:po});function mo(){Ya.call(this),this.type=\"CurvePath\",this.curves=[],this.autoClose=!1}function go(t){mo.call(this),this.type=\"Path\",this.currentPoint=new we,t&&this.setFromPoints(t)}function vo(t){go.call(this,t),this.uuid=_e.generateUUID(),this.type=\"Shape\",this.holes=[]}function yo(t,e){Je.call(this),this.type=\"Light\",this.color=new Ge(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function xo(t,e,n){yo.call(this,t,n),this.type=\"HemisphereLight\",this.castShadow=void 0,this.position.copy(Je.DefaultUp),this.updateMatrix(),this.groundColor=new Ge(e)}function bo(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new we(512,512),this.map=null,this.matrix=new Me}function _o(){bo.call(this,new kr(50,1,.5,500))}function wo(t,e,n,r,i,a){yo.call(this,t,e),this.type=\"SpotLight\",this.position.copy(Je.DefaultUp),this.updateMatrix(),this.target=new Je,Object.defineProperty(this,\"power\",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new _o}function Mo(t,e,n,r){yo.call(this,t,e),this.type=\"PointLight\",Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new bo(new kr(90,1,.5,500))}function Eo(t,e,n,r,i,a){Vr.call(this),this.type=\"OrthographicCamera\",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function To(){bo.call(this,new Eo(-5,5,5,-5,.5,500))}function So(t,e){yo.call(this,t,e),this.type=\"DirectionalLight\",this.position.copy(Je.DefaultUp),this.updateMatrix(),this.target=new Je,this.shadow=new To}function Ao(t,e){yo.call(this,t,e),this.type=\"AmbientLight\",this.castShadow=void 0}function Lo(t,e,n,r){yo.call(this,t,e),this.type=\"RectAreaLight\",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}mo.prototype=Object.assign(Object.create(Ya.prototype),{constructor:mo,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new co(e,t))},getPoint:function(t){for(var e=t*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=e){var i=n[r]-e,a=this.curves[r],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}r++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,n=[],r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(n.push(h),e=h)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(t){Ya.prototype.copy.call(this,t),this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var r=t.curves[e];this.curves.push(r.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Ya.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,n=this.curves.length;e<n;e++){var r=this.curves[e];t.curves.push(r.toJSON())}return t},fromJSON:function(t){Ya.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var r=t.curves[e];this.curves.push((new fo[r.type]).fromJSON(r))}return this}}),go.prototype=Object.assign(Object.create(mo.prototype),{constructor:go,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var n=new co(this.currentPoint.clone(),new we(t,e));this.curves.push(n),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,n,r){var i=new lo(this.currentPoint.clone(),new we(t,e),new we(n,r));this.curves.push(i),this.currentPoint.set(n,r)},bezierCurveTo:function(t,e,n,r,i,a){var o=new oo(this.currentPoint.clone(),new we(t,e),new we(n,r),new we(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(t){var e=new po([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,n,r,i,a)},absarc:function(t,e,n,r,i,a){this.absellipse(t,e,n,n,r,i,a)},ellipse:function(t,e,n,r,i,a,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,n,r,i,a,o,s)},absellipse:function(t,e,n,r,i,a,o,s){var c=new Za(t,e,n,r,i,a,o,s);if(this.curves.length>0){var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)},copy:function(t){return mo.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=mo.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return mo.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),vo.prototype=Object.assign(Object.create(go.prototype),{constructor:vo,getPointsHoles:function(t){for(var e=[],n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){go.prototype.copy.call(this,t),this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var r=t.holes[e];this.holes.push(r.clone())}return this},toJSON:function(){var t=go.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,n=this.holes.length;e<n;e++){var r=this.holes[e];t.holes.push(r.toJSON())}return t},fromJSON:function(t){go.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var r=t.holes[e];this.holes.push((new go).fromJSON(r))}return this}}),yo.prototype=Object.assign(Object.create(Je.prototype),{constructor:yo,isLight:!0,copy:function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=Je.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),xo.prototype=Object.assign(Object.create(yo.prototype),{constructor:xo,isHemisphereLight:!0,copy:function(t){return yo.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(bo.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),_o.prototype=Object.assign(Object.create(bo.prototype),{constructor:_o,isSpotLightShadow:!0,update:function(t){var e=this.camera,n=2*_e.RAD2DEG*t.angle,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix())}}),wo.prototype=Object.assign(Object.create(yo.prototype),{constructor:wo,isSpotLight:!0,copy:function(t){return yo.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Mo.prototype=Object.assign(Object.create(yo.prototype),{constructor:Mo,isPointLight:!0,copy:function(t){return yo.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Eo.prototype=Object.assign(Object.create(Vr.prototype),{constructor:Eo,isOrthographicCamera:!0,copy:function(t,e){return Vr.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-t,a=n+t,o=r+e,s=r-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(i+=l*(this.view.offsetX/c))+l*(this.view.width/c),s=(o-=u*(this.view.offsetY/h))-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Je.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),To.prototype=Object.assign(Object.create(bo.prototype),{constructor:To}),So.prototype=Object.assign(Object.create(yo.prototype),{constructor:So,isDirectionalLight:!0,copy:function(t){return yo.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Ao.prototype=Object.assign(Object.create(yo.prototype),{constructor:Ao,isAmbientLight:!0}),Lo.prototype=Object.assign(Object.create(yo.prototype),{constructor:Lo,isRectAreaLight:!0,copy:function(t){return yo.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=yo.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});var Ro={arraySlice:function(t,e,n){return Ro.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:\"number\"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,n=new Array(e),r=0;r!==e;++r)n[r]=r;return n.sort(function(e,n){return t[e]-t[n]}),n},sortedArray:function(t,e,n){for(var r=t.length,i=new t.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*e,c=0;c!==e;++c)i[o++]=t[s+c];return i},flattenJSON:function(t,e,n,r){for(var i=1,a=t[0];void 0!==a&&void 0===a[r];)a=t[i++];if(void 0!==a){var o=a[r];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[r])&&(e.push(a.time),n.push.apply(n,o)),a=t[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[r])&&(e.push(a.time),o.toArray(n,n.length)),a=t[i++]}while(void 0!==a);else do{void 0!==(o=a[r])&&(e.push(a.time),n.push(o)),a=t[i++]}while(void 0!==a)}}};function Po(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Co(t,e,n,r){Po.call(this,t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Oo(t,e,n,r){Po.call(this,t,e,n,r)}function Io(t,e,n,r){Po.call(this,t,e,n,r)}function No(t,e,n,r){if(void 0===t)throw new Error(\"THREE.KeyframeTrack: track name is undefined\");if(void 0===e||0===e.length)throw new Error(\"THREE.KeyframeTrack: no keyframes in track named \"+t);this.name=t,this.times=Ro.convertArray(e,this.TimeBufferType),this.values=Ro.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function Do(t,e,n){No.call(this,t,e,n)}function Uo(t,e,n,r){No.call(this,t,e,n,r)}function Bo(t,e,n,r){No.call(this,t,e,n,r)}function Fo(t,e,n,r){Po.call(this,t,e,n,r)}function zo(t,e,n,r){No.call(this,t,e,n,r)}function Ho(t,e,n,r){No.call(this,t,e,n,r)}function Go(t,e,n,r){No.call(this,t,e,n,r)}function Vo(t,e,n){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.uuid=_e.generateUUID(),this.duration<0&&this.resetDuration()}function ko(t){if(void 0===t.type)throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");var e=function(t){switch(t.toLowerCase()){case\"scalar\":case\"double\":case\"float\":case\"number\":case\"integer\":return Bo;case\"vector\":case\"vector2\":case\"vector3\":case\"vector4\":return Go;case\"color\":return Uo;case\"quaternion\":return zo;case\"bool\":case\"boolean\":return Do;case\"string\":return Ho}throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \"+t)}(t.type);if(void 0===t.times){var n=[],r=[];Ro.flattenJSON(t.keys,n,r,\"value\"),t.times=n,t.values=r}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}function jo(t){this.manager=void 0!==t?t:Ha,this.textures={}}function Wo(t){this.manager=void 0!==t?t:Ha}Object.assign(Po.prototype,{evaluate:function(t){var e=this.parameterPositions,n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{var a;n:{r:if(!(t<r)){for(var o=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===o)break;if(i=r,t<(r=e[++n]))break e}a=e.length;break n}if(t>=i)break t;var s=e[1];t<s&&(n=2,i=s);for(o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===o)break;if(r=i,t>=(i=e[--n-1]))break e}a=n,n=0}for(;n<a;){var c=n+a>>>1;t<e[c]?a=c:n=c+1}if(r=e[n],void 0===(i=e[n-1]))return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r,a=0;a!==r;++a)e[a]=n[i+a];return e},interpolate_:function(){throw new Error(\"call to abstract method\")},intervalChanged_:function(){}}),//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(Po.prototype,{beforeStart_:Po.prototype.copySampleValue_,afterEnd_:Po.prototype.copySampleValue_}),Co.prototype=Object.assign(Object.create(Po.prototype),{constructor:Co,DefaultSettings_:{endingStart:oe,endingEnd:oe},intervalChanged_:function(t,e,n){var r=this.parameterPositions,i=t-2,a=t+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:i=t,o=2*e-n;break;case 2402:o=e+r[i=r.length-2]-r[i+1];break;default:i=t,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=t,s=2*n-e;break;case 2402:a=1,s=n+r[1]-r[0];break;default:a=t-1,s=e}var c=.5*(n-e),h=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-n),this._offsetPrev=i*h,this._offsetNext=a*h},interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(n-e)/(r-e),f=d*d,m=f*d,g=-u*m+2*u*f-u*d,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,b=0;b!==o;++b)i[b]=g*a[h+b]+v*a[c+b]+y*a[s+b]+x*a[l+b];return i}}),Oo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Oo,interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=(n-e)/(r-e),l=1-h,u=0;u!==o;++u)i[u]=a[c+u]*l+a[s+u]*h;return i}}),Io.prototype=Object.assign(Object.create(Po.prototype),{constructor:Io,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(No,{toJSON:function(t){var e,n=t.constructor;if(void 0!==n.toJSON)e=n.toJSON(t);else{e={name:t.name,times:Ro.convertArray(t.times,Array),values:Ro.convertArray(t.values,Array)};var r=t.getInterpolation();r!==t.DefaultInterpolation&&(e.interpolation=r)}return e.type=t.ValueTypeName,e}}),Object.assign(No.prototype,{constructor:No,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Io(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Oo(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Co(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var n=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn(\"THREE.KeyframeTrack:\",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,n=0,r=e.length;n!==r;++n)e[n]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,n=0,r=e.length;n!==r;++n)e[n]*=t;return this},trim:function(t,e){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<t;)++i;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=Ro.arraySlice(n,i,a),this.values=Ro.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error(\"THREE.KeyframeTrack: Invalid value size in track.\",this),t=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error(\"THREE.KeyframeTrack: Track is empty.\",this),t=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if(\"number\"==typeof s&&isNaN(s)){console.error(\"THREE.KeyframeTrack: Time is not a valid number.\",this,o,s),t=!1;break}if(null!==a&&a>s){console.error(\"THREE.KeyframeTrack: Out of order keys.\",this,o,s,a),t=!1;break}a=s}if(void 0!==r&&Ro.isTypedArray(r)){o=0;for(var c=r.length;o!==c;++o){var h=r[o];if(isNaN(h)){console.error(\"THREE.KeyframeTrack: Value is not a valid number.\",this,o,h),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,n=this.getValueSize(),r=2302===this.getInterpolation(),i=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o];if(c!==t[o+1]&&(1!==o||c!==c[0]))if(r)s=!0;else for(var h=o*n,l=h-n,u=h+n,p=0;p!==n;++p){var d=e[h+p];if(d!==e[l+p]||d!==e[u+p]){s=!0;break}}if(s){if(o!==i){t[i]=t[o];var f=o*n,m=i*n;for(p=0;p!==n;++p)e[m+p]=e[f+p]}++i}}if(a>0){t[i]=t[a];for(f=a*n,m=i*n,p=0;p!==n;++p)e[m+p]=e[f+p];++i}return i!==t.length&&(this.times=Ro.arraySlice(t,0,i),this.values=Ro.arraySlice(e,0,i*n)),this}}),Do.prototype=Object.assign(Object.create(No.prototype),{constructor:Do,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Uo.prototype=Object.assign(Object.create(No.prototype),{constructor:Uo,ValueTypeName:\"color\"}),Bo.prototype=Object.assign(Object.create(No.prototype),{constructor:Bo,ValueTypeName:\"number\"}),Fo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Fo,interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=(n-e)/(r-e),h=s+o;s!==h;s+=4)Ee.slerpFlat(i,0,a,s-o,a,s,c);return i}}),zo.prototype=Object.assign(Object.create(No.prototype),{constructor:zo,ValueTypeName:\"quaternion\",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new Fo(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Ho.prototype=Object.assign(Object.create(No.prototype),{constructor:Ho,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Go.prototype=Object.assign(Object.create(No.prototype),{constructor:Go,ValueTypeName:\"vector\"}),Object.assign(Vo,{parse:function(t){for(var e=[],n=t.tracks,r=1/(t.fps||1),i=0,a=n.length;i!==a;++i)e.push(ko(n[i]).scale(r));return new Vo(t.name,t.duration,e)},toJSON:function(t){for(var e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},i=0,a=n.length;i!==a;++i)e.push(No.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(t,e,n,r){for(var i=e.length,a=[],o=0;o<i;o++){var s=[],c=[];s.push((o+i-1)%i,o,(o+1)%i),c.push(0,1,0);var h=Ro.getKeyframeOrder(s);s=Ro.sortedArray(s,1,h),c=Ro.sortedArray(c,1,h),r||0!==s[0]||(s.push(i),c.push(c[0])),a.push(new Bo(\".morphTargetInfluences[\"+e[o].name+\"]\",s,c).scale(1/n))}return new Vo(t,-1,a)},findByName:function(t,e){var n=t;if(!Array.isArray(t)){var r=t;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){for(var r={},i=/^([\\w-]*?)([\\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(i);if(c&&c.length>1){var h=r[u=c[1]];h||(r[u]=h=[]),h.push(s)}}var l=[];for(var u in r)l.push(Vo.CreateFromMorphTargetSequence(u,r[u],e,n));return l},parseAnimation:function(t,e){if(!t)return console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\"),null;for(var n=function(t,e,n,r,i){if(0!==n.length){var a=[],o=[];Ro.flattenJSON(n,a,o,r),0!==a.length&&i.push(new t(e,a,o))}},r=[],i=t.name||\"default\",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;if(h&&0!==h.length)if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(var p=0;p<h[u].morphTargets.length;p++)l[h[u].morphTargets[p]]=-1;for(var d in l){var f=[],m=[];for(p=0;p!==h[u].morphTargets.length;++p){var g=h[u];f.push(g.time),m.push(g.morphTarget===d?1:0)}r.push(new Bo(\".morphTargetInfluence[\"+d+\"]\",f,m))}a=l.length*(o||1)}else{var v=\".bones[\"+e[c].name+\"]\";n(Go,v+\".position\",h,\"pos\",r),n(zo,v+\".quaternion\",h,\"rot\",r),n(Go,v+\".scale\",h,\"scl\",r)}}return 0===r.length?null:new Vo(i,a,r)}}),Object.assign(Vo.prototype,{resetDuration:function(){for(var t=0,e=0,n=this.tracks.length;e!==n;++e){var r=this.tracks[e];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(jo.prototype,{load:function(t,e,n,r){var i=this;new Va(i.manager).load(t,function(t){e(i.parse(JSON.parse(t)))},n,r)},setTextures:function(t){this.textures=t},parse:function(t){var e=this.textures;function n(t){return void 0===e[t]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",t),e[t]}var r=new Ba[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearCoat&&(r.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(r.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.vertexColors&&(r.vertexColors=t.vertexColors),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.uniforms)for(var i in t.uniforms){var a=t.uniforms[i];switch(r.uniforms[i]={},a.type){case\"t\":r.uniforms[i].value=n(a.value);break;case\"c\":r.uniforms[i].value=(new Ge).setHex(a.value);break;case\"v2\":r.uniforms[i].value=(new we).fromArray(a.value);break;case\"v3\":r.uniforms[i].value=(new Te).fromArray(a.value);break;case\"v4\":r.uniforms[i].value=(new Pe).fromArray(a.value);break;case\"m4\":r.uniforms[i].value=(new Me).fromArray(a.value);break;default:r.uniforms[i].value=a.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap),r.transparent=!0),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){var o=t.normalScale;!1===Array.isArray(o)&&(o=[o,o]),r.normalScale=(new we).fromArray(o)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),r}}),Object.assign(Wo.prototype,{load:function(t,e,n,r){var i=this;new Va(i.manager).load(t,function(t){e(i.parse(JSON.parse(t)))},n,r)},parse:function(t){var e=new dn,n=t.data.index;if(void 0!==n){var r=new Xo[n.type](n.array);e.setIndex(new $e(r,1))}var i=t.data.attributes;for(var a in i){var o=i[a];r=new Xo[o.type](o.array);e.addAttribute(a,new $e(r,o.itemSize,o.normalized))}var s=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==s)for(var c=0,h=s.length;c!==h;++c){var l=s[c];e.addGroup(l.start,l.count,l.materialIndex)}var u=t.data.boundingSphere;if(void 0!==u){var p=new Te;void 0!==u.center&&p.fromArray(u.center),e.boundingSphere=new De(p,u.radius)}return e}});var Xo={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:\"undefined\"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function qo(){}qo.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,n=0,r=e.length;n<r;n+=2){var i=e[n],a=e[n+1];if(i.test(t))return a}return null}},Object.assign(qo.prototype,{crossOrigin:\"anonymous\",onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(t,e,n){for(var r=[],i=0;i<t.length;++i)r[i]=this.createMaterial(t[i],e,n);return r},createMaterial:function(){var t={NoBlending:m,NormalBlending:g,AdditiveBlending:v,SubtractiveBlending:y,MultiplyBlending:x,CustomBlending:b},e=new Ge,n=new qa,r=new jo;return function(i,a,o){var s={};function c(t,e,r,i,c){var h,l=a+t,u=qo.Handlers.get(l);null!==u?h=u.load(l):(n.setCrossOrigin(o),h=n.load(l)),void 0!==e&&(h.repeat.fromArray(e),1!==e[0]&&(h.wrapS=ot),1!==e[1]&&(h.wrapT=ot)),void 0!==r&&h.offset.fromArray(r),void 0!==i&&(\"repeat\"===i[0]&&(h.wrapS=ot),\"mirror\"===i[0]&&(h.wrapS=ct),\"repeat\"===i[1]&&(h.wrapT=ot),\"mirror\"===i[1]&&(h.wrapT=ct)),void 0!==c&&(h.anisotropy=c);var p=_e.generateUUID();return s[p]=h,p}var h={uuid:_e.generateUUID(),type:\"MeshLambertMaterial\"};for(var p in i){var m=i[p];switch(p){case\"DbgColor\":case\"DbgIndex\":case\"opticalDensity\":case\"illumination\":break;case\"DbgName\":h.name=m;break;case\"blending\":h.blending=t[m];break;case\"colorAmbient\":case\"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",p,\"is no longer supported.\");break;case\"colorDiffuse\":h.color=e.fromArray(m).getHex();break;case\"colorSpecular\":h.specular=e.fromArray(m).getHex();break;case\"colorEmissive\":h.emissive=e.fromArray(m).getHex();break;case\"specularCoef\":h.shininess=m;break;case\"shading\":\"basic\"===m.toLowerCase()&&(h.type=\"MeshBasicMaterial\"),\"phong\"===m.toLowerCase()&&(h.type=\"MeshPhongMaterial\"),\"standard\"===m.toLowerCase()&&(h.type=\"MeshStandardMaterial\");break;case\"mapDiffuse\":h.map=c(m,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case\"mapDiffuseRepeat\":case\"mapDiffuseOffset\":case\"mapDiffuseWrap\":case\"mapDiffuseAnisotropy\":break;case\"mapEmissive\":h.emissiveMap=c(m,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case\"mapEmissiveRepeat\":case\"mapEmissiveOffset\":case\"mapEmissiveWrap\":case\"mapEmissiveAnisotropy\":break;case\"mapLight\":h.lightMap=c(m,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case\"mapLightRepeat\":case\"mapLightOffset\":case\"mapLightWrap\":case\"mapLightAnisotropy\":break;case\"mapAO\":h.aoMap=c(m,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case\"mapAORepeat\":case\"mapAOOffset\":case\"mapAOWrap\":case\"mapAOAnisotropy\":break;case\"mapBump\":h.bumpMap=c(m,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case\"mapBumpScale\":h.bumpScale=m;break;case\"mapBumpRepeat\":case\"mapBumpOffset\":case\"mapBumpWrap\":case\"mapBumpAnisotropy\":break;case\"mapNormal\":h.normalMap=c(m,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case\"mapNormalFactor\":h.normalScale=m;break;case\"mapNormalRepeat\":case\"mapNormalOffset\":case\"mapNormalWrap\":case\"mapNormalAnisotropy\":break;case\"mapSpecular\":h.specularMap=c(m,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case\"mapSpecularRepeat\":case\"mapSpecularOffset\":case\"mapSpecularWrap\":case\"mapSpecularAnisotropy\":break;case\"mapMetalness\":h.metalnessMap=c(m,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case\"mapMetalnessRepeat\":case\"mapMetalnessOffset\":case\"mapMetalnessWrap\":case\"mapMetalnessAnisotropy\":break;case\"mapRoughness\":h.roughnessMap=c(m,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case\"mapRoughnessRepeat\":case\"mapRoughnessOffset\":case\"mapRoughnessWrap\":case\"mapRoughnessAnisotropy\":break;case\"mapAlpha\":h.alphaMap=c(m,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case\"mapAlphaRepeat\":case\"mapAlphaOffset\":case\"mapAlphaWrap\":case\"mapAlphaAnisotropy\":break;case\"flipSided\":h.side=l;break;case\"doubleSided\":h.side=u;break;case\"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\"),h.opacity=m;break;case\"depthTest\":case\"depthWrite\":case\"colorWrite\":case\"opacity\":case\"reflectivity\":case\"transparent\":case\"visible\":case\"wireframe\":h[p]=m;break;case\"vertexColors\":!0===m&&(h.vertexColors=f),\"face\"===m&&(h.vertexColors=d);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",p,m)}}return\"MeshBasicMaterial\"===h.type&&delete h.emissive,\"MeshPhongMaterial\"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),r.setTextures(s),r.parse(h)}}()});var Yo={decodeText:function(t){if(\"undefined\"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e=\"\",n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);return decodeURIComponent(escape(e))},extractUrlBase:function(t){var e=t.lastIndexOf(\"/\");return-1===e?\"./\":t.substr(0,e+1)}};function Zo(t){\"boolean\"==typeof t&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),t=void 0),this.manager=void 0!==t?t:Ha,this.withCredentials=!1}function Jo(t){this.manager=void 0!==t?t:Ha,this.texturePath=\"\"}Object.assign(Zo.prototype,{crossOrigin:\"anonymous\",load:function(t,e,n,r){var i=this,a=void 0===this.path?Yo.extractUrlBase(t):this.path,o=new Va(this.manager);o.setPath(this.path),o.setWithCredentials(this.withCredentials),o.load(t,function(n){var r=JSON.parse(n),o=r.metadata;if(void 0!==o){var s=o.type;if(void 0!==s&&\"object\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+t+\" should be loaded with THREE.ObjectLoader instead.\")}var c=i.parse(r,a);e(c.geometry,c.materials)},n,r)},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setCrossOrigin:function(t){return this.crossOrigin=t,this},parse:function(){return function(t,e){void 0!==t.data&&(t=t.data),void 0!==t.scale?t.scale=1/t.scale:t.scale=1;var n=new Ke;return function(t,e){function n(t,e){return t&1<<e}var r,i,a,o,s,c,h,l,u,p,d,f,m,g,v,y,x,b,_,w,M,E,T,S,A,L=t.faces,R=t.vertices,P=t.normals,C=t.colors,O=t.scale,I=0;if(void 0!==t.uvs){for(r=0;r<t.uvs.length;r++)t.uvs[r].length&&I++;for(r=0;r<I;r++)e.faceVertexUvs[r]=[]}for(o=0,s=R.length;o<s;)(b=new Te).x=R[o++]*O,b.y=R[o++]*O,b.z=R[o++]*O,e.vertices.push(b);for(o=0,s=L.length;o<s;)if(d=n(p=L[o++],0),f=n(p,1),m=n(p,3),g=n(p,4),v=n(p,5),y=n(p,6),x=n(p,7),d){if((w=new Xe).a=L[o],w.b=L[o+1],w.c=L[o+3],(M=new Xe).a=L[o+1],M.b=L[o+2],M.c=L[o+3],o+=4,f&&(u=L[o++],w.materialIndex=u,M.materialIndex=u),a=e.faces.length,m)for(r=0;r<I;r++)for(S=t.uvs[r],e.faceVertexUvs[r][a]=[],e.faceVertexUvs[r][a+1]=[],i=0;i<4;i++)A=new we(S[2*(l=L[o++])],S[2*l+1]),2!==i&&e.faceVertexUvs[r][a].push(A),0!==i&&e.faceVertexUvs[r][a+1].push(A);if(g&&(h=3*L[o++],w.normal.set(P[h++],P[h++],P[h]),M.normal.copy(w.normal)),v)for(r=0;r<4;r++)h=3*L[o++],T=new Te(P[h++],P[h++],P[h]),2!==r&&w.vertexNormals.push(T),0!==r&&M.vertexNormals.push(T);if(y&&(E=C[c=L[o++]],w.color.setHex(E),M.color.setHex(E)),x)for(r=0;r<4;r++)E=C[c=L[o++]],2!==r&&w.vertexColors.push(new Ge(E)),0!==r&&M.vertexColors.push(new Ge(E));e.faces.push(w),e.faces.push(M)}else{if((_=new Xe).a=L[o++],_.b=L[o++],_.c=L[o++],f&&(u=L[o++],_.materialIndex=u),a=e.faces.length,m)for(r=0;r<I;r++)for(S=t.uvs[r],e.faceVertexUvs[r][a]=[],i=0;i<3;i++)A=new we(S[2*(l=L[o++])],S[2*l+1]),e.faceVertexUvs[r][a].push(A);if(g&&(h=3*L[o++],_.normal.set(P[h++],P[h++],P[h])),v)for(r=0;r<3;r++)h=3*L[o++],T=new Te(P[h++],P[h++],P[h]),_.vertexNormals.push(T);if(y&&(c=L[o++],_.color.setHex(C[c])),x)for(r=0;r<3;r++)c=L[o++],_.vertexColors.push(new Ge(C[c]));e.faces.push(_)}}(t,n),function(t,e){var n=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var r=0,i=t.skinWeights.length;r<i;r+=n){var a=t.skinWeights[r],o=n>1?t.skinWeights[r+1]:0,s=n>2?t.skinWeights[r+2]:0,c=n>3?t.skinWeights[r+3]:0;e.skinWeights.push(new Pe(a,o,s,c))}if(t.skinIndices)for(r=0,i=t.skinIndices.length;r<i;r+=n){var h=t.skinIndices[r],l=n>1?t.skinIndices[r+1]:0,u=n>2?t.skinIndices[r+2]:0,p=n>3?t.skinIndices[r+3]:0;e.skinIndices.push(new Pe(h,l,u,p))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||e.skinIndices.length!==e.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+e.vertices.length+\"), skinIndices (\"+e.skinIndices.length+\"), and skinWeights (\"+e.skinWeights.length+\") should match.\")}(t,n),function(t,e){var n=t.scale;if(void 0!==t.morphTargets)for(var r=0,i=t.morphTargets.length;r<i;r++){e.morphTargets[r]={},e.morphTargets[r].name=t.morphTargets[r].name,e.morphTargets[r].vertices=[];for(var a=e.morphTargets[r].vertices,o=t.morphTargets[r].vertices,s=0,c=o.length;s<c;s+=3){var h=new Te;h.x=o[s]*n,h.y=o[s+1]*n,h.z=o[s+2]*n,a.push(h)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');var l=e.faces,u=t.morphColors[0].colors;for(r=0,i=l.length;r<i;r++)l[r].color.fromArray(u,3*r)}}(t,n),function(t,e){var n=[],r=[];void 0!==t.animation&&r.push(t.animation),void 0!==t.animations&&(t.animations.length?r=r.concat(t.animations):r.push(t.animations));for(var i=0;i<r.length;i++){var a=Vo.parseAnimation(r[i],e.bones);a&&n.push(a)}if(e.morphTargets){var o=Vo.CreateClipsFromMorphTargetSequences(e.morphTargets,10);n=n.concat(o)}n.length>0&&(e.animations=n)}(t,n),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===t.materials||0===t.materials.length?{geometry:n}:{geometry:n,materials:qo.prototype.initMaterials(t.materials,this.resourcePath||e,this.crossOrigin)}}}()}),Object.assign(Jo.prototype,{crossOrigin:\"anonymous\",load:function(t,e,n,r){\"\"===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf(\"/\")+1));var i=this;new Va(i.manager).load(t,function(n){var a=null;try{a=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error(\"THREE:ObjectLoader: Can't parse \"+t+\".\",e.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&\"geometry\"!==o.type.toLowerCase()?i.parse(a,e):console.error(\"THREE.ObjectLoader: Can't load \"+t+\". Use THREE.JSONLoader instead.\")},n,r)},setTexturePath:function(t){return this.texturePath=t,this},setCrossOrigin:function(t){return this.crossOrigin=t,this},parse:function(t,e){var n=this.parseShape(t.shapes),r=this.parseGeometries(t.geometries,n),i=this.parseImages(t.images,function(){void 0!==e&&e(s)}),a=this.parseTextures(t.textures,i),o=this.parseMaterials(t.materials,a),s=this.parseObject(t.object,r,o);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var n=0,r=t.length;n<r;n++){var i=(new vo).fromJSON(t[n]);e[i.uuid]=i}return e},parseGeometries:function(t,e){var n={};if(void 0!==t)for(var r=new Zo,i=new Wo,a=0,o=t.length;a<o;a++){var s,c=t[a];switch(c.type){case\"PlaneGeometry\":case\"PlaneBufferGeometry\":s=new Sa[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case\"BoxGeometry\":case\"BoxBufferGeometry\":case\"CubeGeometry\":s=new Sa[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case\"CircleGeometry\":case\"CircleBufferGeometry\":s=new Sa[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case\"CylinderGeometry\":case\"CylinderBufferGeometry\":s=new Sa[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case\"ConeGeometry\":case\"ConeBufferGeometry\":s=new Sa[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case\"SphereGeometry\":case\"SphereBufferGeometry\":s=new Sa[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case\"DodecahedronGeometry\":case\"DodecahedronBufferGeometry\":case\"IcosahedronGeometry\":case\"IcosahedronBufferGeometry\":case\"OctahedronGeometry\":case\"OctahedronBufferGeometry\":case\"TetrahedronGeometry\":case\"TetrahedronBufferGeometry\":s=new Sa[c.type](c.radius,c.detail);break;case\"RingGeometry\":case\"RingBufferGeometry\":s=new Sa[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case\"TorusGeometry\":case\"TorusBufferGeometry\":s=new Sa[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case\"TorusKnotGeometry\":case\"TorusKnotBufferGeometry\":s=new Sa[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case\"LatheGeometry\":case\"LatheBufferGeometry\":s=new Sa[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case\"PolyhedronGeometry\":case\"PolyhedronBufferGeometry\":s=new Sa[c.type](c.vertices,c.indices,c.radius,c.details);break;case\"ShapeGeometry\":case\"ShapeBufferGeometry\":for(var h=[],l=0,u=c.shapes.length;l<u;l++){var p=e[c.shapes[l]];h.push(p)}s=new Sa[c.type](h,c.curveSegments);break;case\"ExtrudeGeometry\":case\"ExtrudeBufferGeometry\":for(h=[],l=0,u=c.shapes.length;l<u;l++){p=e[c.shapes[l]];h.push(p)}var d=c.options.extrudePath;void 0!==d&&(c.options.extrudePath=(new fo[d.type]).fromJSON(d)),s=new Sa[c.type](h,c.options);break;case\"BufferGeometry\":s=i.parse(c);break;case\"Geometry\":s=r.parse(c,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+c.type+'\"');continue}s.uuid=c.uuid,void 0!==c.name&&(s.name=c.name),!0===s.isBufferGeometry&&void 0!==c.userData&&(s.userData=c.userData),n[c.uuid]=s}return n},parseMaterials:function(t,e){var n={};if(void 0!==t){var r=new jo;r.setTextures(e);for(var i=0,a=t.length;i<a;i++){var o=t[i];if(\"MultiMaterial\"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(r.parse(o.materials[c]));n[o.uuid]=s}else n[o.uuid]=r.parse(o)}}return n},parseAnimations:function(t){for(var e=[],n=0;n<t.length;n++){var r=t[n],i=Vo.parse(r);void 0!==r.uuid&&(i.uuid=r.uuid),e.push(i)}return e},parseImages:function(t,e){var n=this,r={};function i(t){return n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemEnd(t),n.manager.itemError(t)})}if(void 0!==t&&t.length>0){var a=new Wa(new za(e));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var c=t[o],h=c.url;if(Array.isArray(h)){r[c.uuid]=[];for(var l=0,u=h.length;l<u;l++){var p=h[l],d=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(p)?p:n.texturePath+p;r[c.uuid].push(i(d))}}else{d=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;r[c.uuid]=i(d)}}}return r},parseTextures:function(t,e){function n(t,e){return\"number\"==typeof t?t:(console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",t),e[t])}var r={};if(void 0!==t)for(var i=0,a=t.length;i<a;i++){var o,s=t[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',s.uuid),void 0===e[s.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",s.image),(o=Array.isArray(e[s.image])?new Sn(e[s.image]):new Re(e[s.image])).needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,Ko)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],$o),o.wrapT=n(s.wrap[1],$o)),void 0!==s.format&&(o.format=s.format),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,ts)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,ts)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),r[s.uuid]=o}return r},parseObject:function(t,e,n){var r;function i(t){return void 0===e[t]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",t),e[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],r=0,i=t.length;r<i;r++){var a=t[r];void 0===n[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",a),e.push(n[a])}return e}return void 0===n[t]&&console.warn(\"THREE.ObjectLoader: Undefined material\",t),n[t]}}switch(t.type){case\"Scene\":r=new Zr,void 0!==t.background&&Number.isInteger(t.background)&&(r.background=new Ge(t.background)),void 0!==t.fog&&(\"Fog\"===t.fog.type?r.fog=new Yr(t.fog.color,t.fog.near,t.fog.far):\"FogExp2\"===t.fog.type&&(r.fog=new qr(t.fog.color,t.fog.density)));break;case\"PerspectiveCamera\":r=new kr(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case\"OrthographicCamera\":r=new Eo(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case\"AmbientLight\":r=new Ao(t.color,t.intensity);break;case\"DirectionalLight\":r=new So(t.color,t.intensity);break;case\"PointLight\":r=new Mo(t.color,t.intensity,t.distance,t.decay);break;case\"RectAreaLight\":r=new Lo(t.color,t.intensity,t.width,t.height);break;case\"SpotLight\":r=new wo(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case\"HemisphereLight\":r=new xo(t.color,t.groundColor,t.intensity);break;case\"SkinnedMesh\":console.warn(\"THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.\");case\"Mesh\":var o=i(t.geometry),s=a(t.material);r=o.bones&&o.bones.length>0?new ri(o,s):new En(o,s);break;case\"LOD\":r=new ti;break;case\"Line\":r=new ai(i(t.geometry),a(t.material),t.mode);break;case\"LineLoop\":r=new si(i(t.geometry),a(t.material));break;case\"LineSegments\":r=new oi(i(t.geometry),a(t.material));break;case\"PointCloud\":case\"Points\":r=new hi(i(t.geometry),a(t.material));break;case\"Sprite\":r=new $r(a(t.material));break;case\"Group\":r=new Gr;break;default:r=new Je}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children)for(var c=t.children,h=0;h<c.length;h++)r.add(this.parseObject(c[h],e,n));if(\"LOD\"===t.type)for(var l=t.levels,u=0;u<l.length;u++){var p=l[u],d=r.getObjectByProperty(\"uuid\",p.object);void 0!==d&&r.addLevel(d,p.distance)}return r}});var Qo,Ko={UVMapping:300,CubeReflectionMapping:$,CubeRefractionMapping:tt,EquirectangularReflectionMapping:et,EquirectangularRefractionMapping:nt,SphericalReflectionMapping:rt,CubeUVReflectionMapping:it,CubeUVRefractionMapping:at},$o={RepeatWrapping:ot,ClampToEdgeWrapping:st,MirroredRepeatWrapping:ct},ts={NearestFilter:ht,NearestMipMapNearestFilter:lt,NearestMipMapLinearFilter:ut,LinearFilter:pt,LinearMipMapNearestFilter:dt,LinearMipMapLinearFilter:ft};function es(t){\"undefined\"==typeof createImageBitmap&&console.warn(\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"),\"undefined\"==typeof fetch&&console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\"),this.manager=void 0!==t?t:Ha,this.options=void 0}function ns(){this.type=\"ShapePath\",this.color=new Ge,this.subPaths=[],this.currentPath=null}function rs(t){this.type=\"Font\",this.data=t}function is(t,e,n,r,i){var a=i.glyphs[t]||i.glyphs[\"?\"];if(a){var o,s,c,h,l,u,p,d,f=new ns;if(a.o)for(var m=a._cachedOutline||(a._cachedOutline=a.o.split(\" \")),g=0,v=m.length;g<v;){switch(m[g++]){case\"m\":o=m[g++]*e+n,s=m[g++]*e+r,f.moveTo(o,s);break;case\"l\":o=m[g++]*e+n,s=m[g++]*e+r,f.lineTo(o,s);break;case\"q\":c=m[g++]*e+n,h=m[g++]*e+r,l=m[g++]*e+n,u=m[g++]*e+r,f.quadraticCurveTo(l,u,c,h);break;case\"b\":c=m[g++]*e+n,h=m[g++]*e+r,l=m[g++]*e+n,u=m[g++]*e+r,p=m[g++]*e+n,d=m[g++]*e+r,f.bezierCurveTo(l,u,p,d,c,h)}}return{offsetX:a.ha*e,path:f}}}function as(t){this.manager=void 0!==t?t:Ha}es.prototype={constructor:es,setOptions:function(t){return this.options=t,this},load:function(t,e,n,r){void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=Fa.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;fetch(t).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,i.options)}).then(function(n){Fa.add(t,n),e&&e(n),i.manager.itemEnd(t)}).catch(function(e){r&&r(e),i.manager.itemEnd(t),i.manager.itemError(t)})},setCrossOrigin:function(){return this},setPath:function(t){return this.path=t,this}},Object.assign(ns.prototype,{moveTo:function(t,e){this.currentPath=new go,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,n,r){this.currentPath.quadraticCurveTo(t,e,n,r)},bezierCurveTo:function(t,e,n,r,i,a){this.currentPath.bezierCurveTo(t,e,n,r,i,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function n(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n],a=new vo;a.curves=i.curves,e.push(a)}return e}function r(t,e){for(var n=e.length,r=!1,i=n-1,a=0;a<n;i=a++){var o=e[i],s=e[a],c=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(o=e[a],c=-c,s=e[i],h=-h),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=h*(t.x-o.x)-c*(t.y-o.y);if(0===l)return!0;if(l<0)continue;r=!r}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return r}var i=ea.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return n(a);var o,s,c,h=[];if(1===a.length)return s=a[0],(c=new vo).curves=s.curves,h.push(c),h;var l=!i(a[0].getPoints());l=t?!l:l;var u,p,d=[],f=[],m=[],g=0;f[g]=void 0,m[g]=[];for(var v=0,y=a.length;v<y;v++)o=i(u=(s=a[v]).getPoints()),(o=t?!o:o)?(!l&&f[g]&&g++,f[g]={s:new vo,p:u},f[g].s.curves=s.curves,l&&g++,m[g]=[]):m[g].push({h:s,p:u[0]});if(!f[0])return n(a);if(f.length>1){for(var x=!1,b=[],_=0,w=f.length;_<w;_++)d[_]=[];for(_=0,w=f.length;_<w;_++)for(var M=m[_],E=0;E<M.length;E++){for(var T=M[E],S=!0,A=0;A<f.length;A++)r(T.p,f[A].p)&&(_!==A&&b.push({froms:_,tos:A,hole:E}),S?(S=!1,d[A].push(T)):x=!0);S&&d[_].push(T)}b.length>0&&(x||(m=d))}v=0;for(var L=f.length;v<L;v++){c=f[v].s,h.push(c);for(var R=0,P=(p=m[v]).length;R<P;R++)c.holes.push(p[R].h)}return h}}),Object.assign(rs.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);for(var n=[],r=function(t,e,n){for(var r=Array.from?Array.from(t):String(t).split(\"\"),i=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,c=0,h=0;h<r.length;h++){var l=r[h];if(\"\\n\"===l)s=0,c-=a;else{var u=is(l,i,s,c,n);s+=u.offsetX,o.push(u.path)}}return o}(t,e,this.data),i=0,a=r.length;i<a;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}}),Object.assign(as.prototype,{load:function(t,e,n,r){var i=this,a=new Va(this.manager);a.setPath(this.path),a.load(t,function(t){var n;try{n=JSON.parse(t)}catch(e){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),n=JSON.parse(t.substring(65,t.length-2))}var r=i.parse(n);e&&e(r)},n,r)},parse:function(t){return new rs(t)},setPath:function(t){return this.path=t,this}});var os={getContext:function(){return void 0===Qo&&(Qo=new(window.AudioContext||window.webkitAudioContext)),Qo},setContext:function(t){Qo=t}};function ss(t){this.manager=void 0!==t?t:Ha}function cs(){this.type=\"StereoCamera\",this.aspect=1,this.eyeSep=.064,this.cameraL=new kr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new kr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function hs(t,e,n){Je.call(this),this.type=\"CubeCamera\";var r=new kr(90,1,t,e);r.up.set(0,-1,0),r.lookAt(new Te(1,0,0)),this.add(r);var i=new kr(90,1,t,e);i.up.set(0,-1,0),i.lookAt(new Te(-1,0,0)),this.add(i);var a=new kr(90,1,t,e);a.up.set(0,0,1),a.lookAt(new Te(0,1,0)),this.add(a);var o=new kr(90,1,t,e);o.up.set(0,0,-1),o.lookAt(new Te(0,-1,0)),this.add(o);var s=new kr(90,1,t,e);s.up.set(0,-1,0),s.lookAt(new Te(0,0,1)),this.add(s);var c=new kr(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new Te(0,0,-1)),this.add(c);var h={format:Lt,magFilter:pt,minFilter:pt};this.renderTarget=new Oe(n,n,h),this.renderTarget.texture.name=\"CubeCamera\",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,t.render(e,r,n),n.activeCubeFace=1,t.render(e,i,n),n.activeCubeFace=2,t.render(e,a,n),n.activeCubeFace=3,t.render(e,o,n),n.activeCubeFace=4,t.render(e,s,n),n.texture.generateMipmaps=h,n.activeCubeFace=5,t.render(e,c,n),t.setRenderTarget(null)},this.clear=function(t,e,n,r){for(var i=this.renderTarget,a=0;a<6;a++)i.activeCubeFace=a,t.setRenderTarget(i),t.clear(e,n,r);t.setRenderTarget(null)}}function ls(){Je.call(this),this.type=\"AudioListener\",this.context=os.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function us(t){Je.call(this),this.type=\"Audio\",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType=\"empty\",this.filters=[]}function ps(t){us.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function ds(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function fs(t,e,n){this.binding=t,this.valueSize=n;var r,i=Float64Array;switch(e){case\"quaternion\":r=this._slerp;break;case\"string\":case\"bool\":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(ss.prototype,{load:function(t,e,n,r){var i=new Va(this.manager);i.setResponseType(\"arraybuffer\"),i.load(t,function(t){var n=t.slice(0);os.getContext().decodeAudioData(n,function(t){e(t)})},n,r)}}),Object.assign(cs.prototype,{update:function(){var t,e,n,r,i,a,o,s,c=new Me,h=new Me;return function(l){if(t!==this||e!==l.focus||n!==l.fov||r!==l.aspect*this.aspect||i!==l.near||a!==l.far||o!==l.zoom||s!==this.eyeSep){t=this,e=l.focus,n=l.fov,r=l.aspect*this.aspect,i=l.near,a=l.far,o=l.zoom;var u,p,d=l.projectionMatrix.clone(),f=(s=this.eyeSep/2)*i/e,m=i*Math.tan(_e.DEG2RAD*n*.5)/o;h.elements[12]=-s,c.elements[12]=s,u=-m*r+f,p=m*r+f,d.elements[0]=2*i/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraL.projectionMatrix.copy(d),u=-m*r-f,p=m*r-f,d.elements[0]=2*i/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(h),this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c)}}()}),hs.prototype=Object.create(Je.prototype),hs.prototype.constructor=hs,ls.prototype=Object.assign(Object.create(Je.prototype),{constructor:ls,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(){var t=new Te,e=new Ee,n=new Te,r=new Te;return function(i){Je.prototype.updateMatrixWorld.call(this,i);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,n),r.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(r.x,this.context.currentTime),a.forwardY.setValueAtTime(r.y,this.context.currentTime),a.forwardZ.setValueAtTime(r.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(r.x,r.y,r.z,o.x,o.y,o.z))}}()}),us.prototype=Object.assign(Object.create(Je.prototype),{constructor:us,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType=\"audioNode\",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType=\"mediaNode\",this.source=this.context.createMediaElementSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType=\"buffer\",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()}console.warn(\"THREE.Audio: this Audio has no playback control.\")}else console.warn(\"THREE.Audio: Audio is already playing.\")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}),ps.prototype=Object.assign(Object.create(us.prototype),{constructor:ps,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(){var t=new Te,e=new Ee,n=new Te,r=new Te;return function(i){Je.prototype.updateMatrixWorld.call(this,i);var a=this.panner;this.matrixWorld.decompose(t,e,n),r.set(0,0,1).applyQuaternion(e),a.setPosition(t.x,t.y,t.z),a.setOrientation(r.x,r.y,r.z)}}()}),Object.assign(ds.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),n=0;n<e.length;n++)t+=e[n];return t/e.length}}),Object.assign(fs.prototype,{accumulate:function(t,e){var n=this.buffer,r=this.valueSize,i=t*r+r,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==r;++o)n[i+o]=n[o];a=e}else{var s=e/(a+=e);this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=3*e;this._mixBufferRegion(n,r,o,1-i,e)}for(var s=e,c=e+e;s!==c;++s)if(n[s]!==n[s+e]){a.setValue(n,r);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,n=this.valueSize,r=3*n;t.getValue(e,r);for(var i=n,a=r;i!==a;++i)e[i]=e[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)t[e+a]=t[n+a]},_slerp:function(t,e,n,r){Ee.slerpFlat(t,e,t,e,t,n,r)},_lerp:function(t,e,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=e+o;t[s]=t[s]*a+t[n+o]*r}}});var ms,gs;function vs(t,e,n){var r=n||ys.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}function ys(t,e,n){this.path=e,this.parsedPath=n||ys.parseTrackName(e),this.node=ys.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function xs(){this.uuid=_e.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}function bs(t,e,n){this._mixer=t,this._clip=e,this._localRoot=n||null;for(var r=e.tracks,i=r.length,a=new Array(i),o={endingStart:oe,endingEnd:oe},s=0;s!==i;++s){var c=r[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ae,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function _s(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function ws(t){\"string\"==typeof t&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),t=arguments[1]),this.value=t}function Ms(){dn.call(this),this.type=\"InstancedBufferGeometry\",this.maxInstancedCount=void 0}function Es(t,e,n){Jr.call(this,t,e),this.meshPerAttribute=n||1}function Ts(t,e,n,r){\"number\"==typeof n&&(r=n,n=!1,console.error(\"THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.\")),$e.call(this,t,e,n),this.meshPerAttribute=r||1}function Ss(t,e,n,r){this.ray=new _n(t,e),this.near=n||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\"),this.Points}}})}function As(t,e){return t.distance-e.distance}function Ls(t,e,n,r){if(!1!==t.visible&&(t.raycast(e,n),!0===r))for(var i=t.children,a=0,o=i.length;a<o;a++)Ls(i[a],e,n,!0)}function Rs(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function Ps(t,e,n){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==n?n:0,this}function Cs(t,e,n){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==n?n:0,this}function Os(t,e){this.min=void 0!==t?t:new we(1/0,1/0),this.max=void 0!==e?e:new we(-1/0,-1/0)}function Is(t,e){this.start=void 0!==t?t:new Te,this.end=void 0!==e?e:new Te}function Ns(t){Je.call(this),this.material=t,this.render=function(){}}function Ds(t,e,n,r){this.object=t,this.size=void 0!==e?e:1;var i=void 0!==n?n:16711680,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var c=new dn,h=new cn(2*o*3,3);c.addAttribute(\"position\",h),oi.call(this,c,new ii({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function Us(t,e){Je.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var n=new dn,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1;i<32;i++,a++){var o=i/32*Math.PI*2,s=a/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}n.addAttribute(\"position\",new cn(r,3));var c=new ii({fog:!1});this.cone=new oi(n,c),this.add(this.cone),this.update()}function Bs(t){for(var e=function t(e){var n=[];e&&e.isBone&&n.push(e);for(var r=0;r<e.children.length;r++)n.push.apply(n,t(e.children[r]));return n}(t),n=new dn,r=[],i=[],a=new Ge(0,0,1),o=new Ge(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}n.addAttribute(\"position\",new cn(r,3)),n.addAttribute(\"color\",new cn(i,3));var h=new ii({vertexColors:f,depthTest:!1,depthWrite:!1,transparent:!0});oi.call(this,n,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function Fs(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;var r=new ua(e,4,2),i=new Mn({wireframe:!0,fog:!1});En.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function zs(t,e){Je.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var n=new ii({fog:!1}),r=new dn;r.addAttribute(\"position\",new $e(new Float32Array(15),3)),this.line=new ai(r,n),this.add(this.line),this.update()}function Hs(t,e,n){Je.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var r=new wi(e);r.rotateY(.5*Math.PI),this.material=new Mn({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=f);var i=r.getAttribute(\"position\"),a=new Float32Array(3*i.count);r.addAttribute(\"color\",new $e(a,3)),this.add(new En(r,this.material)),this.update()}function Gs(t,e,n,r){t=t||10,e=e||10,n=new Ge(void 0!==n?n:4473924),r=new Ge(void 0!==r?r:8947848);for(var i=e/2,a=t/e,o=t/2,s=[],c=[],h=0,l=0,u=-o;h<=e;h++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var p=h===i?n:r;p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3}var d=new dn;d.addAttribute(\"position\",new cn(s,3)),d.addAttribute(\"color\",new cn(c,3));var m=new ii({vertexColors:f});oi.call(this,d,m)}function Vs(t,e,n,r,i,a){t=t||10,e=e||16,n=n||8,r=r||64,i=new Ge(void 0!==i?i:4473924),a=new Ge(void 0!==a?a:8947848);var o,s,c,h,l,u,p,d=[],m=[];for(h=0;h<=e;h++)c=h/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,d.push(0,0,0),d.push(o,0,s),p=1&h?i:a,m.push(p.r,p.g,p.b),m.push(p.r,p.g,p.b);for(h=0;h<=n;h++)for(p=1&h?i:a,u=t-t/n*h,l=0;l<r;l++)c=l/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),m.push(p.r,p.g,p.b),c=(l+1)/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),m.push(p.r,p.g,p.b);var g=new dn;g.addAttribute(\"position\",new cn(d,3)),g.addAttribute(\"color\",new cn(m,3));var v=new ii({vertexColors:f});oi.call(this,g,v)}function ks(t,e,n,r){this.object=t,this.size=void 0!==e?e:1;var i=void 0!==n?n:16776960,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");var c=new dn,h=new cn(2*o*3,3);c.addAttribute(\"position\",h),oi.call(this,c,new ii({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function js(t,e,n){Je.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);var r=new dn;r.addAttribute(\"position\",new cn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var i=new ii({fog:!1});this.lightPlane=new ai(r,i),this.add(this.lightPlane),(r=new dn).addAttribute(\"position\",new cn([0,0,0,0,0,1],3)),this.targetLine=new ai(r,i),this.add(this.targetLine),this.update()}function Ws(t){var e=new dn,n=new ii({color:16777215,vertexColors:d}),r=[],i=[],a={},o=new Ge(16755200),s=new Ge(16711680),c=new Ge(43775),h=new Ge(16777215),l=new Ge(3355443);function u(t,e,n){p(t,n),p(e,n)}function p(t,e){r.push(0,0,0),i.push(e.r,e.g,e.b),void 0===a[t]&&(a[t]=[]),a[t].push(r.length/3-1)}u(\"n1\",\"n2\",o),u(\"n2\",\"n4\",o),u(\"n4\",\"n3\",o),u(\"n3\",\"n1\",o),u(\"f1\",\"f2\",o),u(\"f2\",\"f4\",o),u(\"f4\",\"f3\",o),u(\"f3\",\"f1\",o),u(\"n1\",\"f1\",o),u(\"n2\",\"f2\",o),u(\"n3\",\"f3\",o),u(\"n4\",\"f4\",o),u(\"p\",\"n1\",s),u(\"p\",\"n2\",s),u(\"p\",\"n3\",s),u(\"p\",\"n4\",s),u(\"u1\",\"u2\",c),u(\"u2\",\"u3\",c),u(\"u3\",\"u1\",c),u(\"c\",\"t\",h),u(\"p\",\"c\",l),u(\"cn1\",\"cn2\",l),u(\"cn3\",\"cn4\",l),u(\"cf1\",\"cf2\",l),u(\"cf3\",\"cf4\",l),e.addAttribute(\"position\",new cn(r,3)),e.addAttribute(\"color\",new cn(i,3)),oi.call(this,e,n),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}function Xs(t,e){this.object=t,void 0===e&&(e=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new dn;i.setIndex(new $e(n,1)),i.addAttribute(\"position\",new $e(r,3)),oi.call(this,i,new ii({color:e})),this.matrixAutoUpdate=!1,this.update()}function qs(t,e){this.type=\"Box3Helper\",this.box=t;var n=void 0!==e?e:16776960,r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new dn;i.setIndex(new $e(r,1)),i.addAttribute(\"position\",new cn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),oi.call(this,i,new ii({color:n})),this.geometry.computeBoundingSphere()}function Ys(t,e,n){this.type=\"PlaneHelper\",this.plane=t,this.size=void 0===e?1:e;var r=void 0!==n?n:16776960,i=new dn;i.addAttribute(\"position\",new cn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),ai.call(this,i,new ii({color:r}));var a=new dn;a.addAttribute(\"position\",new cn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new En(a,new Mn({color:r,opacity:.2,transparent:!0,depthWrite:!1})))}function Zs(t,e,n,r,i,a){Je.call(this),void 0===r&&(r=16776960),void 0===n&&(n=1),void 0===i&&(i=.2*n),void 0===a&&(a=.2*i),void 0===ms&&((ms=new dn).addAttribute(\"position\",new cn([0,0,0,0,1,0],3)),(gs=new _a(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new ai(ms,new ii({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new En(gs,new Mn({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,a)}function Js(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new dn;n.addAttribute(\"position\",new cn(e,3)),n.addAttribute(\"color\",new cn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var r=new ii({vertexColors:f});oi.call(this,n,r)}Object.assign(vs.prototype,{getValue:function(t,e){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(ys,{Composite:vs,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new ys.Composite(t,e,n):new ys(t,e,n)},sanitizeNodeName:function(){var t=new RegExp(\"[\\\\[\\\\]\\\\.:\\\\/]\",\"g\");return function(e){return e.replace(/\\s/g,\"_\").replace(t,\"\")}}(),parseTrackName:function(){var t=\"[^\\\\[\\\\]\\\\.:\\\\/]\",e=\"[^\"+\"\\\\[\\\\]\\\\.:\\\\/\".replace(\"\\\\.\",\"\")+\"]\",n=/((?:WC+[\\/:])*)/.source.replace(\"WC\",t),r=/(WCOD+)?/.source.replace(\"WCOD\",e),i=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\",t),a=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\",t),o=new RegExp(\"^\"+n+r+i+a+\"$\"),s=[\"material\",\"materials\",\"bones\"];return function(t){var e=o.exec(t);if(!e)throw new Error(\"PropertyBinding: Cannot parse trackName: \"+t);var n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(\".\");if(void 0!==r&&-1!==r){var i=n.nodeName.substring(r+1);-1!==s.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw new Error(\"PropertyBinding: can not parse propertyName from trackName: \"+t);return n}}(),findNode:function(t,e){if(!e||\"\"===e||\"root\"===e||\".\"===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){var r=function t(n){for(var r=0;r<n.length;r++){var i=n[r];if(i.name===e||i.uuid===e)return i;var a=t(i.children);if(a)return a}return null}(t.children);if(r)return r}return null}}),Object.assign(ys.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)t[e++]=n[r]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++]},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,n=e.objectName,r=e.propertyName,i=e.propertyIndex;if(t||(t=ys.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(n){var a=e.objectIndex;switch(n){case\"materials\":if(!t.material)return void console.error(\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\",this);if(!t.material.materials)return void console.error(\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\",this);t=t.material.materials;break;case\"bones\":if(!t.skeleton)return void console.error(\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[n])return void console.error(\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\",this);t=t[n]}if(void 0!==a){if(void 0===t[a])return void console.error(\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\",this,t);t=t[a]}}var s=t[r];if(void 0!==s){var c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);var h=this.BindingType.Direct;if(void 0!==i){if(\"morphTargetInfluences\"===r){if(!t.geometry)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\",this);for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(t.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!t.geometry.morphTargets)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.\",this);for(o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===i){i=o;break}}}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}else{var l=e.nodeName;console.error(\"THREE.PropertyBinding: Trying to update property for track: \"+l+\".\"+r+\" but it wasn't found.\",t)}}else console.error(\"THREE.PropertyBinding: Trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(ys.prototype,{_getValue_unbound:ys.prototype.getValue,_setValue_unbound:ys.prototype.setValue}),Object.assign(xs.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=void 0,h=0,l=arguments.length;h!==l;++h){var u=arguments[h],p=u.uuid,d=r[p];if(void 0===d){d=e++,r[p]=d,t.push(u);for(var f=0,m=s;f!==m;++f)o[f].push(new ys(u,i[f],a[f]))}else if(d<n){c=t[d];var g=--n,v=t[g];r[v.uuid]=d,t[d]=v,r[p]=g,t[g]=u;for(f=0,m=s;f!==m;++f){var y=o[f],x=y[g],b=y[d];y[d]=x,void 0===b&&(b=new ys(u,i[f],a[f])),y[g]=b}}else t[d]!==c&&console.error(\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\")}this.nCachedObjects_=n},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,i=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,h=n[c];if(void 0!==h&&h>=e){var l=e++,u=t[l];n[u.uuid]=h,t[h]=u,n[c]=l,t[l]=s;for(var p=0,d=i;p!==d;++p){var f=r[p],m=f[l],g=f[h];f[h]=m,f[l]=g}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o].uuid,h=r[c];if(void 0!==h)if(delete r[c],h<n){var l=--n,u=t[l],p=t[v=--e];r[u.uuid]=h,t[h]=u,r[p.uuid]=l,t[l]=p,t.pop();for(var d=0,f=a;d!==f;++d){var m=(y=i[d])[l],g=y[v];y[h]=m,y[l]=g,y.pop()}}else{var v;r[(p=t[v=--e]).uuid]=h,t[h]=p,t.pop();for(d=0,f=a;d!==f;++d){var y;(y=i[d])[h]=y[v],y.pop()}}}this.nCachedObjects_=n},subscribe_:function(t,e){var n=this._bindingsIndicesByPath,r=n[t],i=this._bindings;if(void 0!==r)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);r=i.length,n[t]=r,a.push(t),o.push(e),i.push(l);for(var u=h,p=s.length;u!==p;++u){var d=s[u];l[u]=new ys(d,t,e)}return l},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}}),Object.assign(bs.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){var r=this._clip.duration,i=t._clip.duration,a=i/r,o=r/i;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=i,s[1]=i+n,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,r){if(this.enabled){var i=this._startTime;if(null!==i){var a=(t-i)*n;if(a<0||0===n)return;this._startTime=null,e=n*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(o),h[l].accumulate(r,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,n=this._clip.duration,r=this.loop,i=this._loopCount,a=2202===r;if(0===t)return-1===i?e:a&&1==(1&i)?n-e:e;if(2200===r){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=n)e=n;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),e>=n||e<0){var o=Math.floor(e/n);e-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?n:0,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:t>0?1:-1});else{if(1===s){var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:o})}}if(a&&1==(1&i))return this.time=e,n-e}return this.time=e,e},_setEndings:function(t,e,n){var r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=t?this.zeroSlopeAtStart?2401:oe:2402,r.endingEnd=e?this.zeroSlopeAtEnd?2401:oe:2402)},_scheduleFading:function(t,e,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=e,o[1]=i+t,s[1]=n,this}}),_s.prototype=Object.assign(Object.create(e.prototype),{constructor:_s,_bindAction:function(t,e){var n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,a=t._propertyBindings,o=t._interpolants,s=n.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==i;++l){var u=r[l],p=u.name,d=h[p];if(void 0!==d)a[l]=d;else{if(void 0!==(d=a[l])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;++(d=new fs(ys.create(n,p,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(d,s,p),a[l]=d}o[l].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}for(var i=t._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,n=0,r=e.length;n!==r;++n){var i=e[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){var r=this._actions,i=this._actionsByClip,a=i[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[n]=t},_removeInactiveAction:function(t){var e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;var i=t._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,n=0,r=e.length;n!==r;++n){var i=e[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(t){var e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackAction:function(t){var e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_addInactiveBinding:function(t,e,n){var r=this._bindingsByRootAndName,i=r[e],a=this._bindings;void 0===i&&(i={},r[e]=i),i[n]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[i];t:{for(var h in o)break t;delete a[r]}},_lendBinding:function(t){var e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackBinding:function(t){var e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,n=t[e];return void 0===n&&((n=new Oo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var n=e||this._root,r=n.uuid,i=\"string\"==typeof t?Vo.findByName(n,t):t,a=null!==i?i.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[r];if(void 0!==c)return c;s=o.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var h=new bs(this,i,e);return this._bindAction(h,s),this._addInactiveAction(h,a,r),h},existingAction:function(t,e){var n=e||this._root,r=n.uuid,i=\"string\"==typeof t?Vo.findByName(n,t):t,a=i?i.uuid:t,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==e;++i)t[i].reset();for(i=0;i!==r;++i)n[i].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),a=this._accuIndex^=1,o=0;o!==n;++o){e[o]._update(r,t,i,a)}var s=this._bindings,c=this._nActiveBindings;for(o=0;o!==c;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}},uncacheRoot:function(t){var e=t.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),ws.prototype.clone=function(){return new ws(void 0===this.value.clone?this.value:this.value.clone())},Ms.prototype=Object.assign(Object.create(dn.prototype),{constructor:Ms,isInstancedBufferGeometry:!0,copy:function(t){return dn.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Es.prototype=Object.assign(Object.create(Jr.prototype),{constructor:Es,isInstancedInterleavedBuffer:!0,copy:function(t){return Jr.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Ts.prototype=Object.assign(Object.create($e.prototype),{constructor:Ts,isInstancedBufferAttribute:!0,copy:function(t){return $e.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(Ss.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(t,e,n){var r=n||[];return Ls(t,this,r,e),r.sort(As),r},intersectObjects:function(t,e,n){var r=n||[];if(!1===Array.isArray(t))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),r;for(var i=0,a=t.length;i<a;i++)Ls(t[i],this,r,e);return r.sort(As),r}}),Object.assign(Rs.prototype,{start:function(){this.startTime=(\"undefined\"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=(\"undefined\"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(Ps.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(_e.clamp(e/this.radius,-1,1))),this}}),Object.assign(Cs.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}}),Object.assign(Os.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new we;return function(e,n){var r=t.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn(\"THREE.Box2: .getCenter() target is now required\"),t=new we),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn(\"THREE.Box2: .getSize() target is now required\"),t=new we),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn(\"THREE.Box2: .getParameter() target is now required\"),e=new we),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn(\"THREE.Box2: .clampPoint() target is now required\"),e=new we),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new we;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(Is.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn(\"THREE.Line3: .getCenter() target is now required\"),t=new Te),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn(\"THREE.Line3: .delta() target is now required\"),t=new Te),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn(\"THREE.Line3: .at() target is now required\"),e=new Te),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new Te,e=new Te;return function(n,r){t.subVectors(n,this.start),e.subVectors(this.end,this.start);var i=e.dot(e),a=e.dot(t)/i;return r&&(a=_e.clamp(a,0,1)),a}}(),closestPointToPoint:function(t,e,n){var r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn(\"THREE.Line3: .closestPointToPoint() target is now required\"),n=new Te),this.delta(n).multiplyScalar(r).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Ns.prototype=Object.create(Je.prototype),Ns.prototype.constructor=Ns,Ns.prototype.isImmediateRenderObject=!0,Ds.prototype=Object.create(oi.prototype),Ds.prototype.constructor=Ds,Ds.prototype.update=function(){var t=new Te,e=new Te,n=new Se;return function(){var r=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,h=0,l=0,u=c.length;l<u;l++)for(var p=c[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[r[d]]],g=p.vertexNormals[d];t.copy(m).applyMatrix4(i),e.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}else if(o&&o.isBufferGeometry){var v=o.attributes.position,y=o.attributes.normal;for(h=0,d=0,f=v.count;d<f;d++)t.set(v.getX(d),v.getY(d),v.getZ(d)).applyMatrix4(i),e.set(y.getX(d),y.getY(d),y.getZ(d)),e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}a.needsUpdate=!0}}(),Us.prototype=Object.create(Je.prototype),Us.prototype.constructor=Us,Us.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Us.prototype.update=function(){var t=new Te,e=new Te;return function(){this.light.updateMatrixWorld();var n=this.light.distance?this.light.distance:1e3,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),Bs.prototype=Object.create(oi.prototype),Bs.prototype.constructor=Bs,Bs.prototype.updateMatrixWorld=function(){var t=new Te,e=new Me,n=new Me;return function(r){var i=this.bones,a=this.geometry,o=a.getAttribute(\"position\");n.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<i.length;s++){var h=i[s];h.parent&&h.parent.isBone&&(e.multiplyMatrices(n,h.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(n,h.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c+1,t.x,t.y,t.z),c+=2)}a.getAttribute(\"position\").needsUpdate=!0,Je.prototype.updateMatrixWorld.call(this,r)}}(),Fs.prototype=Object.create(En.prototype),Fs.prototype.constructor=Fs,Fs.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Fs.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},zs.prototype=Object.create(Je.prototype),zs.prototype.constructor=zs,zs.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},zs.prototype.update=function(){var t=.5*this.light.width,e=.5*this.light.height,n=this.line.geometry.attributes.position,r=n.array;r[0]=t,r[1]=-e,r[2]=0,r[3]=t,r[4]=e,r[5]=0,r[6]=-t,r[7]=e,r[8]=0,r[9]=-t,r[10]=-e,r[11]=0,r[12]=t,r[13]=-e,r[14]=0,n.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},Hs.prototype=Object.create(Je.prototype),Hs.prototype.constructor=Hs,Hs.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Hs.prototype.update=function(){var t=new Te,e=new Ge,n=new Ge;return function(){var r=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var i=r.geometry.getAttribute(\"color\");e.copy(this.light.color),n.copy(this.light.groundColor);for(var a=0,o=i.count;a<o;a++){var s=a<o/2?e:n;i.setXYZ(a,s.r,s.g,s.b)}i.needsUpdate=!0}r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),Gs.prototype=Object.create(oi.prototype),Gs.prototype.constructor=Gs,Vs.prototype=Object.create(oi.prototype),Vs.prototype.constructor=Vs,ks.prototype=Object.create(oi.prototype),ks.prototype.constructor=ks,ks.prototype.update=function(){var t=new Te,e=new Te,n=new Se;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],p=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(r),e.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),i.setXYZ(c,t.x,t.y,t.z),c+=1,i.setXYZ(c,e.x,e.y,e.z),c+=1}i.needsUpdate=!0}}(),js.prototype=Object.create(Je.prototype),js.prototype.constructor=js,js.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},js.prototype.update=function(){var t=new Te,e=new Te,n=new Te;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(e,t),this.lightPlane.lookAt(n),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(n),this.targetLine.scale.z=n.length()}}(),Ws.prototype=Object.create(oi.prototype),Ws.prototype.constructor=Ws,Ws.prototype.update=function(){var t,e,n=new Te,r=new Vr;function i(i,a,o,s){n.set(a,o,s).unproject(r);var c=e[i];if(void 0!==c)for(var h=t.getAttribute(\"position\"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],n.x,n.y,n.z)}return function(){t=this.geometry,e=this.pointMap;r.projectionMatrix.copy(this.camera.projectionMatrix),i(\"c\",0,0,-1),i(\"t\",0,0,1),i(\"n1\",-1,-1,-1),i(\"n2\",1,-1,-1),i(\"n3\",-1,1,-1),i(\"n4\",1,1,-1),i(\"f1\",-1,-1,1),i(\"f2\",1,-1,1),i(\"f3\",-1,1,1),i(\"f4\",1,1,1),i(\"u1\",.7,1.1,-1),i(\"u2\",-.7,1.1,-1),i(\"u3\",0,2,-1),i(\"cf1\",-1,0,1),i(\"cf2\",1,0,1),i(\"cf3\",0,-1,1),i(\"cf4\",0,1,1),i(\"cn1\",-1,0,-1),i(\"cn2\",1,0,-1),i(\"cn3\",0,-1,-1),i(\"cn4\",0,1,-1),t.getAttribute(\"position\").needsUpdate=!0}}(),Xs.prototype=Object.create(oi.prototype),Xs.prototype.constructor=Xs,Xs.prototype.update=function(){var t=new Ne;return function(e){if(void 0!==e&&console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\"),void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var n=t.min,r=t.max,i=this.geometry.attributes.position,a=i.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=n.x,a[4]=r.y,a[5]=r.z,a[6]=n.x,a[7]=n.y,a[8]=r.z,a[9]=r.x,a[10]=n.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=n.z,a[15]=n.x,a[16]=r.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=r.x,a[22]=n.y,a[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Xs.prototype.setFromObject=function(t){return this.object=t,this.update(),this},qs.prototype=Object.create(oi.prototype),qs.prototype.constructor=qs,qs.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),Je.prototype.updateMatrixWorld.call(this,t))},Ys.prototype=Object.create(ai.prototype),Ys.prototype.constructor=Ys,Ys.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?l:h,this.lookAt(this.plane.normal),Je.prototype.updateMatrixWorld.call(this,t)},Zs.prototype=Object.create(Je.prototype),Zs.prototype.constructor=Zs,Zs.prototype.setDirection=function(){var t,e=new Te;return function(n){n.y>.99999?this.quaternion.set(0,0,0,1):n.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(n.z,0,-n.x).normalize(),t=Math.acos(n.y),this.quaternion.setFromAxisAngle(e,t))}}(),Zs.prototype.setLength=function(t,e,n){void 0===e&&(e=.2*t),void 0===n&&(n=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()},Zs.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},Js.prototype=Object.create(oi.prototype),Js.prototype.constructor=Js;function Qs(t){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"),no.call(this,t),this.type=\"catmullrom\",this.closed=!0}function Ks(t){console.warn(\"THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"),no.call(this,t),this.type=\"catmullrom\"}function $s(t){console.warn(\"THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.\"),no.call(this,t),this.type=\"catmullrom\"}Ya.create=function(t,e){return console.log(\"THREE.Curve.create() has been deprecated\"),t.prototype=Object.create(Ya.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(mo.prototype,{createPointsGeometry:function(t){console.warn(\"THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn(\"THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn(\"THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");for(var e=new Ke,n=0,r=t.length;n<r;n++){var i=t[n];e.vertices.push(new Te(i.x,i.y,i.z||0))}return e}}),Object.assign(go.prototype,{fromPoints:function(t){console.warn(\"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"),this.setFromPoints(t)}}),Qs.prototype=Object.create(no.prototype),Ks.prototype=Object.create(no.prototype),$s.prototype=Object.create(no.prototype),Object.assign($s.prototype,{initFromArray:function(){console.error(\"THREE.Spline: .initFromArray() has been removed.\")},getControlPointsArray:function(){console.error(\"THREE.Spline: .getControlPointsArray() has been removed.\")},reparametrizeByArcLength:function(){console.error(\"THREE.Spline: .reparametrizeByArcLength() has been removed.\")}}),Gs.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")},Bs.prototype.update=function(){console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\")},Object.assign(qo.prototype,{extractUrlBase:function(t){return console.warn(\"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"),Yo.extractUrlBase(t)}}),Object.assign(Zo.prototype,{setTexturePath:function(t){return console.warn(\"THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().\"),this.setResourcePath(t)}}),Object.assign(Os.prototype,{center:function(t){return console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\"),this.getCenter(t)},empty:function(){return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(t){return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},size:function(t){return console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\"),this.getSize(t)}}),Object.assign(Ne.prototype,{center:function(t){return console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\"),this.getCenter(t)},empty:function(){return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(t){return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(t)},size:function(t){return console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\"),this.getSize(t)}}),Is.prototype.center=function(t){return console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\"),this.getCenter(t)},Object.assign(_e,{random16:function(){return console.warn(\"THREE.Math: .random16() has been deprecated. Use Math.random() instead.\"),Math.random()},nearestPowerOfTwo:function(t){return console.warn(\"THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().\"),_e.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn(\"THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().\"),_e.ceilPowerOfTwo(t)}}),Object.assign(Se.prototype,{flattenToArrayOffset:function(t,e){return console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(t,e)},multiplyVector3:function(t){return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\")},applyToBuffer:function(t){return console.warn(\"THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\")}}),Object.assign(Me.prototype,{extractPosition:function(t){return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new Te),console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\")},multiplyVector3:function(t){return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\")},rotateAxis:function(t){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"),t.transformDirection(this)},crossVector:function(t){return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},translate:function(){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},rotateByAxis:function(){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},applyToBuffer:function(t){return console.warn(\"THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\")},makeFrustum:function(t,e,n,r,i,a){return console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"),this.makePerspective(t,e,r,n,i,a)}}),Ue.prototype.isIntersectionLine=function(t){return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"),this.intersectsLine(t)},Ee.prototype.multiplyVector3=function(t){return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"),t.applyQuaternion(this)},Object.assign(_n.prototype,{isIntersectionBox:function(t){return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(t)}}),Object.assign(wn.prototype,{area:function(){return console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\"),this.getArea()},barycoordFromPoint:function(t,e){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),this.getBarycoord(t,e)},midpoint:function(t){return console.warn(\"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"),this.getMidpoint(t)},normal:function(t){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),this.getNormal(t)},plane:function(t){return console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\"),this.getPlane(t)}}),Object.assign(wn,{barycoordFromPoint:function(t,e,n,r,i){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),wn.getBarycoord(t,e,n,r,i)},normal:function(t,e,n,r){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),wn.getNormal(t,e,n,r)}}),Object.assign(vo.prototype,{extractAllPoints:function(t){return console.warn(\"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"),this.extractPoints(t)},extrude:function(t){return console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"),new ia(this,t)},makeGeometry:function(t){return console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"),new ga(this,t)}}),Object.assign(we.prototype,{fromAttribute:function(t,e,n){return console.warn(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn(\"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn(\"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(Te.prototype,{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(t){return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn(\"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn(\"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(Pe.prototype,{fromAttribute:function(t,e,n){return console.warn(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn(\"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(Ke.prototype,{computeTangents:function(){console.error(\"THREE.Geometry: .computeTangents() has been removed.\")},computeLineDistances:function(){console.error(\"THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.\")}}),Object.assign(Je.prototype,{getChildByName:function(t){return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"),this.getObjectByName(t)},renderDepth:function(){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},translate:function(t,e){return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error(\"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\")}}),Object.defineProperties(Je.prototype,{eulerOrder:{get:function(){return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order},set:function(t){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order=t}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}}),Object.defineProperties(ti.prototype,{objects:{get:function(){return console.warn(\"THREE.LOD: .objects has been renamed to .levels.\"),this.levels}}}),Object.defineProperty(ei.prototype,\"useVertexTexture\",{get:function(){console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\")},set:function(){console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\")}}),Object.defineProperty(Ya.prototype,\"__arcLengthDivisions\",{get:function(){return console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"),this.arcLengthDivisions},set:function(t){console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"),this.arcLengthDivisions=t}}),kr.prototype.setLens=function(t,e){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(yo.prototype,{onlyShadow:{set:function(){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(t){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(t){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(t){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"),this.shadow.mapSize.height=t}}}),Object.defineProperties($e.prototype,{length:{get:function(){return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"),this.array.length}},copyIndicesArray:function(){console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\")}}),Object.assign(dn.prototype,{addIndex:function(t){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"),this.setIndex(t)},addDrawCall:function(t,e,n){void 0!==n&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"),console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"),this.addGroup(t,e)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"),this.clearGroups()},computeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}}),Object.defineProperties(dn.prototype,{drawcalls:{get:function(){return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"),this.groups}},offsets:{get:function(){return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"),this.groups}}}),Object.assign(aa.prototype,{getArrays:function(){console.error(\"THREE.ExtrudeBufferGeometry: .getArrays() has been removed.\")},addShapeList:function(){console.error(\"THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.\")},addShape:function(){console.error(\"THREE.ExtrudeBufferGeometry: .addShape() has been removed.\")}}),Object.defineProperties(ws.prototype,{dynamic:{set:function(){console.warn(\"THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.\")}},onUpdate:{value:function(){return console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"),this}}}),Object.defineProperties(xn.prototype,{wrapAround:{get:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")},set:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")}},wrapRGB:{get:function(){return console.warn(\"THREE.Material: .wrapRGB has been removed.\"),new Ge}},shading:{get:function(){console.error(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\")},set:function(t){console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=1===t}}}),Object.defineProperties(Ca.prototype,{metal:{get:function(){return console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\"),!1},set:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}}),Object.defineProperties(bn.prototype,{derivatives:{get:function(){return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives},set:function(t){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives=t}}}),Object.assign(Xr.prototype,{clearTarget:function(t,e,n,r){console.warn(\"THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.\"),this.setRenderTarget(t),this.clear(e,n,r)},animate:function(t){console.warn(\"THREE.WebGLRenderer: .animate() is now .setAnimationLoop().\"),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn(\"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn(\"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn(\"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"),this.capabilities.precision},resetGLState:function(){return console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\"),this.state.reset()},supportsFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"),this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"),this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"),this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},supportsCompressedTexturePVRTC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},supportsBlendMinMax:function(){return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"),this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"),this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(t){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"),this.setScissorTest(t)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},addPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")},setFaceCulling:function(){console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\")}}),Object.defineProperties(Xr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")}}}),Object.defineProperties(Fr.prototype,{cullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")}},renderReverseSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")}},renderSingleSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")}}}),Object.defineProperties(Ce.prototype,{wrapS:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy=t}},offset:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset=t}},repeat:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat=t}},format:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format=t}},type:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps=t}}}),Object.defineProperties(Wr.prototype,{standing:{set:function(){console.warn(\"THREE.WebVRManager: .standing has been removed.\")}},userHeight:{set:function(){console.warn(\"THREE.WebVRManager: .userHeight has been removed.\")}}}),us.prototype.load=function(t){console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");var e=this;return(new ss).load(t,function(t){e.setBuffer(t)}),this},ds.prototype.getData=function(){return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"),this.getFrequencyData()},hs.prototype.updateCubeMap=function(t,e){return console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\"),this.update(t,e)};var tc={merge:function(t,e,n){var r;console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\"),e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),r=e.matrix,e=e.geometry),t.merge(e,r,n)},center:function(t){return console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\"),t.center()}};Ae.crossOrigin=void 0,Ae.loadTexture=function(t,e,n,r){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var i=new qa;i.setCrossOrigin(this.crossOrigin);var a=i.load(t,n,void 0,r);return e&&(a.mapping=e),a},Ae.loadTextureCube=function(t,e,n,r){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var i=new Xa;i.setCrossOrigin(this.crossOrigin);var a=i.load(t,n,void 0,r);return e&&(a.mapping=e),a},Ae.loadCompressedTexture=function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},Ae.loadCompressedTextureCube=function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")};var ec={createMultiMaterialObject:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")},detach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")},attach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")}};t.WebGLRenderTargetCube=Oe,t.WebGLRenderTarget=Ce,t.WebGLRenderer=Xr,t.ShaderLib=ke,t.UniformsLib=Ve,t.UniformsUtils=ze,t.ShaderChunk=Fe,t.FogExp2=qr,t.Fog=Yr,t.Scene=Zr,t.Sprite=$r,t.LOD=ti,t.SkinnedMesh=ri,t.Skeleton=ei,t.Bone=ni,t.Mesh=En,t.LineSegments=oi,t.LineLoop=si,t.Line=ai,t.Points=hi,t.Group=Gr,t.VideoTexture=li,t.DataTexture=Ie,t.DataTexture3D=An,t.CompressedTexture=ui,t.CubeTexture=Sn,t.CanvasTexture=pi,t.DepthTexture=di,t.Texture=Re,t.CompressedTextureLoader=ka,t.DataTextureLoader=ja,t.CubeTextureLoader=Xa,t.TextureLoader=qa,t.ObjectLoader=Jo,t.MaterialLoader=jo,t.BufferGeometryLoader=Wo,t.DefaultLoadingManager=Ha,t.LoadingManager=za,t.JSONLoader=Zo,t.ImageLoader=Wa,t.ImageBitmapLoader=es,t.FontLoader=as,t.FileLoader=Va,t.Loader=qo,t.LoaderUtils=Yo,t.Cache=Fa,t.AudioLoader=ss,t.SpotLightShadow=_o,t.SpotLight=wo,t.PointLight=Mo,t.RectAreaLight=Lo,t.HemisphereLight=xo,t.DirectionalLightShadow=To,t.DirectionalLight=So,t.AmbientLight=Ao,t.LightShadow=bo,t.Light=yo,t.StereoCamera=cs,t.PerspectiveCamera=kr,t.OrthographicCamera=Eo,t.CubeCamera=hs,t.ArrayCamera=jr,t.Camera=Vr,t.AudioListener=ls,t.PositionalAudio=ps,t.AudioContext=os,t.AudioAnalyser=ds,t.Audio=us,t.VectorKeyframeTrack=Go,t.StringKeyframeTrack=Ho,t.QuaternionKeyframeTrack=zo,t.NumberKeyframeTrack=Bo,t.ColorKeyframeTrack=Uo,t.BooleanKeyframeTrack=Do,t.PropertyMixer=fs,t.PropertyBinding=ys,t.KeyframeTrack=No,t.AnimationUtils=Ro,t.AnimationObjectGroup=xs,t.AnimationMixer=_s,t.AnimationClip=Vo,t.Uniform=ws,t.InstancedBufferGeometry=Ms,t.BufferGeometry=dn,t.Geometry=Ke,t.InterleavedBufferAttribute=Qr,t.InstancedInterleavedBuffer=Es,t.InterleavedBuffer=Jr,t.InstancedBufferAttribute=Ts,t.Face3=Xe,t.Object3D=Je,t.Raycaster=Ss,t.Layers=Ye,t.EventDispatcher=e,t.Clock=Rs,t.QuaternionLinearInterpolant=Fo,t.LinearInterpolant=Oo,t.DiscreteInterpolant=Io,t.CubicInterpolant=Co,t.Interpolant=Po,t.Triangle=wn,t.Math=_e,t.Spherical=Ps,t.Cylindrical=Cs,t.Plane=Ue,t.Frustum=Be,t.Sphere=De,t.Ray=_n,t.Matrix4=Me,t.Matrix3=Se,t.Box3=Ne,t.Box2=Os,t.Line3=Is,t.Euler=qe,t.Vector4=Pe,t.Vector3=Te,t.Vector2=we,t.Quaternion=Ee,t.Color=Ge,t.ImmediateRenderObject=Ns,t.VertexNormalsHelper=Ds,t.SpotLightHelper=Us,t.SkeletonHelper=Bs,t.PointLightHelper=Fs,t.RectAreaLightHelper=zs,t.HemisphereLightHelper=Hs,t.GridHelper=Gs,t.PolarGridHelper=Vs,t.FaceNormalsHelper=ks,t.DirectionalLightHelper=js,t.CameraHelper=Ws,t.BoxHelper=Xs,t.Box3Helper=qs,t.PlaneHelper=Ys,t.ArrowHelper=Zs,t.AxesHelper=Js,t.Shape=vo,t.Path=go,t.ShapePath=ns,t.Font=rs,t.CurvePath=mo,t.Curve=Ya,t.ImageUtils=Ae,t.ShapeUtils=ea,t.WebGLUtils=Hr,t.WireframeGeometry=fi,t.ParametricGeometry=mi,t.ParametricBufferGeometry=gi,t.TetrahedronGeometry=xi,t.TetrahedronBufferGeometry=bi,t.OctahedronGeometry=_i,t.OctahedronBufferGeometry=wi,t.IcosahedronGeometry=Mi,t.IcosahedronBufferGeometry=Ei,t.DodecahedronGeometry=Ti,t.DodecahedronBufferGeometry=Si,t.PolyhedronGeometry=vi,t.PolyhedronBufferGeometry=yi,t.TubeGeometry=Ai,t.TubeBufferGeometry=Li,t.TorusKnotGeometry=Ri,t.TorusKnotBufferGeometry=Pi,t.TorusGeometry=Ci,t.TorusBufferGeometry=Oi,t.TextGeometry=ca,t.TextBufferGeometry=ha,t.SphereGeometry=la,t.SphereBufferGeometry=ua,t.RingGeometry=pa,t.RingBufferGeometry=da,t.PlaneGeometry=gn,t.PlaneBufferGeometry=vn,t.LatheGeometry=fa,t.LatheBufferGeometry=ma,t.ShapeGeometry=ga,t.ShapeBufferGeometry=va,t.ExtrudeGeometry=ia,t.ExtrudeBufferGeometry=aa,t.EdgesGeometry=xa,t.ConeGeometry=wa,t.ConeBufferGeometry=Ma,t.CylinderGeometry=ba,t.CylinderBufferGeometry=_a,t.CircleGeometry=Ea,t.CircleBufferGeometry=Ta,t.BoxGeometry=fn,t.BoxBufferGeometry=mn,t.ShadowMaterial=Aa,t.SpriteMaterial=Kr,t.RawShaderMaterial=La,t.ShaderMaterial=bn,t.PointsMaterial=ci,t.MeshPhysicalMaterial=Pa,t.MeshStandardMaterial=Ra,t.MeshPhongMaterial=Ca,t.MeshToonMaterial=Oa,t.MeshNormalMaterial=Ia,t.MeshLambertMaterial=Na,t.MeshDepthMaterial=Ur,t.MeshDistanceMaterial=Br,t.MeshBasicMaterial=Mn,t.MeshMatcapMaterial=Da,t.LineDashedMaterial=Ua,t.LineBasicMaterial=ii,t.Material=xn,t.Float64BufferAttribute=hn,t.Float32BufferAttribute=cn,t.Uint32BufferAttribute=sn,t.Int32BufferAttribute=on,t.Uint16BufferAttribute=an,t.Int16BufferAttribute=rn,t.Uint8ClampedBufferAttribute=nn,t.Uint8BufferAttribute=en,t.Int8BufferAttribute=tn,t.BufferAttribute=$e,t.ArcCurve=Ja,t.CatmullRomCurve3=no,t.CubicBezierCurve=oo,t.CubicBezierCurve3=so,t.EllipseCurve=Za,t.LineCurve=co,t.LineCurve3=ho,t.QuadraticBezierCurve=lo,t.QuadraticBezierCurve3=uo,t.SplineCurve=po,t.REVISION=n,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},t.CullFaceNone=r,t.CullFaceBack=i,t.CullFaceFront=a,t.CullFaceFrontBack=3,t.FrontFaceDirectionCW=0,t.FrontFaceDirectionCCW=1,t.BasicShadowMap=0,t.PCFShadowMap=s,t.PCFSoftShadowMap=c,t.FrontSide=h,t.BackSide=l,t.DoubleSide=u,t.FlatShading=1,t.SmoothShading=2,t.NoColors=p,t.FaceColors=d,t.VertexColors=f,t.NoBlending=m,t.NormalBlending=g,t.AdditiveBlending=v,t.SubtractiveBlending=y,t.MultiplyBlending=x,t.CustomBlending=b,t.AddEquation=_,t.SubtractEquation=w,t.ReverseSubtractEquation=M,t.MinEquation=E,t.MaxEquation=T,t.ZeroFactor=S,t.OneFactor=A,t.SrcColorFactor=L,t.OneMinusSrcColorFactor=R,t.SrcAlphaFactor=P,t.OneMinusSrcAlphaFactor=C,t.DstAlphaFactor=O,t.OneMinusDstAlphaFactor=I,t.DstColorFactor=N,t.OneMinusDstColorFactor=D,t.SrcAlphaSaturateFactor=U,t.NeverDepth=B,t.AlwaysDepth=F,t.LessDepth=z,t.LessEqualDepth=H,t.EqualDepth=G,t.GreaterEqualDepth=V,t.GreaterDepth=k,t.NotEqualDepth=j,t.MultiplyOperation=W,t.MixOperation=X,t.AddOperation=q,t.NoToneMapping=Y,t.LinearToneMapping=Z,t.ReinhardToneMapping=J,t.Uncharted2ToneMapping=Q,t.CineonToneMapping=K,t.UVMapping=300,t.CubeReflectionMapping=$,t.CubeRefractionMapping=tt,t.EquirectangularReflectionMapping=et,t.EquirectangularRefractionMapping=nt,t.SphericalReflectionMapping=rt,t.CubeUVReflectionMapping=it,t.CubeUVRefractionMapping=at,t.RepeatWrapping=ot,t.ClampToEdgeWrapping=st,t.MirroredRepeatWrapping=ct,t.NearestFilter=ht,t.NearestMipMapNearestFilter=lt,t.NearestMipMapLinearFilter=ut,t.LinearFilter=pt,t.LinearMipMapNearestFilter=dt,t.LinearMipMapLinearFilter=ft,t.UnsignedByteType=mt,t.ByteType=gt,t.ShortType=vt,t.UnsignedShortType=yt,t.IntType=xt,t.UnsignedIntType=bt,t.FloatType=_t,t.HalfFloatType=wt,t.UnsignedShort4444Type=Mt,t.UnsignedShort5551Type=Et,t.UnsignedShort565Type=Tt,t.UnsignedInt248Type=St,t.AlphaFormat=At,t.RGBFormat=Lt,t.RGBAFormat=Rt,t.LuminanceFormat=Pt,t.LuminanceAlphaFormat=Ct,t.RGBEFormat=Ot,t.DepthFormat=It,t.DepthStencilFormat=Nt,t.RedFormat=Dt,t.RGB_S3TC_DXT1_Format=Ut,t.RGBA_S3TC_DXT1_Format=Bt,t.RGBA_S3TC_DXT3_Format=Ft,t.RGBA_S3TC_DXT5_Format=zt,t.RGB_PVRTC_4BPPV1_Format=Ht,t.RGB_PVRTC_2BPPV1_Format=Gt,t.RGBA_PVRTC_4BPPV1_Format=Vt,t.RGBA_PVRTC_2BPPV1_Format=kt,t.RGB_ETC1_Format=jt,t.RGBA_ASTC_4x4_Format=Wt,t.RGBA_ASTC_5x4_Format=Xt,t.RGBA_ASTC_5x5_Format=qt,t.RGBA_ASTC_6x5_Format=Yt,t.RGBA_ASTC_6x6_Format=Zt,t.RGBA_ASTC_8x5_Format=Jt,t.RGBA_ASTC_8x6_Format=Qt,t.RGBA_ASTC_8x8_Format=Kt,t.RGBA_ASTC_10x5_Format=$t,t.RGBA_ASTC_10x6_Format=te,t.RGBA_ASTC_10x8_Format=ee,t.RGBA_ASTC_10x10_Format=ne,t.RGBA_ASTC_12x10_Format=re,t.RGBA_ASTC_12x12_Format=ie,t.LoopOnce=2200,t.LoopRepeat=ae,t.LoopPingPong=2202,t.InterpolateDiscrete=2300,t.InterpolateLinear=2301,t.InterpolateSmooth=2302,t.ZeroCurvatureEnding=oe,t.ZeroSlopeEnding=2401,t.WrapAroundEnding=2402,t.TrianglesDrawMode=se,t.TriangleStripDrawMode=ce,t.TriangleFanDrawMode=he,t.LinearEncoding=le,t.sRGBEncoding=ue,t.GammaEncoding=pe,t.RGBEEncoding=de,t.LogLuvEncoding=3003,t.RGBM7Encoding=fe,t.RGBM16Encoding=me,t.RGBDEncoding=ge,t.BasicDepthPacking=ve,t.RGBADepthPacking=ye,t.TangentSpaceNormalMap=xe,t.ObjectSpaceNormalMap=be,t.CubeGeometry=fn,t.Face4=function(t,e,n,r,i,a,o){return console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\"),new Xe(t,e,n,i,a,o)},t.LineStrip=0,t.LinePieces=1,t.MeshFaceMaterial=function(t){return console.warn(\"THREE.MeshFaceMaterial has been removed. Use an Array instead.\"),t},t.MultiMaterial=function(t){return void 0===t&&(t=[]),console.warn(\"THREE.MultiMaterial has been removed. Use an Array instead.\"),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},t.PointCloud=function(t,e){return console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\"),new hi(t,e)},t.Particle=function(t){return console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\"),new $r(t)},t.ParticleSystem=function(t,e){return console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\"),new hi(t,e)},t.PointCloudMaterial=function(t){return console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"),new ci(t)},t.ParticleBasicMaterial=function(t){return console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"),new ci(t)},t.ParticleSystemMaterial=function(t){return console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"),new ci(t)},t.Vertex=function(t,e,n){return console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\"),new Te(t,e,n)},t.DynamicBufferAttribute=function(t,e){return console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\"),new $e(t,e).setDynamic(!0)},t.Int8Attribute=function(t,e){return console.warn(\"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\"),new tn(t,e)},t.Uint8Attribute=function(t,e){return console.warn(\"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\"),new en(t,e)},t.Uint8ClampedAttribute=function(t,e){return console.warn(\"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\"),new nn(t,e)},t.Int16Attribute=function(t,e){return console.warn(\"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\"),new rn(t,e)},t.Uint16Attribute=function(t,e){return console.warn(\"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\"),new an(t,e)},t.Int32Attribute=function(t,e){return console.warn(\"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\"),new on(t,e)},t.Uint32Attribute=function(t,e){return console.warn(\"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\"),new sn(t,e)},t.Float32Attribute=function(t,e){return console.warn(\"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\"),new cn(t,e)},t.Float64Attribute=function(t,e){return console.warn(\"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\"),new hn(t,e)},t.ClosedSplineCurve3=Qs,t.SplineCurve3=Ks,t.Spline=$s,t.AxisHelper=function(t){return console.warn(\"THREE.AxisHelper has been renamed to THREE.AxesHelper.\"),new Js(t)},t.BoundingBoxHelper=function(t,e){return console.warn(\"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\"),new Xs(t,e)},t.EdgesHelper=function(t,e){return console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\"),new oi(new xa(t.geometry),new ii({color:void 0!==e?e:16777215}))},t.WireframeHelper=function(t,e){return console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\"),new oi(new fi(t.geometry),new ii({color:void 0!==e?e:16777215}))},t.XHRLoader=function(t){return console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\"),new Va(t)},t.BinaryTextureLoader=function(t){return console.warn(\"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\"),new ja(t)},t.GeometryUtils=tc,t.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\"),this.projectVector=function(t,e){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),t.project(e)},this.unprojectVector=function(t,e){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),t.unproject(e)},this.pickingRay=function(){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}},t.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\"),this.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},t.SceneUtils=ec,t.LensFlare=function(){console.error(\"THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js\")},Object.defineProperty(t,\"__esModule\",{value:!0})})},function(t,e,n){\"use strict\";THREE.OrbitControls=function(t,e){this.object=t,this.domElement=void 0!==e?e:document,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:THREE.MOUSE.LEFT,MIDDLE:THREE.MOUSE.MIDDLE,RIGHT:THREE.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return h.phi},this.getAzimuthalAngle=function(){return h.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),s=o.NONE},this.update=function(){var e=new THREE.Vector3,i=(new THREE.Quaternion).setFromUnitVectors(t.up,new THREE.Vector3(0,1,0)),a=i.clone().inverse(),f=new THREE.Vector3,m=new THREE.Quaternion;return function(){var t=n.object.position;return e.copy(t).sub(n.target),e.applyQuaternion(i),h.setFromVector3(e),n.autoRotate&&s===o.NONE&&E(2*Math.PI/60/60*n.autoRotateSpeed),h.theta+=l.theta,h.phi+=l.phi,h.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,h.theta)),h.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,h.phi)),h.makeSafe(),h.radius*=u,h.radius=Math.max(n.minDistance,Math.min(n.maxDistance,h.radius)),n.target.add(p),e.setFromSpherical(h),e.applyQuaternion(a),t.copy(n.target).add(e),n.object.lookAt(n.target),!0===n.enableDamping?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,p.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),p.set(0,0,0)),u=1,!!(d||f.distanceToSquared(n.object.position)>c||8*(1-m.dot(n.object.quaternion))>c)&&(n.dispatchEvent(r),f.copy(n.object.position),m.copy(n.object.quaternion),d=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener(\"contextmenu\",H,!1),n.domElement.removeEventListener(\"mousedown\",O,!1),n.domElement.removeEventListener(\"wheel\",D,!1),n.domElement.removeEventListener(\"touchstart\",B,!1),n.domElement.removeEventListener(\"touchend\",z,!1),n.domElement.removeEventListener(\"touchmove\",F,!1),document.removeEventListener(\"mousemove\",I,!1),document.removeEventListener(\"mouseup\",N,!1),window.removeEventListener(\"keydown\",U,!1)};var n=this,r={type:\"change\"},i={type:\"start\"},a={type:\"end\"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY_PAN:4},s=o.NONE,c=1e-6,h=new THREE.Spherical,l=new THREE.Spherical,u=1,p=new THREE.Vector3,d=!1,f=new THREE.Vector2,m=new THREE.Vector2,g=new THREE.Vector2,v=new THREE.Vector2,y=new THREE.Vector2,x=new THREE.Vector2,b=new THREE.Vector2,_=new THREE.Vector2,w=new THREE.Vector2;function M(){return Math.pow(.95,n.zoomSpeed)}function E(t){l.theta-=t}function T(t){l.phi-=t}var S=function(){var t=new THREE.Vector3;return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),p.add(t)}}(),A=function(){var t=new THREE.Vector3;return function(e,r){!0===n.screenSpacePanning?t.setFromMatrixColumn(r,1):(t.setFromMatrixColumn(r,0),t.crossVectors(n.object.up,t)),t.multiplyScalar(e),p.add(t)}}(),L=function(){var t=new THREE.Vector3;return function(e,r){var i=n.domElement===document?n.domElement.body:n.domElement;if(n.object.isPerspectiveCamera){var a=n.object.position;t.copy(a).sub(n.target);var o=t.length();o*=Math.tan(n.object.fov/2*Math.PI/180),S(2*e*o/i.clientHeight,n.object.matrix),A(2*r*o/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(S(e*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),A(r*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"),n.enablePan=!1)}}();function R(t){n.object.isPerspectiveCamera?u/=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*t)),n.object.updateProjectionMatrix(),d=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),n.enableZoom=!1)}function P(t){n.object.isPerspectiveCamera?u*=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/t)),n.object.updateProjectionMatrix(),d=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),n.enableZoom=!1)}function C(t){v.set(t.clientX,t.clientY)}function O(t){if(!1!==n.enabled){switch(t.preventDefault(),t.button){case n.mouseButtons.LEFT:if(t.ctrlKey||t.metaKey){if(!1===n.enablePan)return;C(t),s=o.PAN}else{if(!1===n.enableRotate)return;!function(t){f.set(t.clientX,t.clientY)}(t),s=o.ROTATE}break;case n.mouseButtons.MIDDLE:if(!1===n.enableZoom)return;!function(t){b.set(t.clientX,t.clientY)}(t),s=o.DOLLY;break;case n.mouseButtons.RIGHT:if(!1===n.enablePan)return;C(t),s=o.PAN}s!==o.NONE&&(document.addEventListener(\"mousemove\",I,!1),document.addEventListener(\"mouseup\",N,!1),n.dispatchEvent(i))}}function I(t){if(!1!==n.enabled)switch(t.preventDefault(),s){case o.ROTATE:if(!1===n.enableRotate)return;!function(t){m.set(t.clientX,t.clientY),g.subVectors(m,f).multiplyScalar(n.rotateSpeed);var e=n.domElement===document?n.domElement.body:n.domElement;E(2*Math.PI*g.x/e.clientHeight),T(2*Math.PI*g.y/e.clientHeight),f.copy(m),n.update()}(t);break;case o.DOLLY:if(!1===n.enableZoom)return;!function(t){_.set(t.clientX,t.clientY),w.subVectors(_,b),w.y>0?R(M()):w.y<0&&P(M()),b.copy(_),n.update()}(t);break;case o.PAN:if(!1===n.enablePan)return;!function(t){y.set(t.clientX,t.clientY),x.subVectors(y,v).multiplyScalar(n.panSpeed),L(x.x,x.y),v.copy(y),n.update()}(t)}}function N(t){!1!==n.enabled&&(document.removeEventListener(\"mousemove\",I,!1),document.removeEventListener(\"mouseup\",N,!1),n.dispatchEvent(a),s=o.NONE)}function D(t){!1===n.enabled||!1===n.enableZoom||s!==o.NONE&&s!==o.ROTATE||(t.preventDefault(),t.stopPropagation(),n.dispatchEvent(i),function(t){t.deltaY<0?P(M()):t.deltaY>0&&R(M()),n.update()}(t),n.dispatchEvent(a))}function U(t){!1!==n.enabled&&!1!==n.enableKeys&&!1!==n.enablePan&&function(t){switch(t.keyCode){case n.keys.UP:L(0,n.keyPanSpeed),n.update();break;case n.keys.BOTTOM:L(0,-n.keyPanSpeed),n.update();break;case n.keys.LEFT:L(n.keyPanSpeed,0),n.update();break;case n.keys.RIGHT:L(-n.keyPanSpeed,0),n.update()}}(t)}function B(t){if(!1!==n.enabled){switch(t.preventDefault(),t.touches.length){case 1:if(!1===n.enableRotate)return;!function(t){f.set(t.touches[0].pageX,t.touches[0].pageY)}(t),s=o.TOUCH_ROTATE;break;case 2:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(t){if(n.enableZoom){var e=t.touches[0].pageX-t.touches[1].pageX,r=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+r*r);b.set(0,i)}if(n.enablePan){var a=.5*(t.touches[0].pageX+t.touches[1].pageX),o=.5*(t.touches[0].pageY+t.touches[1].pageY);v.set(a,o)}}(t),s=o.TOUCH_DOLLY_PAN;break;default:s=o.NONE}s!==o.NONE&&n.dispatchEvent(i)}}function F(t){if(!1!==n.enabled)switch(t.preventDefault(),t.stopPropagation(),t.touches.length){case 1:if(!1===n.enableRotate)return;if(s!==o.TOUCH_ROTATE)return;!function(t){m.set(t.touches[0].pageX,t.touches[0].pageY),g.subVectors(m,f).multiplyScalar(n.rotateSpeed);var e=n.domElement===document?n.domElement.body:n.domElement;E(2*Math.PI*g.x/e.clientHeight),T(2*Math.PI*g.y/e.clientHeight),f.copy(m),n.update()}(t);break;case 2:if(!1===n.enableZoom&&!1===n.enablePan)return;if(s!==o.TOUCH_DOLLY_PAN)return;!function(t){if(n.enableZoom){var e=t.touches[0].pageX-t.touches[1].pageX,r=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+r*r);_.set(0,i),w.set(0,Math.pow(_.y/b.y,n.zoomSpeed)),R(w.y),b.copy(_)}if(n.enablePan){var a=.5*(t.touches[0].pageX+t.touches[1].pageX),o=.5*(t.touches[0].pageY+t.touches[1].pageY);y.set(a,o),x.subVectors(y,v).multiplyScalar(n.panSpeed),L(x.x,x.y),v.copy(y)}n.update()}(t);break;default:s=o.NONE}}function z(t){!1!==n.enabled&&(n.dispatchEvent(a),s=o.NONE)}function H(t){!1!==n.enabled&&t.preventDefault()}n.domElement.addEventListener(\"contextmenu\",H,!1),n.domElement.addEventListener(\"mousedown\",O,!1),n.domElement.addEventListener(\"wheel\",D,!1),n.domElement.addEventListener(\"touchstart\",B,!1),n.domElement.addEventListener(\"touchend\",z,!1),n.domElement.addEventListener(\"touchmove\",F,!1),window.addEventListener(\"keydown\",U,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){return console.warn(\"THREE.OrbitControls: .center has been renamed to .target\"),this.target}},noZoom:{get:function(){return console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),!this.enableZoom},set:function(t){console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),this.enableZoom=!t}},noRotate:{get:function(){return console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),!this.enableRotate},set:function(t){console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),this.enableRotate=!t}},noPan:{get:function(){return console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),!this.enablePan},set:function(t){console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),this.enablePan=!t}},noKeys:{get:function(){return console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),!this.enableKeys},set:function(t){console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),this.enableKeys=!t}},staticMoving:{get:function(){return console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),!this.enableDamping},set:function(t){console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),this.enableDamping=!t}},dynamicDampingFactor:{get:function(){return console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor},set:function(t){console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor=t}}})},function(t,e,n){\"use strict\"}]);","extractedComments":[]}